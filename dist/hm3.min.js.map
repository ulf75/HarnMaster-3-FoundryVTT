{"version":3,"file":"hm3.min.js","mappings":"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","sources":["webpack://HM/webpack/bootstrap","webpack://HM/webpack/runtime/define property getters","webpack://HM/webpack/runtime/hasOwnProperty shorthand","webpack://HM/webpack/runtime/make namespace object","webpack://HM/./module/config.js","webpack://HM/./module/hm3-types.js","webpack://HM/./module/utility.js","webpack://HM/./module/hm3-dice.js","webpack://HM/./module/mutex.js","webpack://HM/./module/hm3-token.js","webpack://HM/./module/combat.js","webpack://HM/./module/condition/berserk.js","webpack://HM/./module/condition/broken.js","webpack://HM/./module/condition/cautious.js","webpack://HM/./module/condition/closemode.js","webpack://HM/./module/condition/desperate.js","webpack://HM/./module/condition/distracted.js","webpack://HM/./module/condition/dying.js","webpack://HM/./module/condition/empowered.js","webpack://HM/./module/condition/grappled.js","webpack://HM/./module/condition/inanimate.js","webpack://HM/./module/condition/nofumble.js","webpack://HM/./module/condition/nooutnumbered.js","webpack://HM/./module/condition/nostumble.js","webpack://HM/./module/condition/outnumbered.js","webpack://HM/./module/condition/prone.js","webpack://HM/./module/condition/secondaryhand.js","webpack://HM/./module/condition/shocked.js","webpack://HM/./module/condition/weakened.js","webpack://HM/./module/hm3-roll.js","webpack://HM/./module/macros.js","webpack://HM/./module/condition/unconscious.js","webpack://HM/./module/actor/proxies/actor-proxy.js","webpack://HM/./module/actor/proxies/living-proxy.js","webpack://HM/./module/actor/proxies/character-proxy.js","webpack://HM/./module/actor/proxies/container-proxy.js","webpack://HM/./module/actor/proxies/creature-proxy.js","webpack://HM/./module/actor/actor.js","webpack://HM/./module/effect.js","webpack://HM/./module/macro.js","webpack://HM/./module/actor/base-actor-sheet-v2.js","webpack://HM/./module/actor/character-sheet-v2.js","webpack://HM/./module/actor/base-actor-sheet.js","webpack://HM/./module/actor/character-sheet.js","webpack://HM/./module/actor/container-sheet-v2.js","webpack://HM/./module/actor/container-sheet.js","webpack://HM/./module/actor/creature-sheet-v2.js","webpack://HM/./module/actor/creature-sheet.js","webpack://HM/./module/hm3-active-effect.js","webpack://HM/./module/hm3-chatmessage.js","webpack://HM/./module/hm3-combat.js","webpack://HM/./module/hm3-combatant.js","webpack://HM/./module/hm3-macro.js","webpack://HM/./module/hm3/hm3-active-effect-config.js","webpack://HM/./module/hm3/hm3-ambient-light.js","webpack://HM/./module/hm3/hm3-ambient-sound.js","webpack://HM/./module/hm3/hm3-drawing.js","webpack://HM/./module/hm3/hm3-macro-config.js","webpack://HM/./module/hm3/hm3-note.js","webpack://HM/./module/hm3/hm3-region.js","webpack://HM/./module/hm3/hm3-tile.js","webpack://HM/./module/hm3/hm3-wall.js","webpack://HM/./module/item/item-sheet-v2.js","webpack://HM/./module/item/item-sheet.js","webpack://HM/./module/item/proxies/item-proxy.js","webpack://HM/./module/item/proxies/gear-proxy.js","webpack://HM/./module/item/proxies/armor-proxy.js","webpack://HM/./module/item/proxies/armorlocation-proxy.js","webpack://HM/./module/item/proxies/companion-proxy.js","webpack://HM/./module/item/proxies/container-proxy.js","webpack://HM/./module/item/proxies/effect-proxy.js","webpack://HM/./module/item/proxies/injury-proxy.js","webpack://HM/./module/item/proxies/invocation-proxy.js","webpack://HM/./module/item/proxies/misc-proxy.js","webpack://HM/./module/item/proxies/missile-proxy.js","webpack://HM/./module/item/proxies/skill-proxy.js","webpack://HM/./module/item/proxies/psionic-proxy.js","webpack://HM/./module/item/proxies/riding-skill-proxy.js","webpack://HM/./module/item/proxies/spell-proxy.js","webpack://HM/./module/item/proxies/trait-proxy.js","webpack://HM/./module/item/proxies/weapon-proxy.js","webpack://HM/./module/item/item.js","webpack://HM/./module/migrations.js","webpack://HM/./module/toggle.js","webpack://HM/./module/weather.js","webpack://HM/./tests/hm3-basetest.js","webpack://HM/./tests/runner.js","webpack://HM/./tests/infrastructure/morale.js","webpack://HM/./hm3.js","webpack://HM/./module/settings.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Namespace Configuration Values\nexport const HM3 = {};\n\n// ASCII Artwork\nHM3.ASCII = `_   _ ___  ___ _____ \n| | | ||  \\\\/  ||____ |\n| |_| || .  . |    / /\n|  _  || |\\\\/| |    \\\\ \\\\\n| | | || |  | |.___/ /\n\\\\_| |_/\\\\_|  |_/\\\\____/`;\n\n// When the system is fully ready, set this to true\nHM3.ready = false;\n\nHM3.allowedActorFlags = [];\n\nHM3.allowedAspects = ['Edged', 'Piercing', 'Blunt'];\n\nHM3.allowedRanges = ['Short', 'Medium', 'Long', 'Extreme'];\n\nHM3.itemTypes = [\n    {key: 'armorgear', label: 'Armor Gear'},\n    {key: 'armorlocation', label: 'Armor Location'},\n    {key: 'companion', label: 'Companion'},\n    {key: 'containergear', label: 'Container Gear'},\n    {key: 'effectgear', label: 'Effect'},\n    {key: 'injury', label: 'Injury'},\n    {key: 'invocation', label: 'Invocation'},\n    {key: 'miscgear', label: 'Misc Gear'},\n    {key: 'missilegear', label: 'Missile Gear'},\n    {key: 'psionic', label: 'Psionic'},\n    {key: 'skill', label: 'Skill'},\n    {key: 'spell', label: 'Spell'},\n    {key: 'trait', label: 'Trait'},\n    {key: 'weapongear', label: 'Weapon Gear'}\n];\n\nHM3.skillTypes = [\n    {key: 'Craft'},\n    {key: 'Physical'},\n    {key: 'Communication'},\n    {key: 'Combat'},\n    {key: 'Magic'},\n    {key: 'Ritual'}\n];\n\nHM3.miscItemTypes = [\n    {key: 'Coin'},\n    {key: 'Gem'},\n    {key: 'Herb'},\n    {key: 'Jewelry'},\n    {key: 'Misc'},\n    {key: 'Potion'},\n    {key: 'Rider'},\n    {key: 'Written'}\n];\n\nHM3.traitTypes = [{key: 'Physical'}, {key: 'Psyche'}];\n\nHM3.containerTypes = [{key: 'Container'}, {key: 'Group'}];\n\nHM3.companionTypes = [\n    {key: 'Animal'},\n    {key: 'Connection'},\n    {key: 'Foe'},\n    {key: 'Follower'},\n    {key: 'Friend'},\n    {key: 'Party'},\n    {key: 'Steed'}\n];\n\nHM3.frames = [{key: 'Scant'}, {key: 'Light'}, {key: 'Medium'}, {key: 'Heavy'}, {key: 'Massive'}];\n\nHM3.cultures = [\n    {key: 'Feudal'},\n    {key: 'Imperial'},\n    {key: 'Khuzdul'},\n    {key: 'Sindarin'},\n    {key: 'Tribal'},\n    {key: 'Viking'}\n];\n\nHM3.socialClasses = [{key: 'Slave'}, {key: 'Serf'}, {key: 'Unguilded'}, {key: 'Guilded'}, {key: 'Noble'}];\n\nHM3.gender = [{key: 'Male'}, {key: 'Female'}];\n\nHM3.psycheSeverity = [\n    {key: '5', label: 'Mild'},\n    {key: '3', label: 'Moderate'},\n    {key: '1', label: 'Severe'}\n];\n\nHM3.months = [\n    {key: 'Nuzyael'},\n    {key: 'Peonu'},\n    {key: 'Kelen'},\n    {key: 'Nolus'},\n    {key: 'Larane'},\n    {key: 'Agrazhar'},\n    {key: 'Azura'},\n    {key: 'Halane'},\n    {key: 'Savor'},\n    {key: 'Ilvin'},\n    {key: 'Navek'},\n    {key: 'Morgat'}\n];\n\nHM3.sizes = [0, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4];\n\nHM3.creatureSizes = [\n    {key: 0, label: 'Insectile'},\n    {key: 2, label: 'Tiny'},\n    {key: 3, label: 'Very Small'},\n    {key: 4, label: 'Small'},\n    {key: 6, label: 'Medium'},\n    {key: 8, label: 'Large'},\n    {key: 10, label: 'Very Large'},\n    {key: 12, label: 'Huge'},\n    {key: 20, label: 'Gargantuan'}\n];\n\nHM3.weightCoversions = [\n    {key: 1, label: 'lb'},\n    {key: 16, label: 'oz'},\n    {key: 256, label: 'dr'},\n    {key: 2272, label: 'ct'}\n];\n\nHM3.weightTableLabel = {\n    lb: {singular: 'pound', plural: 'pounds'},\n    oz: {singular: 'ounce', plural: 'ounces'},\n    dr: {singular: 'dram', plural: 'drams'},\n    ct: {singular: 'carat', plural: 'carats'}\n};\n\nHM3.ITEM_TYPE_LABEL = {\n    skill: {singular: 'Skill', plural: 'Skills'},\n    spell: {singular: 'Spell', plural: 'Spells'},\n    weapongear: {singular: 'Melee Weapon', plural: 'Melee Weapons'},\n    missilegear: {singular: 'Missile', plural: 'Missiles'},\n    armorgear: {singular: 'Armor', plural: 'Armor'},\n    miscgear: {singular: 'Misc Item', plural: 'Misc Items'},\n    containergear: {singular: 'Container', plural: 'Containers'},\n    injury: {singular: 'Injury', plural: 'Injuries'},\n    armorlocation: {singular: 'Armor Location', plural: 'Armor Locations'},\n    trait: {singular: 'Trait', plural: 'Traits'},\n    psionic: {singular: 'Psionic', plural: 'Psionics'},\n    incantation: {singular: 'Ritual Incantation', plural: 'Ritual Incantations'}\n};\n\nHM3.sunsigns = [\n    {key: 'None'},\n    {key: 'Ulandus'},\n    {key: 'Ulandus-Aralius'},\n    {key: 'Aralius'},\n    {key: 'Aralius-Feniri'},\n    {key: 'Feniri'},\n    {key: 'Feniri-Ahnu'},\n    {key: 'Ahnu'},\n    {key: 'Ahnu-Angberelius'},\n    {key: 'Angberelius'},\n    {key: 'Angberelius-Nadai'},\n    {key: 'Nadai'},\n    {key: 'Nadai-Hirin'},\n    {key: 'Hirin'},\n    {key: 'Hirin-Tarael'},\n    {key: 'Tarael'},\n    {key: 'Tarael-Tai'},\n    {key: 'Tai'},\n    {key: 'Tai-Skorus'},\n    {key: 'Skorus'},\n    {key: 'Skorus-Masara'},\n    {key: 'Masara'},\n    {key: 'Masara-Lado'},\n    {key: 'Lado'},\n    {key: 'Lado-Ulandus'}\n];\n\nHM3.defaultCharacterSkills = [\n    'Climbing',\n    'Condition',\n    'Jumping',\n    'Stealth',\n    'Throwing',\n    'Awareness',\n    'Intrigue',\n    'Oratory',\n    'Rhetoric',\n    'Singing',\n    'Initiative',\n    'Unarmed',\n    'Dodge'\n];\n\nHM3.defaultCreatureSkills = ['Awareness', 'Condition', 'Initiative', 'Unarmed', 'Dodge'];\n\nHM3.injuryLocations = {\n    'Custom': {\n        impactType: 'custom',\n        probWeight: {'high': 1, 'mid': 1, 'low': 1},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'G5'}\n    },\n    'Skull': {\n        impactType: 'skull',\n        probWeight: {'high': 150, 'mid': 50, 'low': 0},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'K4', ei17: 'K5'}\n    },\n    'Face': {\n        impactType: 'face',\n        probWeight: {'high': 150, 'mid': 50, 'low': 0},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K5'}\n    },\n    'Neck': {\n        impactType: 'neck',\n        probWeight: {'high': 150, 'mid': 50, 'low': 0},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'K4', ei17: 'K5'}\n    },\n    'Shoulder': {\n        impactType: 'shoulder',\n        probWeight: {'high': 60, 'mid': 60, 'low': 0},\n        isStumble: false,\n        isFumble: true,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K4'}\n    },\n    'Upper Arm': {\n        impactType: 'upperarm',\n        probWeight: {'high': 60, 'mid': 30, 'low': 0},\n        isStumble: false,\n        isFumble: true,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'M1', ei9: 'S2', ei13: 'S3', ei17: 'G4'}\n    },\n    'Elbow': {\n        impactType: 'elbow',\n        probWeight: {'high': 20, 'mid': 10, 'low': 0},\n        isStumble: false,\n        isFumble: true,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'G5'}\n    },\n    'Forearm': {\n        impactType: 'forearm',\n        probWeight: {'high': 40, 'mid': 20, 'low': 30},\n        isStumble: false,\n        isFumble: true,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'M1', ei9: 'S2', ei13: 'S3', ei17: 'G4'}\n    },\n    'Hand': {\n        impactType: 'hand',\n        probWeight: {'high': 20, 'mid': 20, 'low': 30},\n        isStumble: false,\n        isFumble: true,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'G5'}\n    },\n    'Thorax': {\n        impactType: 'thorax',\n        probWeight: {'high': 100, 'mid': 170, 'low': 70},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K5'}\n    },\n    'Abdomen': {\n        impactType: 'abdomen',\n        probWeight: {'high': 50, 'mid': 100, 'low': 100},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'K4', ei17: 'K5'}\n    },\n    'Groin': {\n        impactType: 'groin',\n        probWeight: {'high': 0, 'mid': 40, 'low': 60},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'G5'}\n    },\n    'Hip': {\n        impactType: 'hip',\n        probWeight: {'high': 0, 'mid': 30, 'low': 70},\n        isStumble: true,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K4'}\n    },\n    'Thigh': {\n        impactType: 'thigh',\n        probWeight: {'high': 0, 'mid': 40, 'low': 105},\n        isStumble: true,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K4'}\n    },\n    'Knee': {\n        impactType: 'knee',\n        probWeight: {'high': 0, 'mid': 10, 'low': 40},\n        isStumble: true,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'G5'}\n    },\n    'Calf': {\n        impactType: 'calf',\n        probWeight: {'high': 0, 'mid': 30, 'low': 70},\n        isStumble: true,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'M1', ei9: 'S2', ei13: 'S3', ei17: 'G4'}\n    },\n    'Foot': {\n        impactType: 'foot',\n        probWeight: {'high': 0, 'mid': 20, 'low': 40},\n        isStumble: true,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'G5'}\n    },\n    'Wing': {\n        impactType: 'wing',\n        probWeight: {'high': 150, 'mid': 50, 'low': 0},\n        isStumble: false,\n        isFumble: true,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'G5'}\n    },\n    'Tentacle': {\n        impactType: 'tentacle',\n        probWeight: {'high': 50, 'mid': 150, 'low': 0},\n        isStumble: false,\n        isFumble: true,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'M1', ei9: 'S2', ei13: 'S3', ei17: 'G4'}\n    },\n    'Tail': {\n        impactType: 'tail',\n        probWeight: {'high': 0, 'mid': 50, 'low': 100},\n        isStumble: true,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'M1', ei9: 'S2', ei13: 'S3', ei17: 'G4'}\n    },\n    'Jaw': {\n        impactType: 'face, jaw',\n        probWeight: {'high': 150 * (150 / 1000), 'mid': 50 * (150 / 1000), 'low': 0},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K5'}\n    },\n    'Eye': {\n        impactType: 'face, eye',\n        probWeight: {'high': 150 * (75 / 1000), 'mid': 50 * (75 / 1000), 'low': 0},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K5'}\n    },\n    'Cheek': {\n        impactType: 'face, cheek',\n        probWeight: {'high': 150 * (175 / 1000), 'mid': 50 * (175 / 1000), 'low': 0},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K5'}\n    },\n    'Nose': {\n        impactType: 'face, nose',\n        probWeight: {'high': 150 * (150 / 1000), 'mid': 50 * (150 / 1000), 'low': 0},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K5'}\n    },\n    'Ear': {\n        impactType: 'face, ear',\n        probWeight: {'high': 150 * (50 / 1000), 'mid': 50 * (50 / 1000), 'low': 0},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K5'}\n    },\n    'Mouth': {\n        impactType: 'face, mouth',\n        probWeight: {'high': 150 * (100 / 1000), 'mid': 50 * (100 / 1000), 'low': 0},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K5'}\n    },\n    'Head, humanoid simple': {\n        impactType: 'head, humanoid simple',\n        probWeight: {'high': 300, 'mid': 100, 'low': 0},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'K4', ei17: 'K5'}\n    },\n    'Neck, humanoid simple': {\n        impactType: 'neck, humanoid simple',\n        probWeight: {'high': 150, 'mid': 50, 'low': 0},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'K4', ei17: 'K5'}\n    },\n    'Arm, humanoid simple': {\n        impactType: 'arm, humanoid simple',\n        probWeight: {'high': 200, 'mid': 140, 'low': 60},\n        isStumble: false,\n        isFumble: true,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K4'}\n    },\n    'Thorax, humanoid simple': {\n        impactType: 'thorax, humanoid simple',\n        probWeight: {'high': 100, 'mid': 170, 'low': 70},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K5'}\n    },\n    'Abdomen, humanoid simple': {\n        impactType: 'abdomen, humanoid simple',\n        probWeight: {'high': 50, 'mid': 140, 'low': 170},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'K4', ei17: 'K5'}\n    },\n    'Leg, humanoid simple': {\n        impactType: 'leg, humanoid simple',\n        probWeight: {'high': 0, 'mid': 130, 'low': 320},\n        isStumble: true,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K4'}\n    },\n    'Head, horse': {\n        impactType: 'head, horse',\n        probWeight: {'high': 120, 'mid': 120, 'low': 120},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'K4', ei17: 'K5'}\n    },\n    'Neck, horse': {\n        impactType: 'neck, horse',\n        probWeight: {'high': 80, 'mid': 80, 'low': 80},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'K4', ei17: 'K5'}\n    },\n    'Fore Leg, horse': {\n        impactType: 'fore leg, horse',\n        probWeight: {'high': 50, 'mid': 50, 'low': 50},\n        isStumble: true,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'M1', ei9: 'S2', ei13: 'S3', ei17: 'G4'}\n    },\n    'Flank, horse': {\n        impactType: 'flank, horse',\n        probWeight: {'high': 150, 'mid': 150, 'low': 150},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'G5'}\n    },\n    'Abdomen, horse': {\n        impactType: 'abdomen, horse',\n        probWeight: {'high': 150, 'mid': 150, 'low': 150},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'K4', ei17: 'K5'}\n    },\n    'Quarter, horse': {\n        impactType: 'quarter, horse',\n        probWeight: {'high': 75, 'mid': 75, 'low': 75},\n        isStumble: true,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K4'}\n    },\n    'Hind Leg, horse': {\n        impactType: 'hind leg, horse',\n        probWeight: {'high': 40, 'mid': 40, 'low': 40},\n        isStumble: true,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K4'}\n    },\n    'Tail, horse': {\n        impactType: 'tail, horse',\n        probWeight: {'high': 20, 'mid': 20, 'low': 20},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'M1', ei9: 'S2', ei13: 'S3', ei17: 'G4'}\n    },\n    'Head, dog': {\n        impactType: 'head, dog',\n        probWeight: {'high': 150, 'mid': 150, 'low': 150},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'K4', ei17: 'K5'}\n    },\n    'Neck, dog': {\n        impactType: 'neck, dog',\n        probWeight: {'high': 100, 'mid': 100, 'low': 100},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'K4', ei17: 'K5'}\n    },\n    'Fore Leg, dog': {\n        impactType: 'fore leg, dog',\n        probWeight: {'high': 25, 'mid': 25, 'low': 25},\n        isStumble: true,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'M1', ei9: 'S2', ei13: 'S3', ei17: 'G4'}\n    },\n    'Thorax, dog': {\n        impactType: 'thorax, dog',\n        probWeight: {'high': 200, 'mid': 200, 'low': 200},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'G5'}\n    },\n    'Abdomen, dog': {\n        impactType: 'abdomen, dog',\n        probWeight: {'high': 350, 'mid': 350, 'low': 350},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: false,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'K4', ei17: 'K5'}\n    },\n    'Hind Leg, dog': {\n        impactType: 'hind leg, dog',\n        probWeight: {'high': 50, 'mid': 50, 'low': 50},\n        isStumble: true,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'S2', ei9: 'S3', ei13: 'G4', ei17: 'K4'}\n    },\n    'Tail, dog': {\n        impactType: 'tail, dog',\n        probWeight: {'high': 50, 'mid': 50, 'low': 50},\n        isStumble: false,\n        isFumble: false,\n        isAmputate: true,\n        effectiveImpact: {ei1: 'M1', ei5: 'M1', ei9: 'S2', ei13: 'S3', ei17: 'G4'}\n    }\n};\n\nHM3.stdSkills = {\n    'Axe': {\n        'source': 'HM3 Skills 19',\n        'skillBase': {'formula': '@str, @str, @dex, Ahnu, Feniri, Angberelius', 'SBx': 3},\n        'type': 'Combat'\n    },\n    'Blowgun': {\n        'source': 'HM3 Skills 19',\n        'skillBase': {'formula': '@sta, @dex, @eye, Hirin:2, Tarael, Nadai', 'SBx': 4},\n        'type': 'Combat'\n    },\n    'Bow': {\n        'source': 'HM3 Skills 19',\n        'skillBase': {'formula': '@str, @dex, @eye, Hirin, Tarael, Nadai', 'SBx': 2},\n        'type': 'Combat'\n    },\n    'Club': {\n        'source': 'HM3 Skills 19',\n        'skillBase': {'formula': '@str, @str, @dex, Ulandus, Aralius', 'SBx': 4},\n        'type': 'Combat'\n    },\n    'Dagger': {\n        'source': 'HM3 Skills 19',\n        'skillBase': {'formula': '@dex, @dex, @eye, Angberelius:2, Nadai:2', 'SBx': 3},\n        'type': 'Combat'\n    },\n    'Dodge': {'source': 'HM3 Skills 21', 'skillBase': {'formula': '@agl, @agl, @agl', 'SBx': 5}, 'type': 'Combat'},\n    'Flail': {\n        'source': 'HM3 Skills 19',\n        'skillBase': {'formula': '@dex, @dex, @dex, Hirin, Tarael, Nadai', 'SBx': 1},\n        'type': 'Combat'\n    },\n    'Initiative': {'source': 'HM3 Skills 18', 'skillBase': {'formula': '@agl, @wil, @wil', 'SBx': 4}, 'type': 'Combat'},\n    'Net': {\n        'source': 'HM3 Skills 19',\n        'skillBase': {'formula': '@dex, @dex, @eye, Masara, Skorus, Lado', 'SBx': 1},\n        'type': 'Combat'\n    },\n    'Polearm': {\n        'source': 'HM3 Skills 19',\n        'skillBase': {'formula': '@str, @str, @dex, Angberelius, Aralius', 'SBx': 2},\n        'type': 'Combat'\n    },\n    'Riding': {\n        'source': 'HM3 Skills 18',\n        'skillBase': {'formula': '@dex, @agl, @wil, Ulandus, Aralius', 'SBx': 1},\n        'type': 'Combat'\n    },\n    'Shield': {\n        'source': 'HM3 Skills 19',\n        'skillBase': {'formula': '@str, @dex, @dex, Ulandus, Lado, Masara', 'SBx': 3},\n        'type': 'Combat'\n    },\n    'Sling': {\n        'source': 'HM3 Skills 19',\n        'skillBase': {'formula': '@dex, @dex, @eye, Hirin, Tarael, Nadai', 'SBx': 1},\n        'type': 'Combat'\n    },\n    'Spear': {\n        'source': 'HM3 Skills 19',\n        'skillBase': {'formula': '@str, @str, @dex, Aralius, Feniri, Ulandus', 'SBx': 3},\n        'type': 'Combat'\n    },\n    'Sword': {\n        'source': 'HM3 Skills 19',\n        'skillBase': {'formula': '@str, @dex, @dex, Angberelius:3, Ahnu, Nadai', 'SBx': 3},\n        'type': 'Combat'\n    },\n    'Unarmed': {\n        'source': 'HM3 Skills 18',\n        'skillBase': {'formula': '@str, @dex, @agl, Madada:2, Lado:2, Ulandus:2', 'SBx': 4},\n        'type': 'Combat'\n    },\n    'Whip': {\n        'source': 'HM3 Skills 19',\n        'skillBase': {'formula': '@dex, @dex, @eye, Hirin, Nadai', 'SBx': 1},\n        'type': 'Combat'\n    },\n\n    'Acting': {\n        'source': 'HM3 Skills 11',\n        'skillBase': {'formula': '@agl, @voi, @int, Tarael, Tai', 'SBx': 2},\n        'type': 'Communication'\n    },\n    'Awareness': {\n        'source': 'HM3 Skills 11',\n        'skillBase': {'formula': '@eye, @hrg, @sml, Hirin:2, Tarael:2', 'SBx': 4},\n        'type': 'Communication'\n    },\n    'Intrigue': {\n        'source': 'HM3 Skills 11',\n        'skillBase': {'formula': '@int, @aur, @wil, Tai, Tarael, Skorus', 'SBx': 3},\n        'type': 'Communication'\n    },\n    'Language': {'source': 'HM3 Skills 10', 'skillBase': {'formula': '@voi, @int, @wil, Tai'}, 'type': 'Communication'},\n    'Lovecraft': {\n        'source': 'HM3 Skills 11',\n        'skillBase': {'formula': '@cml, @agl, @voi, Masara, Angberelius', 'SBx': 3},\n        'type': 'Communication'\n    },\n    'Mental Conflict': {\n        'source': 'HM3 Skills 12',\n        'skillBase': {'formula': '@aur, @wil, @wil', 'SBx': 3},\n        'type': 'Communication'\n    },\n    'Musician': {\n        'source': 'HM3 Skills 12',\n        'skillBase': {'formula': '@dex, @hrg, @hrg, Masara, Angberelius', 'SBx': 1},\n        'type': 'Communication'\n    },\n    'Oratory': {\n        'source': 'HM3 Skills 12',\n        'skillBase': {'formula': '@cml, @voi, @int, Tarael'},\n        'type': 'Communication',\n        'SBx': 2\n    },\n    'Rhetoric': {\n        'source': 'HM3 Skills 12',\n        'skillBase': {'formula': '@voi, @int, @wil, Tai, Tarael, Skorus', 'SBx': 3},\n        'type': 'Communication'\n    },\n    'Script': {\n        'source': 'HM3 Skills 11',\n        'skillBase': {'formula': '@dex, @eye, @int, Tarael, Tai'},\n        'type': 'Communication'\n    },\n    'Singing': {\n        'source': 'HM3 Skills 12',\n        'skillBase': {'formula': '@hrg, @voi, @voi, Masara', 'SBx': 3},\n        'type': 'Communication'\n    },\n\n    'Agriculture': {\n        'source': 'HM3 Skills 13',\n        'skillBase': {'formula': '@str, @sta, @wil, Ulandus:2, Aralius:2', 'SBx': 2},\n        'type': 'Craft'\n    },\n    'Alchemy': {\n        'source': 'HM3 Skills 13',\n        'skillBase': {'formula': '@sml, @int, @aur, Skorus:3, Tai:2, Masara:2', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Animalcraft': {\n        'source': 'HM3 Skills 13',\n        'skillBase': {'formula': '@agl, @voi, @wil, Ulandus, Aralius', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Astrology': {\n        'source': 'HM3 Skills 13',\n        'skillBase': {'formula': '@eye, @int, @aur, Tarael', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Brewing': {\n        'source': 'HM3 Skills 13',\n        'skillBase': {'formula': '@dex, @sml, @sml, Skorus:3, Tai:2, Masara:2', 'SBx': 2},\n        'type': 'Craft'\n    },\n    'Ceramics': {\n        'source': 'HM3 Skills 13',\n        'skillBase': {'formula': '@dex, @dex, @eye, Ulandus:2, Aralius:2', 'SBx': 2},\n        'type': 'Craft'\n    },\n    'Cookery': {\n        'source': 'HM3 Skills 13',\n        'skillBase': {'formula': '@dex, @sml, @sml, Skorus', 'SBx': 3},\n        'type': 'Craft'\n    },\n    'Drawing': {\n        'source': 'HM3 Skills 13',\n        'skillBase': {'formula': '@dex, @eye, @eye, Skorus, Tai', 'SBx': 2},\n        'type': 'Craft'\n    },\n    'Embalming': {\n        'source': 'HM3 Skills 14',\n        'skillBase': {'formula': '@dex, @eye, @sml, Skorus, Ulandus', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Engineering': {\n        'source': 'HM3 Skills 14',\n        'skillBase': {'formula': '@dex, @int, @int, Ulandus:2, Aralius:2, Feniri', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Fishing': {\n        'source': 'HM3 Skills 14',\n        'skillBase': {'formula': '@dex, @eye, @wil, Masara:2, Lado:2', 'SBx': 3},\n        'type': 'Craft'\n    },\n    'Fletching': {\n        'source': 'HM3 Skills 15',\n        'skillBase': {'formula': '@dex, @dex, @eye, Hirin:2, Tarael, Nadai', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Folklore': {\n        'source': 'HM3 Skills 15',\n        'skillBase': {'formula': '@voi, @int, @int, Tai:2', 'SBx': 3},\n        'type': 'Craft'\n    },\n    'Foraging': {\n        'source': 'HM3 Skills 15',\n        'skillBase': {'formula': '@dex, @sml, @int, Ulandus:2, Aralius:2', 'SBx': 3},\n        'type': 'Craft'\n    },\n    'Glassworking': {\n        'source': 'HM3 Skills 15',\n        'skillBase': {'formula': '@dex, @eye, @wil, Feniri:2', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Heraldry': {\n        'source': 'HM3 Skills 15',\n        'skillBase': {'formula': '@dex, @eye, @wil, Skorus, Tai', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Herblore': {\n        'source': 'HM3 Skills 15',\n        'skillBase': {'formula': '@eye, @sml, @int, Ulandus:3, Aralius:2', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Hidework': {\n        'source': 'HM3 Skills 15',\n        'skillBase': {'formula': '@dex, @sml, @wil, Ulandis, Aralius', 'SBx': 2},\n        'type': 'Craft'\n    },\n    'Hunting': {\n        'source': 'HM3 Skills 16',\n        'skillBase': {'formula': '@agl, @sml, @int, Ulandus:2, Aralius:2', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Inkcraft': {\n        'source': 'HM3 Skills 16',\n        'skillBase': {'formula': '@eye, @sml, @int, Skorus:2, Tai', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Jewelcraft': {\n        'source': 'HM3 Skills 16',\n        'skillBase': {'formula': '@dex, @eye, @wil, Feniri:3, Tarael, Aralius', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Law': {\n        'source': 'HM3 Skills 16',\n        'skillBase': {'formula': '@voi, @int, @wil, Tarael, Tai', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Lockcraft': {\n        'source': 'HM3 Skills 16',\n        'skillBase': {'formula': '@dex, @eye, @wil, Feniri', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Lore': {'source': 'HM3 Skills 16', 'skillBase': {'formula': '@eye, @int, @int, Tai:2', 'SBx': 1}, 'type': 'Craft'},\n    'Masonry': {\n        'source': 'HM3 Skills 16',\n        'skillBase': {'formula': '@str, @dex, @int, Ulandus:2, Aralius:2', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Mathematics': {\n        'source': 'HM3 Skills 16',\n        'skillBase': {'formula': '@int, @int, @wil, Tai:3, Tarael, Skorus', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Metalcraft': {\n        'source': 'HM3 Skills 16',\n        'skillBase': {'formula': '@str, @dex, @wil, Feniri:3, Ahnu, Angberelius', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Milling': {\n        'source': 'HM3 Skills 16',\n        'skillBase': {'formula': '@str, @dex, @sml, Ulandus', 'SBx': 2},\n        'type': 'Craft'\n    },\n    'Mining': {\n        'source': 'HM3 Skills 16',\n        'skillBase': {'formula': '@str, @eye, @int, Ulandus:2, Aralius:2, Feniri', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Perfumery': {\n        'source': 'HM3 Skills 16',\n        'skillBase': {'formula': '@sml, @sml, @int, Hirin, Skorus, Tarael', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Physician': {\n        'source': 'HM3 Skills 17',\n        'skillBase': {'formula': '@dex, @eye, @int, Masara:2, Skorus, Tai', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Piloting': {\n        'source': 'HM3 Skills 17',\n        'skillBase': {'formula': '@dex, @eye, @int, Lado:3, Masara', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Runecraft': {\n        'source': 'HM3 Skills 17',\n        'skillBase': {'formula': '@int, @aur, @aur, Tai:2, Skorus', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Seamanship': {\n        'source': 'HM3 Skills 17',\n        'skillBase': {'formula': '@str, @dex, @agl, Lado:3, Masara, Skorus', 'SBx': 2},\n        'type': 'Craft'\n    },\n    'Shipwright': {\n        'source': 'HM3 Skills 17',\n        'skillBase': {'formula': '@str, @dex, @int, Lado:3, Masara', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Survival': {\n        'source': 'HM3 Skills 17',\n        'skillBase': {'formula': '@str, @dex, @int, Ulandus:2, Aralius', 'SBx': 3},\n        'type': 'Craft'\n    },\n    'Tarotry': {\n        'source': 'HM3 Skills 17',\n        'skillBase': {'formula': '@int, @aur, @wil, Tarael:2, Tai:2, Skorus, Hirin', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Textilecraft': {\n        'source': 'HM3 Skills 17',\n        'skillBase': {'formula': '@dex, @dex, @eye, Ulandus, Aralius', 'SBx': 2},\n        'type': 'Craft'\n    },\n    'Timbercraft': {\n        'source': 'HM3 Skills 17',\n        'skillBase': {'formula': '@str, @dex, @agl, Ulandus:3, Aralius', 'SBx': 2},\n        'type': 'Craft'\n    },\n    'Tracking': {\n        'source': 'HM3 Skills 17',\n        'skillBase': {'formula': '@eye, @sml, @wil, Ulandus:3, Aralius:3', 'SBx': 2},\n        'type': 'Craft'\n    },\n    'Trapping': {\n        'source': 'Barbarians 6',\n        'skillBase': {'formula': '@agl, @dex, @eye, Ulandus:2, Aralius:2', 'SBx': 2},\n        'type': 'Craft'\n    },\n    'Weaponcraft': {\n        'source': 'HM3 Skills 17',\n        'skillBase': {'formula': '@str, @dex, @wil, Feniri:3, Ahnu, Angberelius', 'SBx': 1},\n        'type': 'Craft'\n    },\n    'Weatherlore': {\n        'source': 'HM3 Skills 17',\n        'skillBase': {'formula': '@int, @eye, @sml, Hirin, Tarael, Masada, Lado', 'SBx': 3},\n        'type': 'Craft'\n    },\n    'Woodcraft': {\n        'source': 'HM3 Skills 17',\n        'skillBase': {'formula': '@dex, @dex, @wil, Ulandus:2, Aralius, Lado', 'SBx': 2},\n        'type': 'Craft'\n    },\n\n    'Fyvria': {\n        'source': 'HM Magic, Shek-pvar 6',\n        'skillBase': {\n            'formula':\n                '@aur, @aur, @sml, Ulandus:3, Aralius:2, Feneri:1, Angberelius:-1, Nadai:-2, Hirin:-3, Tarael:-2, Tai:-1, Masara, Lado:2',\n            'SBx': 3\n        },\n        'type': 'Magic'\n    },\n    'Jmorvi': {\n        'source': 'HM Magic, Shek-pvar 6',\n        'skillBase': {\n            'formula':\n                '@aur, @aur, @str, Ulandus, Aralius:2, Feneri:3, Ahnu:2, Angberelius:1, Hirin:-1, Tarael:-2, Tai:-3, Skorus:-2, Masara:-1',\n            'SBx': 3\n        },\n        'type': 'Magic'\n    },\n    'Lyahvi': {\n        'source': 'HM Magic, Shek-Pvar 6',\n        'skillBase': {\n            'formula':\n                '@aur, @aur, @eye, Ulandus:-3, Aralius:-2,Feneri:-1, Angberelius, Nadai:2, Hirin:3, Tarael:2, Tai,Masara:-1, Lado:-2',\n            'SBx': 3\n        },\n        'type': 'Magic'\n    },\n    'Odivshe': {\n        'source': 'HM Magic, Shek-pvar 6',\n        'skillBase': {\n            'formula':\n                '@aur, @aur, @dex, Ulandus, Feneri:-1, Ahnu:-2, Angberelius:-3, Nadai:-2, Hirin:-1, Tai:1, Skorus:2, Masara:3, Lado:2',\n            'SBx': 3\n        },\n        'type': 'Magic'\n    },\n    'Peleahn': {\n        'source': 'HM Magic, Shek-pvar 6',\n        'skillBase': {\n            'formula':\n                '@aur, @aur, @agl, Ulandus:-1, Feneri, Ahnu:2, Angberelius:3, Nadai:2, Hirin, Tai:-1, Skorus:-2, Masara:-3, Lado:-2',\n            'SBx': 3\n        },\n        'type': 'Magic'\n    },\n    'Savorya': {\n        'source': 'HM Magic, Shek-pvar 6',\n        'skillBase': {\n            'formula':\n                '@aur, @aur, @int, Ulandus:-1, Aralius:-2, Feneri:-3, Ahnu:-2, Angberelius:-1, Hirin:1, Tarael:2, Tai:3, Skorus:2, Masara',\n            'SBx': 3\n        },\n        'type': 'Magic'\n    },\n    'Neutral': {\n        'source': 'HM Magic, Shek-pvar 6',\n        'skillBase': {'formula': '@aur, @aur, @wil', 'SBx': 1},\n        'type': 'Magic'\n    },\n\n    'Acrobatics': {\n        'source': 'HM3 Skills 8',\n        'skillBase': {'formula': '@str, @agl, @agl, Nadai:2, Hirin', 'SBx': 2},\n        'type': 'Physical'\n    },\n    'Climbing': {\n        'source': 'HM3 Skills 8',\n        'skillBase': {'formula': '@str, @dex, @agl, Ulandus:2, Aralius:2', 'SBx': 4},\n        'type': 'Physical'\n    },\n    'Condition': {\n        'source': 'HM3 Skills 9',\n        'skillBase': {'formula': '@str, @sta, @wil, Ulandus, Lado', 'SBx': 5},\n        'type': 'Physical'\n    },\n    'Dancing': {\n        'source': 'HM3 Skills 9',\n        'skillBase': {'formula': '@Dex, @agl, @agl, Tarael:2, Hirin, Tai', 'SBx': 2},\n        'type': 'Physical'\n    },\n    'Jumping': {\n        'source': 'HM3 Skills 9',\n        'skillBase': {'formula': '@str, @agl, @agl, Nadai:2, Hirin:2', 'SBx': 4},\n        'type': 'Physical'\n    },\n    'Legerdemain': {\n        'source': 'HM3 Skills 9',\n        'skillBase': {'formula': '@dex, @dex, @wil, Skorus:2, Tai:2, Tarael:2', 'SBx': 1},\n        'type': 'Physical'\n    },\n    'Skiing': {\n        'source': 'HM3 Skills 9',\n        'skillBase': {'formula': '@str, @dex, @agl, Masara:2, Skorus, Lado', 'SBx': 1},\n        'type': 'Physical'\n    },\n    'Stealth': {\n        'source': 'HM3 Skills 9',\n        'skillBase': {'formula': '@agl, @hrg, @wil, Hirin:2, Tarael:2, Tai:2', 'SBx': 3},\n        'type': 'Physical'\n    },\n    'Swimming': {\n        'source': 'HM3 Skills 9',\n        'skillBase': {'formula': '@sta, @dex, @agl, Skorus, Masara:3, Lado:3', 'SBx': 1},\n        'type': 'Physical'\n    },\n    'Throwing': {\n        'source': 'HM3 Skills 10',\n        'skillBase': {'formula': '@str, @dex, @eye, Hirin:2, Tarael, Nadai', 'SBx': 4},\n        'type': 'Physical'\n    },\n\n    'Agrik': {\n        'source': 'HM Religion, Agrik 1',\n        'skillBase': {'formula': '@voi, @int, @str, Nadai:2, Angberelius, Ahnu', 'SBx': 1},\n        'type': 'Ritual'\n    },\n    'Halea': {\n        'source': 'HM Religion, Halea 1',\n        'skillBase': {'formula': '@voi, @int, @cml, Tarael:2, Hirin, Masara', 'SBx': 1},\n        'type': 'Ritual'\n    },\n    'Ilvir': {\n        'source': 'HM Religion, Ilvir 1',\n        'skillBase': {'formula': '@voi, @int, @aur, Skorus:2, Tai, Ulandus', 'SBx': 1},\n        'type': 'Ritual'\n    },\n    'Larani': {\n        'source': 'HM Religion, Larani 1',\n        'skillBase': {'formula': '@voi, @int, @wil, Angberelius:2, Ahnu, Feniri', 'SBx': 1},\n        'type': 'Ritual'\n    },\n    'Morgath': {\n        'source': 'HM Religion, Morgath 1',\n        'skillBase': {'formula': '@voi, @int, @aur, Lado:2, Ahnu, Masara', 'SBx': 1},\n        'type': 'Ritual'\n    },\n    'Naveh': {\n        'source': 'HM Religion, Naveh 1',\n        'skillBase': {'formula': '@voi, @int, @wil, Masara:2, Skorus, Tarael', 'SBx': 1},\n        'type': 'Ritual'\n    },\n    'Peoni': {\n        'source': 'HM Religion, Peoni 1',\n        'skillBase': {'formula': '@voi, @int, @dex, Aralius:2, Angberelius, Ulandus', 'SBx': 1},\n        'type': 'Ritual'\n    },\n    'Sarajin': {\n        'source': 'HM Religion, Sarajin 1',\n        'skillBase': {'formula': '@voi, @int, @str, Feniri:2, Aralius, Lado', 'SBx': 1},\n        'type': 'Ritual'\n    },\n    'Siem': {\n        'source': 'HM Religion, Siem 1',\n        'skillBase': {'formula': '@voi, @int, @aur, Hirin:2, Feniri, Ulandus', 'SBx': 1},\n        'type': 'Ritual'\n    },\n    \"Save K'nor\": {\n        'source': \"HM Religion, Save K'nor 1\",\n        'skillBase': {'formula': '@voi, @int, @int, Tai:2, Tarael, Skorus', 'SBx': 1},\n        'type': 'Craft'\n    }\n};\n\nHM3.injuryLevels = ['NA', 'M1', 'S2', 'S3', 'G4', 'G5', 'K4', 'K5'];\n\nHM3.activeEffectKey = {\n    'system.eph.meleeAMLMod': 'Melee Attacks',\n    'system.eph.meleeDMLMod': 'Melee Defenses',\n    'system.eph.missileAMLMod': 'Missile Attacks',\n    'system.eph.outnumbered': 'Outnumbered',\n    'system.eph.itemAMLMod': 'Weapon Attack ML',\n    'system.eph.itemDMLMod': 'Weapon Defense ML',\n    'system.eph.itemEMLMod': 'Skill EML',\n    'system.eph.commSkillsMod': 'Communication Skills EML',\n    'system.eph.physicalSkillsMod': 'Physical Skills EML',\n    'system.eph.combatSkillsMod': 'Combat Skills EML',\n    'system.eph.craftSkillsMod': 'Craft Skills EML',\n    'system.eph.ritualSkillsMod': 'Ritual Skills EML',\n    'system.eph.magicSkillsMod': 'Magic Skills EML',\n    'system.eph.psionicTalentsMod': 'Psionic Talents EML',\n    'system.eph.fatigue': 'Fatigue',\n    'system.physicalPenalty': 'Physical Penalty',\n    'system.universalPenalty': 'Universal Penalty',\n    'system.encumbrance': 'Encumbrance',\n    'system.endurance': 'Endurance',\n    'system.eph.totalInjuryLevels': 'Injury Level',\n    'system.eph.move': 'Move',\n    'system.eph.strength': 'Strength',\n    'system.eph.stamina': 'Stamina',\n    'system.eph.dexterity': 'Dexterity',\n    'system.eph.agility': 'Agility',\n    'system.eph.eyesight': 'Eyesight',\n    'system.eph.hearing': 'Hearing',\n    'system.eph.smell': 'Smell',\n    'system.eph.voice': 'Voice',\n    'system.eph.intelligence': 'Intelligence',\n    'system.eph.will': 'Will',\n    'system.eph.aura': 'Aura',\n    'system.eph.morality': 'Morality',\n    'system.eph.comeliness': 'Comeliness',\n    'system.eph.unhorsing': 'Unhorsing'\n};\n\nHM3.activeEffectKeyV2 = {\n    // Attacks & Defenses\n    'system.v2.itemAMLMod': 'Weapon Attack ML',\n    'system.v2.itemDMLMod': 'Weapon Defense ML',\n    'system.v2.meleeAMLMod': 'Melee Attacks',\n    'system.v2.meleeDMLMod': 'Melee Defenses',\n    'system.v2.missileAMLMod': 'Missile Attacks',\n    // Skill Checks\n    'system.v2.combatSkillsMod': 'Combat Skills EML',\n    'system.v2.commSkillsMod': 'Communication Skills EML',\n    'system.v2.craftSkillsMod': 'Craft Skills EML',\n    'system.v2.magicSkillsMod': 'Magic Skills EML',\n    'system.v2.physicalSkillsMod': 'Physical Skills EML',\n    'system.v2.psionicTalentsMod': 'Psionic Talents EML',\n    'system.v2.ritualSkillsMod': 'Ritual Skills EML',\n    'system.v2.skillEMLMod': 'Skill EML',\n    // Penalties\n    'system.v2.encumbrancePenalty': 'Encumbrance Penalty',\n    'system.v2.fatiguePenalty': 'Fatigue Penalty',\n    'system.v2.injuryPenalty': 'Injury Penalty',\n    'system.v2.physicalPenalty': 'Physical Penalty',\n    'system.v2.universalPenalty': 'Universal Penalty',\n    // Combat\n    'system.v2.dodge': 'Dodge',\n    'system.v2.endurance': 'Endurance',\n    'system.v2.initiative': 'Initiative',\n    'system.v2.move': 'Move',\n    // Abilities\n    'system.v2.strength': 'Strength',\n    'system.v2.stamina': 'Stamina',\n    'system.v2.dexterity': 'Dexterity',\n    'system.v2.agility': 'Agility',\n    'system.v2.eyesight': 'Eyesight',\n    'system.v2.hearing': 'Hearing',\n    'system.v2.smell': 'Smell',\n    'system.v2.voice': 'Voice',\n    'system.v2.intelligence': 'Intelligence',\n    'system.v2.will': 'Will',\n    'system.v2.aura': 'Aura',\n    'system.v2.morality': 'Morality',\n    'system.v2.comeliness': 'Comeliness',\n    // Misc\n    'system.v2.outnumbered': 'Outnumbered',\n    'system.v2.unhorsing': 'Unhorsing'\n};\n\nHM3.defaultMagicIconName = 'pentacle';\nHM3.defaultRitualIconName = 'circle';\nHM3.defaultMiscItemIconName = 'miscgear';\nHM3.defaultPsionicsIconName = 'psionics';\nHM3.defaultArmorGearIconName = 'armor';\nHM3.defaultContainerIconName = 'sack';\n\nHM3.magicIcons = [\n    ['pentacle', 'systems/hm3/images/icons/svg/pentacle.svg'],\n    ['lyahvi', 'systems/hm3/images/icons/png/lyahvi.png'],\n    ['peleahn', 'systems/hm3/images/icons/png/peleahn.png'],\n    ['jmorvi', 'systems/hm3/images/icons/png/jmorvi.png'],\n    ['fyvria', 'systems/hm3/images/icons/png/fyvria.png'],\n    ['odivshe', 'systems/hm3/images/icons/png/odivshe.png'],\n    ['savorya', 'systems/hm3/images/icons/png/savorya.png'],\n    ['neutral', 'systems/hm3/images/icons/png/neutral.png']\n];\n\nHM3.ritualIcons = [\n    ['circle', 'systems/hm3/images/icons/svg/circle.svg'],\n    ['agrik', 'systems/hm3/images/icons/png/agrik.png'],\n    ['halea', 'systems/hm3/images/icons/png/halea.png'],\n    ['ilvir', 'systems/hm3/images/icons/png/ilvir.png'],\n    ['larani', 'systems/hm3/images/icons/png/larani.png'],\n    ['morgath', 'systems/hm3/images/icons/png/morgath.png'],\n    ['naveh', 'systems/hm3/images/icons/png/naveh.png'],\n    ['peoni', 'systems/hm3/images/icons/png/peoni.png'],\n    ['sarajin', 'systems/hm3/images/icons/png/sarajin.png'],\n    [\"save k'nor\", 'systems/hm3/images/icons/png/saveknor.png'],\n    ['save k’nor', 'systems/hm3/images/icons/png/saveknor.png'],\n    ['save knor', 'systems/hm3/images/icons/png/saveknor.png'],\n    ['siem', 'systems/hm3/images/icons/png/siem.png']\n];\n\nHM3.psionicTalentIcons = [['psionics', 'systems/hm3/images/icons/svg/psionics.svg']];\n\nHM3.physicalSkillIcons = [\n    ['acrobatics', 'systems/hm3/images/icons/svg/acrobatics.svg'],\n    ['climbing', 'systems/hm3/images/icons/svg/climbing.svg'],\n    ['condition', 'systems/hm3/images/icons/svg/muscle.svg'],\n    ['dancing', 'systems/hm3/images/icons/svg/dance.svg'],\n    ['jumping', 'systems/hm3/images/icons/svg/jump.svg'],\n    ['legerdemain', 'systems/hm3/images/icons/svg/juggler.svg'],\n    ['skiing', 'systems/hm3/images/icons/svg/ski.svg'],\n    ['stealth', 'systems/hm3/images/icons/svg/stealth.svg'],\n    ['swimming', 'systems/hm3/images/icons/svg/swimming.svg'],\n    ['throwing', 'systems/hm3/images/icons/svg/throw.svg']\n];\n\nHM3.commSkillIcons = [\n    ['acting', 'systems/hm3/images/icons/svg/acting.svg'],\n    ['awareness', 'systems/hm3/images/icons/svg/awareness.svg'],\n    ['intrigue', 'systems/hm3/images/icons/svg/cloak-dagger.svg'],\n    ['lovecraft', 'systems/hm3/images/icons/svg/love.svg'],\n    ['mental conflict', 'systems/hm3/images/icons/svg/mental.svg'],\n    ['musician', 'systems/hm3/images/icons/svg/harp.svg'],\n    ['oratory', 'systems/hm3/images/icons/svg/oratory.svg'],\n    ['rhetoric', 'systems/hm3/images/icons/svg/rhetoric.svg'],\n    ['command', 'systems/hm3/images/icons/svg/rhetoric.svg'],\n    ['diplomacy', 'systems/hm3/images/icons/svg/rhetoric.svg'],\n    ['intimidation', 'systems/hm3/images/icons/svg/rhetoric.svg'],\n    ['singing', 'systems/hm3/images/icons/svg/musician-singing.svg'],\n    ['language', 'systems/hm3/images/icons/svg/speaking.svg'],\n    ['script', 'systems/hm3/images/icons/svg/scroll.svg']\n];\n\nHM3.combatSkillIcons = [\n    ['unarmed', 'systems/hm3/images/icons/svg/punch.svg'],\n    ['brawling', 'systems/hm3/images/icons/svg/punch.svg'],\n    ['wrestling', 'systems/hm3/images/icons/svg/punch.svg'],\n    ['martial arts', 'systems/hm3/images/icons/svg/punch.svg'],\n    ['dodge', 'systems/hm3/images/icons/svg/dodge.svg'],\n    ['initiative', 'systems/hm3/images/icons/svg/initiative.svg'],\n    ['riding', 'systems/hm3/images/icons/svg/horse-riding.svg']\n];\n\nHM3.weaponSkillIcons = [\n    ['axe', 'systems/hm3/images/icons/svg/axe.svg'],\n    ['battleaxe', 'systems/hm3/images/icons/svg/axe.svg'],\n    ['handaxe', 'systems/hm3/images/icons/svg/axe.svg'],\n    ['shorkana', 'systems/hm3/images/icons/svg/axe.svg'],\n    ['pickaxe', 'systems/hm3/images/icons/svg/axe.svg'],\n    ['sickle', 'systems/hm3/images/icons/svg/axe.svg'],\n    ['hatchet', 'systems/hm3/images/icons/svg/axe.svg'],\n    ['warhammer', 'systems/hm3/images/icons/svg/warhammer.svg'],\n    ['war hammer', 'systems/hm3/images/icons/svg/warhammer.svg'],\n    ['bow', 'systems/hm3/images/icons/svg/longbow.svg'],\n    ['longbow', 'systems/hm3/images/icons/svg/longbow.svg'],\n    ['long bow', 'systems/hm3/images/icons/svg/longbow.svg'],\n    ['shortbow', 'systems/hm3/images/icons/svg/longbow.svg'],\n    ['short bow', 'systems/hm3/images/icons/svg/longbow.svg'],\n    ['hart bow', 'systems/hm3/images/icons/svg/longbow.svg'],\n    ['hartbow', 'systems/hm3/images/icons/svg/longbow.svg'],\n    ['crossbow', 'systems/hm3/images/icons/svg/crossbow.svg'],\n    ['club', 'systems/hm3/images/icons/svg/club.svg'],\n    ['stick', 'systems/hm3/images/icons/svg/club.svg'],\n    ['mace', 'systems/hm3/images/icons/svg/mace.svg'],\n    ['maul', 'systems/hm3/images/icons/svg/hammer.svg'],\n    ['morningstar', 'systems/hm3/images/icons/svg/mace.svg'],\n    ['dagger', 'systems/hm3/images/icons/svg/dagger.svg'],\n    ['taburi', 'systems/hm3/images/icons/svg/dagger.svg'],\n    ['keltan', 'systems/hm3/images/icons/svg/dagger.svg'],\n    ['knife', 'systems/hm3/images/icons/svg/dagger.svg'],\n    ['toburi', 'systems/hm3/images/icons/svg/dagger.svg'],\n    ['flail', 'systems/hm3/images/icons/svg/flail.svg'],\n    ['warflail', 'systems/hm3/images/icons/svg/flail.svg'],\n    ['nachakas', 'systems/hm3/images/icons/svg/flail.svg'],\n    ['grainflail', 'systems/hm3/images/icons/svg/flail.svg'],\n    ['net', 'systems/hm3/images/icons/svg/net.svg'],\n    ['polearm', 'systems/hm3/images/icons/svg/polearm.svg'],\n    ['trident', 'systems/hm3/images/icons/svg/trident.svg'],\n    ['lance', 'systems/hm3/images/icons/svg/lance.svg'],\n    ['glaive', 'systems/hm3/images/icons/svg/polearm.svg'],\n    ['pike', 'systems/hm3/images/icons/svg/polearm.svg'],\n    ['poleaxe', 'systems/hm3/images/icons/svg/polearm.svg'],\n    ['jousting pole', 'systems/hm3/images/icons/svg/lance.svg'],\n    ['bill', 'systems/hm3/images/icons/svg/polearm.svg'],\n    ['shield', 'systems/hm3/images/icons/svg/shield.svg'],\n    ['round shield', 'systems/hm3/images/icons/svg/round-shield.svg'],\n    ['buckler', 'systems/hm3/images/icons/svg/round-shield.svg'],\n    ['knight shield', 'systems/hm3/images/icons/svg/shield.svg'],\n    ['kite shield', 'systems/hm3/images/icons/svg/shield.svg'],\n    ['tower shield', 'systems/hm3/images/icons/svg/shield.svg'],\n    ['spear', 'systems/hm3/images/icons/svg/spear.svg'],\n    ['javelin', 'systems/hm3/images/icons/svg/spear.svg'],\n    ['staff', 'systems/hm3/images/icons/svg/staff.svg'],\n    ['sword', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['falchion', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['broadsword', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['battlesword', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['estoc', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['mang', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['mankar', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['longknife', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['battle sword', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['longsword', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['shortsword', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['long sword', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['short sword', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['bastard sword', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['long knife', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['whip', 'systems/hm3/images/icons/svg/whip.svg'],\n    ['hammer', 'systems/hm3/images/icons/svg/hammer.svg'],\n    ['arrow', 'systems/hm3/images/icons/svg/arrow.svg'],\n    ['sling', 'systems/hm3/images/icons/svg/sling.svg'],\n    ['bolt', 'systems/hm3/images/icons/svg/arrow.svg'],\n    ['stone', 'systems/hm3/images/icons/svg/stones.svg'],\n    ['bullet', 'systems/hm3/images/icons/svg/stones.svg'],\n    ['fangs', 'systems/hm3/images/icons/svg/fangs.svg'],\n    ['claw', 'systems/hm3/images/icons/svg/claw.svg'],\n    ['hoof', 'systems/hm3/images/icons/svg/hoof.svg'],\n    ['horns', 'systems/hm3/images/icons/svg/horns.svg']\n];\n\nHM3.craftSkillIcons = [\n    ['agriculture', 'systems/hm3/images/icons/svg/agriculture.svg'],\n    ['alchemy', 'systems/hm3/images/icons/svg/caduceus.svg'],\n    ['animalcraft', 'systems/hm3/images/icons/svg/animalcraft.svg'],\n    ['astrology', 'systems/hm3/images/icons/svg/astrology.svg'],\n    ['brewing', 'systems/hm3/images/icons/svg/brewing.svg'],\n    ['ceramics', 'systems/hm3/images/icons/svg/ceramics.svg'],\n    ['cookery', 'systems/hm3/images/icons/svg/cookery.svg'],\n    ['cooking', 'systems/hm3/images/icons/svg/cookery.svg'],\n    ['drawing', 'systems/hm3/images/icons/svg/drawing.svg'],\n    ['embalming', 'systems/hm3/images/icons/svg/embalming.svg'],\n    ['engineering', 'systems/hm3/images/icons/svg/engineering.svg'],\n    ['fishing', 'systems/hm3/images/icons/svg/fishing.svg'],\n    ['fletching', 'systems/hm3/images/icons/svg/arrow.svg'],\n    ['folklore', 'systems/hm3/images/icons/svg/unicorn.svg'],\n    ['foraging', 'systems/hm3/images/icons/svg/foraging.svg'],\n    ['glassworking', 'systems/hm3/images/icons/svg/glassworking.svg'],\n    ['glasscraft', 'systems/hm3/images/icons/svg/glassworking.svg'],\n    ['heraldry', 'systems/hm3/images/icons/svg/heraldry.svg'],\n    ['herblore', 'systems/hm3/images/icons/svg/herblore.svg'],\n    ['hunting', 'systems/hm3/images/icons/svg/hunting.svg'],\n    ['hidework', 'systems/hm3/images/icons/svg/hidework.svg'],\n    ['inkcraft', 'systems/hm3/images/icons/svg/ink.svg'],\n    ['jewelcraft', 'systems/hm3/images/icons/svg/jewel.svg'],\n    ['law', 'systems/hm3/images/icons/svg/law.svg'],\n    ['lockcraft', 'systems/hm3/images/icons/svg/lock.svg'],\n    ['lore', 'systems/hm3/images/icons/svg/lore.svg'],\n    ['masonry', 'systems/hm3/images/icons/svg/masonry.svg'],\n    ['mathematics', 'systems/hm3/images/icons/svg/mathematics.svg'],\n    ['metalcraft', 'systems/hm3/images/icons/svg/anvil.svg'],\n    ['milling', 'systems/hm3/images/icons/svg/water-mill.svg'],\n    ['mining', 'systems/hm3/images/icons/svg/mining.svg'],\n    ['perfumery', 'systems/hm3/images/icons/svg/perfume.svg'],\n    ['physician', 'systems/hm3/images/icons/svg/caduceus.svg'],\n    ['piloting', 'systems/hm3/images/icons/svg/piloting.svg'],\n    ['pilot', 'systems/hm3/images/icons/svg/piloting.svg'],\n    ['runecraft', 'systems/hm3/images/icons/svg/runecraft.svg'],\n    ['seamanship', 'systems/hm3/images/icons/svg/anchor.svg'],\n    ['shipwright', 'systems/hm3/images/icons/svg/ship.svg'],\n    ['survival', 'systems/hm3/images/icons/svg/survival.svg'],\n    ['tarotry', 'systems/hm3/images/icons/svg/tarotry.svg'],\n    ['textilecraft', 'systems/hm3/images/icons/svg/textilecraft.svg'],\n    ['timbercraft', 'systems/hm3/images/icons/svg/timber.svg'],\n    ['tracking', 'systems/hm3/images/icons/svg/tracking.svg'],\n    ['weaponcraft', 'systems/hm3/images/icons/svg/sword.svg'],\n    ['weatherlore', 'systems/hm3/images/icons/svg/weather.svg'],\n    ['woodcraft', 'systems/hm3/images/icons/svg/woodcraft.svg']\n];\n\nHM3.armorGearIcons = [\n    ['armorgear', 'systems/hm3/images/icons/svg/armor.svg'],\n    ['abdominal armor', 'systems/hm3/images/icons/svg/abdominal-armor.svg'],\n    ['armor vest', 'systems/hm3/images/icons/svg/armor-vest.svg'],\n    ['barbute', 'systems/hm3/images/icons/svg/barbute.svg'],\n    ['black knight helm', 'systems/hm3/images/icons/svg/black-knight-helm.svg'],\n    ['bracer', 'systems/hm3/images/icons/svg/bracer.svg'],\n    ['breastplate', 'systems/hm3/images/icons/svg/breastplate.svg'],\n    ['cap', 'systems/hm3/images/icons/svg/cap.svg'],\n    ['chainmail', 'systems/hm3/images/icons/svg/chain-mail.svg'],\n    ['chest armor', 'systems/hm3/images/icons/svg/chest-armor.svg'],\n    ['closed barbute', 'systems/hm3/images/icons/svg/closed-barbute.svg'],\n    ['crested helm', 'systems/hm3/images/icons/svg/crested-helm.svg'],\n    ['dorsal scales', 'systems/hm3/images/icons/svg/dorsal-scales.svg'],\n    ['elbow pad', 'systems/hm3/images/icons/svg/elbow-pad.svg'],\n    ['fish scales', 'systems/hm3/images/icons/svg/fish-scales.svg'],\n    ['gloves', 'systems/hm3/images/icons/svg/gloves.svg'],\n    ['greaves', 'systems/hm3/images/icons/svg/greaves.svg'],\n    ['guantlet', 'systems/hm3/images/icons/svg/gauntlet.svg'],\n    ['heavy helm', 'systems/hm3/images/icons/svg/heavy-helm.svg'],\n    ['helm', 'systems/hm3/images/icons/svg/helm.svg'],\n    ['hood', 'systems/hm3/images/icons/svg/hood.svg'],\n    ['knee pad', 'systems/hm3/images/icons/svg/knee-pad.svg'],\n    ['lamellar', 'systems/hm3/images/icons/svg/lamellar.svg'],\n    ['leather armor', 'systems/hm3/images/icons/svg/leather-armor.svg'],\n    ['leather boot', 'systems/hm3/images/icons/svg/leather-boot.svg'],\n    ['leather vest', 'systems/hm3/images/icons/svg/leather-vest.svg'],\n    ['leg armor', 'systems/hm3/images/icons/svg/leg-armor.svg'],\n    ['leggings', 'systems/hm3/images/icons/svg/leggings.svg'],\n    ['light helm', 'systems/hm3/images/icons/svg/light-helm.svg'],\n    ['mail shirt', 'systems/hm3/images/icons/svg/mail-shirt.svg'],\n    ['mailed fist', 'systems/hm3/images/icons/svg/mailed-fist.svg'],\n    ['metal skirt', 'systems/hm3/images/icons/svg/metal-skirt.svg'],\n    ['pauldrons', 'systems/hm3/images/icons/svg/pauldrons.svg'],\n    ['robe', 'systems/hm3/images/icons/svg/robe.svg'],\n    ['scale mail', 'systems/hm3/images/icons/svg/scale-mail.svg'],\n    ['scales', 'systems/hm3/images/icons/svg/scales.svg'],\n    ['shirt', 'systems/hm3/images/icons/svg/shirt.svg'],\n    ['shoe', 'systems/hm3/images/icons/svg/shoe.svg'],\n    ['shoulder scales', 'systems/hm3/images/icons/svg/shoulder-scales.svg'],\n    ['steeltoe boots', 'systems/hm3/images/icons/svg/steeltoe-boots.svg'],\n    ['trousers', 'systems/hm3/images/icons/svg/trousers.svg'],\n    ['tunic', 'systems/hm3/images/icons/svg/tunic.svg'],\n    ['visored helm', 'systems/hm3/images/icons/svg/visored-helm.svg']\n];\n\nHM3.miscGearIcons = [\n    ['miscgear', 'systems/hm3/images/icons/svg/miscgear.svg'],\n    ['coin', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['farthing', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['pence', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['pennies', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['penny', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['silver coins', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['silver pieces', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['silver pennies', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['silver penny', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['shilling', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['gold crown', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['gold piece', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['khuzan gold crown', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['khuzan crown', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['sack', 'systems/hm3/images/icons/svg/sack.svg'],\n    ['backpack', 'systems/hm3/images/icons/svg/sack.svg'],\n    ['pouch', 'systems/hm3/images/icons/svg/sack.svg'],\n    ['belt pouch', 'systems/hm3/images/icons/svg/sack.svg'],\n    ['torch', 'systems/hm3/images/icons/svg/torch.svg'],\n    ['candle', 'systems/hm3/images/icons/svg/candle.svg'],\n    ['pence', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['pence', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['pence', 'systems/hm3/images/icons/svg/coins.svg'],\n    ['helm', 'systems/hm3/images/icons/svg/helm.svg'],\n    ['steel helm', 'systems/hm3/images/icons/svg/helm.svg']\n];\n\nHM3.defaultItemIcons = new Map(\n    HM3.physicalSkillIcons\n        .concat(HM3.commSkillIcons)\n        .concat(HM3.combatSkillIcons)\n        .concat(HM3.weaponSkillIcons)\n        .concat(HM3.craftSkillIcons)\n        .concat(HM3.miscGearIcons)\n        .concat(HM3.armorGearIcons)\n        .concat(HM3.ritualIcons)\n        .concat(HM3.magicIcons)\n        .concat(HM3.psionicTalentIcons)\n);\n\nHM3.mentalConflictCombatTable = {\n    'mentalConflict': {\n        'cf:cf': {atkFatigue: 4, defFatigue: 4},\n        'mf:cf': {atkFatigue: 0, defFatigue: 1},\n        'ms:cf': {atkFatigue: 0, defFatigue: 3},\n        'cs:cf': {atkFatigue: 0, defFatigue: 4},\n\n        'cf:mf': {atkFatigue: 1, defFatigue: 0},\n        'mf:mf': {atkFatigue: 3, defFatigue: 3},\n        'ms:mf': {atkFatigue: 0, defFatigue: 2},\n        'cs:mf': {atkFatigue: 0, defFatigue: 3},\n\n        'cf:ms': {atkFatigue: 3, defFatigue: 0},\n        'mf:ms': {atkFatigue: 2, defFatigue: 0},\n        'ms:ms': {atkFatigue: 2, defFatigue: 2},\n        'cs:ms': {atkFatigue: 0, defFatigue: 1},\n\n        'cf:cs': {atkFatigue: 4, defFatigue: 0},\n        'mf:cs': {atkFatigue: 3, defFatigue: 0},\n        'ms:cs': {atkFatigue: 1, defFatigue: 0},\n        'cs:cs': {atkFatigue: 1, defFatigue: 1}\n    }\n};\n\nHM3.meleeCombatTable = {\n    'block': {\n        'cf:cf': {\n            atkFumble: true,\n            defFumble: true,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:cf': {\n            atkFumble: false,\n            defFumble: true,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 2,\n            defDice: 0\n        },\n        'cs:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 3,\n            defDice: 0\n        },\n\n        'cf:mf': {\n            atkFumble: true,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: true,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n        'cs:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 2,\n            defDice: 0\n        },\n\n        'cf:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: true,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'cs:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n\n        'cf:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'cs:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: true,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        }\n    },\n\n    'counterstrike': {\n        'cf:cf': {\n            atkFumble: true,\n            defFumble: true,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:cf': {\n            atkFumble: false,\n            defFumble: true,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 3,\n            defDice: 0\n        },\n        'cs:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 4,\n            defDice: 0\n        },\n\n        'cf:mf': {\n            atkFumble: true,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: true,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 2,\n            defDice: 0\n        },\n        'cs:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 3,\n            defDice: 0\n        },\n\n        'cf:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 2\n        },\n        'mf:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 1\n        },\n        'ms:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 1\n        },\n        'cs:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n\n        'cf:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 3\n        },\n        'mf:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 2\n        },\n        'ms:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 1\n        },\n        'cs:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 2,\n            defDice: 2\n        }\n    },\n\n    'dodge': {\n        'cf:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: true,\n            defStumble: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 2,\n            defDice: 0\n        },\n        'cs:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 3,\n            defDice: 0\n        },\n\n        'cf:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: true,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n        'cs:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 2,\n            defDice: 0\n        },\n\n        'cf:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        },\n        'cs:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n\n        'cf:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        },\n        'cs:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        }\n    },\n\n    'grapple': {\n        'cf:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: true,\n            defStumble: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 2,\n            defDice: 0\n        },\n        'cs:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 3,\n            defDice: 0\n        },\n\n        'cf:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: true,\n            defStumble: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n        'cs:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 2,\n            defDice: 0\n        },\n\n        'cf:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            defHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 2\n        },\n        'mf:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n        'cs:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n\n        'cf:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            defHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 3\n        },\n        'mf:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            defHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 2\n        },\n        'ms:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'cs:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        }\n    },\n\n    'ignore': {\n        'cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n        'ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 3,\n            defDice: 0\n        },\n        'cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 4,\n            defDice: 0\n        }\n    }\n};\n\nHM3.grappleCombatTable = {\n    'counterstrike': {\n        'cf:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 2,\n            defDice: 0\n        },\n        'cs:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 3,\n            defDice: 0\n        },\n\n        'cf:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 1\n        },\n        'mf:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n        'cs:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 2,\n            defDice: 0\n        },\n\n        'cf:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 2\n        },\n        'mf:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 1\n        },\n        'ms:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        },\n        'cs:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n\n        'cf:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 3\n        },\n        'mf:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 2\n        },\n        'ms:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 1\n        },\n        'cs:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        }\n    },\n\n    'dodge': {\n        'cf:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n        'cs:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 2,\n            defDice: 0\n        },\n\n        'cf:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: true,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n        'cs:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 2,\n            defDice: 0\n        },\n\n        'cf:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        },\n        'cs:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n\n        'cf:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'cs:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        }\n    },\n\n    'grapple': {\n        'cf:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n        'cs:cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 2,\n            defDice: 0\n        },\n\n        'cf:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: true,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: false,\n            block: false,\n            miss: true,\n            atkDice: 0,\n            defDice: 0\n        },\n        'ms:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n        'cs:mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 2,\n            defDice: 0\n        },\n\n        'cf:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            defHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 2\n        },\n        'mf:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            defHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 1\n        },\n        'ms:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            defHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'cs:ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n\n        'cf:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            defHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 3\n        },\n        'mf:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            defHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 2\n        },\n        'ms:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            defHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 1\n        },\n        'cs:cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            defHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        }\n    },\n\n    'ignore': {\n        'cf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            dta: true,\n            block: false,\n            miss: false,\n            atkDice: 0,\n            defDice: 0\n        },\n        'mf': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 1,\n            defDice: 0\n        },\n        'ms': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 2,\n            defDice: 0\n        },\n        'cs': {\n            atkFumble: false,\n            defFumble: false,\n            atkStumble: false,\n            defStumble: false,\n            atkHold: true,\n            dta: false,\n            block: false,\n            miss: false,\n            atkDice: 3,\n            defDice: 0\n        }\n    }\n};\n\nHM3.missileCombatTable = {\n    'block': {\n        'cf:cf': {wild: true, block: false, miss: false, atkDice: 0},\n        'mf:cf': {wild: false, block: false, miss: true, atkDice: 0},\n        'ms:cf': {wild: false, block: false, miss: false, atkDice: 2},\n        'cs:cf': {wild: false, block: false, miss: false, atkDice: 3},\n\n        'cf:mf': {wild: true, block: false, miss: false, atkDice: 0},\n        'mf:mf': {wild: false, block: false, miss: true, atkDice: 0},\n        'ms:mf': {wild: false, block: false, miss: false, atkDice: 1},\n        'cs:mf': {wild: false, block: false, miss: false, atkDice: 2},\n\n        'cf:ms': {wild: true, block: false, miss: false, atkDice: 0},\n        'mf:ms': {wild: false, block: false, miss: true, atkDice: 0},\n        'ms:ms': {wild: false, block: true, miss: false, atkDice: 0},\n        'cs:ms': {wild: false, block: false, miss: false, atkDice: 1},\n\n        'cf:cs': {wild: true, block: false, miss: false, atkDice: 0},\n        'mf:cs': {wild: false, block: false, miss: true, atkDice: 0},\n        'ms:cs': {wild: false, block: true, miss: false, atkDice: 0},\n        'cs:cs': {wild: false, block: true, miss: false, atkDice: 0}\n    },\n    'dodge': {\n        'cf:cf': {wild: true, block: false, miss: false, atkDice: 0},\n        'mf:cf': {wild: false, block: false, miss: true, atkDice: 0},\n        'ms:cf': {wild: false, block: false, miss: false, atkDice: 2},\n        'cs:cf': {wild: false, block: false, miss: false, atkDice: 3},\n\n        'cf:mf': {wild: true, block: false, miss: false, atkDice: 0},\n        'mf:mf': {wild: false, block: false, miss: true, atkDice: 0},\n        'ms:mf': {wild: false, block: false, miss: false, atkDice: 1},\n        'cs:mf': {wild: false, block: false, miss: false, atkDice: 2},\n\n        'cf:ms': {wild: true, block: false, miss: false, atkDice: 0},\n        'mf:ms': {wild: false, block: false, miss: true, atkDice: 0},\n        'ms:ms': {wild: false, block: false, miss: true, atkDice: 0},\n        'cs:ms': {wild: false, block: false, miss: false, atkDice: 1},\n\n        'cf:cs': {wild: true, block: false, miss: false, atkDice: 0},\n        'mf:cs': {wild: false, block: false, miss: true, atkDice: 0},\n        'ms:cs': {wild: false, block: false, miss: true, atkDice: 0},\n        'cs:cs': {wild: false, block: false, miss: true, atkDice: 0}\n    },\n    'ignore': {\n        'cf': {wild: true, block: false, miss: false, atkDice: 0},\n        'mf': {wild: false, block: false, miss: true, atkDice: 0},\n        'ms': {wild: false, block: false, miss: false, atkDice: 2},\n        'cs': {wild: false, block: false, miss: false, atkDice: 3}\n    }\n};\n\nHM3.treatmentTable = {\n    Blunt: [\n        {injury: 'Bruise', desc: 'Welts/Swelling', treatment: 'Compress', eml: 30, nt: 5, cf: 4, mf: 5, ms: 6, cs: 7},\n        {injury: 'Fracture', desc: 'Simple Fracture', treatment: 'Splint', eml: 20, nt: 4, cf: 3, mf: 4, ms: 5, cs: 6},\n        {\n            injury: 'Crush',\n            desc: 'Compound Fracture/Bleeder',\n            treatment: 'Surgery/Splint',\n            eml: 10,\n            nt: 3,\n            cf: 2,\n            mf: 3,\n            ms: 4,\n            cs: 5\n        }\n    ],\n    Edged: [\n        {\n            injury: 'Minor Cut/Tear',\n            desc: 'Cut/Gash 1-2\" long',\n            treatment: 'Clean & Dress',\n            eml: 30,\n            nt: 5,\n            cf: 4,\n            mf: 5,\n            ms: 6,\n            cs: 7\n        },\n        {\n            injury: 'Serious Cut/Tear',\n            desc: 'Cut/Gash 2-6\" long',\n            treatment: 'Surgery',\n            eml: 20,\n            nt: 4,\n            cf: 3,\n            mf: 4,\n            ms: 5,\n            cs: 6\n        },\n        {\n            injury: 'Grievous Cut/Tear',\n            desc: 'Cut/Gash over 6\" long/Bleeder',\n            treatment: 'Surgery',\n            eml: 10,\n            nt: 3,\n            cf: 2,\n            mf: 3,\n            ms: 4,\n            cs: 5\n        }\n    ],\n    Fire: [\n        {\n            injury: 'Minor Burn',\n            desc: '1st Degree Burn/Blisters',\n            treatment: 'Compress',\n            eml: 30,\n            nt: 5,\n            cf: 4,\n            mf: 5,\n            ms: 6,\n            cs: 7\n        },\n        {\n            injury: 'Serious Burn',\n            desc: '2nd Degree Burn/Open Wound',\n            treatment: 'Clean & Dress',\n            eml: 15,\n            nt: 3,\n            cf: 2,\n            mf: 3,\n            ms: 4,\n            cs: 5\n        },\n        {\n            injury: 'Grievous Burn',\n            desc: '3rd Degree Burn/Charred Skin',\n            treatment: 'Clean & Dress',\n            eml: 5,\n            nt: 2,\n            cf: 1,\n            mf: 2,\n            ms: 3,\n            cs: 4\n        }\n    ],\n    Frost: [\n        {\n            injury: 'Minor Frost',\n            desc: 'Chilled Flesh/Shivering',\n            treatment: 'Warming',\n            eml: 50,\n            nt: 5,\n            cf: 4,\n            mf: 5,\n            ms: 7,\n            cs: 7\n        },\n        {\n            injury: 'Serious Frost',\n            desc: '2nd Degree Frostbite',\n            treatment: 'Warming',\n            eml: 25,\n            nt: 4,\n            cf: 3,\n            mf: 4,\n            ms: 5,\n            cs: 7\n        },\n        {\n            injury: 'Grievous Frost',\n            desc: '3rd Degree Frostbite',\n            treatment: 'Amputate',\n            eml: 10,\n            nt: 0,\n            cf: 0,\n            mf: 0,\n            ms: 0,\n            cs: 0\n        }\n    ],\n    Piercing: [\n        {\n            injury: 'Minor Stab/Bite',\n            desc: 'Puncture 1\" deep',\n            treatment: 'Clean & Dress',\n            eml: 25,\n            nt: 5,\n            cf: 4,\n            mf: 5,\n            ms: 6,\n            cs: 7\n        },\n        {\n            injury: 'Serious Stab/Bite',\n            desc: 'Puncture 3\" deep',\n            treatment: 'Clean & Dress',\n            eml: 15,\n            nt: 4,\n            cf: 3,\n            mf: 4,\n            ms: 5,\n            cs: 6\n        },\n        {\n            injury: 'Grievous Stab/Bite',\n            desc: 'Deep Puncture/Bleeder',\n            treatment: 'Surgery',\n            eml: 5,\n            nt: 3,\n            cf: 2,\n            mf: 3,\n            ms: 4,\n            cs: 5\n        }\n    ]\n};\n\nHM3.actorLabels = {\n    character: 'Character',\n    creature: 'Creature',\n    container: 'Container'\n};\n\nHM3.itemLabels = {\n    skill: 'Skill',\n    spell: 'Spell',\n    invocation: 'Invocation',\n    psionic: 'Psionic',\n    weapongear: 'Melee Weapon',\n    containergear: 'Container',\n    missilegear: 'Missile Weapon',\n    armorgear: 'Armor',\n    miscgear: 'Misc. Gear',\n    injury: 'Injury',\n    armorlocation: 'Armor Location',\n    trait: 'Trait'\n};\n\nHM3.blindRolls = [\n    'Aura',\n    'Awareness',\n    'Eyesight',\n    'Hearing',\n    'Intrigue',\n    'Lockcraft',\n    'Mental Conflict',\n    'Runecraft',\n    'Smell',\n    'Stealth',\n    'Tarotry',\n    'Weatherlore'\n];\n\nHM3.esotericCombatItems = {\n    attack: ['Charm', 'Mental Bolt', 'Mental Conflict', 'Hex'],\n    defense: ['Mental Conflict', 'Negation']\n};\n\nHM3.arcanePowers = [\n    {\n        key: 'none',\n        label: 'None',\n        major: 0,\n        minor: true,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'anvil-pytama-1',\n        label: `Anvil of Pytama`,\n        lvl: 1,\n        major: -1,\n        minor: true,\n        validFor: ['armorgear']\n    },\n    {\n        key: 'anvil-pytama-2',\n        label: `Anvil of Pytama`,\n        lvl: 2,\n        major: -1,\n        minor: true,\n        validFor: ['armorgear']\n    },\n    {\n        key: 'focus-5',\n        label: `Focus`,\n        lvl: 5,\n        major: 3,\n        minor: true,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'focus-6',\n        label: `Focus`,\n        lvl: 6,\n        major: 3,\n        minor: true,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'focus-7',\n        label: `Focus`,\n        lvl: 7,\n        major: 3,\n        minor: true,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'focus-8',\n        label: `Focus`,\n        lvl: 8,\n        major: 3,\n        minor: true,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'fount-power-1',\n        label: `Fount of Power`,\n        legacy: true,\n        lvl: 1,\n        major: 3,\n        minor: true,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'fount-power-2',\n        label: `Fount of Power`,\n        legacy: true,\n        lvl: 2,\n        major: 3,\n        minor: true,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'jorum',\n        label: `Jorum`,\n        lvl: -1,\n        major: 3,\n        minor: true,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'power-daras',\n        label: `Power of Daras`,\n        legacy: true,\n        lvl: -1,\n        major: 3,\n        minor: false,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'resurge',\n        label: `Resurge`,\n        legacy: true,\n        lvl: -1,\n        major: 2,\n        minor: false,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'store-1',\n        label: `Store I`,\n        lvl: 1,\n        major: 1,\n        minor: false,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'store-2',\n        label: `Store II`,\n        lvl: 2,\n        major: 2,\n        minor: false,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'store-3',\n        label: `Store III`,\n        lvl: 3,\n        major: 3,\n        minor: false,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'store-4',\n        label: `Store IV`,\n        lvl: 4,\n        major: 4,\n        minor: false,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'swordbreaker-3',\n        label: `Swordbreaker`,\n        legacy: true,\n        lvl: 3,\n        major: 3,\n        minor: true,\n        validFor: ['weapongear'],\n        description: `An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d3 is added to the roll. `\n    },\n    {\n        key: 'swordbreaker-4',\n        label: `Swordbreaker`,\n        legacy: true,\n        lvl: 4,\n        major: 3,\n        minor: true,\n        validFor: ['weapongear'],\n        description: `An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d4 is added to the roll. `\n    },\n    {\n        key: 'swordbreaker-5',\n        label: `Swordbreaker`,\n        legacy: true,\n        lvl: 5,\n        major: 3,\n        minor: true,\n        validFor: ['weapongear'],\n        description: `An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d5 is added to the roll. `\n    },\n    {\n        key: 'swordbreaker-6',\n        label: `Swordbreaker`,\n        legacy: true,\n        lvl: 6,\n        major: 3,\n        minor: true,\n        validFor: ['weapongear'],\n        description: `An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d6 is added to the roll. `\n    },\n    {\n        key: 'swordbreaker-7',\n        label: `Swordbreaker`,\n        legacy: true,\n        lvl: 7,\n        major: 3,\n        minor: true,\n        validFor: ['weapongear'],\n        description: `An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d7 is added to the roll. `\n    },\n    {\n        key: 'swordbreaker-8',\n        label: `Swordbreaker`,\n        legacy: true,\n        lvl: 8,\n        major: 3,\n        minor: true,\n        validFor: ['weapongear'],\n        description: `An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d8 is added to the roll. `\n    },\n    {\n        key: 'swordbreaker-9',\n        label: `Swordbreaker`,\n        legacy: true,\n        lvl: 9,\n        major: 3,\n        minor: true,\n        validFor: ['weapongear'],\n        description: `An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d9 is added to the roll. `\n    },\n    {\n        key: 'swordbreaker-10',\n        label: `Swordbreaker`,\n        legacy: true,\n        lvl: 10,\n        major: 3,\n        minor: true,\n        validFor: ['weapongear'],\n        description: `An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d10 is added to the roll. `\n    },\n    {\n        key: 'talin-bane',\n        label: `Talin's Bane`,\n        description: ``,\n        legacy: true,\n        lvl: -1,\n        major: 1,\n        minor: false,\n        validFor: ['weapongear']\n    },\n    {key: 'talin-eye', label: `Talin's Eye`, minor: true, validFor: ['weapongear'], major: 1, lvl: -1, description: ``},\n    {\n        key: 'tempering-pytama-1',\n        label: `Tempering of Pytama`,\n        description: `<p>An enchantment to increase the Weapon Quality of a wholly metallic weapon. With success, WQ is increased by one (1). Tempering of Pytama cannot be combined with any other WQ-increasing spell, and cannot be laid more than once on the same weapon.</p>`,\n        lvl: 1,\n        major: -1,\n        minor: true,\n        validFor: ['weapongear']\n    },\n    {\n        key: 'tempering-pytama-2',\n        label: `Tempering of Pytama`,\n        lvl: 2,\n        major: -1,\n        minor: true,\n        validFor: ['weapongear'],\n        description: `<p>An enchantment to increase the Weapon Quality of a wholly metallic weapon. With success, WQ is increased by two (2). Tempering of Pytama cannot be combined with any other WQ-increasing spell, and cannot be laid more than once on the same weapon.</p>`\n    },\n    {\n        key: 'tharasin-ward-1',\n        label: `Tharasin's Ward`,\n        legacy: true,\n        lvl: 1,\n        major: -1,\n        minor: true,\n        validFor: ['armorgear']\n    },\n    {\n        key: 'tharasin-ward-2',\n        label: `Tharasin's Ward`,\n        legacy: true,\n        lvl: 2,\n        major: -1,\n        minor: true,\n        validFor: ['armorgear']\n    },\n    {\n        key: 'tharasin-ward-3',\n        label: `Tharasin's Ward`,\n        legacy: true,\n        lvl: 3,\n        major: -1,\n        minor: true,\n        validFor: ['armorgear']\n    },\n    {\n        key: 'tharasin-ward-4',\n        label: `Tharasin's Ward`,\n        legacy: true,\n        lvl: 4,\n        major: -1,\n        minor: true,\n        validFor: ['armorgear']\n    },\n    {\n        key: 'tharasin-ward-5',\n        label: `Tharasin's Ward`,\n        legacy: true,\n        lvl: 5,\n        major: -1,\n        minor: true,\n        validFor: ['armorgear']\n    },\n    {\n        key: 'tharasin-ward-6',\n        label: `Tharasin's Ward`,\n        legacy: true,\n        lvl: 6,\n        major: -1,\n        minor: true,\n        validFor: ['armorgear']\n    },\n    {\n        key: 'theris-charm-5',\n        label: `Theris' Charm`,\n        legacy: true,\n        lvl: 5,\n        major: 3,\n        minor: false,\n        validFor: ['weapongear'],\n        description: `The Charmed weapon gives its wielder a bonus in attack/defence equal to 5.`\n    },\n    {\n        key: 'theris-charm-6',\n        label: `Theris' Charm`,\n        legacy: true,\n        lvl: 6,\n        major: 3,\n        minor: false,\n        validFor: ['weapongear'],\n        description: `The Charmed weapon gives its wielder a bonus in attack/defence equal to 6.`\n    },\n    {\n        key: 'theris-charm-7',\n        label: `Theris' Charm`,\n        legacy: true,\n        lvl: 7,\n        major: 3,\n        minor: false,\n        validFor: ['weapongear'],\n        description: `The Charmed weapon gives its wielder a bonus in attack/defence equal to 7.`\n    },\n    {\n        key: 'theris-charm-8',\n        label: `Theris' Charm`,\n        description: `The Charmed weapon gives its wielder a bonus in attack/defence equal to 8.`,\n        legacy: true,\n        lvl: 8,\n        major: 3,\n        minor: false,\n        validFor: ['weapongear']\n    },\n    {\n        key: 'theris-charm-9',\n        label: `Theris' Charm`,\n        description: `The Charmed weapon gives its wielder a bonus in attack/defence equal to 9.`,\n        legacy: true,\n        lvl: 9,\n        major: 3,\n        minor: false,\n        validFor: ['weapongear']\n    },\n    {\n        key: 'theris-charm-10',\n        label: `Theris' Charm`,\n        description: `The Charmed weapon gives its wielder a bonus in attack/defence equal to 10.`,\n        legacy: true,\n        lvl: 10,\n        major: 3,\n        minor: false,\n        validFor: ['weapongear']\n    },\n    {\n        key: 'theris-charm-greater-5',\n        label: `Theris' Charm, Greater`,\n        legacy: true,\n        lvl: 10,\n        major: 4,\n        minor: false,\n        validFor: ['weapongear'],\n        description: `The Charmed weapon gives its wielder a bonus in attack/defence equal to 10.`\n    },\n    {\n        key: 'theris-charm-greater-6',\n        label: `Theris' Charm, Greater`,\n        legacy: true,\n        lvl: 12,\n        major: 4,\n        minor: false,\n        validFor: ['weapongear'],\n        description: `The Charmed weapon gives its wielder a bonus in attack/defence equal to 12.`\n    },\n    {\n        key: 'theris-charm-greater-7',\n        label: `Theris' Charm, Greater`,\n        legacy: true,\n        lvl: 14,\n        major: 4,\n        minor: false,\n        validFor: ['weapongear'],\n        description: `The Charmed weapon gives its wielder a bonus in attack/defence equal to 14.`\n    },\n    {\n        key: 'theris-charm-greater-8',\n        label: `Theris' Charm, Greater`,\n        legacy: true,\n        lvl: 16,\n        major: 4,\n        minor: false,\n        validFor: ['weapongear'],\n        description: `The Charmed weapon gives its wielder a bonus in attack/defence equal to 16.`\n    },\n    {\n        key: 'theris-charm-greater-9',\n        label: `Theris' Charm, Greater`,\n        legacy: true,\n        lvl: 18,\n        major: 4,\n        minor: false,\n        validFor: ['weapongear'],\n        description: `The Charmed weapon gives its wielder a bonus in attack/defence equal to 18.`\n    },\n    {\n        key: 'theris-charm-greater-10',\n        label: `Theris' Charm, Greater`,\n        description: `The Charmed weapon gives its wielder a bonus in attack/defence equal to 20.`,\n        legacy: true,\n        lvl: 20,\n        major: 4,\n        minor: false,\n        validFor: ['weapongear']\n    },\n    {\n        key: 'vessel-iladan-5',\n        label: `Vessel of Iladan`,\n        description: ``,\n        legacy: true,\n        lvl: 15,\n        major: 4,\n        minor: false,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'vessel-iladan-6',\n        label: `Vessel of Iladan`,\n        description: ``,\n        legacy: true,\n        lvl: 18,\n        major: 4,\n        minor: false,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'vessel-iladan-7',\n        label: `Vessel of Iladan`,\n        description: ``,\n        legacy: true,\n        lvl: 21,\n        major: 4,\n        minor: false,\n        validFor: ['weapongear', 'missilegear', 'armorgear', 'containergear', 'miscgear']\n    },\n    {\n        key: 'ward-akana',\n        label: `Ward of Akana`,\n        description: `A Warded weapon never has to make a weapon damage check except as a result of conflict with an enchanted weapon. (Whenever a weapon with Ward of Akana is forced make a Weapon Damage check, it rolls one less die than would an unwarded weapon.)`,\n        legacy: true,\n        lvl: -1,\n        major: 2,\n        minor: true,\n        validFor: ['weapongear']\n    }\n];\n","/**\r\n * Combat Action types enum.\r\n */\r\nexport const Action = Object.freeze({\r\n    CHARGE: 'Charge',\r\n    DISENGAGE: 'Disengage',\r\n    ENGAGE: 'Engage',\r\n    ESOTERIC_ATTACK: 'Esoteric Attack',\r\n    FREE_MOVE: 'Free Move',\r\n    GRAPPLE_ATTACK: 'Grapple Attack',\r\n    GROPE: 'Grope',\r\n    HALF_MOVE: 'Half Move',\r\n    MELEE_ATTACK: 'Melee Attack',\r\n    MISSILE_ATTACK: 'Missile Attack',\r\n    PASS: 'Pass',\r\n    REST: 'Rest',\r\n    RISE: 'Rise'\r\n});\r\n\r\n/**\r\n * Actor types enum.\r\n */\r\nexport const ActorType = Object.freeze({\r\n    CHARACTER: 'character',\r\n    CREATURE: 'creature',\r\n    CONTAINER: 'container'\r\n});\r\n\r\nexport const ArcanePower = Object.freeze({\r\n    ANVIL_PYTAMA: 'anvil-pytama',\r\n    FOCUS: 'focus',\r\n    FOUNT_POWER: 'fount-power',\r\n    JORUM: 'jorum',\r\n    POWER_DARAS: 'power-daras',\r\n    RESURGE: 'resurge',\r\n    STORE: 'store',\r\n    SWORDBREAKER: 'swordbreaker',\r\n    TALIN_BANE: 'talin-bane',\r\n    TALIN_EYE: 'talin-eye',\r\n    TEMPERING_PYTAMA: 'tempering-pytama',\r\n    THARASIN_WARD: 'tharasin-ward',\r\n    THERIS_CHARM: 'theris-charm',\r\n    THERIS_CHARM_GREATER: 'theris-charm-greater',\r\n    VESSEL_ILADAN: 'vessel-iladan',\r\n    WARD_AKANA: 'ward-akana'\r\n});\r\n\r\n/**\r\n * Aspect types enum.\r\n */\r\nexport const Aspect = Object.freeze({\r\n    BLUNT: 'Blunt',\r\n    EDGED: 'Edged',\r\n    FIRE: 'Fire',\r\n    FROST: 'Frost',\r\n    PIERCING: 'Piercing'\r\n});\r\n\r\nexport const CompanionType = Object.freeze({\r\n    ANIMAL: 'Animal',\r\n    CONNECTION: 'Connection',\r\n    FOE: 'Foe',\r\n    FOLLOWER: 'Follower',\r\n    FRIEND: 'Friend',\r\n    PARTY: 'Party',\r\n    STEED: 'Steed'\r\n});\r\n\r\n/**\r\n * Condition types enum. A Condition is just a special type of Active Effect.\r\n */\r\nexport const Condition = Object.freeze({\r\n    /**@constant {string} - This is a special state of battle frenzy. Any character who enters this mode must take the most\r\n     * aggressive action available for Attack or Defense, adding 20 to EML to Attack or Counterstrike.\r\n     * Further Initiative rolls are ignored until the battle ends. (COMBAT 16) */\r\n    BERSERK: 'Berserk',\r\n\r\n    /**@constant {string} - EYE to 0. COMBAT, CRAFT, MAGIC & PHYSICAL skills to 05. */\r\n    BLINDED: 'Blinded',\r\n\r\n    /**@constant {string} - The character is unable to fight in any useful way. The only available options are flight or\r\n     * surrender. Flight is normally preferable; surrender is a last resort. If neither is feasible, the character makes\r\n     * a Rest or Pass action option, but can defend if attacked except that Counterstrike is prohibited. (COMBAT 16) */\r\n    BROKEN: 'Broken',\r\n\r\n    /**@constant {string} - A cautious character will not Engage, must choose Pass if engaged, and cannot select the\r\n     * Counterstrike defense. (COMBAT 16) */\r\n    CAUTIOUS: 'Cautious',\r\n\r\n    /**@constant {string} - TODO */\r\n    CLOSE_MODE: 'Close Mode',\r\n\r\n    /**@constant {string} - HRG to 0. */\r\n    DEAFENED: 'Deafened',\r\n\r\n    /**@constant {string} - Character tries to conclude the battle, one way or the other, as soon as possible. Until\r\n     * the situation changes and a new Initiative Test is passed, the character selects the most aggressive option\r\n     * available. (COMBAT 16) */\r\n    DESPERATE: 'Desperate',\r\n\r\n    DISTRACTED: 'Distracted',\r\n\r\n    /**@constant {string} - TODO */\r\n    DYING: 'Dying',\r\n\r\n    /**@constant {string} - Character selects and executes any Action Option, with a +10 bonus to EML. If the character’s\r\n     * current morale state is non-normal, it returns to normal. (COMBAT 16) */\r\n    EMPOWERED: 'Empowered',\r\n\r\n    /**@constant {string} - MOV to 0. Only GRAPPLE_ATTACK or PASS actions. Only GRAPPLE or IGNORE defenses. */\r\n    GRAPPLED: 'Grappled',\r\n\r\n    /**@constant {string} - No shock rolls, need IL equal to END to 'die'. */\r\n    INANIMATE: 'Inanimate',\r\n\r\n    /**@constant {string} - NO skills, spells & psionics. Only MOVE, PASS or REST actions. Only IGNORE defenses. */\r\n    INCAPACITATED: 'Incapacitated',\r\n\r\n    /**@constant {string} - TODO */\r\n    NO_FUMBLE: 'No Fumble',\r\n\r\n    /**@constant {string} - TODO */\r\n    NO_OUTNUMBERED: 'No Outnumbered',\r\n\r\n    /**@constant {string} - TODO */\r\n    NO_STUMBLE: 'No Stumble',\r\n\r\n    /**@constant {string} - TODO */\r\n    OUTNUMBERED: 'Outnumbered',\r\n\r\n    /**@constant {string} - MOV to 0. +20 EML for all engaged enemies. Only PASS or RISE actions. */\r\n    PRONE: 'Prone',\r\n\r\n    /**@constant {string} - TODO */\r\n    SECONDARY_HAND: 'Secondary Hand',\r\n\r\n    /**@constant {string} - NO skills, spells & psionics. Only HALF_MOVE, PASS or REST actions. Only IGNORE defenses. */\r\n    SHOCKED: 'Shocked',\r\n\r\n    /**@constant {string} - Incapacitated plus MOV to 0. */\r\n    STUNNED: 'Stunned',\r\n\r\n    /**@constant {string} - MOV to 0. NO skills, spells & psionics. Only PASS actions. Only IGNORE defenses. Plus PRONE. */\r\n    UNCONSCIOUS: 'Unconscious',\r\n\r\n    /**@constant {string} - TODO */\r\n    WEAKENED: 'Weakened'\r\n});\r\n\r\n/**\r\n * Hook types enum.\r\n */\r\nexport const Hook = Object.freeze({\r\n    /**\r\n     * @constant {string} Is triggered when a 1d100 ability roll has been executed.\r\n     * @param actor       The actor who owns the ability.\r\n     * @param roll        The roll information.\r\n     * @param rollData    Additional data required for this roll.\r\n     */\r\n    ON_ABILITY_ROLL_D100: 'hm3.onAbilityRollD100',\r\n    /**\r\n     * @constant {string} Is triggered when a 1d6 ability roll has been executed.\r\n     * @param actor       The actor who owns the ability.\r\n     * @param roll        The roll information.\r\n     * @param rollData    Additional data required for this roll.\r\n     */\r\n    ON_ABILITY_ROLL_D6: 'hm3.onAbilityRollD6',\r\n    ON_ACTOR_PREPARE_BASE_DATA: 'hm3.onActorPrepareBaseData',\r\n    ON_ACTOR_PREPARE_DERIVED_DATA: 'hm3.onActorPrepareDerivedData',\r\n    ON_BLOCK_RESUME: 'hm3.onBlockResume',\r\n    ON_DAMAGE_ROLL: 'hm3.onDamageRoll',\r\n    ON_DODGE_RESUME: 'hm3.onDodgeResume',\r\n    ON_DODGE_ROLL: 'hm3.onDodgeRoll',\r\n    ON_FUMBLE_ROLL: 'hm3.onFumbleRoll',\r\n    ON_HEALING_ROLL: 'hm3.onHealingRoll',\r\n    ON_IGNORE_RESUME: 'hm3.onIgnoreResume',\r\n    /**\r\n     * @constant {string} Is triggered when an injury roll has been executed.\r\n     * @param actor       The actor who owns the ability.\r\n     * @param roll        The roll information.\r\n     * @param rollData    Additional data required for this roll.\r\n     */\r\n    ON_INJURY_ROLL: 'hm3.onInjuryRoll',\r\n    ON_INVOCATION_ROLL: 'hm3.onInvocationRoll',\r\n    ON_item_PREPARE_DATA: 'hm3.onItemPrepareData',\r\n    ON_MELEE_ATTACK: 'hm3.onMeleeAttack',\r\n    ON_MELEE_COUNTERSTRIKE_RESUME: 'hm3.onMeleeCounterstrikeResume',\r\n    ON_MISSILE_ATTACK_ROLL: 'hm3.onMissileAttackRoll',\r\n    ON_MISSILE_ATTACK: 'hm3.onMissileAttack',\r\n    ON_MISSILE_DAMAGE_ROLL: 'hm3.onMissileDamageRoll',\r\n    ON_PSIONICS_ROLL: 'hm3.onPsionicsRoll',\r\n    ON_SHOCK_ROLL: 'hm3.onShockRoll',\r\n    ON_SKILL_ROLL: 'hm3.onSkillRoll',\r\n    ON_SPELL_ROLL: 'hm3.onSpellRoll',\r\n    ON_STUMBLE_ROLL: 'hm3.onStumbleRoll',\r\n    ON_WEAPON_ATTACK_ROLL: 'hm3.onWeaponAttackRoll',\r\n    ON_WEAPON_DEFEND_ROLL: 'hm3.onWeaponDefendRoll',\r\n\r\n    /**\r\n     * @constant {string} Is triggered before a 1d100 ability roll is executed.\r\n     */\r\n    PRE_ABILITY_ROLL_D100: 'hm3.preAbilityRollD100',\r\n    /**\r\n     * @constant {string} Is triggered before a 1d6 ability roll is executed.\r\n     */\r\n    PRE_ABILITY_ROLL_D6: 'hm3.preAbilityRollD6',\r\n    PRE_BLOCK_RESUME: 'hm3.preBlockResume',\r\n    PRE_DAMAGE_ROLL: 'hm3.preDamageRoll',\r\n    PRE_DODGE_RESUME: 'hm3.preDodgeResume',\r\n    PRE_DODGE_ROLL: 'hm3.preDodgeRoll',\r\n    PRE_FUMBLE_ROLL: 'hm3.preFumbleRoll',\r\n    PRE_HEALING_ROLL: 'hm3.preHealingRoll',\r\n    PRE_IGNORE_RESUME: 'hm3.preIgnoreResume',\r\n    /**\r\n     * @constant {string} Is triggered before an injury roll is executed.\r\n     */\r\n    PRE_INJURY_ROLL: 'hm3.preInjuryRoll',\r\n    PRE_INVOCATION_ROLL: 'hm3.preInvocationRoll',\r\n    PRE_MELEE_ATTACK: 'hm3.preMeleeAttack',\r\n    PRE_MELEE_COUNTERSTRIKE_RESUME: 'hm3.preMeleeCounterstrikeResume',\r\n    PRE_MISSILE_ATTACK_ROLL: 'hm3.preMissileAttackRoll',\r\n    PRE_MISSILE_ATTACK: 'hm3.preMissileAttack',\r\n    PRE_MISSILE_DAMAGE_ROLL: 'hm3.preMissileDamageRoll',\r\n    PRE_PSIONICS_ROLL: 'hm3.prePsionicsRoll',\r\n    PRE_SHOCK_ROLL: 'hm3.preShockRoll',\r\n    PRE_SKILL_ROLL: 'hm3.preSkillRoll',\r\n    PRE_SPELL_ROLL: 'hm3.preSpellRoll',\r\n    PRE_STUMBLE_ROLL: 'hm3.preStumbleRoll',\r\n    PRE_WEAPON_ATTACK_ROLL: 'hm3.preWeaponAttackRoll',\r\n    PRE_WEAPON_DEFEND_ROLL: 'hm3.preWeaponDefendRoll'\r\n});\r\n\r\nexport const InjuryType = Object.freeze({\r\n    BLOODLOSS: 'bloodloss',\r\n    DISEASE: 'disease',\r\n    HEALING: 'healing',\r\n    INFECTION: 'infection',\r\n    POISON: 'poison',\r\n    SHOCK: 'shock',\r\n    TOXIN: 'toxin'\r\n});\r\n\r\n/**\r\n * Item types enum.\r\n */\r\nexport const ItemType = Object.freeze({\r\n    ARMORGEAR: 'armorgear',\r\n    ARMORLOCATION: 'armorlocation',\r\n    COMPANION: 'companion',\r\n    CONTAINERGEAR: 'containergear',\r\n    EFFECT: 'effectgear',\r\n    INJURY: 'injury',\r\n    INVOCATION: 'invocation',\r\n    MISCGEAR: 'miscgear',\r\n    MISSILEGEAR: 'missilegear',\r\n    PSIONIC: 'psionic',\r\n    SKILL: 'skill',\r\n    SPELL: 'spell',\r\n    TRAIT: 'trait',\r\n    WEAPONGEAR: 'weapongear'\r\n});\r\n\r\n/**\r\n * Location types enum.\r\n */\r\nexport const Location = Object.freeze({\r\n    ABDOMEN: 'Abdomen',\r\n    CALF: 'Calf',\r\n    CUSTOM: 'Custom',\r\n    ELBOW: 'Elbow',\r\n    FACE: 'Face',\r\n    FOOT: 'Foot',\r\n    FOREARM: 'Forearm',\r\n    GROIN: 'Groin',\r\n    HAND: 'Hand',\r\n    HIP: 'Hip',\r\n    KNEE: 'Knee',\r\n    NECK: 'Neck',\r\n    SHOULDER: 'Shoulder',\r\n    SKULL: 'Skull',\r\n    TAIL: 'Tail',\r\n    TENTACLE: 'Tentacle',\r\n    THIGH: 'Thigh',\r\n    THORAX: 'Thorax',\r\n    UPPER_ARM: 'Upper Arm',\r\n    WING: 'Wing'\r\n});\r\n\r\nexport const MiscItemType = Object.freeze({\r\n    COIN: 'Coin',\r\n    GEM: 'Gem',\r\n    HERB: 'Herb',\r\n    JEWELRY: 'Jewelry',\r\n    MISC: 'Misc',\r\n    POTION: 'Potion',\r\n    RIDER: 'Rider',\r\n    WRITTEN: 'Written'\r\n});\r\n\r\n/**\r\n * Range types enum.\r\n */\r\nexport const Range = Object.freeze({\r\n    EXTREME: 'Extreme',\r\n    LONG: 'Long',\r\n    MEDIUM: 'Medium',\r\n    SHORT: 'Short'\r\n});\r\n\r\n/**\r\n * Skill types enum.\r\n */\r\nexport const SkillType = Object.freeze({\r\n    COMBAT: 'Combat',\r\n    COMMUNICATION: 'Communication',\r\n    CRAFT: 'Craft',\r\n    MAGIC: 'Magic',\r\n    PHYSICAL: 'Physical',\r\n    RITUAL: 'Ritual'\r\n});\r\n","import {HM3} from './config.js';\nimport {ItemType} from './hm3-types.js';\n\n/**\n * Determines whether the Skill Base Formula is valid. We perform that\n * validation here so even a skill not associated with a particular\n * actor can have its formula validated.\n *\n * A valid SB formula looks like this:\n *\n *   \"@str, @int, @sta, hirin:2, ahnu, 5\"\n *\n * meaning\n *   average STR, INT, and STA\n *   add 2 if sunsign hirin (modifier after colon \":\")\n *   add 1 if sunsign ahnu (1 since no modifier specified)\n *   add 5 to result\n *\n * A valid formula must have exactly 3 abilities, everything else is optional.\n *\n * The result of this function is to set the \"isFormulaValid\" value appropriately.\n *\n * @param {Object} item\n */\nexport function calcSkillBase(item) {\n    const sb = item.system.skillBase;\n\n    sb.delta = 0;\n    sb.isFormulaValid = true;\n    if (sb.formula === '') {\n        // If the formula is blank, its valid,\n        // don't touch the existing value.\n        return;\n    }\n\n    let actorData = null;\n    if (item.actor?.system) {\n        actorData = item.actor.system;\n    }\n\n    let numAbilities = 0;\n    let sumBaseAbilities = 0;\n    let sumModifiedAbilities = 0;\n    let ssBonus = Number.MIN_SAFE_INTEGER;\n    let modifier = 0;\n    let resultSB = 0;\n\n    // All parts of the formula are separated by commas,\n    // and we lowercase here since the string is processed\n    // case-insensitive.\n    const sbParts = sb.formula.toLowerCase().split(',');\n\n    // Formula must have at least three abilities, and therefore\n    // we must have at least three parts, otherwise it is invalid\n    if (sbParts.length < 3) {\n        sb.isFormulaValid = false;\n    } else {\n        for (let param of sbParts) {\n            if (!sb.isFormulaValid) break;\n\n            param = param.trim();\n            if (param != '') {\n                if (param.startsWith('@')) {\n                    // This is a reference to an ability\n\n                    // Must have more than just the '@' sign\n                    if (param.length === 1) {\n                        sb.isFormulaValid = false;\n                        break;\n                    }\n\n                    // There may only be 3 abilities\n                    if (numAbilities >= 3) {\n                        sb.isFormulaValid = false;\n                        break;\n                    }\n\n                    if (actorData) {\n                        const paramName = param.slice(1);\n                        switch (paramName) {\n                            case 'str':\n                                sumBaseAbilities += actorData.abilities.strength.base;\n                                sumModifiedAbilities += actorData.abilities.strength.modified;\n                                break;\n\n                            case 'sta':\n                                sumBaseAbilities += actorData.abilities.stamina.base;\n                                sumModifiedAbilities += actorData.abilities.stamina.modified;\n                                break;\n\n                            case 'dex':\n                                sumBaseAbilities += actorData.abilities.dexterity.base;\n                                sumModifiedAbilities += actorData.abilities.dexterity.modified;\n                                break;\n\n                            case 'agl':\n                                sumBaseAbilities += actorData.abilities.agility.base;\n                                sumModifiedAbilities += actorData.abilities.agility.modified;\n                                break;\n\n                            case 'int':\n                                sumBaseAbilities += actorData.abilities.intelligence.base;\n                                sumModifiedAbilities += actorData.abilities.intelligence.modified;\n                                break;\n\n                            case 'aur':\n                                sumBaseAbilities += actorData.abilities.aura.base;\n                                sumModifiedAbilities += actorData.abilities.aura.modified;\n                                break;\n\n                            case 'wil':\n                                sumBaseAbilities += actorData.abilities.will.base;\n                                sumModifiedAbilities += actorData.abilities.will.modified;\n                                break;\n\n                            case 'eye':\n                                sumBaseAbilities += actorData.abilities.eyesight.base;\n                                sumModifiedAbilities += actorData.abilities.eyesight.modified;\n                                break;\n\n                            case 'hrg':\n                                sumBaseAbilities += actorData.abilities.hearing.base;\n                                sumModifiedAbilities += actorData.abilities.hearing.modified;\n                                break;\n\n                            case 'sml':\n                                sumBaseAbilities += actorData.abilities.smell.base;\n                                sumModifiedAbilities += actorData.abilities.smell.modified;\n                                break;\n\n                            case 'voi':\n                                sumBaseAbilities += actorData.abilities.voice.base;\n                                sumModifiedAbilities += actorData.abilities.voice.modified;\n                                break;\n\n                            case 'cml':\n                                sumBaseAbilities += actorData.abilities.comeliness.base;\n                                sumModifiedAbilities += actorData.abilities.comeliness.modified;\n                                break;\n\n                            case 'mor':\n                                sumBaseAbilities += actorData.abilities.morality.base;\n                                sumModifiedAbilities += actorData.abilities.morality.modified;\n                                break;\n\n                            case 'end':\n                                sumBaseAbilities += actorData.abilities.endurance.base;\n                                sumModifiedAbilities += actorData.abilities.endurance.modified;\n                                break;\n\n                            case 'spd':\n                                sumBaseAbilities += actorData.abilities.speed.base;\n                                sumModifiedAbilities += actorData.abilities.speed.modified;\n                                break;\n\n                            default:\n                                sb.isFormulaValid = false;\n                                return;\n                        }\n                    }\n\n                    numAbilities++;\n                    continue;\n                }\n\n                if (param.match(/^[a-z]/)) {\n                    // This is a sunsign\n\n                    let ssParts = param.split(':');\n\n                    // if more than 2 parts, it's invalid\n                    if (ssParts.length > 2) {\n                        sb.isFormulaValid = false;\n                        break;\n                    }\n\n                    // if second part provided, must be a number\n                    if (ssParts.length === 2 && !ssParts[1].trim().match(/[-+]?\\d+/)) {\n                        sb.isFormulaValid = false;\n                        break;\n                    }\n\n                    if (actorData) {\n                        // we must get the actor's sunsign to see if it matches. Actors may\n                        // specify the sunsign as a dual sunsign, in which case the two parts\n                        // must be separated either by a dash or a forward slash\n                        let actorSS = actorData.sunsign.trim().toLowerCase().split(/[-\\/]/);\n\n                        // Call 'trim' function on all strings in actorSS\n                        actorSS.map(Function.prototype.call, String.prototype.trim);\n\n                        // Now, check whether our sunsign matches any of the actor's sunsigns\n                        if (actorSS.includes(ssParts[0])) {\n                            // We matched a character's sunsign, apply modifier\n                            // Character only gets the largest sunsign bonus\n                            ssBonus = Math.max(ssParts.length === 2 ? Number(ssParts[1].trim()) : 1, ssBonus);\n                        }\n                    }\n\n                    continue;\n                }\n\n                // The only valid possibility left is a number.\n                // If it's not a number, it's invalid.\n                if (param.match(/^[-+]?\\d+$/)) {\n                    modifier += Number(param);\n                } else {\n                    sb.isFormulaValid = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    if (numAbilities != 3) {\n        sb.isFormulaValid = false;\n    }\n\n    if (actorData) {\n        if (sb.isFormulaValid) {\n            ssBonus = ssBonus > Number.MIN_SAFE_INTEGER ? ssBonus : 0;\n            sb.value = Math.round(sumModifiedAbilities / 3 + Number.EPSILON) + ssBonus + modifier;\n            if (sumBaseAbilities !== sumModifiedAbilities) {\n                // typically the effective master level is increased/reduced by 5 for one attribute change\n                // sb.delta = sumModifiedAbilities / 3 - sumBaseAbilities / 3;\n                sb.delta = sumModifiedAbilities - sumBaseAbilities;\n            }\n        }\n    }\n}\n\nexport function createUniqueName(prefix, itemTypes) {\n    let incr = 0;\n    itemTypes.forEach((it) => {\n        if (prefix === it.name) {\n            // Name was found, so minimum next increment will be 1\n            incr = Math.max(1, incr);\n        } else {\n            const match = it.name.match(`${prefix}-(\\\\d+)`);\n            if (match) {\n                // Found an existing increment, so increase it by 1\n                // as the new candidate; keep it only if it is greater than\n                // the max increment we have found so far.\n                const newIncr = Number(match[1]) + 1;\n                incr = Math.max(newIncr, incr);\n            }\n        }\n    });\n\n    return incr ? `${prefix}-${incr}` : prefix;\n}\n/**\n * Returns the path to the appropriate image name for the specified\n * item name\n *\n * @param {String} name\n */\nexport function getImagePath(name) {\n    if (!name) return null;\n\n    const lcName = name.toLowerCase();\n    const re = /\\(([^\\)]+)\\)/;\n\n    for (let key of HM3.defaultItemIcons.keys()) {\n        // if there is a direct match, this is best and return match\n        if (lcName === key) {\n            return HM3.defaultItemIcons.get(key);\n        }\n\n        // If there is a value in parenthesis, and there is a match,\n        // then use that (this is for detailed-skills); e.g.\n        //           Broadsword (Sword)     <== will match sword\n        //           Keltan (Dagger)        <== will match dagger\n        const match = re.exec(lcName);\n        if (match) {\n            if (key === match[1]) {\n                return HM3.defaultItemIcons.get(key);\n            }\n        }\n\n        // If all else fails, if the name starts with an existing key,\n        // use that.  For example:\n        //       Language: Harnic     <== will match \"language\"\n        if (lcName.startsWith(key)) {\n            return HM3.defaultItemIcons.get(key);\n        }\n    }\n\n    return null;\n}\n\nexport function getAssocSkill(name, skillsItemArray, defaultSkill) {\n    if (!name || !skillsItemArray || !skillsItemArray.length) return defaultSkill;\n\n    const skills = skillsItemArray.map((s) => s.data.name);\n\n    const lcName = name.toLowerCase();\n    const re = /\\[([^\\)]+)\\]/i;\n\n    // Exact Match\n    let skillMatch = skills.find((s) => s.toLowerCase() === lcName);\n    if (skillMatch) return skillMatch;\n\n    // Sub-skill match (sub-skill is in square brackets)\n    let subSkillMatch = re.exec(name);\n    if (subSkillMatch) {\n        const lcSubSkill = subSkillMatch[1].toLowerCase();\n        skillMatch = skills.find((s) => s.toLowerCase() === lcSubSkill);\n        if (skillMatch) return skillMatch;\n    }\n\n    return defaultSkill;\n}\n\n/**\n * String replacer function that applies the `text` string replacement\n * mechansim to an arbitrary string (named \"template\" here)\n * @param {String} template String containing ${} replacements\n * @param {Object} values An object containing replacement key/value pairs\n */\nexport function stringReplacer(template, values) {\n    var keys = Object.keys(values);\n    var func = Function(...keys, 'return `' + template + '`;');\n\n    return func(...keys.map((k) => values[k]));\n}\n\n/**\n * Convert an integer into a roman numeral.  Taken from:\n * http://blog.stevenlevithan.com/archives/javascript-roman-numeral-converter\n *\n * @param {Integer} num\n */\nexport function romanize(num) {\n    if (isNaN(num)) return NaN;\n    var digits = String(+num).split(''),\n        key = [\n            '',\n            'C',\n            'CC',\n            'CCC',\n            'CD',\n            'D',\n            'DC',\n            'DCC',\n            'DCCC',\n            'CM',\n            '',\n            'X',\n            'XX',\n            'XXX',\n            'XL',\n            'L',\n            'LX',\n            'LXX',\n            'LXXX',\n            'XC',\n            '',\n            'I',\n            'II',\n            'III',\n            'IV',\n            'V',\n            'VI',\n            'VII',\n            'VIII',\n            'IX'\n        ],\n        roman = '',\n        i = 3;\n    while (i--) roman = (key[+digits.pop() + i * 10] || '') + roman;\n    return Array(+digits.join('') + 1).join('M') + roman;\n}\n\nexport function aeDuration(effect) {\n    const d = effect.duration;\n\n    // Time-based duration\n    if (Number.isNumeric(d.seconds)) {\n        const isIndefinite = d.label === 'Indefinite';\n        const isPermanent = d.label === 'Permanent';\n        const start = d.startTime || game.time.worldTime;\n        const elapsed = game.time.worldTime - start;\n        const remaining = elapsed < 0 ? d.seconds : Math.max(d.seconds - elapsed, 0);\n        //const normDuration = toNormTime(d.seconds);\n        const normRemaining = isIndefinite ? 'Indefinite' : toNormTime(remaining);\n        let startLabel = toNormTime(-elapsed);\n        if (effect.system.status !== 'Pending') startLabel = effect.system.status;\n\n        return {\n            duration: d.seconds,\n            label: normRemaining,\n            remaining,\n            start,\n            startLabel,\n            type: 'seconds'\n        };\n    }\n\n    // Turn-based duration\n    else if (d.rounds || d.turns) {\n        // Determine the current combat duration\n        const cbt = game.combat;\n        const c = {round: cbt?.round ?? 0, turn: cbt?.turn ?? 0, nTurns: cbt?.turns.length ?? 1};\n\n        // Determine how many rounds and turns have elapsed\n        let elapsedRounds = Math.max(c.round - (d.startRound || 0), 0);\n        let elapsedTurns = c.turn - (d.startTurn || 0);\n        if (elapsedTurns < 0) {\n            elapsedRounds -= 1;\n            elapsedTurns += c.nTurns;\n        }\n\n        // Compute the number of rounds and turns that are remaining\n        let remainingRounds = (d.rounds || 0) - elapsedRounds;\n        let remainingTurns = (d.turns || 0) - elapsedTurns;\n        if (remainingTurns < 0) {\n            remainingRounds -= 1;\n            remainingTurns += c.nTurns;\n        } else if (remainingTurns > c.nTurns) {\n            remainingRounds += Math.floor(remainingTurns / c.nTurns);\n            remainingTurns %= c.nTurns;\n        }\n\n        // Total remaining duration\n        if (remainingRounds < 0) {\n            remainingRounds = 0;\n            remainingTurns = 0;\n        }\n        const duration = (c.rounds || 0) + (c.turns || 0) / 100;\n        const remaining = remainingRounds + remainingTurns / 100;\n\n        // Remaining label\n        const label = [\n            remainingRounds > 0 ? `${remainingRounds} Rounds` : null,\n            remainingTurns > 0 ? `${remainingTurns} Turns` : null,\n            remainingRounds + remainingTurns === 0 ? 'None' : null\n        ].filterJoin(', ');\n\n        const startLabel = 'Running';\n\n        return {\n            duration,\n            label,\n            remaining,\n            startLabel,\n            type: 'turns'\n        };\n    }\n\n    // No duration\n    else\n        return {\n            type: 'none',\n            duration: null,\n            remaining: null,\n            label: 'None'\n        };\n}\n\nexport function aeChanges(effect) {\n    if (!effect.changes || !effect.changes.length) {\n        return 'No Changes';\n    }\n\n    return effect.changes\n        .map((ch) => {\n            const modes = CONST.ACTIVE_EFFECT_MODES;\n            const key = ch.key;\n            let val = 0;\n            let prefix = '';\n            const parts = parseAEValue(ch.value);\n            if (parts.length === 2) {\n                val = truncate(Number.parseFloat(parts[1])) || 0;\n                const itemName = parts[0];\n                switch (key) {\n                    // case 'system.eph.itemEMLMod':\n                    case 'system.v2.skillEMLMod':\n                        prefix = `${itemName} EML`;\n                        break;\n\n                    // case 'system.eph.itemAMLMod':\n                    case 'system.v2.itemAMLMod':\n                        prefix = `${itemName} AML`;\n                        break;\n\n                    // case 'system.eph.itemDMLMod':\n                    case 'system.v2.itemDMLMod':\n                        prefix = `${itemName} DML`;\n                        break;\n                }\n            } else {\n                val = ch.value;\n                // prefix = HM3.activeEffectKey[key];\n                prefix = HM3.activeEffectKeyV2[key];\n            }\n            switch (ch.mode) {\n                case modes.ADD:\n                    return `${prefix} ${val < 0 ? '-' : '+'} ${Math.abs(val)}`;\n                case modes.MULTIPLY:\n                    return `${prefix} x ${val}`;\n                case modes.OVERRIDE:\n                    return `${prefix} = ${val}`;\n                case modes.UPGRADE:\n                    return `${prefix} >= ${val}`;\n                case modes.DOWNGRADE:\n                    return `${prefix} <= ${val}`;\n                default:\n                    return `${prefix} custom`;\n            }\n        })\n        .join(', ')\n        .replace('Fatigue Penalty', 'FP')\n        .replace('Injury Penalty', 'IP')\n        .replace('Endurance', 'END')\n        .replace('Strength', 'STR')\n        .replace('Stamina', 'STA')\n        .replace('Dexterity', 'DEX')\n        .replace('Agility', 'AGL');\n}\n\nfunction toNormTime(seconds) {\n    if (seconds === Number.MAX_SAFE_INTEGER) return 'None';\n    const normHours = Math.floor(seconds / 3600);\n    const remSeconds = seconds % 3600;\n    const normMinutes = Number(Math.floor(remSeconds / 60))\n        .toString()\n        .padStart(2, '0');\n    const normSeconds = Number(remSeconds % 60)\n        .toString()\n        .padStart(2, '0');\n    return `${normHours}:${normMinutes}:${normSeconds}`;\n}\n\nexport function executeMacroScript(macro, {actor, token, rollResult, rollData, item} = {}) {\n    let speaker = null;\n    if (!actor) {\n        if (!token) {\n            speaker = ChatMessage.getSpeaker();\n            actor = game.actors.get(speaker.actor);\n            token = actor.isToken ? actor.token : null;\n        } else {\n            actor = token.actor;\n            speaker = ChatMessage.getSpeaker({token: token.document});\n        }\n    }\n\n    speaker = speaker || ChatMessage.getSpeaker({actor: actor});\n\n    token = actor.isToken && !token ? actor.token : token;\n    token = token || (canvas.ready ? canvas.tokens.get(speaker.token) : null);\n\n    const context = {\n        speaker: speaker,\n        actor: actor,\n        token: token,\n        character: game.user.character,\n        rollResult: rollResult,\n        scene: canvas.scene\n    };\n\n    if (rollData) context.rollData = rollData;\n    if (item) context.item = item;\n\n    // Attempt script execution\n    const asyncFunction = macro.command.includes('await') ? 'async' : '';\n    const itemParam = item ? ', item' : '';\n    const rollDataParam = rollData ? ', rollData' : '';\n    let result = null;\n    try {\n        result = new Function(`\"use strict\";\n            return (${asyncFunction} function ({speaker, actor, token, character, rollResult ${itemParam} ${rollDataParam}}={}) {\n                ${macro.command}\n                });`)().call(macro, context);\n    } catch (err) {\n        ui.notifications.error(`There was an error in your macro syntax. See the console (F12) for details`);\n        console.error(err);\n    }\n\n    return result;\n}\n\nexport function parseAEValue(string) {\n    const lastColon = string.lastIndexOf(':');\n    if (lastColon === -1) return [string];\n    const preString = string.slice(0, lastColon).trim();\n    const postString = string.slice(lastColon + 1).trim();\n    return [preString, postString];\n}\n\n/**\n * Truncates the decimal places of a number.\n * @param {number} value - The actual number to be truncated.\n * @param {number} digits - The number of decimal places to be truncated to (defaults to 2).\n * @returns {number} The truncated number.\n */\nexport function truncate(value, digits = 2) {\n    return Math.round((value + Number.EPSILON) * 10 ** digits) / 10 ** digits;\n}\n\n/**\n * Returns the actor of the given macro id.\n * @param {Macro} macro - The macro\n * @returns {ActorHM3} - actor\n */\nexport function getActorFromMacro(macro) {\n    return game.actors.contents.find((a) => macro.getFlag('hm3', 'ownerId') === a.id);\n}\n\n/**\n * It is technically possible for a starting character with very high attributes to begin\n * play with excessively high Mastery Levels. To help balance the game, if the OML of any\n *  skill other than a Script or Language exceeds 70, it should be truncated.\n *\n * OML truncation only applies to starting characters. It does not affect in-game skill\n * development.\n * @link https://www.lythia.com/warflail/downloads/HMA_Rulebook_v1.4.pdf\n * @param {number} value\n * @returns truncated number\n */\nexport function truncatedOML(value) {\n    if (!game.settings.get('hm3', 'truncateHighValueSkills')) return value;\n    if (value <= 70) return value;\n    else if (value <= 72) return 71;\n    else if (value <= 74) return 72;\n    else if (value <= 76) return 73;\n    else if (value <= 78) return 74;\n    else if (value <= 80) return 75;\n    else if (value <= 82) return 76;\n    else if (value <= 84) return 77;\n    else if (value <= 86) return 78;\n    else if (value <= 88) return 79;\n    else if (value <= 90) return 80;\n    else if (value <= 94) return 81;\n    else if (value <= 98) return 82;\n    else if (value <= 102) return 83;\n    else if (value <= 106) return 84;\n    else if (value <= 110) return 85;\n    else if (value <= 114) return 86;\n    else if (value <= 118) return 87;\n    else return 88;\n}\n\nexport function beautify(text) {\n    if (typeof js_beautify === 'function') {\n        return js_beautify(text, {\n            'indent_size': 4,\n            'indent_char': ' ',\n            'indent_with_tabs': false,\n            'editorconfig': false,\n            'eol': '\\n',\n            'end_with_newline': false,\n            'indent_level': 0,\n            'preserve_newlines': true,\n            'max_preserve_newlines': 10,\n            'space_in_paren': false,\n            'space_in_empty_paren': false,\n            'jslint_happy': false,\n            'space_after_anon_function': false,\n            'space_after_named_function': false,\n            'brace_style': 'collapse',\n            'unindent_chained_methods': false,\n            'break_chained_methods': false,\n            'keep_array_indentation': false,\n            'unescape_strings': false,\n            'wrap_line_length': 0,\n            'e4x': false,\n            'comma_first': false,\n            'operator_position': 'before-newline',\n            'indent_empty_lines': false,\n            'templating': ['auto']\n        });\n    } else {\n        return text.trim();\n    }\n}\n\n/**\n * Increases the improveFlag of a skill by 1 if success is true, or by 2 if success is false.\n * This function is only executed if the 'autoMarkUsedSkills' setting is enabled.\n *\n * @param {string|Item} skill - The skill item to update.\n * @param {Object} [options={}] - Options for the skill improvement.\n * @param {Actor} [options.actor=null] - The actor associated with the skill.\n * @param {boolean} [options.success=true] - Whether the skill use was successful.\n */\nexport async function improveFlag(skill, {actor = null, success = true} = {}) {\n    if (game.settings.get('hm3', 'autoMarkUsedSkills')) {\n        const types = [ItemType.SKILL, ItemType.PSIONIC, ItemType.WEAPONGEAR, ItemType.MISSILEGEAR];\n\n        if ((typeof skill === 'string' || skill instanceof String) && actor) {\n            skill = actor.items.find((item) => item.name === skill && types.includes(item.type));\n        }\n\n        if (\n            skill instanceof Item &&\n            types.includes(skill.type) &&\n            skill.parent instanceof Actor &&\n            skill.parent.skillImprovement\n        ) {\n            await game.hm3.socket.executeAsGM('improveFlag', skill.uuid, success);\n        }\n    }\n}\n\nexport async function weaponBroke(weapon, diff) {\n    await game.hm3.socket.executeAsGM('weaponBroke', weapon.uuid, diff);\n}\n\nexport async function fatigueReceived(actor, fatigue) {\n    await game.hm3.socket.executeAsGM('fatigueReceived', actor.uuid, fatigue);\n}\n\nexport function getRelevantActors() {\n    return [\n        // Handle game actors first\n        ...game.actors\n            .values()\n            .filter(\n                (actor) =>\n                    (actor.player ? actor.player.active : true) && actor.prototypeToken.actorLink && actor.isOwner\n            ),\n        // Next, handle tokens (only unlinked tokens)\n        ...canvas.tokens.ownedTokens\n            .values()\n            .filter((token) => !token.document.actorLink && token.actor.isOwner)\n            .map((token) => {\n                return token.actor;\n            })\n    ];\n}\n\nexport function HM100Check(value) {\n    return Math.max(Math.min(Math.round(value), 95), 5);\n}\n\nexport function HM6Check(value) {\n    return Math.max(Math.round(value), 1);\n}\n","import {HM3} from './config.js';\nimport {Aspect, Condition, InjuryType, ItemType} from './hm3-types.js';\nimport * as utility from './utility.js';\n\nexport class DiceHM3 {\n    /*--------------------------------------------------------------------------------*/\n    /*        STANDARD D100 ROLL PROCESSING\n    /*--------------------------------------------------------------------------------*/\n\n    /**\n     * Performs a standard d100 \"skill\" roll, optionally presenting a dialog\n     * to collect a modifier (although can be used for any straignt d100 roll\n     * that takes an optional modifier and rolls against a target value).\n     *\n     * Note that the modifier affects the target value, not the die roll.\n     * The die roll is always a strait \"1d100\" roll without modifiers.\n     *\n     * rollData is expected to contain the following values:\n     *  target: Target value to check against\n     *  modifier: Modifier to target value\n     *  label: The label associated with the 'target' value\n     *  fastForward: If true, assume no modifier and don't present Dialog\n     *  speaker: the Speaker to use in Chat\n     *  rollMode: the rollMode to use\n     *  actorData: actor data\n     *\n     * @param {Object} rollData\n     */\n    static async d100StdRoll(rollData) {\n        const speaker = rollData.speaker || ChatMessage.getSpeaker();\n\n        const dialogOptions = {\n            effSkillBase: rollData.effSkillBase,\n            fluff: rollData.fluff || null,\n            isAbility: rollData.isAbility || false,\n            isCraftOrLore: rollData.isCraftOrLore || false,\n            isTreatment: rollData.type === 'treatment' || false,\n            label: rollData.label,\n            modifier: rollData.modifier || 0,\n            name: speaker.alias,\n            physicianSkills: rollData.physicianSkills || [],\n            skill: rollData.skill,\n            subType: rollData.subType || InjuryType.HEALING,\n            target: rollData.target,\n            treatmentTable: rollData.treatmentTable,\n            type: rollData.type\n        };\n\n        // Create the Roll instance\n        let roll;\n        if (rollData.fastforward)\n            roll = await DiceHM3.rollTest({\n                diceNum: 1,\n                diceSides: 100,\n                modifier: rollData.modifier || 0,\n                target: rollData.target,\n                type: rollData.type\n            });\n        else if (rollData.skill?.includes('Climbing')) roll = await DiceHM3.d100ClimbingDialog(dialogOptions);\n        else if (rollData.skill?.includes('Jumping')) roll = await DiceHM3.d100JumpingDialog(dialogOptions);\n        else roll = await DiceHM3.d100StdDialog(dialogOptions);\n\n        // If user cancelled the roll, then return immediately\n        if (!roll) return null;\n\n        const addlInfo = rollData.addlInfoCallback\n            ? rollData.addlInfoCallback(roll)\n            : roll.preData.addlInfoCallback\n            ? roll.preData.addlInfoCallback(roll)\n            : undefined;\n\n        // Prepare for Chat Message\n        const chatTemplate = 'systems/hm3/templates/chat/standard-test-card.hbs';\n\n        const notesData = foundry.utils.mergeObject(rollData.notesData ?? {}, {\n            actor: speaker.alias,\n            isCF: !roll.isSuccess && roll.isCritical,\n            isCritical: roll.isCritical,\n            isCS: roll.isSuccess && roll.isCritical,\n            isMF: !roll.isSuccess && !roll.isCritical,\n            isMS: roll.isSuccess && !roll.isCritical,\n            isSubstantial: roll.isSubstantial,\n            isSuccess: roll.isSuccess,\n            modifier: rollData.modifier,\n            roll: roll.rollObj.total,\n            rollText: roll.description,\n            target: rollData.target || roll.target - roll.modifier\n        });\n        let renderedNotes = rollData.notes ? utility.stringReplacer(rollData.notes, notesData) : '';\n\n        const multiplier = roll.preData.multiplier || rollData.multiplier || 5;\n        let title = rollData.label;\n        if (rollData.isAbility)\n            title = rollData.label.replace(`${rollData.skill} Roll`, `${rollData.skill} x${multiplier} Roll`);\n        if (roll.preData.isAppraisal) title = rollData.label.replace('Skill Test', 'Appraisal Test');\n        let fluffResult = null;\n        if (rollData.fluffResult) {\n            if (roll.isCritical) fluffResult = roll.isSuccess ? rollData.fluffResult.CS : rollData.fluffResult.CF;\n            else fluffResult = roll.isSuccess ? rollData.fluffResult.MS : rollData.fluffResult.MF;\n            if (roll.preData.isTreatment && roll.preData.noTreatment) {\n                rollData.fluff = null;\n                fluffResult = 'No Treatment';\n            }\n        }\n\n        const chatTemplateData = {\n            addlInfo,\n            description: roll.description,\n            falling: dialogOptions.falling,\n            fluff: rollData.fluff\n                ? rollData.fluff.startsWith('<p>')\n                    ? rollData.fluff\n                    : '<p>' + rollData.fluff + '</p>'\n                : undefined,\n            fluffResult: fluffResult\n                ? fluffResult.startsWith('<p>')\n                    ? fluffResult\n                    : '<p>' + fluffResult + '</p>'\n                : undefined,\n            isCritical: roll.isCritical,\n            isSubstantial: roll.isSubstantial,\n            isSuccess: roll.isSuccess,\n            modifiedTarget: roll.target,\n            modifier: Math.abs(roll.modifier),\n            name: rollData.name || '',\n            notes: renderedNotes,\n            origTarget: rollData.target || roll.target - roll.modifier,\n            plusMinus: roll.modifier < 0 ? '-' : '+',\n            roll,\n            rollResult: roll.rollObj.total,\n            rollValue: roll.rollObj.total,\n            showResult: false,\n            title,\n            tokenId: speaker.token,\n            type: roll.type,\n            visibleActorId: speaker.actor\n        };\n\n        const html = await renderTemplate(chatTemplate, chatTemplateData);\n\n        const rollMode = this.getRollMode({\n            blind: rollData.blind,\n            isAppraisal: roll.preData.isAppraisal,\n            private: rollData.private,\n            skill: rollData.skill\n        });\n        const messageData = {\n            content: html.trim(),\n            roll: roll.rollObj,\n            sound: CONFIG.sounds.dice,\n            speaker,\n            style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n            user: game.user.id\n        };\n\n        const messageOptions = {rollMode};\n\n        // Create a chat message\n        await roll.rollObj.toMessage(messageData, messageOptions);\n\n        return chatTemplateData;\n    }\n\n    static async d100ClimbingDialog(dialogOptions) {\n        // Render modal dialog\n        let dlgTemplate = 'systems/hm3/templates/dialog/climbing-test-dialog.hbs';\n        let dialogData = {\n            effSkillBase: dialogOptions.effSkillBase,\n            modifier: dialogOptions.modifier,\n            target: dialogOptions.target\n        };\n\n        dialogData.difficulty = 'Easy';\n        dialogData.difficulties = [{key: 'Easy'}, {key: 'Hard'}, {key: 'Very Hard'}];\n\n        dialogData.gear = '0';\n        dialogData.gears = [\n            {key: '0', label: 'No climbing gear (+0 EML)'},\n            {key: '10', label: 'Ordinary climbing gear (+10 EML)'},\n            {key: '20', label: 'Good climbing gear (+20 EML)'}\n        ];\n\n        const html = await renderTemplate(dlgTemplate, dialogData);\n\n        // Create the dialog window\n        return Dialog.prompt({\n            content: html.trim(),\n            label: 'Roll',\n            options: {width: 470},\n            title: dialogOptions.label,\n            callback: (html) => {\n                const form = html[0].querySelector('form');\n                const formModifier = form.modifier.value;\n                const formDifficulty = form.difficulties.value;\n                const formGear = form.gears.value;\n\n                let target = dialogOptions.target;\n                return DiceHM3.rollTest({\n                    addlInfoCallback: (result) => {\n                        const progress = `Vertical progress (${formDifficulty}):`;\n                        const CS = {'Easy': 30, 'Hard': 20, 'Very Hard': 10};\n                        const MS = {'Easy': 15, 'Hard': 10, 'Very Hard': 5};\n                        const MF = {'Easy': 0, 'Hard': -5, 'Very Hard': -10};\n\n                        if (result.isSuccess) {\n                            if (result.isCritical) return `<p>${progress} +${CS[formDifficulty]} ft</p>`;\n                            else {\n                                const d = utility.truncate(\n                                    result.isSubstantial ? MS[formDifficulty] * 1.25 : MS[formDifficulty],\n                                    0\n                                );\n                                return `<p>${progress} +${d} ft</p>`;\n                            }\n                        } else {\n                            if (!result.isCritical) {\n                                const d = utility.truncate(\n                                    result.isSubstantial ? MF[formDifficulty] * 1.25 : MF[formDifficulty],\n                                    0\n                                );\n                                return `<p>${progress} ${d} ft</p><p>Negative progress indicates the character has encountered an obstacle and been forced to backtrack.</p>`;\n                            } else {\n                                dialogOptions.falling = true;\n                                return `${dialogOptions.name} loses grip and falls.`;\n                            }\n                        }\n                    },\n                    data: null,\n                    diceNum: 1,\n                    diceSides: 100,\n                    modifier: Number(formModifier) + Number(formGear),\n                    name: dialogOptions.name,\n                    target,\n                    type: dialogOptions.type\n                });\n            }\n        });\n    }\n\n    static async d100JumpingDialog(dialogOptions) {\n        // Render modal dialog\n        let dlgTemplate = 'systems/hm3/templates/dialog/jumping-test-dialog.hbs';\n        let dialogData = {\n            effSkillBase: dialogOptions.effSkillBase,\n            modifier: dialogOptions.modifier,\n            target: dialogOptions.target\n        };\n\n        dialogData.jump = 'Long';\n        dialogData.jumps = [{key: 'Long'}, {key: 'High'}];\n\n        dialogData.start = '1';\n        dialogData.starts = [\n            {key: '1', label: 'Running start'},\n            {key: '2', label: 'Standing jump'}\n        ];\n\n        const html = await renderTemplate(dlgTemplate, dialogData);\n\n        // Create the dialog window\n        return Dialog.prompt({\n            content: html.trim(),\n            label: 'Roll',\n            title: dialogOptions.label,\n            callback: (html) => {\n                const form = html[0].querySelector('form');\n                const formModifier = form.modifier.value;\n                const formJump = form.jumps.value;\n                const formStart = form.starts.value;\n                const formLabel = dialogData.starts[form.starts.selectedIndex].label;\n                const start = Number(formStart);\n                const height = 5 / start; // [ft]\n\n                let target = dialogOptions.target;\n                return DiceHM3.rollTest({\n                    addlInfoCallback: (result) => {\n                        const jump = `${formJump} jump (${formLabel}):`;\n                        const CS = {'High': 1, 'Long': 3};\n                        const MS = {'High': 0.75, 'Long': 2};\n                        const MF = {'High': 0.5, 'Long': 1};\n\n                        if (result.isSuccess) {\n                            if (result.isCritical) {\n                                const d = truncate(height * CS[formJump], 0);\n                                return `<p>${jump} ${d} ft</p>`;\n                            } else {\n                                const d = truncate(\n                                    height * (result.isSubstantial ? MS[formJump] * 1.25 : MS[formJump]),\n                                    0\n                                );\n                                return `<p>${jump} ${d} ft</p>`;\n                            }\n                        } else {\n                            if (!result.isCritical) {\n                                const d = utility.truncate(\n                                    height * (result.isSubstantial ? MF[formJump] * 0.75 : MF[formJump]),\n                                    0\n                                );\n                                return `<p>${jump} ${d} ft</p>`;\n                            } else return `${dialogOptions.name} stumbles.`;\n                        }\n                    },\n                    data: null,\n                    diceNum: 1,\n                    diceSides: 100,\n                    modifier: Number(formModifier),\n                    name: dialogOptions.name,\n                    target,\n                    type: dialogOptions.type\n                });\n            }\n        });\n    }\n\n    /**\n     * Renders a dialog to get the modifier for a d100 skill roll, and then\n     * perform a d100 dice roll to determine results.  Returns Roll object\n     * representing outcome of die roll, or null if user cancelled dialog.\n     *\n     * @param {*} dialogOptions\n     */\n    static async d100StdDialog(dialogOptions) {\n        // Render modal dialog\n        let dlgTemplate = dialogOptions.template || 'systems/hm3/templates/dialog/standard-test-dialog.hbs';\n        let dialogData = {\n            effSkillBase: dialogOptions.effSkillBase,\n            fluff: dialogOptions.fluff || null,\n            isAbility: dialogOptions.isAbility || false,\n            isCraftOrLore: dialogOptions.isCraftOrLore || false,\n            isTreatment: dialogOptions.isTreatment || false,\n            isMorale: dialogOptions.type === 'Morale-d100',\n            modifier: dialogOptions.modifier,\n            target: dialogOptions.target\n        };\n\n        if (dialogData.isAbility) {\n            dialogData.multiplier = 5;\n            dialogData.multipliers = [\n                {key: 1, label: `${dialogOptions.skill} x1 (EML ${dialogOptions.effSkillBase * 1})`},\n                {key: 2, label: `${dialogOptions.skill} x2 (EML ${dialogOptions.effSkillBase * 2})`},\n                {key: 3, label: `${dialogOptions.skill} x3 (EML ${dialogOptions.effSkillBase * 3})`},\n                {key: 4, label: `${dialogOptions.skill} x4 (EML ${dialogOptions.effSkillBase * 4})`},\n                {key: 5, label: `${dialogOptions.skill} x5 (EML ${dialogOptions.effSkillBase * 5})`},\n                {key: 6, label: `${dialogOptions.skill} x6 (EML ${dialogOptions.effSkillBase * 6})`},\n                {key: 7, label: `${dialogOptions.skill} x7 (EML ${dialogOptions.effSkillBase * 7})`}\n            ];\n        }\n\n        if (dialogData.isMorale) {\n            dialogData.moraleModification = 0;\n            dialogData.moraleModifications = [\n                {key: -20, label: `Desperate Situation (EML -20)`},\n                {key: -10, label: `Bad Situation (EML -10)`},\n                {key: 0, label: `Normal Situation (EML +0)`},\n                {key: 10, label: `Good Situation (EML +10)`},\n                {key: 20, label: `Excellent Situation (EML +20)`}\n            ];\n        }\n\n        const isHealingRoll = dialogOptions.type === InjuryType.HEALING;\n        if (isHealingRoll) {\n            if (dialogOptions.subType === InjuryType.HEALING || dialogOptions.subType === InjuryType.SHOCK) {\n                dialogData.isPhysician = true;\n                dialogData.physicianSkills = dialogOptions.physicianSkills.map((p) => {\n                    return {\n                        key: p.uuid, // Math.round(p.system.effectiveMasteryLevel / 2),\n                        label: `${p.actor.name} (EML/2 ${Math.round(p.system.effectiveMasteryLevel / 2)})`,\n                        value: Math.round(p.system.effectiveMasteryLevel / 2)\n                    };\n                });\n                dialogData.physicianSkills.push({key: 0, label: '3rd Party Physician skill'});\n                dialogData.physicianEml = dialogData.physicianSkills[0].key;\n                dialogData.physicianMod = 'EML/2';\n            } else if (dialogOptions.subType === InjuryType.INFECTION) {\n                dialogData.isPhysician = true;\n                dialogData.physicianSkills = dialogOptions.physicianSkills.map((p) => {\n                    return {\n                        key: p.uuid, // Math.floor(p.system.masteryLevel / 10),\n                        label: `${p.actor.name} (SI ${Math.floor(p.system.masteryLevel / 10)})`,\n                        value: Math.floor(p.system.masteryLevel / 10)\n                    };\n                });\n                dialogData.physicianSkills.push({key: 0, label: '3rd Party Physician skill'});\n                dialogData.physicianEml = dialogData.physicianSkills[0].key;\n                dialogData.physicianMod = 'SI';\n            }\n        }\n\n        if (dialogData.isTreatment) {\n            dialogData.treatmentModifier = dialogOptions.treatmentTable.eml;\n            dialogData.physicianSkills = dialogOptions.physicianSkills.map((p) => {\n                return {\n                    key: p.uuid, // p.system.effectiveMasteryLevel,\n                    label: `${p.actor.name} (EML ${p.system.effectiveMasteryLevel})`,\n                    value: p.system.effectiveMasteryLevel\n                };\n            });\n            dialogData.physicianSkills.push(\n                {key: 'Other', label: '3rd Party Physician skill', value: 0},\n                {key: 'NT', label: 'No Treatment', value: -1}\n            );\n            dialogData.physicianEml = dialogData.physicianSkills[0].value;\n            dialogData.physicianMod = 'EML';\n        }\n\n        const html = await renderTemplate(dlgTemplate, dialogData);\n\n        // Create the dialog window\n        return Dialog.prompt({\n            title: dialogOptions.label,\n            content: html.trim(),\n            label: 'Roll',\n            options: {width: 520},\n            callback: (html) => {\n                const form = html[0].querySelector('form');\n                const formModifier = form.modifier.value;\n                const physician = fromUuidSync(form.physicianEml?.value);\n                let formPhysicianEml = 0;\n                let noTreatment = false;\n                let noSubstantial = false;\n                if (physician) {\n                    if (dialogData.physicianMod === 'EML') formPhysicianEml = physician.system.effectiveMasteryLevel;\n                    else if (dialogData.physicianMod === 'EML/2')\n                        formPhysicianEml = Math.round(physician.system.effectiveMasteryLevel / 2);\n                    else if (dialogData.physicianMod === 'SI')\n                        formPhysicianEml = Math.floor(physician.system.effectiveMasteryLevel / 10);\n                } else {\n                    if (form.physicianEml?.value === 'NT') noTreatment = true;\n                }\n                // const formPhysicianEml = form.physicianEml?.value || '0';\n                const formTarget = form.target.value;\n                let formTreatmentModifier = form.treatmentModifier?.value || '0';\n                const isAppraisal = form.appraisal?.checked || false;\n                const moraleModification = form.moraleModifications?.value || '0';\n                const multiplier = form.multipliers?.selectedIndex + 1 || -1;\n\n                let target = !isNaN(Number(formTarget)) ? Number(formTarget) : dialogOptions.target;\n                if (dialogOptions.isAbility) target = dialogOptions.effSkillBase * multiplier;\n                if (isAppraisal)\n                    target = Math.max(\n                        dialogOptions.target + dialogOptions.effSkillBase,\n                        5 * dialogOptions.effSkillBase\n                    );\n                if (dialogOptions.isHealingRoll) noSubstantial = true;\n                if (dialogOptions.isTreatment) {\n                    target = !isNaN(Number(formPhysicianEml)) ? Number(formPhysicianEml) : dialogOptions.target;\n                    noSubstantial = true;\n                    if (noTreatment) formTreatmentModifier = '0';\n                }\n                const phyBonus =\n                    !isNaN(Number(formPhysicianEml)) && dialogData.isPhysician ? Number(formPhysicianEml) : 0;\n\n                return DiceHM3.rollTest({\n                    data: null,\n                    diceNum: 1,\n                    diceSides: 100,\n                    isAbility: dialogOptions.isAbility,\n                    isAppraisal,\n                    isTreatment: dialogOptions.isTreatment,\n                    modifier:\n                        Number(formModifier) + Number(formTreatmentModifier) + Number(moraleModification) + phyBonus,\n                    multiplier,\n                    name: dialogOptions.name,\n                    noSubstantial,\n                    noTreatment,\n                    physician,\n                    target,\n                    type: dialogOptions.type\n                });\n            }\n        });\n    }\n\n    /*--------------------------------------------------------------------------------*/\n    /*        STANDARD D6 ROLL PROCESSING\n    /*--------------------------------------------------------------------------------*/\n\n    /**\n     * Performs a standard d6 roll, optionally presenting a dialog\n     * to collect a modifier (although can be used for any straignt d6 roll\n     * that takes an optional modifier and rolls against a target value).\n     *\n     * Note that the modifier affects the target value, not the die roll.\n     * The die roll is always a strait \"1d100\" roll without modifiers.\n     *\n     * rollData is expected to contain the following values:\n     *  target: Target value to check against\n     *  modifier: Modifier to target value\n     *  numdice: Number of d6 to roll\n     *  label: The label associated with the 'target' value\n     *  fastForward: If true, assume no modifier and don't present Dialog\n     *  speaker: the Speaker to use in Chat\n     *  rollMode: the rollMode to use\n     *  actorData: actor data\n     *\n     * @param {Object} rollData\n     */\n    static async d6Roll(rollData) {\n        const speaker = rollData.speaker || ChatMessage.getSpeaker();\n        const rollMode = this.getRollMode({skill: rollData.skill});\n\n        const dialogOptions = {\n            items: rollData.items,\n            label: rollData.label,\n            modifier: rollData.modifier || 0,\n            numdice: Number(rollData.numdice),\n            target: Number(rollData.target),\n            type: rollData.type\n        };\n\n        // Create the Roll instance\n        const roll = rollData.fastforward\n            ? await DiceHM3.rollTest({\n                  diceNum: Number(rollData.numdice),\n                  diceSides: 6,\n                  modifier: rollData.modifier || 0,\n                  target: rollData.target,\n                  type: rollData.type\n              })\n            : await DiceHM3.d6Dialog(dialogOptions);\n\n        // If user cancelled the roll, then return immediately\n        if (!roll) return null;\n\n        // Prepare for Chat Message\n        const chatTemplate = 'systems/hm3/templates/chat/standard-test-card.hbs';\n\n        const notesData = foundry.utils.mergeObject(rollData.notesData ?? {}, {\n            actor: speaker.alias,\n            isSuccess: roll.isSuccess,\n            roll: roll.rollObj.total,\n            rollText: roll.description,\n            target: rollData.target\n        });\n        const renderedNotes = rollData.notes ? utility.stringReplacer(rollData.notes, notesData) : '';\n\n        const isTAPossible =\n            !rollData.noTA &&\n            ['fumble', 'kill', 'shock', 'stumble'].includes(rollData.type) &&\n            (await game.hm3.macros.isTAPossible(canvas.tokens.get(rollData.token)));\n        const addlInfo = !roll.isSuccess && isTAPossible ? '<p>Opponent gains a Tactical Advantage.</p>' : '';\n\n        const chatTemplateData = {\n            addlInfo,\n            atkTokenId: rollData.opponentToken?.id,\n            description: roll.description,\n            isSuccess: roll.isSuccess,\n            modifiedTarget: roll.target,\n            modifier: Math.abs(roll.modifier),\n            notes: renderedNotes,\n            origTarget: rollData.target,\n            ota: !roll.isSuccess && isTAPossible, // Opponent TA\n            plusMinus: roll.modifier < 0 ? '-' : '+',\n            roll: roll,\n            rollResult: roll.rollObj.dice[0].values.join(' + '),\n            rollValue: roll.rollObj.total,\n            showResult: roll.rollObj.dice[0].values.length > 1,\n            title: rollData.label,\n            type: rollData.type,\n            visibleActorId: rollData.opponentToken?.actor?.id\n        };\n\n        const html = await renderTemplate(chatTemplate, chatTemplateData);\n\n        const messageData = {\n            content: html.trim(),\n            roll: roll.rollObj,\n            sound: CONFIG.sounds.dice,\n            speaker,\n            style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n            user: game.user.id\n        };\n\n        const messageOptions = {rollMode};\n\n        // Create a chat message\n        await roll.rollObj.toMessage(messageData, messageOptions);\n        // await ChatMessage.create(messageData, messageOptions);\n\n        return chatTemplateData;\n    }\n\n    /**\n     * Renders a dialog to get the modifier for a d6 roll, and then\n     * perform a d6 dice roll to determine results.  Returns Roll object\n     * representing outcome of die roll, or null if user cancelled dialog.\n     *\n     * @param {*} dialogOptions\n     */\n    static async d6Dialog(dialogOptions) {\n        // Render modal dialog\n        let dlgTemplate = dialogOptions.template || 'systems/hm3/templates/dialog/standard-test-dialog.hbs';\n        let dialogData = {\n            target: dialogOptions.target,\n            modifier: dialogOptions.modifier\n        };\n        const html = await renderTemplate(dlgTemplate, dialogData);\n\n        // Create the dialog window\n        return Dialog.prompt({\n            title: dialogOptions.label,\n            content: html.trim(),\n            label: 'Roll',\n            callback: (html) => {\n                const formModifier = html[0].querySelector('form').modifier.value;\n                return DiceHM3.rollTest({\n                    type: dialogOptions.type,\n                    target: dialogOptions.target,\n                    data: null,\n                    diceSides: 6,\n                    diceNum: dialogOptions.numdice,\n                    modifier: formModifier\n                });\n            }\n        });\n    }\n\n    /*--------------------------------------------------------------------------------*/\n    /*        SKILL DEVELOPMENT ROLL PROCESSING\n    /*--------------------------------------------------------------------------------*/\n\n    static async sdrRoll(item, showChatMsg = true) {\n        const speaker = ChatMessage.getSpeaker({actor: item.actor});\n\n        let roll = await game.hm3.macros.rollObjectEvaluatedAsync(`1d100 + ${item.system.skillBase.value}`, {\n            name: item.actor.name,\n            type: 'sdrRoll'\n        });\n\n        const isSuccess = roll.total > item.system.masteryLevel;\n\n        const re = RegExp('(([^)]+))');\n        const specMatch = item.name.match(/\\(([^\\)]+)\\)/);\n        const chatTemplate = 'systems/hm3/templates/chat/standard-test-card.hbs';\n\n        const chatTemplateData = {\n            description: isSuccess ? 'Success' : 'Failure',\n            isSuccess: isSuccess,\n            modifiedTarget: item.system.masteryLevel,\n            modifier: 0,\n            notes: '',\n            origTarget: item.system.masteryLevel,\n            rollResult: roll.result,\n            rollValue: roll.total,\n            sdrIncr: isSuccess ? (specMatch ? 2 : 1) : 0,\n            showResult: true,\n            title: `${item.name} Skill Development Roll`\n        };\n\n        if (specMatch && isSuccess) {\n            chatTemplateData.notes = `Since this is a specialized skill of ${specMatch[1]}, ML will be increased by 2`;\n        }\n\n        if (!showChatMsg) return chatTemplateData;\n\n        const html = await renderTemplate(chatTemplate, chatTemplateData);\n\n        const messageData = {\n            content: html.trim(),\n            roll,\n            sound: CONFIG.sounds.dice,\n            speaker,\n            style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n            user: game.user.id\n        };\n\n        // Create a chat message\n        ChatMessage.applyRollMode(messageData, game.settings.get('core', 'rollMode'));\n        await ChatMessage.create(messageData);\n\n        return chatTemplateData;\n    }\n\n    /*--------------------------------------------------------------------------------*/\n    /*        INJURY ROLL PROCESSING\n    /*--------------------------------------------------------------------------------*/\n\n    /**\n     * Performs processing, including a random roll, to determine\n     * injury location and effects.\n     *\n     * @param {Object} rollData\n     */\n    static async injuryRoll(rollData) {\n        const speaker = rollData.speaker || ChatMessage.getSpeaker({actor: rollData.actor});\n\n        let result = null;\n        if (typeof rollData.impact == 'undefined') {\n            let hitLocations = DiceHM3._getHitLocations(rollData.actor.items);\n\n            const dialogOptions = {\n                actor: rollData.actor,\n                data: rollData.actor.system,\n                hitLocations: hitLocations,\n                items: rollData.actor.items\n            };\n\n            // Create the Roll instance\n            result = await DiceHM3.injuryDialog(dialogOptions);\n        } else {\n            result = DiceHM3._calcInjury(\n                rollData.location ? rollData.location : 'Random',\n                rollData.impact,\n                rollData.aspect,\n                game.settings.get('hm3', 'addInjuryToActorSheet') !== 'disable',\n                rollData.aim,\n                rollData\n            );\n        }\n\n        // If user cancelled the roll, then return immediately\n        if (!result) return null;\n\n        if (result && rollData.tokenId) result.tokenId = rollData.tokenId;\n        if (result && rollData.atkToken) result.atkToken = rollData.atkToken;\n\n        if (result.addToCharSheet) {\n            DiceHM3.createInjury(rollData.actor, result);\n        }\n\n        // Prepare for Chat Message\n        const chatTemplate = 'systems/hm3/templates/chat/injury-card.hbs';\n\n        const chatTemplateData = foundry.utils.mergeObject(\n            {\n                opponentTokenId: rollData.atkToken?.id,\n                isShockRoll: result.injuryLevel > 0 && !rollData.actor.hasCondition(Condition.INANIMATE),\n                title: `${rollData.actor.token ? rollData.actor.token.name : rollData.actor.name} Injury`,\n                visibleActorId: rollData.actor.id\n            },\n            result\n        );\n\n        const html = await renderTemplate(chatTemplate, chatTemplateData);\n\n        const messageData = {\n            speaker: speaker,\n            content: html.trim(),\n            user: game.user.id,\n            type: CONST.CHAT_MESSAGE_STYLES.OTHER,\n            sound: CONFIG.sounds.notify\n        };\n\n        const messageOptions = {\n            rollMode: game.settings.get('core', 'rollMode')\n        };\n\n        // Create a chat message\n        await ChatMessage.create(messageData, messageOptions);\n        if (game.settings.get('hm3', 'combatAudio')) {\n            foundry.audio.AudioHelper.play(\n                {\n                    src: 'systems/hm3/audio/grunt1.ogg',\n                    autoplay: true,\n                    loop: false\n                },\n                true\n            );\n        }\n        return result;\n    }\n\n    /**\n     *\n     * @param {*} actor\n     * @param {*} result\n     */\n    static createInjury(actor, result) {\n        const injuryDesc = {\n            'Blunt': {'M': 'Bruise', 'S': 'Fracture', 'G': 'Crush'},\n            'Edged': {'M': 'Cut', 'S': 'Slash', 'G': 'Gash'},\n            'Fire': {'M': 'Singe', 'S': 'Burn', 'G': 'Scorch'},\n            'Frost': {'M': 'Chilled Flesh', 'S': 'Frostbite', 'G': 'Frostbite'},\n            'Piercing': {'M': 'Poke', 'S': 'Stab', 'G': 'Impale'}\n        };\n\n        if (result.injuryLevel === 0) return;\n\n        let sev;\n        if (result.injuryLevel === 1) {\n            sev = 'M';\n        } else if (result.injuryLevel <= 3) {\n            sev = 'S';\n        } else {\n            sev = 'G';\n        }\n\n        let locationName = result.location;\n        if (injuryDesc[result.aspect]) {\n            locationName = `${result.location} ${injuryDesc[result.aspect][sev]}`;\n        }\n\n        const from = result.atkToken?.name;\n        const dateTime = SimpleCalendar?.api?.currentDateTimeDisplay();\n        let notes = '';\n        notes += from ? `From '${from}' in '${game.scenes.current.name}' ` : `In '${game.scenes.current.name}' `;\n        notes += dateTime\n            ? `${dateTime.date} ${dateTime.yearPostfix} (Aspect: ${result.aspect})`\n            : `(Aspect: ${result.aspect})`;\n\n        let item = Item.create(\n            {\n                name: locationName,\n                type: 'injury',\n                system: {\n                    aspect: result.aspect,\n                    healRate: 0,\n                    injuryLevel: result.injuryLevel,\n                    notes,\n                    severity: sev,\n                    subType: InjuryType.HEALING // bloodloss, disease, healing, infection, poison, shock, toxin (different healing rolls)\n                }\n            },\n            {parent: actor}\n        );\n\n        return item;\n    }\n\n    /**\n     * Returns a list of unique hit location names, including a single \"Random\" entry.\n     * Used for filling a dropdown during hit-location calculation.\n     *\n     * @param {*} items List of items including armorlocation items\n     */\n    static _getHitLocations(items) {\n        // Initialize list with an indicator for a Random roll\n        let hitLocations = ['Random'];\n\n        // get a list of unique hit location names\n        items.forEach((it) => {\n            if (it.type === ItemType.ARMORLOCATION) {\n                if (hitLocations.indexOf(it.name) === -1) {\n                    hitLocations.push(it.name);\n                }\n            }\n        });\n\n        return hitLocations;\n    }\n\n    /**\n     * Render a dialog box for gathering information for use in the Injury roll\n     *\n     * @param {*} dialogOptions\n     */\n    static async injuryDialog(dialogOptions) {\n        const recordInjury = game.settings.get('hm3', 'addInjuryToActorSheet');\n\n        // Render modal dialog\n        let dlgTemplate = dialogOptions.template || 'systems/hm3/templates/dialog/injury-dialog.hbs';\n        let dialogData = {\n            aim: 'mid',\n            location: 'Random',\n            impact: 0,\n            aspect: Aspect.BLUNT,\n            askRecordInjury: recordInjury === 'ask',\n            hitLocations: dialogOptions.hitLocations\n        };\n\n        const html = await renderTemplate(dlgTemplate, dialogData);\n\n        // Create the dialog window\n        return Dialog.prompt({\n            title: dialogOptions.label,\n            content: html.trim(),\n            label: 'Determine Injury',\n            callback: async (html) => {\n                const form = html[0].querySelector('form');\n                const formAim = form.aim.value;\n                const formAspect = form.aspect.value;\n                const formDice = form.dice.value;\n                const formImpact = await game.hm3.macros.rollResultAsync(formDice + '+' + form.impact.value, {\n                    name: dialogOptions.actor.name,\n                    type: 'injuryRoll'\n                });\n                const formLocation = form.location.value;\n                const formAddToCharSheet = dialogData.askRecordInjury\n                    ? form.addToCharSheet.checked\n                    : recordInjury === 'enable';\n                return DiceHM3._calcInjury(\n                    formLocation,\n                    formImpact,\n                    formAspect,\n                    formAddToCharSheet,\n                    formAim,\n                    dialogOptions\n                );\n            }\n        });\n    }\n\n    /**\n     * This method calculates many items related to injuries that are used to populate\n     * the chat message with the results of the injury\n     *\n     * @param {String} location\n     * @param {Number} impact\n     * @param {String} aspect\n     * @param {Boolean} addToCharSheet\n     * @param {String} aim\n     * @param {Object} dialogOptions\n     */\n    static _calcInjury(location, impact, aspect, addToCharSheet, aim, dialogOptions) {\n        const enableAmputate = game.settings.get('hm3', 'amputation');\n        const enableBloodloss = game.settings.get('hm3', 'bloodloss');\n        const enableLimbInjuries = game.settings.get('hm3', 'limbInjuries');\n\n        const result = {\n            addToCharSheet: addToCharSheet,\n            aim: aim,\n            armorType: 'None',\n            armorValue: 0,\n            aspect: aspect,\n            effectiveImpact: impact,\n            impact: impact,\n            injuryLevel: 0,\n            injuryLevelText: 'NA',\n            isAmputate: false,\n            isBleeder: false,\n            isFumble: false,\n            isFumbleRoll: false,\n            isInjured: false,\n            isKillShot: false,\n            isRandom: location === 'Random',\n            isStumble: false,\n            isStumbleRoll: false,\n            location: location,\n            name: dialogOptions.name,\n            noArmor: dialogOptions.noArmor || false,\n            type: 'injury'\n        };\n\n        // determine location of injury\n        const armorLocationItem = DiceHM3._calcLocation(location, aim, dialogOptions.items);\n        if (!armorLocationItem) return; // this means we couldn't find the location, so no injury\n\n        // Just to make life simpler, get the data element which is what we really care about.\n        const armorLocationData = armorLocationItem.system;\n\n        result.location = armorLocationItem.name;\n        result.armorType = armorLocationData.layers === '' || dialogOptions.noArmor ? 'None' : armorLocationData.layers;\n\n        // determine effective impact (impact - armor)\n        if (!dialogOptions.noArmor) {\n            if (aspect === Aspect.BLUNT) {\n                result.armorValue = armorLocationData.blunt;\n            } else if (aspect === Aspect.EDGED) {\n                result.armorValue = armorLocationData.edged;\n            } else if (aspect === Aspect.PIERCING) {\n                result.armorValue = armorLocationData.piercing;\n            } else {\n                result.armorValue = armorLocationData.fire;\n            }\n        }\n\n        result.effectiveImpact = Math.max(impact - result.armorValue, 0);\n\n        // Determine Injury Level\n        if (result.effectiveImpact === 0) {\n            result.injuryLevelText = 'NA';\n        } else if (result.effectiveImpact >= 17) {\n            result.injuryLevelText = armorLocationData.effectiveImpact.ei17;\n        } else if (result.effectiveImpact >= 13) {\n            result.injuryLevelText = armorLocationData.effectiveImpact.ei13;\n        } else if (result.effectiveImpact >= 9) {\n            result.injuryLevelText = armorLocationData.effectiveImpact.ei9;\n        } else if (result.effectiveImpact >= 5) {\n            result.injuryLevelText = armorLocationData.effectiveImpact.ei5;\n        } else {\n            result.injuryLevelText = armorLocationData.effectiveImpact.ei1;\n        }\n\n        if (dialogOptions.actor.hasCondition(Condition.INANIMATE) && result.injuryLevelText[0] === 'K') {\n            result.injuryLevelText = result.injuryLevelText.replace('K', 'G');\n        }\n\n        // Calculate injury level and whether it is a kill shot.\n        // Convert all 'K4' and 'K5' to 'G4' and 'G5'\n        switch (result.injuryLevelText) {\n            case 'M1':\n                result.injuryLevel = 1;\n                break;\n\n            case 'S2':\n                result.injuryLevel = 2;\n                break;\n\n            case 'S3':\n                result.injuryLevel = 3;\n                break;\n\n            case 'G4':\n                result.injuryLevel = 4;\n                result.isAmputate = enableAmputate && armorLocationData.isAmputate && aspect === Aspect.EDGED;\n                break;\n\n            case 'K4':\n                result.injuryLevel = 4;\n                result.isKillShot = true;\n                result.isAmputate = enableAmputate && armorLocationData.isAmputate && aspect === Aspect.EDGED;\n                break;\n\n            case 'G5':\n                result.injuryLevel = 5;\n                result.isAmputate = enableAmputate && armorLocationData.isAmputate && aspect === Aspect.EDGED;\n                break;\n\n            case 'K5':\n                result.injuryLevel = 5;\n                result.isKillShot = true;\n                result.isAmputate = enableAmputate && armorLocationData.isAmputate && aspect === Aspect.EDGED;\n                break;\n\n            case 'NA':\n                result.injuryLevel = 0;\n                break;\n        }\n\n        // Either mark as injured, or if not injured just immediately return.\n        if (result.injuryLevel > 0) {\n            result.isInjured = true;\n        } else {\n            return result;\n        }\n\n        // Optional Rule - Bloodloss (Combat 14)\n        result.isBleeder = enableBloodloss && result.injuryLevel >= 4 && result.aspect != Aspect.FIRE;\n\n        // Optional Rule - Limb Injuries (Combat 14)\n        if (armorLocationData.isFumble && !dialogOptions.actor.hasCondition(Condition.NO_FUMBLE)) {\n            result.isFumble = enableLimbInjuries && result.injuryLevel >= 4;\n            result.isFumbleRoll = enableLimbInjuries || (!result.isFumble && result.injuryLevel >= 2);\n        }\n\n        // Optional Rule - Limb Injuries (Combat 14)\n        if (armorLocationData.isStumble && !dialogOptions.actor.hasCondition(Condition.NO_STUMBLE)) {\n            result.isStumble = enableLimbInjuries && result.injuryLevel >= 4;\n            result.isStumbleRoll = enableLimbInjuries || (!result.isStumble && result.injuryLevel >= 2);\n        }\n\n        return result;\n    }\n\n    /**\n     * Return either the item specified by location, or if location === 'Random',\n     * then randomly chooses a location and returns the item associated with it.\n     *\n     * @param {*} location\n     * @param {*} aim\n     * @param {*} items\n     */\n    static _calcLocation(location, aim, items) {\n        const lcAim = aim.toLowerCase();\n        let result = null;\n        if (location.toLowerCase() === 'random') {\n            // First, get total of all probWeight for a given aim\n            let totalWeight = 0;\n            let numArmorLocations = 0;\n            items.forEach((it) => {\n                if (it.type === ItemType.ARMORLOCATION) {\n                    totalWeight += it.system.probWeight[lcAim];\n                    numArmorLocations++;\n                }\n            });\n\n            // if no armorlocations found, then return null\n            if (numArmorLocations === 0) {\n                return null;\n            }\n\n            if (totalWeight % 100) {\n                if (game.user.isGM)\n                    ui.notifications.warn(\n                        `Armor prob weight is NOT equal to 100, 1000 or 10000. ${location} ${aim} ${\n                            items.contents.length ? items.contents[0].parent.name : 'Unknown'\n                        } ${totalWeight}`,\n                        {permanent: true}\n                    );\n            }\n\n            // At this point, we know we found armorlocations,\n            // but it is possible that they all have a weight\n            // of zero.  In that case, we will end up just\n            // picking the first one.\n\n            // Assuming we have found some weights, we can now\n            // roll to get a random number.\n            let rollWeight = 0;\n            if (totalWeight > 0) {\n                rollWeight = Math.floor(foundry.dice.MersenneTwister.random() * totalWeight) + 1;\n            }\n\n            // find the location that meets that number\n            let done = false;\n            items.forEach((it) => {\n                if (!done && it.type === ItemType.ARMORLOCATION) {\n                    rollWeight -= it.system.probWeight[lcAim];\n                    if (rollWeight <= 0) {\n                        result = it;\n                        done = true;\n                    }\n                }\n            });\n        } else {\n            // Not random, let's just find the designated item\n            items.forEach((it) => {\n                if (result === null && it.type === ItemType.ARMORLOCATION && it.name === location) {\n                    result = it;\n                }\n            });\n        }\n\n        return result;\n    }\n\n    /*--------------------------------------------------------------------------------*/\n    /*        GENERAL DAMAGE ROLL PROCESSING\n    /*--------------------------------------------------------------------------------*/\n\n    /**\n     * Performs a damage roll, presenting a dialog\n     * to collect information about the damage.\n     *\n     * rollData is expected to contain the following values:\n     *  weapon: Selected weapon (or blank for none)\n     *  speaker: the Speaker to use in Chat\n     *  rollMode: the rollMode to use\n     *  actorData: actor data\n     *\n     * @param {Object} rollData\n     */\n    static async damageRoll(rollData) {\n        const speaker = rollData.speaker || ChatMessage.getSpeaker();\n\n        let weapon = DiceHM3.calcWeaponAspect(rollData.weapon, rollData.data.items);\n\n        const dialogOptions = {\n            type: 'damage',\n            weapon: rollData.weapon,\n            weaponAspect: rollData.aspect ? rollData.aspect : weapon.defaultAspect,\n            weaponAspects: weapon.aspects,\n            data: rollData.actorData\n        };\n\n        // Create the Roll instance\n        const roll = await DiceHM3.damageDialog(dialogOptions);\n\n        // If user cancelled the roll, then return immediately\n        if (!roll) return null;\n\n        // Prepare for Chat Message\n        const chatTemplate = 'systems/hm3/templates/chat/damage-card.hbs';\n\n        let title = 'Other Weapon Damage';\n        if (rollData.weapon != '') {\n            title = `${rollData.weapon} Damage`;\n        }\n\n        const totalImpact = weapon.aspects[roll.chosenAspect] + roll.addlWeaponImpact + roll.rollObj.total;\n\n        const notesData = foundry.utils.mergeObject(rollData.notesData, {\n            actor: speaker.alias,\n            aspect: roll.chosenAspect,\n            dice: Number(roll.damageDice),\n            impact: weapon.aspects[roll.chosenAspect],\n            addlImpact: roll.addlWeaponImpact,\n            totalImpact: totalImpact,\n            roll: roll.rollObj.total\n        });\n        const renderedNotes = rollData.notes ? utility.stringReplacer(rollData.notes, notesData) : '';\n\n        const chatTemplateData = {\n            title: title,\n            weaponAspect: roll.chosenAspect,\n            damageDice: Number(roll.damageDice),\n            weaponImpact: weapon.aspects[roll.chosenAspect],\n            addlWeaponImpact: roll.addlWeaponImpact,\n            totalImpact: totalImpact,\n            impactRoll: roll.rollObj.dice[0].values.join(' + '),\n            rollValue: roll.rollObj.total,\n            notes: renderedNotes,\n            roll: roll\n        };\n        const html = await renderTemplate(chatTemplate, chatTemplateData);\n\n        const messageData = {\n            content: html.trim(),\n            roll: roll.rollObj,\n            sound: CONFIG.sounds.dice,\n            speaker: speaker,\n            style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n            user: game.user.id\n        };\n\n        const messageOptions = {};\n\n        // Create a chat message\n        ChatMessage.applyRollMode(messageData, game.settings.get('core', 'rollMode'));\n        await ChatMessage.create(messageData, messageOptions);\n\n        return chatTemplateData;\n    }\n\n    /**\n     * Returns a structure specifying the default aspect for a weapon, as well as the\n     * impact values for all other aspects.  The default aspect is always the aspect\n     * with the greatest impact.\n     *\n     * @param {*} weapon Name of weapon\n     * @param {*} items List of items containing 'weapongear' items.\n     */\n    static calcWeaponAspect(weapon, items) {\n        // Note that although \"Fire\" is in this list, because it is a\n        // type of damage, no normal weapon uses it as its aspect.\n        // It is here so that it can be selected (no default impact\n        // damage would be specified for that aspect).\n        const result = {\n            defaultAspect: 'Other',\n            aspects: {\n                'Blunt': 0,\n                'Edged': 0,\n                'Fire': 0,\n                'Frost': 0,\n                'Piercing': 0,\n                'Other': 0\n            }\n        };\n\n        // Search for the specified weapon, and then choose the aspect with\n        // the greatest impact (this will become the default aspect)\n        items.forEach((it) => {\n            const itemData = it.system;\n            if (it.type === 'weapongear' && it.name === weapon) {\n                let maxImpact = Math.max(itemData.blunt, itemData.piercing, itemData.edged, 0);\n                result.aspects[Aspect.BLUNT] = itemData.blunt;\n                result.aspects[Aspect.EDGED] = itemData.edged;\n                result.aspects[Aspect.PIERCING] = itemData.piercing;\n                if (maxImpact === itemData.piercing) {\n                    result.defaultAspect = Aspect.PIERCING;\n                } else if (maxImpact === itemData.edged) {\n                    result.defaultAspect = Aspect.EDGED;\n                } else if (maxImpact === itemData.blunt) {\n                    result.defaultAspect = Aspect.BLUNT;\n                } else {\n                    // This shouldn't happen, but if all else fails, choose \"Other\"\n                    result.defaultAspect = 'Other';\n                }\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Renders a dialog to get the information for a damage roll, and then\n     * perform a number of d6 dice rolls to determine results.  Returns Roll object\n     * representing outcome of die rolls, or null if user cancelled dialog.\n     *\n     * @param {*} dialogOptions\n     */\n    static async damageDialog(dialogOptions) {\n        // Render modal dialog\n        let dlgTemplate = dialogOptions.template || 'systems/hm3/templates/dialog/damage-dialog.hbs';\n        let dialogData = {\n            weapon: dialogOptions.weapon,\n            damageDice: 1,\n            weaponAspect: dialogOptions.weaponAspect,\n            weaponAspects: dialogOptions.weaponAspects,\n            addlWeaponImpact: 0\n        };\n        const html = await renderTemplate(dlgTemplate, dialogData);\n\n        // Create the dialog window\n        return Dialog.prompt({\n            title: dialogOptions.label,\n            content: html.trim(),\n            label: 'Roll',\n            callback: async (html) => {\n                const form = html[0].querySelector('form');\n                const formAddlWeaponImpact = Number(form.addlWeaponImpact.value);\n                const formDamageDice = Number(form.damageDice.value);\n                const formWeaponAspect = form.weaponAspect.value;\n                let roll = await DiceHM3.rollTest({\n                    type: dialogOptions.type,\n                    target: 0,\n                    data: dialogOptions.data,\n                    diceSides: 6,\n                    diceNum: formDamageDice,\n                    modifier: 0\n                });\n                let result = {\n                    type: roll.type,\n                    chosenAspect: formWeaponAspect,\n                    damageDice: formDamageDice,\n                    addlWeaponImpact: formAddlWeaponImpact,\n                    rollObj: roll.rollObj\n                };\n                return result;\n            }\n        });\n    }\n\n    /*--------------------------------------------------------------------------------*/\n    /*        MISSILE ATTACK ROLL PROCESSING\n    /*--------------------------------------------------------------------------------*/\n\n    static async missileAttackRoll(rollData) {\n        const speaker = rollData.speaker || ChatMessage.getSpeaker();\n\n        // Create the Roll instance\n        const roll = await DiceHM3.missileAttackDialog(rollData);\n\n        // If user cancelled the roll, then return immediately\n        if (!roll) return null;\n\n        // Prepare for Chat Message\n        const chatTemplate = 'systems/hm3/templates/chat/missile-attack-card.hbs';\n\n        const notesData = foundry.utils.mergeObject(rollData.notesData, {\n            actor: speaker.alias,\n            aspect: rollData.aspect,\n            range: roll.range,\n            rangeModifier: roll.rangeModifier,\n            addlModifier: roll.addlModifier,\n            target: roll.modifiedTarget,\n            isSuccess: roll.isSuccess,\n            isCritical: roll.isCritical,\n            isCS: roll.isSuccess && roll.isCritical,\n            isMS: roll.isSuccess && !roll.isCritical,\n            isMF: !roll.isSuccess && !roll.isCritical,\n            isCF: !roll.isSuccess && roll.isCritical,\n            roll: roll.rollObj.total\n        });\n        const renderedNotes = rollData.notes ? utility.stringReplacer(rollData.notes, notesData) : '';\n\n        const chatTemplateData = {\n            title: `${rollData.name} Attack`,\n            addlModifier: Math.abs(roll.addlModifier),\n            amPlusMinus: roll.addlModifier < 0 ? '-' : '+',\n            aspect: rollData.aspect,\n            debug: CONFIG.debug.hm3 && game.user.isGM,\n            description: roll.description,\n            isCritical: roll.isCritical,\n            isSuccess: roll.isSuccess,\n            modifiedTarget: roll.modifiedTarget,\n            notes: renderedNotes,\n            origTarget: rollData.target,\n            range: roll.range,\n            rangeModifier: Math.abs(roll.rangeModifier),\n            rmPlusMinus: roll.rangeModifier < 0 ? '-' : '+',\n            roll: roll,\n            rollFormula: roll.rollObj.formula,\n            rollResult: roll.rollObj.result,\n            rollValue: roll.rollObj.total\n        };\n        const html = await renderTemplate(chatTemplate, chatTemplateData);\n\n        const messageData = {\n            content: html.trim(),\n            roll: roll.rollObj,\n            sound: CONFIG.sounds.dice,\n            speaker: speaker,\n            style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n            user: game.user.id\n        };\n\n        const messageOptions = {};\n\n        // Create a chat message\n        ChatMessage.applyRollMode(messageData, game.settings.get('core', 'rollMode'));\n        await ChatMessage.create(messageData, messageOptions);\n\n        return chatTemplateData;\n    }\n\n    static async missileAttackDialog(dialogOptions) {\n        // Render modal dialog\n        let dlgTemplate = dialogOptions.template || 'systems/hm3/templates/dialog/attack-dialog.hbs';\n\n        let dialogData = {\n            aimLocations: ['High', 'Mid', 'Low'],\n            defaultAim: 'Mid',\n            target: dialogOptions.target\n        };\n\n        const shortDesc = `Short (${dialogOptions.rangeShort})`;\n        const mediumDesc = `Medium (${dialogOptions.rangeMedium})`;\n        const longDesc = `Long (${dialogOptions.rangeLong})`;\n        const extremeDesc = `Extreme (${dialogOptions.rangeExtreme})`;\n        dialogData.ranges = {};\n        dialogData.ranges[shortDesc] = 'Short';\n        dialogData.ranges[mediumDesc] = 'Medium';\n        dialogData.ranges[longDesc] = 'Long';\n        dialogData.ranges[extremeDesc] = 'Extreme';\n        dialogData.rangeExceedsExtreme = false;\n        dialogData.defaultRange = extremeDesc;\n\n        const html = await renderTemplate(dlgTemplate, dialogData);\n        const title = `${dialogOptions.name} Attack`;\n\n        // Create the dialog window\n        return Dialog.prompt({\n            title: dialogOptions.label,\n            content: html.trim(),\n            label: 'Roll',\n            callback: async (html) => {\n                const form = html[0].querySelector('form');\n                const formAddlModifier = Number(form.addlModifier.value);\n                let formRange = form.range.value;\n                let rangeModifier;\n                if (formRange === shortDesc) {\n                    rangeModifier = 0;\n                    formRange = 'Short';\n                } else if (formRange === mediumDesc) {\n                    rangeModifier = -20;\n                    formRange = 'Medium';\n                } else if (formRange === longDesc) {\n                    rangeModifier = -40;\n                    formRange = 'Long';\n                } else {\n                    rangeModifier = -80;\n                    formRange = 'Extreme';\n                }\n\n                let roll = await DiceHM3.rollTest({\n                    type: dialogOptions.type,\n                    target: dialogOptions.target,\n                    data: dialogOptions.data,\n                    diceSides: 100,\n                    diceNum: 1,\n                    modifier: formAddlModifier + rangeModifier\n                });\n\n                let result = {\n                    type: roll.type,\n                    origTarget: dialogOptions.target,\n                    range: formRange,\n                    rangeModifier: rangeModifier,\n                    addlModifier: formAddlModifier,\n                    modifiedTarget: Number(dialogOptions.target) + rangeModifier + formAddlModifier,\n                    isSuccess: roll.isSuccess,\n                    isCritical: roll.isCritical,\n                    description: roll.description,\n                    rollObj: roll.rollObj\n                };\n                return result;\n            }\n        });\n    }\n\n    /*--------------------------------------------------------------------------------*/\n    /*        MISSILE DAMAGE ROLL PROCESSING\n    /*--------------------------------------------------------------------------------*/\n\n    static async missileDamageRoll(rollData) {\n        const speaker = rollData.speaker || ChatMessage.getSpeaker();\n\n        const dialogOptions = {\n            name: rollData.name,\n            ranges: {\n                'Short': rollData.impactShort,\n                'Medium': rollData.impactMedium,\n                'Long': rollData.impactLong,\n                'Extreme': rollData.impactExtreme\n            },\n            defaultRange: rollData.defaultRange ? rollData.defaultRange : 'Extreme',\n            data: rollData.data\n        };\n\n        // Create the Roll instance\n        const roll = await DiceHM3.missileDamageDialog(dialogOptions);\n\n        // If user cancelled the roll, then return immediately\n        if (!roll) return null;\n\n        // Prepare for Chat Message\n        const chatTemplate = 'systems/hm3/templates/chat/missile-damage-card.hbs';\n\n        let title = 'Missile Damage';\n        if (rollData.name != '') {\n            title = `${rollData.name} Damage`;\n        }\n\n        let rangeImpact = 0;\n        if (roll.range === 'Short') {\n            rangeImpact = rollData.impactShort;\n        } else if (roll.range === 'Medium') {\n            rangeImpact = rollData.impactMedium;\n        } else if (roll.range === 'Long') {\n            rangeImpact = rollData.impactLong;\n        } else if (roll.range === 'Extreme') {\n            rangeImpact = rollData.impactExtreme;\n        }\n\n        const totalImpact = Number(rangeImpact) + Number(roll.addlImpact) + Number(roll.rollObj.total);\n\n        const notesData = foundry.utils.mergeObject(rollData.notesData, {\n            actor: speaker.alias,\n            aspect: rollData.aspect,\n            range: roll.range,\n            dice: Number(roll.damageDice),\n            impact: rangeImpact,\n            addlImpact: roll.addlImpact,\n            totalImpact: totalImpact,\n            roll: roll.rollObj.total\n        });\n        const renderedNotes = rollData.notes ? utility.stringReplacer(rollData.notes, notesData) : '';\n\n        const chatTemplateData = {\n            title: title,\n            aspect: rollData.aspect,\n            range: roll.range,\n            damageDice: Number(roll.damageDice),\n            rangeImpact: rangeImpact,\n            addlImpact: roll.addlImpact,\n            totalImpact: totalImpact,\n            rollValue: roll.rollObj.total,\n            notes: renderedNotes,\n            roll: roll\n        };\n        const html = await renderTemplate(chatTemplate, chatTemplateData);\n\n        const messageData = {\n            content: html.trim(),\n            roll: roll.rollObj,\n            sound: CONFIG.sounds.dice,\n            speaker: speaker,\n            style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n            user: game.user.id\n        };\n\n        const messageOptions = {};\n\n        // Create a chat message\n        ChatMessage.applyRollMode(messageData, game.settings.get('core', 'rollMode'));\n        await ChatMessage.create(messageData, messageOptions);\n\n        return chatTemplateData;\n    }\n\n    static async missileDamageDialog(dialogOptions) {\n        // Render modal dialog\n        let dlgTemplate = dialogOptions.template || 'systems/hm3/templates/dialog/missile-damage-dialog.hbs';\n        let dialogData = {\n            name: dialogOptions.name,\n            ranges: dialogOptions.ranges,\n            defaultRange: dialogOptions.defaultRange\n        };\n        const html = await renderTemplate(dlgTemplate, dialogData);\n\n        const title = `${dialogOptions.name} Missile Damage`;\n\n        // Create the dialog window\n        return Dialog.prompt({\n            title: dialogOptions.label,\n            content: html.trim(),\n            label: 'Roll',\n            callback: async (html) => {\n                const form = html[0].querySelector('form');\n                const formAddlImpact = Number(form.addlImpact.value);\n                const formDamageDice = Number(form.damageDice.value);\n                const formRange = form.range.value;\n                let roll = await DiceHM3.rollTest({\n                    type: dialogOptions.type,\n                    target: 0,\n                    data: dialogOptions.data,\n                    diceSides: 6,\n                    diceNum: formDamageDice,\n                    modifier: 0\n                });\n                let result = {\n                    type: roll.type,\n                    range: formRange,\n                    damageDice: formDamageDice,\n                    addlImpact: formAddlImpact,\n                    rollObj: roll.rollObj\n                };\n                return result;\n            }\n        });\n    }\n\n    /*--------------------------------------------------------------------------------*/\n    /*        GENERIC DICE ROLLING PROCESSING\n    /*--------------------------------------------------------------------------------*/\n\n    static async rollTest(testData) {\n        const diceType = testData.diceSides === 6 ? 'd6' : 'd100';\n        const numDice = testData.diceNum > 0 ? testData.diceNum : 1;\n        const diceSpec = numDice + diceType;\n\n        const modifier = Number(testData.modifier);\n        const baseTargetNum = Number(testData.target) + modifier;\n        // Ensure target num is between 9 and 95; always a 5% chance of success/failure\n        const targetNum = diceType === 'd100' ? game.hm3.macros.HM100Check(baseTargetNum) : baseTargetNum;\n\n        const roll = await game.hm3.macros.rollObjectEvaluatedAsync(diceSpec, {\n            name: testData.name,\n            target: targetNum,\n            targetCritical: testData.isTreatment && testData.noTreatment ? false : null, // No Treatment should auto fail with MF\n            targetSuccess: testData.isTreatment && testData.noTreatment ? false : null, // No Treatment should auto fail with MF\n            type: testData.type\n        });\n\n        if (!roll) {\n            console.error(`Roll evaluation failed, diceSpec=${diceSpec}`);\n        }\n\n        let description = '';\n        let isCrit = false;\n        let isSuccess = false;\n        let isSubstantial = false;\n\n        if (diceType === 'd100') {\n            isCrit = roll.total % 5 === 0;\n            const levelDesc = isCrit ? 'Critical' : 'Marginal';\n\n            // ********** Failure ***********\n            if (roll.total > targetNum) {\n                description = levelDesc + ' Failure';\n            }\n            // ********** Success ***********\n            else {\n                description = levelDesc + ' Success';\n                isSuccess = true;\n            }\n            // ********** Substantial Failure ***********\n            if (!isSuccess && roll.total > targetNum + (100 - targetNum) / 2) {\n                isSubstantial = true;\n                if (!isCrit) description = 'Substantial Failure';\n                // if (isCrit) description = 'Substantial ' + description;\n                // else description = 'Substantial Failure';\n            }\n            // ********** Substantial Success ***********\n            else if (isSuccess && roll.total <= targetNum / 2) {\n                isSubstantial = true;\n                if (!isCrit) description = 'Substantial Success';\n                // if (isCrit) description = 'Substantial ' + description;\n                // else description = 'Substantial Success';\n            }\n        } else {\n            isSuccess = roll.total <= targetNum;\n            description = isSuccess ? 'Success' : 'Failure';\n        }\n\n        if (testData.noSubstantial) description = description.replace('Substantial', 'Marginal');\n\n        let rollResults = {\n            'description': description,\n            'isCapped': baseTargetNum !== targetNum,\n            'isCritical': isCrit,\n            'isSubstantial': isSubstantial,\n            'isSuccess': isSuccess,\n            'modifier': modifier,\n            'preData': testData,\n            'rollObj': roll,\n            'target': targetNum,\n            'type': testData.type\n        };\n        return rollResults;\n    }\n\n    /*--------------------------------------------------------------------------------*/\n    /*        UTILITY FUNCTIONS\n    /*--------------------------------------------------------------------------------*/\n\n    /**\n     *\n     * @param {*} options\n     * @returns\n     */\n    static getRollMode(options) {\n        options = foundry.utils.mergeObject({skill: null, isAppraisal: false, blind: false, private: false}, options);\n        // publicroll, gmroll, blindroll & selfroll (CONST.DICE_ROLL_MODES.BLIND)\n        const blind =\n            options.blind ||\n            game.settings.get('core', 'rollMode') === CONST.DICE_ROLL_MODES.BLIND ||\n            ((HM3.blindRolls.includes(options.skill) || options.isAppraisal) &&\n                !!game.settings.get('hm3', 'blindGmMode'));\n        const rollMode = blind\n            ? CONST.DICE_ROLL_MODES.BLIND\n            : options.private\n            ? CONST.DICE_ROLL_MODES.PRIVATE\n            : game.settings.get('core', 'rollMode');\n\n        return rollMode;\n    }\n}\n","/**\r\n * A lock for synchronizing async operations.\r\n * Use this to protect a critical section\r\n * from getting modified by multiple async operations\r\n * at the same time.\r\n */\r\nexport class Mutex {\r\n    /**\r\n     * When multiple operations attempt to acquire the lock,\r\n     * this queue remembers the order of operations.\r\n     */\r\n    _queue = [];\r\n\r\n    _isLocked = false;\r\n\r\n    /**\r\n     * Wait until the lock is acquired.\r\n     * @returns A function that releases the acquired lock.\r\n     */\r\n    acquire() {\r\n        return new Promise((resolve) => {\r\n            this._queue.push({resolve});\r\n            this._dispatch();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Enqueue a function to be run serially.\r\n     *\r\n     * This ensures no other functions will start running\r\n     * until `callback` finishes running.\r\n     * @param callback Function to be run exclusively.\r\n     * @returns The return value of `callback`.\r\n     */\r\n    async runExclusive(callback) {\r\n        const release = await this.acquire();\r\n        try {\r\n            return await callback();\r\n        } finally {\r\n            release();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check the availability of the resource\r\n     * and provide access to the next operation in the queue.\r\n     *\r\n     * _dispatch is called whenever availability changes,\r\n     * such as after lock acquire request or lock release.\r\n     */\r\n    _dispatch() {\r\n        if (this._isLocked) {\r\n            // The resource is still locked.\r\n            // Wait until next time.\r\n            return;\r\n        }\r\n        const nextEntry = this._queue.shift();\r\n        if (!nextEntry) {\r\n            // There is nothing in the queue.\r\n            // Do nothing until next dispatch.\r\n            return;\r\n        }\r\n        // The resource is available.\r\n        this._isLocked = true; // Lock it.\r\n        // and give access to the next operation\r\n        // in the queue.\r\n        nextEntry.resolve(this._buildRelease());\r\n    }\r\n\r\n    /**\r\n     * Build a release function for each operation\r\n     * so that it can release the lock after\r\n     * the operation is complete.\r\n     */\r\n    _buildRelease() {\r\n        return () => {\r\n            // Each release function make\r\n            // the resource available again\r\n            this._isLocked = false;\r\n            // and call dispatch.\r\n            this._dispatch();\r\n        };\r\n    }\r\n}\r\n","import {rangeToTarget} from './combat.js';\nimport {Condition, ItemType} from './hm3-types.js';\nimport * as macros from './macros.js';\nimport {Mutex} from './mutex.js';\n\nlet tokenMutex;\n\n/**\n * Extend the base Token.\n * @extends {Token}\n */\nexport class TokenHM3 extends Token {\n    constructor(...args) {\n        super(...args);\n        if (!tokenMutex) tokenMutex = new Mutex();\n    }\n\n    /** @override */\n    _onClickLeft(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickLeft2(event);\n        else super._onClickLeft(event);\n    }\n\n    /** @override */\n    _onClickRight(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickRight2(event);\n        else super._onClickRight(event);\n    }\n\n    /**\n     *\n     * @param {Condition} condition\n     * @returns\n     */\n    async addCondition(condition, options = {}) {\n        return macros.createCondition(this, condition, options);\n    }\n\n    /**\n     *\n     * @param {Condition} condition\n     * @returns\n     */\n    hasCondition(condition) {\n        return this.actor.hasCondition(condition);\n    }\n\n    /**\n     *\n     * @param {Condition} condition\n     * @returns\n     */\n    getCondition(condition) {\n        return this.actor.getCondition(condition);\n    }\n\n    getConditions() {\n        return Object.values(game.hm3.Condition).filter((c) => this.hasCondition(c));\n    }\n\n    getConditionsWithMacro(macro) {\n        return Object.values(game.hm3.Condition).filter((c) => {\n            const ae = this.getCondition(c);\n            return ae?.flags?.effectMacro && ae.flags.effectmacro[macro]?.script;\n        });\n    }\n\n    /**\n     *\n     * @param {Condition} condition\n     * @param {number} [postpone=0]\n     * @returns\n     */\n    async disableCondition(condition, postpone = 0) {\n        return new Promise((resolve) =>\n            setTimeout(async () => {\n                await this.getCondition(condition)?.update({disabled: true});\n                resolve();\n            }, postpone)\n        );\n    }\n\n    /**\n     * Deletes a condition from a token.\n     * @param {Condition} condition\n     * @param {number} [postpone=0]\n     * @returns\n     */\n    async deleteCondition(condition, postpone = 0) {\n        return new Promise((resolve) =>\n            setTimeout(async () => {\n                await game.hm3.macros.deleteCondition(this, this.getCondition(condition));\n                resolve();\n            }, postpone)\n        );\n    }\n\n    /**\n     * Deletes all morale conditions from a token.\n     * @returns\n     */\n    async deleteAllMoraleConditions(except = null) {\n        if (except !== game.hm3.Condition.BERSERK) await this.deleteCondition(game.hm3.Condition.BERSERK);\n        if (except !== game.hm3.Condition.BROKEN) await this.deleteCondition(game.hm3.Condition.BROKEN);\n        if (except !== game.hm3.Condition.CAUTIOUS) await this.deleteCondition(game.hm3.Condition.CAUTIOUS);\n        if (except !== game.hm3.Condition.DESPERATE) await this.deleteCondition(game.hm3.Condition.DESPERATE);\n        if (except !== game.hm3.Condition.EMPOWERED) await this.deleteCondition(game.hm3.Condition.EMPOWERED);\n        if (except !== game.hm3.Condition.WEAKENED) await this.deleteCondition(game.hm3.Condition.WEAKENED);\n    }\n\n    /**\n     *\n     */\n    get player() {\n        return game.users.find((u) => !u.isGM && this.actor.testUserPermission(u, 'OWNER')) || null;\n    }\n\n    getInjuries() {\n        return this.actor.items.filter((item) => item.type === ItemType.INJURY);\n    }\n\n    isInjured() {\n        return this.getInjuries().length > 0;\n    }\n\n    hasInjury(id) {\n        return !!this.actor.items.find((i) => i.id === id);\n    }\n\n    hasSeriousInjuries() {\n        return this.getInjuries().filter((item) => item.system.injuryLevel >= 2).length > 0;\n    }\n\n    hasGreviousInjuries() {\n        return this.getInjuries().filter((item) => item.system.injuryLevel >= 4).length > 0;\n    }\n\n    hasSeriousLegInjuries() {\n        return (\n            this.getInjuries().filter(\n                (item) =>\n                    /\\b|leg|hip|thigh|knee|calf|foot|\\b/i.test(item.name.toLowerCase()) && item.system.injuryLevel >= 2\n            ).length > 0\n        );\n    }\n\n    hasGreviousLegInjuries() {\n        return (\n            this.getInjuries().filter(\n                (item) =>\n                    /\\b|leg|hip|thigh|knee|calf|foot|\\b/i.test(item.name.toLowerCase()) && item.system.injuryLevel >= 4\n            ).length > 0\n        );\n    }\n\n    /**\n     *\n     * @returns true, if this token has an engagement zone (COMBAT 6)\n     */\n    hasEngagementZone() {\n        if (!game.combat?.started) return false;\n\n        const cautious = this.hasCondition(Condition.CAUTIOUS);\n        const distracted = this.hasCondition(Condition.DISTRACTED);\n        const grappled = this.hasCondition(Condition.GRAPPLED);\n        const incapacitated = this.hasCondition(Condition.INCAPACITATED);\n        const prone = this.hasCondition(Condition.PRONE);\n        const shocked = this.hasCondition(Condition.SHOCKED);\n        const unconscious = this.hasCondition(Condition.UNCONSCIOUS);\n\n        return (\n            !cautious && !distracted && !this.dying && !grappled && !incapacitated && !prone && !shocked && !unconscious\n        );\n    }\n\n    getEngagedTokens(exclusively = false) {\n        if (!game.combat?.started) return [];\n\n        const all = canvas.scene.tokens.contents;\n        let opponents = [];\n        if (this.document.disposition === CONST.TOKEN_DISPOSITIONS.FRIENDLY)\n            opponents = all.filter(\n                (token) =>\n                    [\n                        CONST.TOKEN_DISPOSITIONS.HOSTILE,\n                        CONST.TOKEN_DISPOSITIONS.NEUTRAL,\n                        CONST.TOKEN_DISPOSITIONS.SECRET\n                    ].includes(token.disposition) && token.id !== this.id\n            );\n        else if (this.document.disposition === CONST.TOKEN_DISPOSITIONS.HOSTILE)\n            opponents = all.filter(\n                (token) =>\n                    [\n                        CONST.TOKEN_DISPOSITIONS.FRIENDLY,\n                        CONST.TOKEN_DISPOSITIONS.NEUTRAL,\n                        CONST.TOKEN_DISPOSITIONS.SECRET\n                    ].includes(token.disposition) && token.id !== this.id\n            );\n        else\n            opponents = all.filter(\n                (token) =>\n                    [\n                        CONST.TOKEN_DISPOSITIONS.FRIENDLY,\n                        CONST.TOKEN_DISPOSITIONS.HOSTILE,\n                        CONST.TOKEN_DISPOSITIONS.NEUTRAL,\n                        CONST.TOKEN_DISPOSITIONS.SECRET\n                    ].includes(token.disposition) && token.id !== this.id\n            );\n\n        let engaged = [\n            ...opponents\n                .filter((tokenDoc) => rangeToTarget(this, tokenDoc.object) < 5.1 && tokenDoc.object.hasEngagementZone())\n                .map((token) => token.object)\n        ];\n\n        if (exclusively) engaged = [...engaged.filter((token) => token.getEngagedTokens().length <= 1)];\n\n        // console.info(`HM3 | Token ${this.name} ${exclusively ? 'exclusively ' : ''}engaged with ${engaged.length} tokens:`, engaged);\n\n        return engaged;\n    }\n\n    /**\n     *\n     * @returns true, if this token is engaged in combat (COMBAT 6)\n     */\n    isEngaged(exclusively = false) {\n        return (\n            game.combat?.started &&\n            (exclusively\n                ? this.getEngagedTokens(exclusively).length === 1\n                : this.getEngagedTokens(exclusively).length > 0)\n        );\n    }\n\n    /**\n     *\n     * @returns true, if this token has a reaction zone (COMBAT 6)\n     */\n    hasReactionZone() {\n        return !this.isEngaged() && this.hasEngagementZone();\n    }\n\n    async turnEnds(postpone = 0) {\n        if (!game.combat?.started) return;\n\n        console.info(`HM3 | Token ${this.name} plans to finish the turn.`);\n\n        // delay so that other hooks are executed first\n        await new Promise((resolve) =>\n            setTimeout(async () => {\n                if (!game.combat?.started) return;\n                console.info(`HM3 | Token ${this.name} started the end of the turn.`);\n                await game.combat.nextTurn(this.id);\n                console.info(`HM3 | Token ${this.name} has finished the turn.`);\n                resolve();\n            }, postpone)\n        );\n    }\n\n    get dying() {\n        return (\n            this.hasCondition(Condition.DYING) ||\n            (this.document.hasStatusEffect('dead') && this.document.disposition === CONST.TOKEN_DISPOSITIONS.HOSTILE)\n        );\n    }\n\n    pronoun(capital = false) {\n        const p = () => {\n            if (!this.actor.system.gender) return 'It';\n            return this.actor.system.gender === 'Male' ? 'His' : 'Her';\n        };\n        return capital ? p() : p().toLowerCase();\n    }\n\n    async toggleVisibility(options = {}) {\n        let isHidden = options?.active !== undefined ? options.active : this.document.hidden;\n        const tokens = this.controlled ? canvas.tokens.controlled : [this];\n        const updates = tokens.map((t) => {\n            return {_id: t.id, hidden: !isHidden};\n        });\n        return canvas.scene.updateEmbeddedDocuments('Token', updates);\n    }\n}\n\nexport class TokenDocumentHM3 extends TokenDocument {\n    _onCreate(data, options, userId) {\n        super._onCreate(data, options, userId);\n        if (this.testUserPermission(game.user, 'OWNER'))\n            this.setFlag('wall-height', 'tokenHeight', this.actor.system.height | 6);\n    }\n    /**\n     *\n     * @param {Condition} condition\n     * @returns\n     */\n    async addCondition(condition, options = {}) {\n        return this.object.addCondition(condition, options);\n    }\n\n    /**\n     *\n     * @param {Condition} condition\n     * @returns\n     */\n    hasCondition(condition) {\n        return this.object?.hasCondition(condition) || false;\n    }\n\n    /**\n     *\n     * @param {Condition} condition\n     * @returns\n     */\n    getCondition(condition) {\n        return this.object.getCondition(condition);\n    }\n\n    /**\n     *\n     * @param {Condition} condition\n     * @param {number} [postpone=0]\n     * @returns\n     */\n    async disableCondition(condition, postpone = 0) {\n        return this.object.disableCondition(condition, postpone);\n    }\n\n    /**\n     * Deletes a condition from a token.\n     * @param {Condition} condition\n     * @param {number} [postpone=0]\n     * @returns\n     */\n    async deleteCondition(condition, postpone = 0) {\n        return this.object.deleteCondition(condition, postpone);\n    }\n\n    /**\n     * Deletes all morale conditions from a token.\n     * @returns\n     */\n    async deleteAllMoraleConditions(except = null) {\n        return this.object.deleteAllMoraleConditions(except);\n    }\n\n    get player() {\n        return this.object?.player || false;\n    }\n\n    isInjured() {\n        return this.object.isInjured();\n    }\n\n    hasInjury(id) {\n        return this.object.hasInjury(id);\n    }\n\n    hasEngagementZone() {\n        return this.object.hasEngagementZone();\n    }\n\n    getEngagedTokens(exclusively = false) {\n        return this.object.getEngagedTokens(exclusively);\n    }\n\n    isEngaged(exclusively = false) {\n        return this.object.isEngaged(exclusively);\n    }\n\n    hasReactionZone() {\n        return this.object.hasReactionZone();\n    }\n\n    async turnEnds(postpone = 0) {\n        return this.object.turnEnds(postpone);\n    }\n\n    get dying() {\n        return this.object.dying;\n    }\n\n    pronoun(capital = false) {\n        return this.object.pronoun(capital);\n    }\n\n    async toggleVisibility(options = {}) {\n        return this.object.toggleVisibility(options);\n    }\n}\n","import {HM3} from './config.js';\nimport {DiceHM3} from './hm3-dice.js';\nimport {TokenHM3} from './hm3-token.js';\nimport {ActorType, ArcanePower, Aspect, Condition, ItemType} from './hm3-types.js';\nimport * as utility from './utility.js';\n\n/**\n * Initiates a missile attack.\n *\n * Displays a missile attack dialog asking for attributes of the attack (aim location,\n * special modifiers, etc.) and generates a missile attack chat message that includes\n * buttons for selecting the appropriate defense.\n *\n * No die rolling occurs as a result of this function, only the declaration of the attack.\n *\n * @param atkToken {TokenHM3} Token representing attacker\n * @param defToken {TokenHM3} Token representing defender\n * @param missileItem {ItemHM3} Missile weapon used by attacker\n */\nexport async function missileAttack(atkToken, defToken, missileItem) {\n    if (!atkToken) {\n        ui.notifications.warn(`No attacker token identified.`);\n        return null;\n    }\n\n    if (!isValidToken(atkToken)) {\n        ui.notifications.error(`Attack token not valid.`);\n        console.error(`HM3 | missileAttack atkToken=${atkToken} is not valid.`);\n        return null;\n    }\n    console.assert(atkToken instanceof TokenHM3, `atkToken is NOT a TokenHM3 instance: ${atkToken}`);\n\n    if (!defToken) {\n        ui.notifications.warn(`No defender token identified.`);\n        return null;\n    }\n\n    if (!isValidToken(defToken)) {\n        ui.notifications.error(`Defender token not valid.`);\n        console.error(`HM3 | missileAttack defToken=${defToken} is not valid.`);\n        return null;\n    }\n    console.assert(defToken instanceof TokenHM3, `defToken is NOT a TokenHM3 instance: ${defToken}`);\n\n    if (!atkToken.isOwner) {\n        ui.notifications.warn(`You do not have permissions to perform this operation on ${atkToken.name}`);\n        return null;\n    }\n\n    if (atkToken.hasCondition(Condition.BROKEN)) {\n        ui.notifications.warn(`You cannot attack while you are '${Condition.BROKEN}'.`);\n        return null;\n    }\n\n    if (atkToken.hasCondition(Condition.CAUTIOUS)) {\n        ui.notifications.warn(`You cannot attack while you are '${Condition.CAUTIOUS}'.`);\n        return null;\n    }\n\n    if (atkToken.hasCondition(Condition.SHOCKED)) {\n        ui.notifications.warn(`You cannot attack while you are '${Condition.SHOCKED}'.`);\n        return null;\n    }\n\n    if (atkToken.hasCondition(Condition.UNCONSCIOUS)) {\n        ui.notifications.warn(`You cannot attack while you are '${Condition.UNCONSCIOUS}'.`);\n        return null;\n    }\n\n    const speaker = ChatMessage.getSpeaker({token: atkToken});\n    const range = rangeToTarget(atkToken, defToken);\n\n    const options = {\n        distance: Math.round(range),\n        type: 'Attack',\n        attackerName: atkToken.name,\n        defenderName: defToken.name\n    };\n\n    // If a weapon was provided, don't ask for it.\n    if (missileItem) {\n        if (missileItem.system.isEquipped) {\n            options['weapon'] = missileItem;\n        } else {\n            ui.notifications.warn(`${missileItem.name} is not equipped.`);\n            return null;\n        }\n    } else {\n        ui.notifications.warn(`You must specify a missile weapon to use.`);\n        return null;\n    }\n\n    if (atkToken.actor?.system?.eph?.missileAMLMod !== undefined) {\n        options['defaultModifier'] = atkToken.actor.system.eph.missileAMLMod;\n    }\n\n    const dialogResult = await attackDialog(options);\n\n    // If user cancelled the dialog, then return immediately\n    if (!dialogResult) return null;\n\n    if (!missileItem) {\n        missileItem = dialogResult.weapon;\n    }\n\n    if (game.settings.get('hm3', 'missileTracking') && atkToken.actor) {\n        if (missileItem.system.quantity <= 0) {\n            ui.notifications.warn(`No more ${missileItem.name} left, attack denied.`);\n            return null;\n        }\n\n        const item = atkToken.actor.items.get(missileItem.id);\n        item.update({'system.quantity': missileItem.system.quantity - 1});\n    }\n\n    dialogResult.addlModifier += dialogResult.aim === 'Mid' ? 0 : -10;\n    const effAML = game.hm3.macros.HM100Check(\n        dialogResult.weapon.system.attackMasteryLevel + dialogResult.addlModifier + dialogResult.rangeMod\n    );\n\n    // Prepare for Chat Message\n    const chatTemplate = 'systems/hm3/templates/chat/attack-card.hbs';\n    const grappled = defToken.hasCondition(Condition.GRAPPLED);\n    const incapacitated = defToken.hasCondition(Condition.INCAPACITATED);\n    const shocked = defToken.hasCondition(Condition.SHOCKED);\n    const stunned = defToken.hasCondition(Condition.STUNNED);\n    const unconscious = defToken.hasCondition(Condition.UNCONSCIOUS);\n    const atkIsHighVelocityMissile = /\\bbow\\b|shortbow|longbow|crossbow|\\bsling\\b|\\barrow\\b|\\bbolt\\b|\\bbullet\\b/i.test(\n        missileItem.name\n    );\n    const defHasShields = defToken.actor.itemTypes.weapongear.filter(\n        (w) => w.system.isEquipped && /shield|\\bbuckler\\b/i.test(w.name)\n    );\n    const noHighVelocityBlockAvailable = atkIsHighVelocityMissile && defHasShields.length === 0;\n\n    const chatTemplateData = {\n        title: `${missileItem.name} Missile Attack`,\n        addlModifierAbs: Math.abs(dialogResult.addlModifier),\n        addlModifierSign: dialogResult.addlModifier < 0 ? '-' : '+',\n        aim: dialogResult.aim,\n        aspect: dialogResult.aspect,\n        atkTokenId: atkToken.id,\n        attacker: atkToken.name,\n        debug: CONFIG.debug.hm3 && game.user.isGM,\n        defender: defToken.name,\n        defTokenId: defToken.id,\n        effAML,\n        hasBlock: !(grappled || incapacitated || shocked || stunned || unconscious) && !noHighVelocityBlockAvailable,\n        hasCounterstrike: false, // not possible against missile attacks\n        hasDodge: !(grappled || incapacitated || shocked || stunned || unconscious) && defToken.actor.system.dodge > 0,\n        hasEsoteric: false,\n        hasIgnore: true,\n        impactMod: dialogResult.impactMod,\n        origAML: missileItem.system.attackMasteryLevel,\n        rangeDist: Math.round(range),\n        rangeExceedsExtreme: dialogResult.rangeExceedsExtreme,\n        rangeModifierAbs: Math.abs(dialogResult.rangeMod),\n        rangeModSign: dialogResult.rangeMod < 0 ? '-' : '+',\n        rangeText: dialogResult.range,\n        visibleActorId: defToken.actor.id,\n        weaponName: missileItem.name,\n        weaponType: 'missile'\n    };\n    chatTemplateData.oneButton =\n        [\n            chatTemplateData.hasBlock,\n            chatTemplateData.hasCounterstrike,\n            chatTemplateData.hasDodge,\n            chatTemplateData.hasEsoteric,\n            chatTemplate.hasIgnore\n        ].filter(Boolean).length === 1;\n\n    const html = await renderTemplate(chatTemplate, chatTemplateData);\n\n    const messageData = {\n        content: html.trim(),\n        speaker,\n        type: CONST.CHAT_MESSAGE_STYLES.OTHER,\n        user: game.user.id\n    };\n\n    // Create a chat message\n    ChatMessage.applyRollMode(messageData, game.settings.get('core', 'rollMode'));\n    await ChatMessage.create(messageData, {});\n\n    if (game.settings.get('hm3', 'combatAudio')) {\n        foundry.audio.AudioHelper.play({src: 'sounds/drums.wav', autoplay: true, loop: false}, true);\n    }\n\n    return chatTemplateData;\n}\n\nexport async function esotericAttack(atkToken, defToken, esotericItem) {\n    if (!atkToken) {\n        ui.notifications.warn(`No attacker token identified.`);\n        return null;\n    }\n\n    if (!isValidToken(atkToken)) {\n        ui.notifications.error(`Attack token not valid.`);\n        console.error(`HM3 | esotericAttack atkToken=${atkToken} is not valid.`);\n        return null;\n    }\n    console.assert(atkToken instanceof TokenHM3, `atkToken is NOT a TokenHM3 instance: ${atkToken}`);\n\n    if (!defToken) {\n        ui.notifications.warn(`No defender token identified.`);\n        return null;\n    }\n\n    if (!isValidToken(defToken)) {\n        ui.notifications.error(`Defender token not valid.`);\n        console.error(`HM3 | esotericAttack defToken=${defToken} is not valid.`);\n        return null;\n    }\n    console.assert(defToken instanceof TokenHM3, `defToken is NOT a TokenHM3 instance: ${defToken}`);\n\n    if (!atkToken.isOwner) {\n        ui.notifications.warn(`You do not have permissions to perform this operation on ${atkToken.name}`);\n        return null;\n    }\n\n    if (atkToken.hasCondition(Condition.BROKEN)) {\n        ui.notifications.warn(`You cannot attack while you are '${Condition.BROKEN}'.`);\n        return null;\n    }\n\n    if (atkToken.hasCondition(Condition.CAUTIOUS)) {\n        ui.notifications.warn(`You cannot attack while you are '${Condition.CAUTIOUS}'.`);\n        return null;\n    }\n\n    if (atkToken.hasCondition(Condition.SHOCKED)) {\n        ui.notifications.warn(`You cannot attack while you are '${Condition.SHOCKED}'.`);\n        return null;\n    }\n\n    if (atkToken.hasCondition(Condition.UNCONSCIOUS)) {\n        ui.notifications.warn(`You cannot attack while you are '${Condition.UNCONSCIOUS}'.`);\n        return null;\n    }\n\n    const speaker = ChatMessage.getSpeaker({token: atkToken});\n    const distance = rangeToTarget(atkToken, defToken);\n\n    const options = {\n        attackerName: atkToken.name,\n        defenderName: defToken.name,\n        distance,\n        maxDistance: esotericItem.system.masteryLevel,\n        type: esotericItem.name,\n        weapon: esotericItem\n    };\n\n    if (options.distance > options.maxDistance) {\n        const msg = `Target ${defToken.name} is outside of ${esotericItem.name} range for attacker ${atkToken.name}; range=${distance}/${options.maxDistance}.`;\n        ui.notifications.warn(msg);\n        return null;\n    }\n\n    const dialogResult = await esotericAttackDialog(options);\n\n    // If user cancelled the dialog, then return immediately\n    if (!dialogResult) return null;\n\n    const effAML = game.hm3.macros.HM100Check(esotericItem.system.effectiveMasteryLevel + dialogResult.addlModifier);\n\n    // Prepare for Chat Message\n    const chatTemplate = 'systems/hm3/templates/chat/attack-card.hbs';\n    const chatTemplateData = {\n        title: `Esoteric Attack`,\n        addlInfo: dialogResult.addlInfo,\n        addlModifierAbs: Math.abs(dialogResult.addlModifier),\n        addlModifierSign: dialogResult.addlModifier < 0 ? '-' : '+',\n        atkTokenId: atkToken.id,\n        attacker: atkToken.name,\n        debug: CONFIG.debug.hm3 && game.user.isGM,\n        defender: defToken.name,\n        defTokenId: defToken.id,\n        effAML,\n        hasBlock: false,\n        hasCounterstrike: false,\n        hasDodge: false,\n        hasEsoteric: true,\n        hasIgnore: false,\n        origAML: esotericItem.system.effectiveMasteryLevel,\n        visibleActorId: defToken.actor.id,\n        weaponName: esotericItem.name,\n        weaponType: 'esoteric'\n    };\n    chatTemplateData.oneButton =\n        [\n            chatTemplateData.hasBlock,\n            chatTemplateData.hasCounterstrike,\n            chatTemplateData.hasDodge,\n            chatTemplateData.hasEsoteric,\n            chatTemplate.hasIgnore\n        ].filter(Boolean).length === 1;\n\n    const html = await renderTemplate(chatTemplate, chatTemplateData);\n\n    const messageData = {\n        content: html.trim(),\n        speaker,\n        type: CONST.CHAT_MESSAGE_STYLES.OTHER,\n        user: game.user.id\n    };\n\n    const messageOptions = {};\n\n    // Create a chat message\n    ChatMessage.applyRollMode(messageData, game.settings.get('core', 'rollMode'));\n    await ChatMessage.create(messageData, messageOptions);\n\n    if (game.settings.get('hm3', 'autoMarkUsedSkills')) {\n        const skill = esotericItem;\n        atkToken.actor.items.forEach((item) => {\n            if (item.name === skill && item.type === 'skill') {\n                item.update({'system.improveFlag': item.system.improveFlag + 1});\n            }\n        });\n    }\n\n    return chatTemplateData;\n}\n\n/**\n * Initiates a melee attack.\n *\n * Displays a melee attack dialog asking for attributes of the attack (aim location,\n * special modifiers, etc.) and generates a melee attack chat message that includes\n * buttons for selecting the appropriate defense.\n *\n * No die rolling occurs as a result of this function, only the declaration of the attack.\n *\n * @param atkToken {TokenHM3} Token representing attacker\n * @param defToken {TokenHM3} Token representing defender\n * @param weaponItem {ItemHM3} Melee weapon used by attacker\n */\nexport async function meleeAttack(atkToken, defToken, {weaponItem = null, unarmed = false, noDialog = false} = {}) {\n    if (!atkToken) {\n        ui.notifications.warn(`No attacker token identified.`);\n        return null;\n    }\n\n    if (!isValidToken(atkToken)) {\n        console.error(`HM3 | meleeAttack atkToken=${atkToken} is not valid.`);\n        return null;\n    }\n    console.assert(atkToken instanceof TokenHM3, `atkToken is NOT a TokenHM3 instance: ${atkToken}`);\n\n    if (!defToken) {\n        ui.notifications.warn(`No defender token identified.`);\n        return null;\n    }\n\n    if (!isValidToken(defToken)) {\n        console.error(`HM3 | meleeAttack defToken=${defToken} is not valid.`);\n        return null;\n    }\n    console.assert(defToken instanceof TokenHM3, `defToken is NOT a TokenHM3 instance: ${defToken}`);\n\n    if (!atkToken.isOwner) {\n        ui.notifications.warn(`You do not have permissions to perform this operation on ${atkToken.name}`);\n        return null;\n    }\n\n    if (atkToken.hasCondition(Condition.BROKEN)) {\n        ui.notifications.warn(`You cannot attack while you are '${Condition.BROKEN}'.`);\n        return null;\n    }\n\n    if (atkToken.hasCondition(Condition.CAUTIOUS)) {\n        ui.notifications.warn(`You cannot attack while you are '${Condition.CAUTIOUS}'.`);\n        return null;\n    }\n\n    if (atkToken.hasCondition(Condition.SHOCKED)) {\n        ui.notifications.warn(`You cannot attack while you are '${Condition.SHOCKED}'.`);\n        return null;\n    }\n\n    if (atkToken.hasCondition(Condition.UNCONSCIOUS)) {\n        ui.notifications.warn(`You cannot attack while you are '${Condition.UNCONSCIOUS}'.`);\n        return null;\n    }\n\n    const targetRange = rangeToTarget(atkToken, defToken, true);\n    if (targetRange > 1) {\n        const msg = `Target ${defToken.name} is outside of melee range for attacker ${atkToken.name}; range=${targetRange}.`;\n        console.warn(msg);\n        ui.notifications.warn(msg);\n        return null;\n    }\n\n    const speaker = ChatMessage.getSpeaker({token: atkToken});\n\n    // display dialog, get aspect, aim, and addl damage\n    const options = {\n        type: 'Attack',\n        attackerName: atkToken.name,\n        defenderName: defToken.name,\n        noDialog,\n        unarmed\n    };\n\n    // If a weapon was provided, don't ask for it.\n    if (weaponItem) {\n        if (weaponItem.system.isEquipped) {\n            options['weapon'] = weaponItem;\n        } else {\n            ui.notifications.warn(`For ${atkToken.name} ${weaponItem.name} is not equipped.`);\n            return null;\n        }\n    } else {\n        const defWpns = defaultMeleeWeapon(atkToken);\n        if (!defWpns.weapons || !defWpns.weapons.length) {\n            ui.notifications.warn(`${atkToken.name} does not have any equipped melee weapons.`);\n            return null;\n        }\n        options['weapons'] = defWpns.weapons;\n        options['defaultWeapon'] = defWpns.defaultWeapon;\n    }\n\n    options['defaultModifier'] = 0;\n    if (atkToken.actor?.system?.eph?.meleeAMLMod !== undefined) {\n        options['defaultModifier'] += atkToken.actor.system.eph.meleeAMLMod;\n    }\n\n    // A character who is attacking (or being attacked by) a prone enemy increases EML by 20. (COMBAT 11)\n    const defProne = defToken.hasCondition(Condition.PRONE);\n    if (defProne) {\n        options['defaultModifier'] += 20;\n    }\n\n    const dialogResult = await attackDialog(options);\n\n    // If user cancelled the dialog, then return immediately\n    if (!dialogResult) return null;\n\n    if (!weaponItem) {\n        weaponItem = dialogResult.weapon;\n    }\n\n    dialogResult.addlModifier += dialogResult.aim === 'Mid' ? 0 : -10;\n\n    const atkCloseMode =\n        atkToken.hasCondition(Condition.CLOSE_MODE) &&\n        !options.unarmed &&\n        (dialogResult.aspect === 'Blunt' || dialogResult.aspect === 'Edged');\n    dialogResult.addlModifier += atkCloseMode ? -10 : 0;\n\n    const effAML = game.hm3.macros.HM100Check(\n        dialogResult.weapon.system.attackMasteryLevel + dialogResult.addlModifier\n    );\n\n    // Prepare for Chat Message\n    const chatTemplate = 'systems/hm3/templates/chat/attack-card.hbs';\n\n    const defBerserk = defToken.hasCondition(Condition.BERSERK);\n    const defBroken = defToken.hasCondition(Condition.BROKEN);\n    const defCautious = defToken.hasCondition(Condition.CAUTIOUS);\n    const defDesperate = defToken.hasCondition(Condition.DESPERATE);\n    const defGrappled = defToken.hasCondition(Condition.GRAPPLED);\n    const defIncapacitated = defToken.hasCondition(Condition.INCAPACITATED);\n    const defShocked = defToken.hasCondition(Condition.SHOCKED);\n    const defStunned = defToken.hasCondition(Condition.STUNNED);\n    const defUnconscious = defToken.hasCondition(Condition.UNCONSCIOUS);\n\n    const type = dialogResult.isGrappleAtk ? 'Grapple' : 'Melee';\n    const chatTemplateData = {\n        addlModifierAbs: Math.abs(dialogResult.addlModifier),\n        addlModifierSign: dialogResult.addlModifier < 0 ? '-' : '+',\n        aim: dialogResult.aim,\n        aspect: dialogResult.aspect,\n        atkBerserk: atkToken.hasCondition(Condition.BERSERK),\n        atkCloseMode,\n        atkProne: atkToken.hasCondition(Condition.PRONE),\n        atkTokenId: atkToken.id,\n        attacker: atkToken.name,\n        debug: CONFIG.debug.hm3 && game.user.isGM,\n        defBerserk,\n        defender: defToken.name,\n        defProne,\n        defTokenId: defToken.id,\n        effAML,\n        hasBlock:\n            !(\n                defBerserk ||\n                defDesperate ||\n                defGrappled ||\n                defIncapacitated ||\n                defShocked ||\n                defStunned ||\n                defUnconscious\n            ) && !dialogResult.isGrappleAtk,\n        hasCounterstrike: !(defBroken || defCautious || defIncapacitated || defShocked || defStunned || defUnconscious),\n        hasDodge:\n            !(\n                defBerserk ||\n                defDesperate ||\n                defGrappled ||\n                defIncapacitated ||\n                defShocked ||\n                defStunned ||\n                defUnconscious\n            ) && defToken.actor.system.dodge > 0,\n        hasEsoteric: false,\n        hasIgnore: true,\n        impactMod: dialogResult.impactMod,\n        isGrappleAtk: !!dialogResult.isGrappleAtk,\n        origAML: weaponItem.system.attackMasteryLevel,\n        title: `${weaponItem.name} ${type} Attack`,\n        visibleActorId: defToken.actor.id,\n        weaponName: weaponItem.name,\n        weaponType: 'melee'\n    };\n    chatTemplateData.oneButton =\n        [\n            chatTemplateData.hasBlock,\n            chatTemplateData.hasCounterstrike,\n            chatTemplateData.hasDodge,\n            chatTemplateData.hasEsoteric,\n            chatTemplate.hasIgnore\n        ].filter(Boolean).length === 1;\n\n    const html = await renderTemplate(chatTemplate, chatTemplateData);\n\n    const messageData = {\n        user: game.user.id,\n        speaker: speaker,\n        content: html.trim(),\n        type: CONST.CHAT_MESSAGE_STYLES.OTHER\n    };\n\n    const messageOptions = {};\n\n    // Create a chat message\n    ChatMessage.applyRollMode(messageData, game.settings.get('core', 'rollMode'));\n    await ChatMessage.create(messageData, messageOptions);\n\n    if (game.settings.get('hm3', 'combatAudio')) {\n        foundry.audio.AudioHelper.play({src: 'sounds/drums.wav', autoplay: true, loop: false}, true);\n    }\n\n    return chatTemplateData;\n}\n\n/**\n * Displays a dialog asking user to choose a weapon (and optionally a modifier).\n *\n * Options:\n * name (String): name of actor to select the weapon\n * weapons (Array<Item>) a list of items (weapongear or missilegear)\n * defaultWeapon (Item) the default item choice\n * modifierType (string) A word to put between \"Additional ??? Modifier\"\n *\n * @param {Object} options\n */\nasync function selectWeaponDialog(options) {\n    let queryWeaponDialog = 'systems/hm3/templates/dialog/query-weapon-dialog.hbs';\n\n    const dialogOptions = {\n        title: `${options.name} Select Weapon`\n    };\n    dialogOptions.weapons = options.weapons.map((w) => {\n        return {\n            key: w.name\n        };\n    });\n    dialogOptions.defaultWeapon = options.defaultWeapon;\n    dialogOptions.defaultModifier = options.defaultModifier || 0;\n    if (options.modifierType) {\n        dialogOptions.modifierType = options.modifierType;\n    }\n    dialogOptions.prompt = options.prompt ? options.prompt : 'Please select your weapon';\n\n    const dlghtml = await renderTemplate(queryWeaponDialog, dialogOptions);\n\n    if (!options.noDialog) {\n        // Request weapon name\n        return Dialog.prompt({\n            title: dialogOptions.title,\n            content: dlghtml.trim(),\n            label: 'OK',\n            callback: (html) => {\n                const form = html[0].querySelector('form');\n                const formAddlModifier = form.addlModifier ? parseInt(form.addlModifier.value) : 0;\n                const formWeapon = form.weapon.value;\n\n                return {weapon: formWeapon, addlModifier: formAddlModifier};\n            }\n        });\n    } else {\n        // No dialog, just return the default weapon and modifier\n        return {\n            weapon: options.defaultWeapon.name,\n            addlModifier: options.defaultModifier || 0\n        };\n    }\n}\n\n/**\n * Queries for the weapon to use, and additional weapon parameters (aim, aspect, range).\n *\n * options should include:\n * attackerName (String): The name of the attacker\n * defenderName (String): The name of the defender\n * weapons (Array<Item>): a list of Items, available weapons to choose from\n * defaultWeapon (string): default choice (Item name) from weapon list\n * weapon (Item): if provided, this weapon Item will be used and no weapon query performed\n * type (string): either 'Block', 'Attack', or 'Counterstrike'\n * distance (number): the distance to the target\n *\n * The return value will be an object with the following keys:\n *  weapon (Item):      An Item representing the weapon (weapongear or missilegear)\n *  aspect (string):    The aspect (Blunt, Edged, Piercing)\n *  aim (string):       The aim location (High, Mid, Low)\n *  addlModifier (number): Modifier to the attack roll (AML)\n *  range (string):     The range to target (Short, Medium, Long, Extreme)\n *  rangeExceedsExtreme (boolean): Whether the distance to target exceeds its extreme range\n *  impactMod (number): Weapon impact modifier (based on weapon aspect or range)\n *\n * @param {Object} options\n */\nasync function attackDialog(options) {\n    if (options.weapons) {\n        const equippedWeapons = options.weapons.filter((w) => w.system.isEquipped);\n        options.weapons = equippedWeapons;\n    }\n\n    if (!options.weapon && options.weapons && options.weapons.length) {\n        options.name = options.attackerName;\n        const result = await selectWeaponDialog(options);\n\n        if (result) {\n            options.weapon = options.weapons.find((w) => result.weapon === w.name);\n        }\n    }\n\n    if (!options.weapon) {\n        ui.notifications.warn(`${options.attackerName} has no equipped weapons available for attack.`);\n        return null;\n    }\n\n    // If an attack is carried out unarmed, you can select the GRAPPLE option.\n    options.unarmed = options.weapon.system.assocSkill.toLowerCase().includes('unarmed');\n\n    const dialogOptions = {\n        weapon: options.weapon.name,\n        aimLocations: [\n            {key: 'Low', label: 'Low (-10)'},\n            {key: 'Mid', label: 'Mid (+0)'},\n            {key: 'High', label: 'High (-10)'}\n        ],\n        defaultAim: 'Mid',\n        defaultModifier: options.defaultModifier || 0,\n        unarmed: options.unarmed\n    };\n\n    if (options.weapon.type === 'weapongear') {\n        dialogOptions.title = `Weapon ${options.type} with ${options.weapon.name}`;\n        const weaponAspect = calcWeaponAspect(options.weapon);\n        if (!weaponAspect.defaultAspect) return null; // no aspects available, shouldn't happen\n        foundry.utils.mergeObject(dialogOptions, weaponAspect);\n    } else if (options.weapon.type === 'missilegear') {\n        dialogOptions.title = `Missile ${options.type} with ${options.weapon.name}`;\n\n        const weaponData = options.weapon.system;\n\n        // Missiles only have a single weapon aspect\n        dialogOptions.aspects = {};\n        dialogOptions.aspects[weaponData.weaponAspect] = -1;\n        dialogOptions.defaultAspect = weaponData.weaponAspect;\n\n        const isGridDistanceUnits = game.settings.get('hm3', 'distanceUnits') === 'grid';\n        const dist = canvas.dimensions.distance;\n        const shortDesc = `Short (${\n            isGridDistanceUnits ? weaponData.range.short / dist + ' hex' : weaponData.range.short + ' ft'\n        }/+0)`;\n        const mediumDesc = `Medium (${\n            isGridDistanceUnits ? weaponData.range.medium / dist + ' hex' : weaponData.range.medium + ' ft'\n        }/-20)`;\n        const longDesc = `Long (${\n            isGridDistanceUnits ? weaponData.range.long / dist + ' hex' : weaponData.range.long + ' ft'\n        }/-40)`;\n        const extremeDesc = `Extreme (${\n            isGridDistanceUnits ? weaponData.range.extreme / dist + ' hex' : weaponData.range.extreme + ' ft'\n        }/-80)`;\n        dialogOptions.ranges = [\n            {key: 'Short', label: shortDesc, impact: weaponData.impact.short},\n            {key: 'Medium', label: mediumDesc, impact: weaponData.impact.medium},\n            {key: 'Long', label: longDesc, impact: weaponData.impact.long},\n            {key: 'Extreme', label: extremeDesc, impact: weaponData.impact.extreme}\n        ];\n        dialogOptions.rangeExceedsExtreme = false;\n\n        // Set range based on distance\n        if (options.distance) {\n            dialogOptions.isGridDistanceUnits = isGridDistanceUnits;\n            dialogOptions.distance = options.distance;\n            dialogOptions.distanceGrid = options.distance / dist;\n            if (options.distance <= weaponData.range.short) {\n                dialogOptions.defaultRange = 'Short';\n            } else if (options.distance <= weaponData.range.medium) {\n                dialogOptions.defaultRange = 'Medium';\n            } else if (options.distance <= weaponData.range.long) {\n                dialogOptions.defaultRange = 'Long';\n            } else if (options.distance <= weaponData.range.extreme) {\n                dialogOptions.defaultRange = 'Extreme';\n            } else {\n                dialogOptions.defaultRange = 'Extreme';\n                dialogOptions.rangeExceedsExtreme = true;\n            }\n        } else {\n            // Distance not specified, set it to extreme by default\n            dialogOptions.defaultRange = 'Extreme';\n        }\n    } else {\n        // Not a weapon!!\n        return null;\n    }\n\n    dialogOptions.title = `${options.attackerName} vs. ${options.defenderName} ${options.type} with ${options.weapon.name}`;\n\n    const attackDialogTemplate = 'systems/hm3/templates/dialog/attack-dialog.hbs';\n    const dlghtml = await renderTemplate(attackDialogTemplate, dialogOptions);\n\n    const evaluate = (form, formRange, isGrappleAtk) => {\n        const result = {\n            addlModifier: form.addlModifier ? parseInt(form.addlModifier.value) : 0,\n            aim: form.aim ? form.aim.value : null,\n            aspect: form.weaponAspect ? form.weaponAspect.value : null,\n            impactMod: 0,\n            isGrappleAtk,\n            range: formRange,\n            rangeExceedsExtreme: dialogOptions.rangeExceedsExtreme,\n            unarmed: options.unarmed,\n            weapon: options.weapon\n        };\n\n        if (formRange) {\n            // Grab range and impact mod (from selected range) for missile weapon\n            if (formRange.startsWith('Short')) {\n                result.range = 'Short';\n                result.rangeMod = 0;\n            } else if (formRange.startsWith('Medium')) {\n                result.range = 'Medium';\n                result.rangeMod = -20;\n            } else if (formRange.startsWith('Long')) {\n                result.range = 'Long';\n                result.rangeMod = -40;\n            } else {\n                result.range = 'Extreme';\n                result.rangeMod = -80;\n            }\n            result.impactMod =\n                dialogOptions.ranges.filter((r) => {\n                    return r.key === result.range;\n                })[0].impact || 0;\n        } else {\n            // Grab impact mod (from selected aspect) for melee weapon\n            result.impactMod = dialogOptions.aspects[result.aspect] || 0;\n        }\n        return result;\n    };\n\n    if (!options.noDialog) {\n        // Request weapon details\n        return Dialog.prompt({\n            title: dialogOptions.title,\n            content: dlghtml.trim(),\n            label: options.type,\n            callback: (html) => {\n                const form = html[0].querySelector('form');\n                const formRange = form.range ? form.range.value : null;\n                const isGrappleAtk = form[3]?.checked || false;\n\n                return evaluate(form, formRange, isGrappleAtk);\n            }\n        });\n    } else {\n        return evaluate(\n            {\n                weaponAspect: {value: dialogOptions.defaultAspect},\n                aim: {value: dialogOptions.defaultAim},\n                addlModifier: {value: dialogOptions.defaultModifier}\n            },\n            dialogOptions.defaultRange,\n            false\n        );\n    }\n}\n\nasync function esotericAttackDialog(options) {\n    if (!options.weapon) {\n        ui.notifications.warn(`${options.attackerName} has no esoteric weapons available for attack.`);\n        return null;\n    }\n\n    const dialogOptions = {\n        defaultModifier: options.defaultModifier || 0,\n        weapon: options.weapon.name\n    };\n\n    if (options.weapon.type === ItemType.SKILL && options.weapon.name.includes('Mental Conflict')) {\n        dialogOptions.isMentalConflict = true;\n        dialogOptions.addlInfo = 'Mental Conflict Type: ';\n        dialogOptions.mentalConflictType = 'possession';\n        dialogOptions.mentalConflictTypes = [\n            {key: 'possession', label: 'Possession'},\n            {key: 'conflict', label: 'Ethereal Conflict'},\n            {key: 'artifact', label: 'Artifact Control'}\n        ];\n    } else if (options.weapon.type === ItemType.PSIONIC && options.weapon.name.includes('Mental Bolt')) {\n        dialogOptions.isMentalBolt = true;\n    } else {\n        // Not an esoteric weapon!!\n        return null;\n    }\n\n    dialogOptions.title = `${options.attackerName} vs. ${options.defenderName} ${options.type} with ${options.weapon.name}`;\n\n    const attackDialogTemplate = 'systems/hm3/templates/dialog/esoteric-attack-dialog.hbs';\n    const dlghtml = await renderTemplate(attackDialogTemplate, dialogOptions);\n\n    // Request weapon details\n    return Dialog.prompt({\n        title: dialogOptions.title,\n        content: dlghtml.trim(),\n        label: options.type,\n        callback: (html) => {\n            const form = html[0].querySelector('form');\n            const formRange = form.range ? form.range.value : null;\n            const formMentalConflict = form.mentalConflictType\n                ? form.mentalConflictType[form.mentalConflictType.selectedIndex].innerHTML\n                : null;\n\n            const result = {\n                addlModifier: form.addlModifier ? parseInt(form.addlModifier.value) : 0,\n                addlInfo: dialogOptions.isEsotericCombat ? dialogOptions.addlInfo + formMentalConflict : null,\n                range: formRange,\n                weapon: options.weapon\n            };\n\n            return result;\n        }\n    });\n}\n\n/**\n * Determine if the token is valid (must be either a 'creature' or 'character')\n *\n * @param {TokenHM3} token\n */\nfunction isValidToken(token) {\n    if (!token) {\n        ui.notifications.warn('No token selected.');\n        return false;\n    }\n\n    if (!token.actor) {\n        ui.notifications.warn(`Token ${token.name} is not a valid actor.`);\n        return false;\n    }\n\n    if (['character', 'creature'].includes(token.actor.type)) {\n        return true;\n    } else {\n        ui.notifications.warn(`Token ${token.name} is not a character or creature.`);\n        return false;\n    }\n}\n\n/**\n * Determine default melee weapon based on maximum impact.\n *\n * @param {TokenHM3} token\n */\nfunction defaultMeleeWeapon(token, sortMode = 'highestDmg') {\n    if (!isValidToken(token)) return {weapons: [], defaultWeapon: null};\n    if (!['highestDmg', 'highestAML', 'highestDML'].includes(sortMode)) return {weapons: [], defaultWeapon: null};\n\n    const equippedWeapons = token.actor.itemTypes.weapongear.filter((w) => w.system.isEquipped);\n    if (equippedWeapons.length === 0) return {weapons: [], defaultWeapon: null};\n\n    let weapons = null;\n    switch (sortMode) {\n        case 'highestDmg':\n            weapons = equippedWeapons.sort((a, b) => {\n                const aMax = Math.max(a.system.blunt, a.system.edged, a.system.piercing);\n                const bMax = Math.max(b.system.blunt, b.system.edged, b.system.piercing);\n                return bMax - aMax;\n            });\n            break;\n\n        case 'highestAML':\n            weapons = equippedWeapons.sort((a, b) => {\n                return b.system.attackMasteryLevel - a.system.attackMasteryLevel;\n            });\n            break;\n\n        case 'highestDML':\n            weapons = equippedWeapons.sort((a, b) => {\n                return b.system.defenseMasteryLevel - a.system.defenseMasteryLevel;\n            });\n            break;\n    }\n\n    return {\n        weapons,\n        defaultWeapon: weapons[0]\n    };\n}\n\nfunction defaultEsotericWeapon(token) {\n    if (!isValidToken(token)) return {weapons: [], defaultWeapon: null};\n\n    const mc = token.actor.items.find((item) => item.type === ItemType.SKILL && item.name.includes('Mental Conflict'));\n\n    if (!mc) {\n        ui.notifications.warn(`${token.name} has no equipped Esoteric weapons, attack refused.`);\n        return {weapons: [], defaultWeapon: null};\n    }\n\n    return {\n        weapons: [mc],\n        defaultWeapon: mc\n    };\n}\n\nexport function isWpnUnarmed(weapon, token) {\n    if (typeof weapon === 'string' || weapon instanceof String) {\n        weapon = token?.actor?.items.find((item) => item.name === weapon);\n    }\n\n    return !!weapon?.system?.assocSkill?.toLowerCase().includes('unarmed');\n}\n\n/**\n * Resume the attack with the defender performing the \"Counterstrike\" defense.\n * Note that this defense is only applicable to melee attacks.\n *\n * @param {*} atkToken Token representing the attacker\n * @param {*} defToken Token representing the defender\n * @param {*} atkWeaponName Name of the weapon the attacker is using\n * @param {*} atkEffAML The effective AML (Attack Mastery Level) of the attacker after modifiers applied\n * @param {*} atkAim Attack aim (\"High\", \"Mid\", \"Low\")\n * @param {*} atkAspect Weapon aspect (\"Blunt\", \"Edged\", \"Piercing\")\n * @param {*} atkImpactMod Additional modifier to impact\n */\nexport async function meleeCounterstrikeResume(\n    atkToken,\n    defToken,\n    atkWeaponName,\n    atkEffAML,\n    atkAim,\n    atkAspect,\n    atkImpactMod,\n    isGrappleAtk\n) {\n    if (!isValidToken(atkToken) || !isValidToken(defToken)) return null;\n    if (!defToken.isOwner) {\n        ui.notifications.warn(`You do not have permissions to perform this operation on ${atkToken.name}`);\n        return null;\n    }\n\n    // Get weapon with maximum impact\n    const options = defaultMeleeWeapon(defToken);\n\n    if (!options.weapons) {\n        ui.notifications.warn(`${defToken.name} has no equipped weapons, counterstrike defense refused.`);\n        return null;\n    }\n\n    options.type = 'Counterstrike';\n    options.attackerName = defToken.name;\n    options.defenderName = atkToken.name;\n\n    options.defaultModifier = 0;\n    if (defToken.actor?.system?.eph?.outnumbered > 1) {\n        options.defaultModifier += Math.floor(defToken.actor.system.eph.outnumbered - 1) * -10;\n    }\n\n    // A character who is attacking (or being attacked by) a prone enemy increases EML by 20. (COMBAT 11)\n    const prone = atkToken.hasCondition(Condition.PRONE);\n    if (prone) {\n        options.defaultModifier += 20;\n    }\n\n    // This is a special state of battle frenzy. Any character who enters this mode must take the most\n    // aggressive action available for Attack or Defense, adding 20 to EML to Attack or Counterstrike.\n    // Further Initiative rolls are ignored until the battle ends. (COMBAT 16)\n    const berserk = defToken.hasCondition(Condition.BERSERK);\n    if (berserk) {\n        options.defaultModifier += 20;\n    }\n\n    const csDialogResult = await attackDialog(options);\n    if (!csDialogResult) return null;\n\n    const atkCloseMode =\n        atkToken.hasCondition(Condition.CLOSE_MODE) &&\n        !isWpnUnarmed(atkWeaponName, atkToken) &&\n        (atkAspect === 'Blunt' || atkAspect === 'Edged');\n    const defCloseMode =\n        defToken.hasCondition(Condition.CLOSE_MODE) &&\n        !csDialogResult.unarmed &&\n        (csDialogResult.aspect === 'Blunt' || csDialogResult.aspect === 'Edged');\n\n    csDialogResult.addlModifier += defCloseMode ? -10 : 0;\n\n    // Roll Attacker's Attack\n    const atkRoll = await DiceHM3.rollTest({\n        data: {},\n        diceNum: 1,\n        diceSides: 100,\n        modifier: 0,\n        name: atkToken.name,\n        target: atkEffAML,\n        type: 'atkRoll'\n    });\n\n    const csEffEML = game.hm3.macros.HM100Check(csDialogResult.weapon.system.attackMasteryLevel);\n\n    // Roll Counterstrike Attack\n    const csRoll = await DiceHM3.rollTest({\n        data: {},\n        diceNum: 1,\n        diceSides: 100,\n        modifier: csDialogResult.addlModifier,\n        name: defToken.name,\n        target: csEffEML,\n        type: 'defRoll'\n    });\n\n    // If we have \"Dice So Nice\" module, roll them dice!\n    if (game.dice3d) {\n        const aRoll = atkRoll.rollObj;\n        aRoll.dice[0].options.colorset = 'glitterparty';\n        await game.dice3d.showForRoll(aRoll, game.user, true);\n\n        const cRoll = csRoll.rollObj;\n        cRoll.dice[0].options.colorset = 'bloodmoon';\n        await game.dice3d.showForRoll(cRoll, game.user, true);\n    }\n\n    const atkDie = atkToken.actor.type === ActorType.CREATURE ? Number(atkToken.actor.system.size) : 6;\n    const csDie = defToken.actor.type === ActorType.CREATURE ? Number(defToken.actor.system.size) : 6;\n\n    // Grapple\n    const isGrappleDef = csDialogResult.isGrappleAtk;\n\n    const atkResult = `${atkRoll.isCritical ? 'c' : 'm'}${atkRoll.isSuccess ? 's' : 'f'}`;\n    const defResult = `${csRoll.isCritical ? 'c' : 'm'}${csRoll.isSuccess ? 's' : 'f'}`;\n    const combatResult = meleeCombatResult({\n        atkAddlImpact: Number(atkImpactMod),\n        atkDie,\n        atkResult,\n        atkToken,\n        defAddlImpact: csDialogResult.impactMod,\n        defDie: csDie,\n        defense: isGrappleDef ? 'grapple' : 'counterstrike',\n        defResult,\n        defToken,\n        isGrappleAtk,\n        isGrappleDef\n    });\n\n    // If there was a block, check whether a weapon broke\n    const atkWeapon = atkToken.actor.itemTypes.weapongear.find((w) => w.name === atkWeaponName);\n    const defWeapon = csDialogResult.weapon;\n\n    let weaponBroke = {attackWeaponBroke: false, defendWeaponBroke: false};\n    if (game.settings.get('hm3', 'weaponDamage') && combatResult.outcome.block) {\n        weaponBroke = await checkWeaponBreak(atkToken, atkWeapon, defToken, defWeapon);\n\n        // If either of the weapons has broken, then mark the appropriate\n        // weapon as \"unequipped\"\n\n        if (weaponBroke.attackWeaponBroke) {\n            try {\n                await utility.weaponBroke(atkWeapon, weaponBroke.atkWeaponDiff);\n            } catch (ex) {\n            } finally {\n                combatResult.outcome.dta = true;\n            }\n        }\n\n        if (weaponBroke.defendWeaponBroke) {\n            try {\n                await utility.weaponBroke(defWeapon, weaponBroke.defWeaponDiff);\n            } catch (ex) {\n            } finally {\n                combatResult.outcome.ata = true;\n            }\n        }\n    }\n\n    let turnEnds = false;\n    if (combatResult.outcome.ata && combatResult.outcome.dta) {\n        // No more than one Tactical Advantage may be earned per Character Turn.\n        // When opponents gain simultaneous TAs, the Turn also ends. (COMBAT 12)\n        combatResult.outcome.ata = false;\n        combatResult.outcome.dta = false;\n        turnEnds = true;\n    } else if (combatResult.outcome.ata || combatResult.outcome.dta) {\n        // Only one TA per turn\n        if (!(await isFirstTA())) {\n            combatResult.outcome.ata = false;\n            combatResult.outcome.dta = false;\n            turnEnds = true;\n        } else {\n            await setTA();\n        }\n    }\n\n    // We now know the results of the attack, roll applicable damage\n    let atkImpactRoll = null;\n    if (combatResult.outcome.atkDice) {\n        atkImpactRoll = await game.hm3.macros.rollObjectEvaluatedAsync(`${combatResult.outcome.atkDice}d${atkDie}`, {\n            name: atkToken.name,\n            type: 'atkImpactRoll'\n        });\n    }\n\n    let csImpactRoll = null;\n    if (combatResult.outcome.defDice) {\n        csImpactRoll = await game.hm3.macros.rollObjectEvaluatedAsync(`${combatResult.outcome.defDice}d${csDie}`, {\n            name: defToken.name,\n            type: 'defImpactRoll'\n        });\n    }\n\n    const atkChatData = {\n        addlWeaponImpact: 0, // in future, maybe ask this in dialog?\n        atkAim: atkAim,\n        atkAspect: atkAspect,\n        atkCloseMode,\n        atkIsCritical: atkRoll.isCritical,\n        atkIsSuccess: atkRoll.isSuccess,\n        atkRollResult: atkRoll.description.replace('Substantial', 'Marginal'),\n        atkTokenId: atkToken.id,\n        atkWeaponBroke: weaponBroke.attackWeaponBroke,\n        attacker: atkToken.name,\n        attackRoll: atkRoll.rollObj.total,\n        attackWeapon: atkWeaponName,\n        defender: defToken.name,\n        defendWeapon: defWeapon.name,\n        defense: 'Counterstrike',\n        defenseRoll: 0,\n        defRollResult: '',\n        defTokenId: defToken.id,\n        defWeaponBroke: weaponBroke.defendWeaponBroke,\n        effAML: game.hm3.macros.HM100Check(atkEffAML),\n        effDML: 0,\n        hasAttackHit: isGrappleAtk ? false : !!combatResult.outcome.atkDice,\n        impactRoll: atkImpactRoll ? atkImpactRoll.dice[0].values.join(' + ') : null,\n        isAtkFumbleRoll: combatResult.outcome.atkFumble,\n        isAtkStumbleRoll: combatResult.outcome.atkStumble,\n        isDefFumbleRoll: null,\n        isDefStumbleRoll: null,\n        mlType: 'AML',\n        resultDesc: combatResult.desc,\n        title: `Attack Result`,\n        totalImpact: atkImpactRoll ? atkImpactRoll.total + parseInt(atkImpactMod) : 0,\n        visibleAtkActorId: atkToken.actor.id,\n        visibleDefActorId: defToken.actor.id,\n        weaponImpact: atkImpactMod\n    };\n\n    const csChatData = {\n        addlModifierAbs: Math.abs(csDialogResult.addlModifier),\n        addlModifierSign: csDialogResult.addlModifier < 0 ? '-' : '+',\n        addlWeaponImpact: 0, // in future, maybe ask this in dialog?\n        atkAim: csDialogResult.aim,\n        atkAspect: csDialogResult.aspect,\n        atkBerserk: atkToken.hasCondition(Condition.BERSERK),\n        atkIsCritical: csRoll.isCritical,\n        atkIsSuccess: csRoll.isSuccess,\n        atkProne: atkToken.hasCondition(Condition.PRONE),\n        atkRollResult: csRoll.description.replace('Substantial', 'Marginal'),\n        atkTokenId: defToken.id,\n        attacker: defToken.name,\n        attackRoll: csRoll.rollObj.total,\n        attackWeapon: csDialogResult.weapon.name,\n        defBerserk: defToken.hasCondition(Condition.BERSERK),\n        defCloseMode,\n        defender: atkToken.name,\n        defenseRoll: 0,\n        defProne: defToken.hasCondition(Condition.PRONE),\n        defRollResult: '',\n        defTokenId: atkToken.id,\n        dta: combatResult.outcome.dta,\n        effAML: game.hm3.macros.HM100Check(csEffEML + csDialogResult.addlModifier),\n        effDML: 0,\n        effEML: game.hm3.macros.HM100Check(csEffEML + csDialogResult.addlModifier),\n        hasAttackHit: isGrappleAtk ? false : !!combatResult.outcome.defDice,\n        impactRoll: csImpactRoll ? csImpactRoll.dice[0].values.join(' + ') : null,\n        isAtkFumbleRoll: combatResult.outcome.defFumble,\n        isAtkStumbleRoll: combatResult.outcome.defStumble,\n        isDefFumbleRoll: null,\n        isDefStumbleRoll: null,\n        mlType: 'AML',\n        origEML: csEffEML,\n        outnumbered: defToken.actor?.system?.eph?.outnumbered > 1 ? defToken.actor.system.eph.outnumbered : 0,\n        resultDesc: combatResult.csDesc,\n        title: `Counterstrike Result`,\n        totalImpact: csImpactRoll ? csImpactRoll.total + parseInt(csDialogResult.impactMod) : 0,\n        visibleAtkActorId: defToken.actor.id,\n        visibleDefActorId: atkToken.actor.id,\n        weaponImpact: csDialogResult.impactMod\n    };\n\n    let chatTemplate = 'systems/hm3/templates/chat/attack-result-card.hbs';\n\n    /*-----------------------------------------------------\n     *    Attack Chat\n     *----------------------------------------------------*/\n    let html = await renderTemplate(chatTemplate, atkChatData);\n\n    let messageData = {\n        content: html.trim(),\n        speaker: ChatMessage.getSpeaker({token: atkToken}),\n        style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n        user: game.user.id\n    };\n    if (combatResult.outcome.atkDice) {\n        messageData.roll = atkImpactRoll;\n        messageData.sound = CONFIG.sounds.dice;\n    }\n\n    // Create a chat message\n    ChatMessage.applyRollMode(messageData, game.settings.get('core', 'rollMode'));\n    await ChatMessage.create(messageData, {});\n\n    /*-----------------------------------------------------\n     *    Counterstrike Chat\n     *----------------------------------------------------*/\n    html = await renderTemplate(chatTemplate, csChatData);\n\n    messageData = {\n        content: html.trim(),\n        speaker: ChatMessage.getSpeaker({token: defToken}),\n        style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n        user: game.user.id\n    };\n    if (combatResult.outcome.defDice) {\n        messageData.roll = csImpactRoll;\n        messageData.sound = CONFIG.sounds.dice;\n    }\n\n    // Create a chat message\n    ChatMessage.applyRollMode(messageData, game.settings.get('core', 'rollMode'));\n    await ChatMessage.create(messageData, {});\n\n    if (combatResult.outcome.atkHold) {\n        await defToken.addCondition(Condition.GRAPPLED);\n    }\n    if (combatResult.outcome.defHold) {\n        await atkToken.addCondition(Condition.GRAPPLED);\n    }\n\n    utility.improveFlag(\n        atkToken.actor.items.find((w) => w.name === atkWeaponName),\n        {actor: atkToken.actor, success: atkRoll.isSuccess}\n    );\n    utility.improveFlag(defWeapon.system.assocSkill, {actor: defToken.actor, success: csRoll.isSuccess});\n\n    if (turnEnds) await setTA(true);\n\n    return {atk: atkChatData, cs: csChatData};\n}\n\n/**\n * Resume the attack with the defender performing the \"Dodge\" defense.\n *\n * @param {*} atkToken Token representing the attacker\n * @param {*} defToken Token representing the defender\n * @param {*} type Type of attack: \"melee\" or \"missile\"\n * @param {*} weaponName Name of the weapon the attacker is using\n * @param {*} effAML The effective AML (Attack Mastery Level) of the attacker after modifiers applied\n * @param {*} aim Attack aim (\"High\", \"Mid\", \"Low\")\n * @param {*} aspect Weapon aspect (\"Blunt\", \"Edged\", \"Piercing\")\n * @param {*} impactMod Additional modifier to impact\n */\nexport async function dodgeResume(atkToken, defToken, type, weaponName, effAML, aim, aspect, impactMod, isGrappleAtk) {\n    if (!isValidToken(atkToken) || !isValidToken(defToken)) return null;\n    if (!defToken.isOwner) {\n        ui.notifications.warn(`You do not have permissions to perform this operation on ${atkToken.name}`);\n        return null;\n    }\n\n    const speaker = ChatMessage.getSpeaker({token: atkToken});\n\n    const effDML = game.hm3.macros.HM100Check(defToken.actor.system.dodge);\n\n    let defaultModifier = 0;\n    if (defToken.actor?.system?.eph?.outnumbered > 1) {\n        defaultModifier += Math.floor((defToken.actor.system.eph.outnumbered - 1) * -10);\n    }\n\n    // A character who is attacking (or being attacked by) a prone enemy increases EML by 20. (COMBAT 11)\n    const prone = atkToken.hasCondition(Condition.PRONE);\n    if (prone) {\n        defaultModifier += 20;\n    }\n\n    const atkRoll = await DiceHM3.rollTest({\n        data: {},\n        diceNum: 1,\n        diceSides: 100,\n        modifier: 0,\n        name: atkToken.name,\n        target: effAML,\n        type: 'atkRoll'\n    });\n\n    const defRoll = await DiceHM3.rollTest({\n        data: {},\n        diceNum: 1,\n        diceSides: 100,\n        modifier: defaultModifier,\n        name: defToken.name,\n        target: effDML,\n        type: 'defRoll'\n    });\n\n    if (game.dice3d) {\n        const aRoll = atkRoll.rollObj;\n        aRoll.dice[0].options.colorset = 'glitterparty';\n        await game.dice3d.showForRoll(aRoll, game.user, true);\n\n        const dRoll = defRoll.rollObj;\n        dRoll.dice[0].options.colorset = 'bloodmoon';\n        await game.dice3d.showForRoll(dRoll, game.user, true);\n    }\n\n    const atkDie = atkToken.actor.type === ActorType.CREATURE ? Number(atkToken.actor.system.size) : 6;\n\n    const atkResult = `${atkRoll.isCritical ? 'c' : 'm'}${atkRoll.isSuccess ? 's' : 'f'}`;\n    const defResult = `${defRoll.isCritical ? 'c' : 'm'}${defRoll.isSuccess ? 's' : 'f'}`;\n    let combatResult = null;\n    if (type === 'melee') {\n        combatResult = meleeCombatResult({\n            atkAddlImpact: impactMod,\n            atkDie,\n            atkResult,\n            atkToken,\n            defense: 'dodge',\n            defResult,\n            defToken,\n            isGrappleAtk\n        });\n    } else {\n        combatResult = missileCombatResult(atkResult, defResult, 'dodge', impactMod);\n    }\n\n    let turnEnds = false;\n    if (combatResult.outcome.dta) {\n        // Only one TA per turn\n        if (!(await isFirstTA())) {\n            combatResult.outcome.dta = false;\n            turnEnds = true;\n        } else {\n            setTA();\n        }\n    }\n\n    let atkImpactRoll = null;\n    if (combatResult.outcome.atkDice) {\n        atkImpactRoll = await game.hm3.macros.rollObjectEvaluatedAsync(`${combatResult.outcome.atkDice}d${atkDie}`, {\n            name: atkToken.name,\n            type: 'atkImpact'\n        });\n    }\n\n    const atkCloseMode =\n        atkToken.hasCondition(Condition.CLOSE_MODE) &&\n        !isWpnUnarmed(weaponName, atkToken) &&\n        (aspect === 'Blunt' || aspect === 'Edged');\n\n    const title = isGrappleAtk ? 'Grapple Result' : 'Attack Result';\n    const chatData = {\n        addlModifierAbs: Math.abs(defaultModifier),\n        addlModifierSign: defaultModifier < 0 ? '-' : '+',\n        addlWeaponImpact: 0, // in future, maybe ask this in dialog?\n        atkAim: aim,\n        atkAspect: aspect,\n        atkCloseMode,\n        atkIsCritical: atkRoll.isCritical,\n        atkIsSuccess: atkRoll.isSuccess,\n        atkProne: atkToken.hasCondition(Condition.PRONE),\n        atkRollResult: atkRoll.description.replace('Substantial', 'Marginal'),\n        atkTokenId: atkToken.id,\n        attacker: atkToken.name,\n        attackRoll: atkRoll.rollObj.total,\n        attackWeapon: weaponName,\n        defender: defToken.name,\n        defense: 'Dodge',\n        defenseRoll: defRoll.rollObj.total,\n        defIsCritical: defRoll.isCritical,\n        defIsSuccess: defRoll.isSuccess,\n        defProne: defToken.hasCondition(Condition.PRONE),\n        defRollResult: defRoll.description.replace('Substantial', 'Marginal'),\n        defTokenId: defToken.id,\n        dta: combatResult.outcome.dta,\n        effAML,\n        effDML: game.hm3.macros.HM100Check(effDML + defaultModifier),\n        effEML: game.hm3.macros.HM100Check(effDML + defaultModifier),\n        hasAttackHit: isGrappleAtk ? false : !!combatResult.outcome.atkDice,\n        impactRoll: atkImpactRoll ? atkImpactRoll.dice[0].values.join(' + ') : null,\n        isAtkFumbleRoll: combatResult.outcome.atkFumble,\n        isAtkHold: combatResult.outcome.atkHold,\n        isAtkStumbleRoll: combatResult.outcome.atkStumble,\n        isDefFumbleRoll: combatResult.outcome.defFumble,\n        isDefHold: combatResult.outcome.defHold,\n        isDefStumbleRoll: combatResult.outcome.defStumble,\n        isGrappleAtk,\n        isGrappleAtkSuccessful: isGrappleAtk && combatResult.outcome.atkDice > 0,\n        mlType: 'DML',\n        origEML: effDML,\n        outnumbered: defToken.actor?.system?.eph?.outnumbered > 1 ? defToken.actor.system.eph.outnumbered : null,\n        resultDesc: combatResult.desc,\n        title,\n        totalImpact: atkImpactRoll ? atkImpactRoll.total + parseInt(impactMod) : 0,\n        visibleAtkActorId: atkToken.actor.id,\n        visibleDefActorId: defToken.actor.id,\n        weaponImpact: impactMod\n    };\n\n    let chatTemplate = 'systems/hm3/templates/chat/attack-result-card.hbs';\n\n    const html = await renderTemplate(chatTemplate, chatData);\n\n    let messageData = {\n        user: game.user.id,\n        speaker: speaker,\n        content: html.trim()\n    };\n    if (combatResult.outcome.atkDice) {\n        messageData.roll = atkImpactRoll;\n        messageData.sound = CONFIG.sounds.dice;\n        messageData.style = CONST.CHAT_MESSAGE_STYLES.OTHER;\n    } else {\n        messageData.style = CONST.CHAT_MESSAGE_STYLES.OTHER;\n    }\n\n    const messageOptions = {};\n\n    // Create a chat message\n    ChatMessage.applyRollMode(messageData, game.settings.get('core', 'rollMode'));\n    await ChatMessage.create(messageData, messageOptions);\n\n    if (!combatResult.outcome.atkDice && game.settings.get('hm3', 'combatAudio')) {\n        foundry.audio.AudioHelper.play({src: 'systems/hm3/audio/swoosh1.ogg', autoplay: true, loop: false}, true);\n    }\n\n    if (combatResult.outcome.atkHold) {\n        await defToken.addCondition(Condition.GRAPPLED);\n    }\n    if (combatResult.outcome.defHold) {\n        await atkToken.addCondition(Condition.GRAPPLED);\n    }\n\n    utility.improveFlag(\n        atkToken.actor.items.find((w) => w.name === weaponName),\n        {actor: atkToken.actor, success: atkRoll.isSuccess}\n    );\n    utility.improveFlag('Dodge', {actor: defToken.actor, success: defRoll.isSuccess});\n\n    if (turnEnds) await setTA(true);\n\n    return chatData;\n}\n\nexport async function esotericResume(atkToken, defToken, atkWeaponName, atkEffAML) {\n    if (!isValidToken(atkToken) || !isValidToken(defToken)) return null;\n    if (!defToken.isOwner) {\n        ui.notifications.warn(`You do not have permissions to perform this operation on ${atkToken.name}`);\n        return null;\n    }\n\n    const speaker = ChatMessage.getSpeaker({token: atkToken});\n\n    const atkRoll = await DiceHM3.rollTest({\n        data: {},\n        diceSides: 100,\n        diceNum: 1,\n        modifier: 0,\n        target: atkEffAML\n    });\n\n    const esotericWpns = defaultEsotericWeapon(defToken);\n    const effDML = game.hm3.macros.HM100Check(esotericWpns.defaultWeapon.system.effectiveMasteryLevel);\n\n    let defaultModifier = 0;\n    // Living Entity (versus artifact): +10\n    if (atkToken.hasCondition(Condition.INANIMATE) && !defToken.hasCondition(Condition.INANIMATE)) {\n        defaultModifier += 10;\n    }\n    // Native Spirit/Aura: +10\n    defaultModifier += 10;\n\n    // Unconscious/Sleeping Party: -10\n    if (defToken.hasCondition(Condition.UNCONSCIOUS)) {\n        defaultModifier -= 10;\n    }\n\n    const defRoll = await DiceHM3.rollTest({\n        data: {},\n        diceSides: 100,\n        diceNum: 1,\n        modifier: defaultModifier,\n        target: effDML\n    });\n\n    if (game.dice3d) {\n        const aRoll = atkRoll.rollObj;\n        aRoll.dice[0].options.colorset = 'glitterparty';\n        await game.dice3d.showForRoll(aRoll, game.user, true);\n\n        const dRoll = defRoll.rollObj;\n        dRoll.dice[0].options.colorset = 'bloodmoon';\n        await game.dice3d.showForRoll(dRoll, game.user, true);\n    }\n\n    const atkResult = `${atkRoll.isCritical ? 'c' : 'm'}${atkRoll.isSuccess ? 's' : 'f'}`;\n    const defResult = `${defRoll.isCritical ? 'c' : 'm'}${defRoll.isSuccess ? 's' : 'f'}`;\n    const combatResult = esotericCombatResult({\n        atkResult,\n        atkToken,\n        defense: 'mentalConflict',\n        defResult,\n        defToken\n    });\n\n    if (combatResult.outcome.atkFatigue) {\n        utility.fatigueReceived(atkToken.actor, combatResult.outcome.atkFatigue);\n    }\n    if (combatResult.outcome.defFatigue) {\n        utility.fatigueReceived(defToken.actor, combatResult.outcome.defFatigue);\n    }\n\n    const title = 'Esoteric Attack Result';\n    const chatData = {\n        addlModifierAbs: Math.abs(defaultModifier),\n        addlModifierSign: defaultModifier < 0 ? '-' : '+',\n        addlWeaponImpact: 0, // in future, maybe ask this in dialog?\n        // atkEffAML,\n        atkIsCritical: atkRoll.isCritical,\n        atkIsSuccess: atkRoll.isSuccess,\n        atkRollResult: atkRoll.description.replace('Substantial', 'Marginal'),\n        atkTokenId: atkToken.id,\n        attacker: atkToken.name,\n        attackRoll: atkRoll.rollObj.total,\n        attackWeapon: atkWeaponName,\n        defender: defToken.name,\n        defense: esotericWpns.defaultWeapon.name,\n        defenseRoll: defRoll.rollObj.total,\n        defIsCritical: defRoll.isCritical,\n        defIsSuccess: defRoll.isSuccess,\n        defRollResult: defRoll.description.replace('Substantial', 'Marginal'),\n        defTokenId: defToken.id,\n        effAML: atkEffAML,\n        effDML: game.hm3.macros.HM100Check(effDML + defaultModifier),\n        effEML: game.hm3.macros.HM100Check(effDML + defaultModifier),\n        hasAttackHit: false,\n        impactRoll: 0,\n        isAtkWillShockRoll: !!combatResult.outcome.atkFatigue && !atkToken.hasCondition(Condition.INANIMATE),\n        isDefWillShockRoll: !!combatResult.outcome.defFatigue && !defToken.hasCondition(Condition.INANIMATE),\n        mlType: 'ML',\n        origEML: effDML,\n        resultDesc: combatResult.desc,\n        title,\n        totalImpact: combatResult.outcome.atkFatigue,\n        visibleAtkActorId: atkToken.actor.id,\n        visibleDefActorId: defToken.actor.id,\n        weaponImpact: combatResult.outcome.atkFatigue\n    };\n\n    const chatTemplate = 'systems/hm3/templates/chat/attack-result-card.hbs';\n    const html = await renderTemplate(chatTemplate, chatData);\n    const messageData = {\n        content: html.trim(),\n        speaker: speaker,\n        style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n        user: game.user.id\n    };\n\n    // Create a chat message\n    ChatMessage.applyRollMode(messageData, game.settings.get('core', 'rollMode'));\n    await ChatMessage.create(messageData, {});\n\n    if (game.settings.get('hm3', 'autoMarkUsedSkills')) {\n        esotericWpns.defaultWeapon.update({\n            'system.improveFlag': (esotericWpns.defaultWeapon.system.improveFlag || 0) + (defRoll.isSuccess ? 1 : 2)\n        });\n    }\n\n    return chatData;\n}\n\n/**\n * Resume the attack with the defender performing the \"Block\" defense.\n *\n * @param {TokenHM3} atkToken Token representing the attacker\n * @param {TokenHM3} defToken Token representing the defender\n * @param {*} type Type of attack: \"melee\" or \"missile\"\n * @param {*} weaponName Name of the weapon the attacker is using\n * @param {*} effAML The effective AML (Attack Mastery Level) of the attacker after modifiers applied\n * @param {*} aim Attack aim (\"High\", \"Mid\", \"Low\")\n * @param {*} aspect Weapon aspect (\"Blunt\", \"Edged\", \"Piercing\")\n * @param {*} impactMod Additional modifier to impact\n */\nexport async function blockResume(\n    atkToken,\n    defToken,\n    type,\n    weaponName,\n    effAML,\n    aim,\n    aspect,\n    impactMod,\n    isGrappleAtk,\n    noDialog = false\n) {\n    if (!isValidToken(atkToken) || !isValidToken(defToken)) return null;\n    if (!defToken.isOwner) {\n        ui.notifications.warn(`You do not have permissions to perform this operation on ${atkToken.name}`);\n        return null;\n    }\n\n    const speaker = ChatMessage.getSpeaker({token: atkToken.document});\n\n    let prompt = null;\n\n    // setup defensive available weapons.  This is all equipped melee weapons initially,\n    // but later we may limit it to only shields.\n    let defAvailWeapons = defaultMeleeWeapon(defToken, 'highestDML').weapons; //defToken.actor.itemTypes.weapongear;\n    const shields = defAvailWeapons.filter((w) => w.system.isEquipped && /shield|\\bbuckler\\b/i.test(w.name));\n\n    let atkWeapon = null;\n    // Missile Pre-processing.  If attacker is using a high-velocity weapon, then defender\n    // can only block with a shield.  If attacker is using a low-velocity weapon, then defender\n    // can either block with a shield (at full DML) or with a melee weapon (at 1/2 DML).\n    if (type === 'missile') {\n        atkWeapon = atkToken.actor.itemTypes.missilegear.find((w) => w.name === weaponName);\n        const highVelocityMissile = /\\bbow\\b|shortbow|longbow|crossbow|\\bsling\\b|\\barrow\\b|\\bbolt\\b|\\bbullet\\b/i.test(\n            weaponName\n        );\n\n        if (highVelocityMissile) {\n            if (!shields.length) {\n                ui.notifications.warn(\n                    `${weaponName} is a high-velocity missile that can only be blocked with a shield, and you don't have a shield equipped. Block defense refused.`\n                );\n                return null;\n            } else {\n                defAvailWeapons = shields;\n                prompt = `${weaponName} is a high-velocity missile, and can only be blocked with a shield. Choose which shield to use.`;\n            }\n        } else {\n            prompt = `${weaponName} is a low-velocity missile, and can be blocked either by a shield (at full DML) or by a melee weapon (at &#189; DML). Choose wisely.`;\n        }\n    } else {\n        atkWeapon = atkToken.actor.itemTypes.weapongear.find((w) => w.name === weaponName);\n    }\n\n    // pop up dialog asking for which weapon to use for blocking\n    // Only melee weapons can be used for blocking\n    // Default weapon is one with highest DML\n    let weapons = defAvailWeapons;\n    let defaultWeapon = defAvailWeapons[0];\n\n    if (weapons.length === 0) {\n        return ui.notifications.warn(\n            `${defToken.name} has no weapons that can be used for blocking, block defense refused.`\n        );\n    }\n\n    let defaultModifier = 0;\n    if (defToken.actor?.system?.eph?.outnumbered > 1) {\n        defaultModifier += Math.floor(defToken.actor.system.eph.outnumbered - 1) * -10;\n    }\n\n    // A character who is attacking (or being attacked by) a prone enemy increases EML by 20. (COMBAT 11)\n    const prone = atkToken.hasCondition(Condition.PRONE);\n    if (prone) {\n        defaultModifier += 20;\n    }\n\n    const options = {\n        defaultModifier: defaultModifier,\n        defaultWeapon: defaultWeapon,\n        modifierType: 'Defense',\n        name: defToken.name,\n        noDialog,\n        prompt: prompt,\n        weapons: weapons\n    };\n    const dialogResult = await selectWeaponDialog(options);\n\n    if (!dialogResult) return null;\n\n    let effDML;\n    const defWeapon = defToken.actor.itemTypes.weapongear.find((w) => w.name === dialogResult.weapon);\n    if (defWeapon) {\n        effDML = game.hm3.macros.HM100Check(defWeapon.system.defenseMasteryLevel);\n    } else {\n        effDML = 5;\n    }\n\n    // If attacking weapon is a missile and defending weapon is not\n    // a shield, then it will defend at 1/2 DML.\n    if (type === 'missile') {\n        if (!shields.some((s) => s.name === dialogResult.weapon.name)) {\n            effDML = game.hm3.macros.HM100Check(effDML / 2);\n        }\n    }\n\n    const atkRoll = await DiceHM3.rollTest({\n        data: {},\n        diceNum: 1,\n        diceSides: 100,\n        modifier: 0,\n        name: atkToken.name,\n        target: effAML,\n        type: 'atkRoll'\n    });\n\n    const defRoll = await DiceHM3.rollTest({\n        data: {},\n        diceNum: 1,\n        diceSides: 100,\n        modifier: dialogResult.addlModifier,\n        name: defToken.name,\n        target: effDML,\n        type: 'defRoll'\n    });\n\n    if (game.dice3d) {\n        const aRoll = atkRoll.rollObj;\n        aRoll.dice[0].options.colorset = 'glitterparty';\n        await game.dice3d.showForRoll(aRoll, game.user, true);\n\n        const dRoll = defRoll.rollObj;\n        dRoll.dice[0].options.colorset = 'bloodmoon';\n        await game.dice3d.showForRoll(dRoll, game.user, true);\n    }\n\n    const atkResult = `${atkRoll.isCritical ? 'c' : 'm'}${atkRoll.isSuccess ? 's' : 'f'}`;\n    const defResult = `${defRoll.isCritical ? 'c' : 'm'}${defRoll.isSuccess ? 's' : 'f'}`;\n\n    const atkDie = atkToken.actor.type === ActorType.CREATURE ? Number(atkToken.actor.system.size) : 6;\n\n    let combatResult;\n    if (type === 'melee') {\n        combatResult = meleeCombatResult({\n            atkAddlImpact: Number(impactMod),\n            atkDie,\n            atkResult,\n            atkToken,\n            defense: 'block',\n            defResult,\n            defToken,\n            isGrappleAtk\n        });\n    } else {\n        combatResult = missileCombatResult(atkResult, defResult, 'block', impactMod);\n    }\n\n    // If there was a block, check whether a weapon broke\n    let weaponBroke = {attackWeaponBroke: false, defendWeaponBroke: false};\n    if (game.settings.get('hm3', 'weaponDamage') && combatResult.outcome.block) {\n        weaponBroke = await checkWeaponBreak(atkToken, atkWeapon, defToken, defWeapon);\n\n        // If either of the weapons has broken, then mark the appropriate\n        // weapon as \"unequipped\"\n\n        if (weaponBroke.attackWeaponBroke) {\n            try {\n                await utility.weaponBroke(atkWeapon, weaponBroke.atkWeaponDiff);\n            } catch (ex) {\n            } finally {\n                combatResult.outcome.dta = true;\n            }\n        }\n\n        if (weaponBroke.defendWeaponBroke) {\n            try {\n                await utility.weaponBroke(defWeapon, weaponBroke.defWeaponDiff);\n            } catch (ex) {\n            } finally {\n                combatResult.outcome.ata = true;\n            }\n        }\n    }\n\n    let turnEnds = false;\n    if (combatResult.outcome.ata && combatResult.outcome.dta) {\n        // No more than one Tactical Advantage may be earned per Character Turn.\n        // When opponents gain simultaneous TAs, the Turn also ends. (COMBAT 12)\n        combatResult.outcome.ata = false;\n        combatResult.outcome.dta = false;\n        turnEnds = true;\n    } else if (combatResult.outcome.ata || combatResult.outcome.dta) {\n        // Only one TA per turn\n        if (!(await isFirstTA())) {\n            combatResult.outcome.ata = false;\n            combatResult.outcome.dta = false;\n            turnEnds = true;\n        } else {\n            await setTA();\n        }\n    }\n\n    let atkImpactRoll = null;\n    if (combatResult.outcome.atkDice) {\n        atkImpactRoll = await game.hm3.macros.rollObjectEvaluatedAsync(`${combatResult.outcome.atkDice}d${atkDie}`, {\n            name: atkToken.name,\n            type: 'atkImpact'\n        });\n    }\n\n    const atkCloseMode =\n        atkToken.hasCondition(Condition.CLOSE_MODE) &&\n        !isWpnUnarmed(weaponName, atkToken) &&\n        (aspect === 'Blunt' || aspect === 'Edged');\n\n    const title = isGrappleAtk ? 'Grapple Result' : 'Attack Result';\n    const chatData = {\n        addlModifierAbs: Math.abs(dialogResult.addlModifier),\n        addlModifierSign: dialogResult.addlModifier < 0 ? '-' : '+',\n        addlWeaponImpact: 0, // in future, maybe ask this in dialog?\n        ata: combatResult.outcome.ata,\n        atkAim: aim,\n        atkAspect: aspect,\n        atkCloseMode,\n        atkIsCritical: atkRoll.isCritical,\n        atkIsSuccess: atkRoll.isSuccess,\n        atkProne: atkToken.hasCondition(Condition.PRONE),\n        atkRollResult: atkRoll.description.replace('Substantial', 'Marginal'),\n        atkTokenId: atkToken.id,\n        atkWeaponBroke: weaponBroke.attackWeaponBroke,\n        attacker: atkToken.name,\n        attackRoll: atkRoll.rollObj.total,\n        attackWeapon: weaponName,\n        defender: defToken.name,\n        defendWeapon: defWeapon ? defWeapon.name : '',\n        defense: `Block w/ ${dialogResult.weapon}`,\n        defenseRoll: defRoll.rollObj.total,\n        defIsCritical: defRoll.isCritical,\n        defIsSuccess: defRoll.isSuccess,\n        defProne: defToken.hasCondition(Condition.PRONE),\n        defRollResult: defRoll.description.replace('Substantial', 'Marginal'),\n        defTokenId: defToken.id,\n        defWeaponBroke: weaponBroke.defendWeaponBroke,\n        dta: combatResult.outcome.dta,\n        effAML,\n        effDML: game.hm3.macros.HM100Check(effDML + dialogResult.addlModifier),\n        effEML: game.hm3.macros.HM100Check(effDML + dialogResult.addlModifier),\n        hasAttackHit: isGrappleAtk ? false : !!combatResult.outcome.atkDice,\n        impactRoll: atkImpactRoll ? atkImpactRoll.dice[0].values.join(' + ') : null,\n        isAtkFumbleRoll: combatResult.outcome.atkFumble,\n        isAtkStumbleRoll: combatResult.outcome.atkStumble,\n        isDefFumbleRoll: combatResult.outcome.defFumble,\n        isDefStumbleRoll: combatResult.outcome.defStumble,\n        isGrappleAtk,\n        isGrappleAtkSuccessful: isGrappleAtk && combatResult.outcome.atkDice > 0,\n        mlType: 'DML',\n        origEML: effDML,\n        outnumbered: defToken.actor?.system?.eph?.outnumbered > 1 ? defToken.actor.system.eph.outnumbered : null,\n        resultDesc: combatResult.desc,\n        title,\n        totalImpact: atkImpactRoll ? atkImpactRoll.total + parseInt(impactMod) : 0,\n        visibleAtkActorId: atkToken.actor.id,\n        visibleDefActorId: defToken.actor.id,\n        weaponImpact: impactMod\n    };\n\n    let chatTemplate = 'systems/hm3/templates/chat/attack-result-card.hbs';\n\n    const html = await renderTemplate(chatTemplate, chatData);\n\n    let messageData = {\n        user: game.user.id,\n        speaker: speaker,\n        content: html.trim()\n    };\n    if (combatResult.outcome.atkDice) {\n        messageData.roll = atkImpactRoll;\n        messageData.sound = CONFIG.sounds.dice;\n        messageData.style = CONST.CHAT_MESSAGE_STYLES.OTHER;\n    } else {\n        messageData.style = CONST.CHAT_MESSAGE_STYLES.OTHER;\n    }\n\n    const messageOptions = {};\n\n    // Create a chat message\n    ChatMessage.applyRollMode(messageData, game.settings.get('core', 'rollMode'));\n    await ChatMessage.create(messageData, messageOptions);\n\n    if (!combatResult.outcome.atkDice && game.settings.get('hm3', 'combatAudio')) {\n        foundry.audio.AudioHelper.play({src: 'systems/hm3/audio/shield-bash.ogg', autoplay: true, loop: false}, true);\n    }\n\n    if (combatResult.outcome.atkHold) {\n        await defToken.addCondition(Condition.GRAPPLED);\n    }\n\n    if (combatResult.outcome.defHold) {\n        await atkToken.addCondition(Condition.GRAPPLED);\n    }\n\n    utility.improveFlag(\n        atkToken.actor.items.find((w) => w.name === weaponName),\n        {actor: atkToken.actor, success: atkRoll.isSuccess}\n    );\n    utility.improveFlag(defWeapon.system.assocSkill, {actor: defToken.actor, success: defRoll.isSuccess});\n\n    if (turnEnds) await setTA(true);\n\n    return chatData;\n}\n\n/**\n *\n * @param {TokenHM3} atkToken\n * @param {ItemHM3} atkWeapon\n * @param {TokenHM3} defToken\n * @param {ItemHM3} defWeapon\n * @returns {Promise<{attackWeaponBroke: boolean, defendWeaponBroke: boolean}>} Promise with break info\n */\nexport async function checkWeaponBreak(atkToken, atkWeapon, defToken, defWeapon) {\n    if (!atkWeapon || !atkToken) {\n        console.error(`HM3 | Attack weapon was not specified`);\n        return {attackWeaponBroke: false, defendWeaponBroke: false};\n    }\n\n    if (!defWeapon || !defToken) {\n        console.error(`HM3 | Defend weapon was not specified`);\n        return {attackWeaponBroke: false, defendWeaponBroke: false};\n    }\n\n    // Weapon Break Check\n    let atkWeaponBroke = false;\n    let defWeaponBroke = false;\n    let atkBreakCheckNotNeeded = false;\n    let defBreakCheckNotNeeded = false;\n    let atkWeaponDiff = 0;\n    let defWeaponDiff = 0;\n    let atkBreakTotal = 0;\n    let defBreakTotal = 0;\n\n    // Get the Arcane Powers of the weapons for break check\n    const atkSwordbreaker = atkWeapon.getArcanePower(ArcanePower.SWORDBREAKER);\n    const atkWardAkana = atkWeapon.getArcanePower(ArcanePower.WARD_AKANA);\n    const atkWarded = !!atkWardAkana && !defWeapon.isArtifact;\n    const defSwordbreaker = defWeapon.getArcanePower(ArcanePower.SWORDBREAKER);\n    const defWardAkana = defWeapon.getArcanePower(ArcanePower.WARD_AKANA);\n    const defWarded = !!defWardAkana && !atkWeapon.isArtifact;\n\n    // Regular weapon quality\n    const atkWeaponQuality = atkWeapon.system.weaponQuality + (atkWeapon.system.wqModifier || 0);\n    const defWeaponQuality = defWeapon.system.weaponQuality + (defWeapon.system.wqModifier || 0);\n\n    // Separate break rolls for each weapon and Swordbreaker rolls if applicable\n    let atkBreakRoll = game.hm3.macros.rollObject(`3d6`, {\n        check: 'd6',\n        name: atkToken.name,\n        target: atkWeaponQuality,\n        type: 'atkBreakRoll'\n    });\n\n    let defBreakRoll = game.hm3.macros.rollObject(`3d6`, {\n        check: 'd6',\n        name: defToken.name,\n        target: defWeaponQuality,\n        type: 'defBreakRoll'\n    });\n\n    let atkSwordbreakerRoll = game.hm3.macros.rollObject(`0`, {\n        check: 'd6',\n        name: atkToken.name,\n        target: atkWeaponQuality,\n        type: 'atkSwordbreakerRoll'\n    });\n\n    let defSwordbreakerRoll = game.hm3.macros.rollObject(`0`, {\n        check: 'd6',\n        name: defToken.name,\n        target: defWeaponQuality,\n        type: 'defSwordbreakerRoll'\n    });\n\n    if (atkSwordbreaker?.isOwnerAware) {\n        defBreakRoll = game.hm3.macros.rollObject(`3d6+1d${atkSwordbreaker.lvl}`, {\n            check: 'd6',\n            name: defToken.name,\n            target: defWeaponQuality,\n            type: 'defBreakRoll'\n        });\n    } else if (atkSwordbreaker) {\n        defSwordbreakerRoll = game.hm3.macros.rollObject(`1d${atkSwordbreaker.lvl}`, {\n            check: 'd6',\n            name: defToken.name,\n            target: defWeaponQuality,\n            type: 'defSwordbreakerRoll'\n        });\n    }\n    if (defSwordbreaker?.isOwnerAware) {\n        atkBreakRoll = game.hm3.macros.rollObject(`3d6+1d${defSwordbreaker.lvl}`, {\n            check: 'd6',\n            name: atkToken.name,\n            target: atkWeaponQuality,\n            type: 'atkBreakRoll'\n        });\n    } else if (defSwordbreaker) {\n        atkSwordbreakerRoll = game.hm3.macros.rollObject(`1d${defSwordbreaker.lvl}`, {\n            check: 'd6',\n            name: atkToken.name,\n            target: atkWeaponQuality,\n            type: 'atkSwordbreakerRoll'\n        });\n    }\n\n    atkBreakTotal = (await atkBreakRoll.evaluate()).total;\n    defBreakTotal = (await defBreakRoll.evaluate()).total;\n\n    // If either weapon has Ward Akana, then it cannot break\n    if (atkWarded && atkWardAkana?.isOwnerAware) {\n        atkBreakCheckNotNeeded = true;\n    } else if (atkWarded) {\n        atkBreakTotal = Math.min(atkBreakTotal, atkWeaponQuality);\n    }\n    if (defWarded && defWardAkana?.isOwnerAware) {\n        defBreakCheckNotNeeded = true;\n    } else if (defWarded) {\n        defBreakTotal = Math.min(defBreakTotal, defWeaponQuality);\n    }\n\n    // SPECIAL: WQ of 0 never breaks and cannot break other weapons\n    if (atkWeaponQuality === 0 || defWeaponQuality === 0) {\n        atkBreakCheckNotNeeded = true;\n        defBreakCheckNotNeeded = true;\n    }\n\n    if (atkWeaponQuality <= defWeaponQuality) {\n        // Check attacker first, then defender\n        if (!atkBreakCheckNotNeeded) {\n            if (atkBreakTotal > atkWeaponQuality) {\n                defBreakCheckNotNeeded = true;\n                atkWeaponBroke = true;\n                atkWeaponDiff = atkBreakTotal - atkWeaponQuality;\n            } else if (atkBreakTotal + (await atkSwordbreakerRoll.evaluate()).total > atkWeaponQuality) {\n                // Owner is not aware of the Swordbreaker\n                defBreakCheckNotNeeded = true;\n                atkWeaponBroke = true;\n                atkBreakTotal = Math.min(atkBreakTotal + (await atkSwordbreakerRoll.evaluate()).total, 18);\n                atkWeaponDiff = atkBreakTotal - atkWeaponQuality;\n            }\n        }\n\n        if (!defBreakCheckNotNeeded) {\n            if (!atkWeaponBroke && defBreakTotal > defWeaponQuality) {\n                defWeaponBroke = true;\n                defWeaponDiff = defBreakTotal - defWeaponQuality;\n            } else if (\n                !atkWeaponBroke &&\n                defBreakTotal + (await defSwordbreakerRoll.evaluate()).total > defWeaponQuality\n            ) {\n                // Owner is not aware of the Swordbreaker\n                defWeaponBroke = true;\n                defBreakTotal = Math.min(defBreakTotal + (await defSwordbreakerRoll.evaluate()).total, 18);\n                defWeaponDiff = defBreakTotal - defWeaponQuality;\n            }\n        }\n    } else {\n        // Check defender first, then attacker\n        if (!defBreakCheckNotNeeded) {\n            if (defBreakTotal > defWeaponQuality) {\n                atkBreakCheckNotNeeded = true;\n                defWeaponBroke = true;\n                defWeaponDiff = defBreakTotal - defWeaponQuality;\n            } else if (defBreakTotal + (await defSwordbreakerRoll.evaluate()).total > defWeaponQuality) {\n                // Owner is not aware of the Swordbreaker\n                atkBreakCheckNotNeeded = true;\n                defWeaponBroke = true;\n                defBreakTotal = Math.min(defBreakTotal + (await defSwordbreakerRoll.evaluate()).total, 18);\n                defWeaponDiff = defBreakTotal - defWeaponQuality;\n            }\n        }\n\n        if (!atkBreakCheckNotNeeded) {\n            if (!defWeaponBroke && atkBreakTotal > atkWeaponQuality) {\n                atkWeaponBroke = true;\n                atkWeaponDiff = atkBreakTotal - atkWeaponQuality;\n            } else if (\n                !defWeaponBroke &&\n                atkBreakTotal + (await atkSwordbreakerRoll.evaluate()).total > atkWeaponQuality\n            ) {\n                // Owner is not aware of the Swordbreaker\n                atkWeaponBroke = true;\n                atkBreakTotal = Math.min(atkBreakTotal + (await atkSwordbreakerRoll.evaluate()).total, 18);\n                atkWeaponDiff = atkBreakTotal - atkWeaponQuality;\n            }\n        }\n    }\n\n    const messageData = {\n        sound: CONFIG.sounds.dice,\n        style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n        user: game.user.id\n    };\n\n    const chatTemplate = 'systems/hm3/templates/chat/weapon-break-card.hbs';\n\n    // Prepare and generate Attack Weapon Break chat message\n    const chatData = {\n        actorId: atkWeapon.parent,\n        debug: CONFIG.debug.hm3 && game.user.isGM,\n        rollFormula: atkBreakRoll.formula,\n        rollResult: atkBreakRoll.result,\n        rollValue: atkBreakTotal,\n        title: 'Attack Weapon Break Check',\n        tokenName: atkToken.name,\n        weaponBroke: atkWeaponBroke,\n        weaponName: atkWeapon.name,\n        weaponQuality: atkWeapon.system.weaponQuality + (atkWeapon.system.wqModifier || 0)\n    };\n\n    let html = await renderTemplate(chatTemplate, chatData);\n\n    messageData.content = html.trim();\n    messageData.speaker = ChatMessage.getSpeaker({token: atkToken});\n    messageData.roll = atkBreakRoll;\n\n    const messageOptions = {};\n\n    ChatMessage.applyRollMode(messageData, game.settings.get('core', 'rollMode'));\n    if (!atkBreakCheckNotNeeded) await ChatMessage.create(messageData, messageOptions);\n\n    // Prepare and generate Defend Weapon Break chat message\n    chatData.actorId = defWeapon.parent;\n    chatData.rollFormula = defBreakRoll.formula;\n    chatData.rollResult = defBreakRoll.result;\n    chatData.rollValue = defBreakTotal;\n    chatData.title = 'Defend Weapon Break Check';\n    chatData.tokenName = defToken.name;\n    chatData.weaponBroke = defWeaponBroke;\n    chatData.weaponName = defWeapon.name;\n    chatData.weaponQuality = defWeapon.system.weaponQuality + (defWeapon.system.wqModifier || 0);\n\n    html = await renderTemplate(chatTemplate, chatData);\n\n    messageData.content = html.trim();\n    messageData.speaker = ChatMessage.getSpeaker({token: defToken});\n    messageData.roll = defBreakRoll;\n\n    ChatMessage.applyRollMode(messageData, game.settings.get('core', 'rollMode'));\n    if (!defBreakCheckNotNeeded) await ChatMessage.create(messageData, messageOptions);\n\n    return {attackWeaponBroke: atkWeaponBroke, atkWeaponDiff, defendWeaponBroke: defWeaponBroke, defWeaponDiff};\n}\n\n/**\n * Resume the attack with the defender performing the \"Ignore\" defense.\n *\n * @param {*} atkToken Token representing the attacker\n * @param {*} defToken Token representing the defender\n * @param {*} type Type of attack: \"melee\" or \"missile\"\n * @param {*} weaponName Name of the weapon the attacker is using\n * @param {*} effAML The effective AML (Attack Mastery Level) of the attacker after modifiers applied\n * @param {*} aim Attack aim (\"High\", \"Mid\", \"Low\")\n * @param {*} aspect Weapon aspect (\"Blunt\", \"Edged\", \"Piercing\")\n * @param {*} impactMod Additional modifier to impact\n */\nexport async function ignoreResume(atkToken, defToken, type, weaponName, effAML, aim, aspect, impactMod, isGrappleAtk) {\n    if (!isValidToken(atkToken) || !isValidToken(defToken)) return null;\n    if (!defToken.isOwner) {\n        ui.notifications.warn(`You do not have permissions to perform this operation on ${atkToken.name}`);\n        return null;\n    }\n\n    const speaker = ChatMessage.getSpeaker({token: atkToken});\n\n    const atkRoll = await DiceHM3.rollTest({\n        data: {},\n        diceSides: 100,\n        diceNum: 1,\n        modifier: 0,\n        name: atkToken.name,\n        target: effAML,\n        type: 'atkRoll'\n    });\n\n    if (game.dice3d) {\n        const aRoll = atkRoll.rollObj;\n        aRoll.dice[0].options.colorset = 'glitterparty';\n        await game.dice3d.showForRoll(aRoll, game.user, true);\n    }\n\n    const atkDie = atkToken.actor.type === ActorType.CREATURE ? Number(atkToken.actor.system.size) : 6;\n\n    const atkResult = `${atkRoll.isCritical ? 'c' : 'm'}${atkRoll.isSuccess ? 's' : 'f'}`;\n    let combatResult;\n    if (type === 'melee') {\n        combatResult = meleeCombatResult({\n            atkAddlImpact: Number(impactMod),\n            atkDie,\n            atkResult,\n            atkToken,\n            defense: 'ignore',\n            defToken,\n            isGrappleAtk\n        });\n    } else {\n        combatResult = missileCombatResult(atkResult, null, 'ignore', impactMod);\n    }\n\n    let atkImpactRoll = null;\n    if (combatResult.outcome.atkDice) {\n        atkImpactRoll = await game.hm3.macros.rollObjectEvaluatedAsync(`${combatResult.outcome.atkDice}d${atkDie}`, {\n            name: atkToken.name,\n            type: 'atkImpact'\n        });\n    }\n\n    const atkCloseMode =\n        atkToken.hasCondition(Condition.CLOSE_MODE) &&\n        !isWpnUnarmed(weaponName, atkToken) &&\n        (aspect === 'Blunt' || aspect === 'Edged');\n\n    const title = isGrappleAtk ? 'Grapple Result' : 'Attack Result';\n    const chatData = {\n        addlWeaponImpact: 0, // in future, maybe ask this in dialog?\n        atkAim: aim,\n        atkAspect: aspect,\n        atkCloseMode,\n        atkDice: combatResult.outcome.atkDice,\n        atkIsCritical: atkRoll.isCritical,\n        atkIsSuccess: atkRoll.isSuccess,\n        atkRollResult: atkRoll.description.replace('Substantial', 'Marginal'),\n        atkTokenId: atkToken.id,\n        attacker: atkToken.name,\n        attackRoll: atkRoll.rollObj.total,\n        attackWeapon: weaponName,\n        defDice: combatResult.outcome.defDice,\n        defender: defToken.name,\n        defense: 'Ignore',\n        defenseRoll: 0,\n        defRollResult: '',\n        defTokenId: defToken.id,\n        dta: combatResult.outcome.dta,\n        effAML: effAML,\n        effDML: 0,\n        hasAttackHit: isGrappleAtk ? false : !!combatResult.outcome.atkDice,\n        impactRoll: atkImpactRoll ? atkImpactRoll.dice[0].values.join(' + ') : null,\n        isAtkFumbleRoll: combatResult.outcome.atkFumble,\n        isAtkHold: combatResult.outcome.atkHold,\n        isAtkStumbleRoll: combatResult.outcome.atkStumble,\n        isDefFumbleRoll: combatResult.outcome.defFumble,\n        isDefHold: combatResult.outcome.defHold,\n        isDefStumbleRoll: combatResult.outcome.defStumble,\n        isGrappleAtk,\n        isGrappleAtkSuccessful: isGrappleAtk && combatResult.outcome.atkDice > 0,\n        mlType: 'AML',\n        resultDesc: combatResult.desc,\n        title,\n        totalImpact: atkImpactRoll ? atkImpactRoll.total + parseInt(impactMod) : 0,\n        visibleAtkActorId: atkToken.actor.id,\n        visibleDefActorId: defToken.actor.id,\n        weaponImpact: impactMod\n    };\n\n    let chatTemplate = 'systems/hm3/templates/chat/attack-result-card.hbs';\n\n    const html = await renderTemplate(chatTemplate, chatData);\n\n    let messageData = {\n        user: game.user.id,\n        speaker: speaker,\n        content: html.trim()\n    };\n    if (combatResult.outcome.atkDice) {\n        messageData.roll = atkImpactRoll;\n        messageData.sound = CONFIG.sounds.dice;\n        messageData.style = CONST.CHAT_MESSAGE_STYLES.OTHER;\n    } else {\n        messageData.style = CONST.CHAT_MESSAGE_STYLES.OTHER;\n    }\n\n    const messageOptions = {};\n\n    // Create a chat message\n    ChatMessage.applyRollMode(messageData, game.settings.get('core', 'rollMode'));\n    await ChatMessage.create(messageData, messageOptions);\n\n    if (combatResult.outcome.atkHold) {\n        await defToken.addCondition(Condition.GRAPPLED);\n    }\n    if (combatResult.outcome.defHold) {\n        await atkToken.addCondition(Condition.GRAPPLED);\n    }\n\n    utility.improveFlag(\n        atkToken.actor.items.find((w) => w.name === weaponName),\n        {actor: atkToken.actor, success: atkRoll.isSuccess}\n    );\n\n    return chatData;\n}\n\n/**\n * Display the results of meele combat.\n *\n * @param {String} atkResult The result from the attack, comprised of \"cs\", \"cf\", \"ms\", or \"mf\"\n * @param {String} defResult The result from the defense, comprised of \"cs\", \"cf\", \"ms\", or \"mf\"\n * @param {String} defense The type of defense: \"ignore\", \"block\", \"counterstrike\", or \"dodge\"\n * @param {Number} [atkAddlImpact=0] Additional impact for the attacker\n * @param {Number} [defAddlImpact=0] If counterstrike defense, the additional impact for the defender (counterstriker)\n * @param {boolean} [isGrappleAtk=false]\n * @param {boolean} [isGrappleDef=false]\n */\nexport function meleeCombatResult({\n    atkAddlImpact = 0,\n    atkDie = 6,\n    atkResult,\n    atkToken,\n    defAddlImpact = 0,\n    defDie = 6,\n    defense,\n    defResult = null,\n    defToken,\n    isGrappleAtk = false,\n    isGrappleDef = false\n}) {\n    let outcome = null;\n    let index = null;\n    const defenseTable = isGrappleAtk ? HM3.grappleCombatTable[defense] : HM3.meleeCombatTable[defense];\n    if (defenseTable) {\n        if (defense === 'ignore') {\n            index = atkResult;\n        } else {\n            index = `${atkResult}:${defResult}`;\n        }\n        outcome = defenseTable[index];\n    }\n\n    if (!outcome) return null;\n\n    if (outcome.atkFumble && atkToken?.hasCondition(Condition.NO_FUMBLE)) {\n        outcome.atkFumble = false;\n    }\n    if (outcome.defFumble && defToken?.hasCondition(Condition.NO_FUMBLE)) {\n        outcome.defFumble = false;\n    }\n    if (outcome.atkStumble && atkToken?.hasCondition(Condition.NO_STUMBLE)) {\n        outcome.atkStumble = false;\n    }\n    if (outcome.defStumble && defToken?.hasCondition(Condition.NO_STUMBLE)) {\n        outcome.defStumble = false;\n    }\n\n    const result = {\n        atkHold: !!outcome.atkHold,\n        csDesc: isGrappleDef ? 'Grapple attempt unsuccessful' : 'Counterstrike misses',\n        defHold: !!outcome.defHold,\n        desc: isGrappleAtk ? 'Grapple attempt unsuccessful' : 'Attack misses',\n        outcome\n    };\n\n    if (defense !== 'counterstrike') {\n        if (outcome.atkHold) {\n            result.desc = `${atkToken.name} obtains hold`;\n        } else if (outcome.atkDice) {\n            result.desc = `${atkToken.name} strikes for ${diceFormula(outcome.atkDice, atkAddlImpact, atkDie)} impact`;\n        } else if (outcome.atkFumble && outcome.defFumble) {\n            result.desc = 'Both attacker and defender fumble';\n        } else if (outcome.atkFumble) {\n            result.desc = `${atkToken.name} fumbles`;\n        } else if (outcome.defFumble) {\n            result.desc = `${defToken.name} fumbles`;\n        } else if (outcome.defStumble && outcome.atkStumble) {\n            result.desc = `Both attacker and defender stumble`;\n        } else if (outcome.atkStumble) {\n            result.desc = `${atkToken.name} stumbles`;\n        } else if (outcome.defStumble) {\n            result.desc = `${defToken.name} stumbles`;\n        } else if (outcome.block) {\n            result.desc = `Attack blocked`;\n        } else if (outcome.dta) {\n            result.desc = `${defToken.name} gains a Tactical Advantage`;\n        }\n    } else {\n        if (outcome.atkHold && outcome.defHold) {\n            result.desc = `Both attacker and defender obtain hold`;\n        } else if (outcome.atkHold) {\n            result.desc = `${atkToken.name} obtains hold`;\n        } else if (outcome.atkDice) {\n            result.desc = `${atkToken.name} strikes for ${diceFormula(outcome.atkDice, atkAddlImpact, atkDie)} impact`;\n        } else if (outcome.atkFumble) {\n            result.desc = `${atkToken.name} fumbles`;\n        } else if (outcome.atkStumble) {\n            result.desc = `${atkToken.name} stumbles`;\n        }\n\n        if (outcome.atkHold && outcome.defHold) {\n            result.desc = `Both attacker and defender obtain hold`;\n        } else if (outcome.defHold) {\n            result.csDesc = `${defToken.name} obtains hold`;\n        } else if (outcome.defDice) {\n            result.csDesc = `${defToken.name} strikes for ${diceFormula(\n                outcome.defDice,\n                defAddlImpact,\n                defDie\n            )} impact`;\n        } else if (outcome.defFumble) {\n            result.csDesc = `${defToken.name} fumbles`;\n        } else if (outcome.defStumble) {\n            result.csDesc = `${defToken.name} stumbles`;\n        } else if (outcome.block) {\n            result.desc = `${atkToken.name} blocked`;\n            result.csDesc = `${defToken.name} blocked`;\n        } else if (outcome.dta) {\n            result.csDesc = `${defToken.name} gains a Tactical Advantage!`;\n        } else if (outcome.miss) {\n            result.csDesc = `${defToken.name} misses`;\n        }\n    }\n\n    return result;\n}\n\nexport function esotericCombatResult({atkResult, atkToken, defense, defResult, defToken}) {\n    let outcome = null;\n    let index = null;\n    const defenseTable = HM3.mentalConflictCombatTable[defense];\n    if (defenseTable) {\n        if (defense === 'ignore') {\n            index = atkResult;\n        } else {\n            index = `${atkResult}:${defResult}`;\n        }\n        outcome = defenseTable[index];\n    }\n\n    if (!outcome) return null;\n\n    const result = {\n        desc: '',\n        outcome\n    };\n\n    if (outcome.atkFatigue === outcome.defFatigue) {\n        result.desc = `<p>Stalemate, both attacker and defender lose ${outcome.atkFatigue} Fatigue Level${\n            outcome.atkFatigue > 1 ? 's' : ''\n        }</p>`;\n        result.csDesc = result.desc;\n    } else if (outcome.atkFatigue) {\n        result.desc = `<p>Defender was able to successfully withstand the esoteric attack</p><p>Attacker receives ${\n            outcome.atkFatigue\n        } Fatigue level${outcome.atkFatigue > 1 ? 's' : ''}</p>`;\n    } else if (outcome.defFatigue) {\n        result.desc = `<p>Estoric Attack successful</p><p>Defender receives ${outcome.defFatigue} Fatigue Level${\n            outcome.defFatigue > 1 ? 's' : ''\n        }</p>`;\n    }\n\n    return result;\n}\n\n/**\n * Calculate and display the results of the missile combat.\n *\n * @param {String} atkResult The result from the attack, comprised of \"cs\", \"cf\", \"ms\", or \"mf\"\n * @param {String} defResult The result from the defense, comprised of \"cs\", \"cf\", \"ms\", or \"mf\"\n * @param {String} defense The type of defense: \"ignore\", \"block\", \"counterstrike\", or \"dodge\"\n * @param {Number} atkAddlImpact Any additional impact\n */\nexport function missileCombatResult(atkResult, defResult, defense, atkAddlImpact = 0) {\n    let outcome = null;\n    let index = null;\n    const defenseTable = HM3.missileCombatTable[defense];\n    if (defenseTable) {\n        if (defense === 'ignore') {\n            index = atkResult;\n        } else {\n            index = `${atkResult}:${defResult}`;\n        }\n        outcome = defenseTable[index];\n    }\n\n    if (!outcome) return null;\n\n    const result = {outcome: outcome, desc: 'No result'};\n\n    if (outcome.atkDice && !outcome.defDice) {\n        result.desc = `Missile strikes for ${diceFormula(outcome.atkDice, atkAddlImpact)} impact.`;\n    } else if (outcome.wild) {\n        result.desc = `Missile goes wild; effects at GM discretion.`;\n    } else if (outcome.block) {\n        result.desc = `Defender blocks missile!`;\n    } else if (outcome.miss) {\n        result.desc = `Missile missed.`;\n    }\n\n    return result;\n}\n\n/**\n * Return the dice formula meeting the specified parameters\n *\n * @param {*} numDice  Number of 6-sided dice to include in the formula\n * @param {*} addlImpact Any additional impact to include in the formula\n */\nfunction diceFormula(numDice, addlImpact, die = 6) {\n    if (numDice <= 0) {\n        return 'no';\n    }\n    if (addlImpact) {\n        return `${numDice}d${die}${addlImpact < 0 ? '-' : '+'}${Math.abs(addlImpact)}`;\n    } else {\n        return `${numDice}d${die}`;\n    }\n}\n\n/**\n * Returns a structure specifying the default aspect for a weapon, as well as the\n * impact values for all other aspects.  The default aspect is always the aspect\n * with the greatest impact.\n *\n * @param {*} weapon Name of weapon\n * @param {*} items List of items containing 'weapongear' items.\n */\nfunction calcWeaponAspect(weapon) {\n    const data = weapon.system;\n\n    // Note that although \"Fire\" is in this list, because it is a\n    // type of damage, no normal weapon uses it as its aspect.\n    // It is here so that it can be selected (no default impact\n    // damage would be specified for that aspect).\n    const result = {\n        defaultAspect: null,\n        aspects: {}\n    };\n\n    // Any impact < 0 indicates that aspect is not available\n    const maxImpact = Math.max(data.blunt, data.piercing, data.edged);\n    if (maxImpact >= 0) {\n        if (data.blunt >= 0) result.aspects[Aspect.BLUNT] = data.blunt;\n        if (data.edged >= 0) result.aspects[Aspect.EDGED] = data.edged;\n        if (data.piercing >= 0) result.aspects[Aspect.PIERCING] = data.piercing;\n        if (maxImpact === data.piercing) {\n            result.defaultAspect = Aspect.PIERCING;\n        } else if (maxImpact === data.edged) {\n            result.defaultAspect = Aspect.EDGED;\n        } else if (maxImpact === data.blunt) {\n            result.defaultAspect = Aspect.BLUNT;\n        }\n    }\n\n    return result;\n}\n\n/**\n * Finds an Item by name or UUID. If name is provided, searches within the specified actor.\n *\n * @param {*} itemName Either an Item or a string formatted as a UUID\n * @param {*} type The type of Item (e.g., \"missilegear\")\n * @param {*} actor The actor containing the items to search\n */\nexport async function getItem(itemName, type, actor) {\n    if (!itemName) {\n        ui.notifications.warn('No item name was specified. You must specify an item name.');\n        return null;\n    }\n\n    let item = fromUuidSync(itemName);\n\n    if (!item) {\n        if (!actor || typeof actor !== 'object') {\n            ui.notifications.warn('No actor was selected. You must select an actor.');\n            return null;\n        }\n\n        const lcItemName = itemName.toLowerCase();\n        const items = actor ? actor.items.filter((i) => i.type === type && i.name.toLowerCase() === lcItemName) : [];\n        if (items.length > 1) {\n            ui.notifications.warn(\n                `Your controlled Actor ${actor.name} has more than one ${type} with name ${itemName}. The first matched ${type} will be chosen.`\n            );\n        } else if (items.length === 0) {\n            ui.notifications.warn(`Your controlled Actor does not have a ${type} named ${itemName}`);\n            return null;\n        }\n        item = items[0];\n    }\n\n    if (!item) {\n        ui.notifications.warn(`The item ${itemName} was not found`);\n        return null;\n    }\n\n    return item;\n}\n\n/**\n * Calculates the distance from sourceToken to targetToken in \"scene\" units (e.g., feet).\n *\n * @param {TokenHM3} sourceToken\n * @param {TokenHM3} targetToken\n * @param {Boolean} gridUnits If true, return in grid units, not \"scene\" units\n */\nexport function rangeToTarget(sourceToken, targetToken, gridUnits = false) {\n    if (!sourceToken || !targetToken || !canvas.scene || !canvas.scene.grid) return 9999;\n\n    const distance = game.hm3.macros.distanceBtwnTwoTokens(sourceToken.id, targetToken.id); // [ft]\n    // console.info(`Distance = ${utility.truncate(distance, 0)}, gridUnits=${gridUnits}`);\n    if (gridUnits) return utility.truncate(distance / canvas.dimensions.distance, 0);\n    return utility.truncate(distance, 0);\n}\n\n/**\n * Optionally hide the display of chat card action buttons which cannot be performed by the user\n */\nexport const displayChatActionButtons = function (message, html, data) {\n    const chatCard = html.find('.hm3.chat-card');\n    if (chatCard.length > 0) {\n        // If the user is the GM, proceed\n        if (game.user.isGM) return;\n\n        // Otherwise conceal action buttons\n        const buttons = chatCard.find('button[data-action]');\n        buttons.each((i, btn) => {\n            const actor = btn.dataset.visibleActorId ? game.actors.get(btn.dataset.visibleActorId) : null;\n            if (!actor || !actor.isOwner) {\n                btn.style.display = 'none';\n            }\n        });\n    }\n};\n\n/**\n *\n * @returns True, if no TA has been received so far in this turn.\n */\nasync function isFirstTA() {\n    return game.hm3.socket.executeAsGM('isFirstTA');\n}\n\n/**\n *\n * @param {boolean} [autoend=false] (defaults to false)\n * @returns {Promise<boolean>}\n */\nexport async function setTA(autoend = false) {\n    if ((await isFirstTA()) && !autoend) {\n        await game.hm3.socket.executeAsGM('setTAFlag');\n        return true;\n    } else {\n        await game.hm3.GmSays({\n            text: 'No more than one <b>Tactical Advantage</b> may be earned per character turn. <b>Turn ends.</b>',\n            source: 'Combat 12'\n        });\n        await game.combat.combatant.token.turnEnds();\n        return false;\n    }\n}\n\n/**\n *\n * @returns {string[]}\n */\nexport function outnumberedConditions() {\n    return [\n        game.hm3.Condition.CAUTIOUS,\n        game.hm3.Condition.DISTRACTED,\n        game.hm3.Condition.DYING,\n        game.hm3.Condition.GRAPPLED,\n        game.hm3.Condition.INCAPACITATED,\n        game.hm3.Condition.PRONE,\n        game.hm3.Condition.SHOCKED,\n        game.hm3.Condition.UNCONSCIOUS\n    ];\n}\n\nexport async function updateOutnumbered() {\n    const all = canvas.scene.tokens.contents;\n    const friendly = all.filter((t) => t.disposition === CONST.TOKEN_DISPOSITIONS.FRIENDLY);\n    const hostile = all.filter((t) => t.disposition === CONST.TOKEN_DISPOSITIONS.HOSTILE);\n\n    // const friendly = all.filter((token) =>\n    //     [CONST.TOKEN_DISPOSITIONS.FRIENDLY, CONST.TOKEN_DISPOSITIONS.NEUTRAL, CONST.TOKEN_DISPOSITIONS.SECRET].includes(token.disposition)\n    // );\n    // const hostile = all.filter((token) =>\n    //     [CONST.TOKEN_DISPOSITIONS.HOSTILE, CONST.TOKEN_DISPOSITIONS.NEUTRAL, CONST.TOKEN_DISPOSITIONS.SECRET].includes(token.disposition)\n    // );\n\n    const engaged = new Map();\n\n    friendly.forEach((fDoc) => {\n        const e = [\n            ...hostile\n                .filter((hDoc) => rangeToTarget(fDoc.object, hDoc.object) < 5.1 && hDoc.object.hasEngagementZone())\n                .map((t) => t.object)\n        ];\n        engaged.set(fDoc.object.id, e);\n    });\n    hostile.forEach((hDoc) => {\n        const e = [\n            ...friendly\n                .filter((fDoc) => rangeToTarget(fDoc.object, hDoc.object) < 5.1 && fDoc.object.hasEngagementZone())\n                .map((t) => t.object)\n        ];\n        engaged.set(hDoc.object.id, e);\n    });\n\n    const tokens = [];\n    for (let i = 0; i < all.length; i++) {\n        const token = all[i];\n        if (token.hasCondition(Condition.NO_OUTNUMBERED)) continue;\n        const e = engaged.get(token.id);\n        if (e && e.length > 1) {\n            const exclusivelyEngaged = [...e.filter((t) => engaged.get(t.id).length === 1)];\n            const outnumbered = exclusivelyEngaged.length >= 2;\n            if (outnumbered) {\n                // Outnumbered\n                const label = `${Condition.OUTNUMBERED} ${exclusivelyEngaged.length}:1`;\n                if (!token.hasCondition(label)) {\n                    await token.deleteCondition(Condition.OUTNUMBERED);\n                    await token.addCondition(Condition.OUTNUMBERED, {outnumbered: exclusivelyEngaged.length});\n                    tokens.push(token);\n                }\n            } else {\n                // Not outnumbered\n                if (token.hasCondition(Condition.OUTNUMBERED)) {\n                    await token.deleteCondition(Condition.OUTNUMBERED);\n                    tokens.push(token);\n                }\n            }\n        } else {\n            // Not outnumbered\n            if (token.hasCondition(Condition.OUTNUMBERED)) {\n                await token.deleteCondition(Condition.OUTNUMBERED);\n                tokens.push(token);\n            }\n        }\n    }\n\n    console.info(`HM3 | Outnumbered updated: `, tokens.length > 0, tokens);\n\n    return {changed: tokens.length > 0, tokens};\n}\n","// This is a special state of battle frenzy. Any character who enters this mode must take the most\r\n// aggressive action available for Attack or Defense, adding 20 to EML to Attack or Counterstrike.\r\n// Further Initiative rolls are ignored until the battle ends. (COMBAT 16)\r\nconst CONDITION_ICON = 'systems/hm3/images/icons/svg/enrage-white.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return false;\r\n\r\n    // Inanimate creatures are immune to morale conditions\r\n    if (token.hasCondition(game.hm3.Condition.INANIMATE)) return false;\r\n\r\n    const CONDITION = game.hm3.Condition.BERSERK;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    const ON_CREATE_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nawait token.deleteAllMoraleConditions('${CONDITION}');\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious) await game.hm3.Gm2GmSays(\"<b>\" + token.name + \"</b> enters <b>Berserk Mode</b>, and <b>Must</b> take the most aggressive action available for Attack or Defense, adding 20 to EML to Attack or Counterstrike. Further Initiative rolls are ignored until the battle ends.\", \"Combat 18\");\r\nconsole.info(\"HM3 | Condition: ${CONDITION} created for token: ${token.name}\");\r\n`;\r\n\r\n    const ON_TURN_START_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious) await game.hm3.Gm2GmSays(\"<b>\" + token.name + \"</b> is in <b>Berserk Mode</b>, and <b>Must</b> take the most aggressive action available for Attack or Defense, adding 20 to EML to Attack or Counterstrike. Further Initiative rolls are ignored until the battle ends.\", \"Combat 18\");\r\n`;\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label: CONDITION,\r\n            seconds: game.hm3.CONST.TIME.INDEFINITE,\r\n            token,\r\n            type: 'GameTime',\r\n            flags: {\r\n                effectmacro: {\r\n                    onCreate: {script: ON_CREATE_MACRO},\r\n                    onTurnStart: {script: ON_TURN_START_MACRO}\r\n                },\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [{key: 'eph.meleeAMLMod', mode: 2, priority: null, value: '20'}],\r\n        options: {unique: true}\r\n    };\r\n}\r\n","// The character is unable to fight in any useful way. The only available options are flight or\r\n// surrender. Flight is normally preferable; surrender is a last resort. If neither is feasible,\r\n// the character makes a Rest or Pass action option, but can defend if attacked except that\r\n// Counterstrike is prohibited. (COMBAT 16)\r\nconst CONDITION_ICON = 'systems/hm3/images/icons/svg/despair-white.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return false;\r\n\r\n    // Inanimate creatures are immune to morale conditions\r\n    if (token.hasCondition(game.hm3.Condition.INANIMATE)) return false;\r\n\r\n    const CONDITION = game.hm3.Condition.BROKEN;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    const ON_CREATE_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nawait token.deleteAllMoraleConditions('${CONDITION}');\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious) await game.hm3.Gm2GmSays(\"<b>\" + token.name + \"</b> is now <b>Broken</b>, and is unable to fight in any useful way. The only available options are flight or surrender. Flight is normally preferable; surrender is a last resort.\", \"Combat 16\", !token.player);\r\n`;\r\n\r\n    const ON_TURN_START_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious) await game.hm3.Gm2GmSays(\"<b>\" + token.name + \"</b> is still <b>Broken</b>, and is unable to fight in any useful way. The only available options are flight or surrender. Flight is normally preferable; surrender is a last resort.\", \"Combat 16\", !token.player);\r\n`;\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label: CONDITION,\r\n            seconds: game.hm3.CONST.TIME.INDEFINITE,\r\n            token,\r\n            type: 'GameTime',\r\n            flags: {\r\n                effectmacro: {onCreate: {script: ON_CREATE_MACRO}, onTurnStart: {script: ON_TURN_START_MACRO}},\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [],\r\n        options: {unique: true}\r\n    };\r\n}\r\n","// A cautious character will not Engage, must choose Pass if engaged, and cannot select the\r\n// Counterstrike defense. (COMBAT 16)\r\nconst CONDITION_ICON = 'systems/hm3/images/icons/svg/distraction-white.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return false;\r\n\r\n    // Inanimate creatures are immune to morale conditions\r\n    if (token.hasCondition(game.hm3.Condition.INANIMATE)) return false;\r\n\r\n    const CONDITION = game.hm3.Condition.CAUTIOUS;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    const ON_CREATE_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nawait token.deleteAllMoraleConditions('${CONDITION}');\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious) {\r\n    await game.hm3.Gm2GmSays(\r\n        '<b>' +\r\n            token.name +\r\n            '</b> is now <b>Cautious</b>, and will not Engage, must choose <b>Pass</b> if engaged, and cannot select the Counterstrike defense.',\r\n        'Combat 16'\r\n    );\r\n    if (token.isEngaged()) {\r\n        await game.hm3.GmSays({\r\n            text:\r\n                '<b>' +\r\n                token.name +\r\n                '</b> is <b>Cautious</b>, and must choose <b>Pass</b> if engaged. <b>Turn ends.</b>',\r\n            source: 'Combat 16',\r\n            gmonly: !token.player,\r\n            token\r\n        });\r\n        await token.turnEnds();\r\n    }\r\n}\r\n`;\r\n\r\n    const ON_TURN_START_MACRO = options.oneRound\r\n        ? ''\r\n        : `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious) {\r\n    await game.hm3.Gm2GmSays({\r\n        text:\r\n            '<b>' +\r\n            token.name +\r\n            '</b> is still <b>Cautious</b>, and will not Engage, must choose <b>Pass</b> if engaged, and cannot select the Counterstrike defense.',\r\n        source: 'Combat 16',\r\n        token\r\n    });\r\n    if (token.isEngaged()) {\r\n        await token.turnEnds();\r\n        await game.hm3.GmSays({\r\n            text:\r\n                '<b>' +\r\n                token.name +\r\n                '</b> is <b>Cautious</b>, and must choose <b>Pass</b> if engaged. <b>Turn ends.</b>',\r\n            source: 'Combat 16',\r\n            gmonly: !token.player,\r\n            token\r\n        });\r\n    }\r\n}\r\n`;\r\n\r\n    const type = options.oneRound || options.oneTurn ? 'Combat' : 'GameTime';\r\n    const seconds = type === 'GameTime' ? game.hm3.CONST.TIME.INDEFINITE : undefined;\r\n    const rounds = type === 'Combat' && options.oneRound ? 1 : undefined;\r\n    const turns = type === 'Combat' && options.oneTurn ? 1 : undefined;\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label: CONDITION,\r\n            rounds,\r\n            seconds,\r\n            token,\r\n            turns,\r\n            type,\r\n            flags: {\r\n                effectmacro: {\r\n                    onCreate: {script: ON_CREATE_MACRO},\r\n                    onTurnStart: {script: ON_TURN_START_MACRO}\r\n                },\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [],\r\n        options: {selfDestroy: true, unique: true}\r\n    };\r\n}\r\n","const CONDITION_ICON = 'systems/hm3/images/icons/svg/spiked-wall-white.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return;\r\n\r\n    const CONDITION = game.hm3.Condition.CLOSE_MODE;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    const ON_TURN_START_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious)\r\n    await game.hm3.GmSays({\r\n        text:\r\n            '<b>' +\r\n            token.name +\r\n            '</b> is in <b>Close Mode</b>, and gets -10 on <b>All</b> attack rolls. Any <b>Thrusting Weapon</b> (such as a Spear, or a Sword employing Point aspect) ignore Close Mode modifiers.',\r\n        source: 'Combat 11',\r\n        gmonly: !token.player\r\n    });\r\n`;\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label: CONDITION,\r\n            seconds: game.hm3.CONST.TIME.INDEFINITE,\r\n            token,\r\n            type: 'GameTime',\r\n            flags: {\r\n                effectmacro: {onTurnStart: {script: ON_TURN_START_MACRO}},\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [],\r\n        options: {unique: true}\r\n    };\r\n}\r\n","// Character tries to conclude the battle, one way or the other, as soon as possible. Until\r\n// the situation changes and a new Initiative Test is passed, the character selects the most\r\n// aggressive option available. (COMBAT 16)\r\nconst CONDITION_ICON = 'systems/hm3/images/icons/svg/distraction-white.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return false;\r\n\r\n    // Inanimate creatures are immune to morale conditions\r\n    if (token.hasCondition(game.hm3.Condition.INANIMATE)) return false;\r\n\r\n    const CONDITION = game.hm3.Condition.DESPERATE;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    const ON_CREATE_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nawait token.deleteAllMoraleConditions(game.hm3.Condition.DESPERATE);\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious) await game.hm3.Gm2GmSays(\"<b>\" + token.name + \"</b> is now <b>Desperate</b>, and tries to conclude the battle, one way or the other, as soon as possible. Until the situation changes and a new Initiative Test is passed, the character selects the <b>Most Aggressive</b> option available.\", \"Combat 16\", !token.player);\r\n`;\r\n\r\n    const ON_TURN_START_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious) await game.hm3.Gm2GmSays(\"<b>\" + token.name + \"</b> is still <b>Desperate</b>, and tries to conclude the battle, one way or the other, as soon as possible. Until the situation changes and a new Initiative Test is passed, the character selects the <b>Most Aggressive</b> option available.\", \"Combat 16\", !token.player);\r\n`;\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label: CONDITION,\r\n            seconds: game.hm3.CONST.TIME.INDEFINITE,\r\n            token,\r\n            type: 'GameTime',\r\n            flags: {\r\n                effectmacro: {onCreate: {script: ON_CREATE_MACRO}, onTurnStart: {script: ON_TURN_START_MACRO}},\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [],\r\n        options: {unique: true}\r\n    };\r\n}\r\n","const CONDITION_ICON = 'systems/hm3/images/icons/svg/distraction-white.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return;\r\n\r\n    const CONDITION = game.hm3.Condition.DISTRACTED;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    const ON_TURN_START_MACRO = options.oneRound\r\n        ? ``\r\n        : `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious) {\r\n    await game.hm3.GmSays({\r\n        text:\r\n            '<b>' +\r\n            token.name +\r\n            '</b> remains <b>Distracted</b> and <b>Must</b> take the <b>Pass</b> action. All Defense actions suffer a -10 penalty to EML. <b>Turn ends.</b>',\r\n        source: 'House Rule',\r\n        gmonly: !token.player,\r\n        token\r\n    });\r\n    await token.turnEnds();\r\n}\r\n`;\r\n\r\n    const type = options.oneRound || options.oneTurn ? 'Combat' : 'GameTime';\r\n    const seconds = type === 'GameTime' ? game.hm3.CONST.TIME.INDEFINITE : undefined;\r\n    const rounds = type === 'Combat' && options.oneRound ? 1 : undefined;\r\n    const turns = type === 'Combat' && options.oneTurn ? 1 : undefined;\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label: CONDITION,\r\n            rounds,\r\n            seconds,\r\n            token,\r\n            turns,\r\n            type,\r\n            flags: {\r\n                effectmacro: {onTurnStart: {script: ON_TURN_START_MACRO}},\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [{key: 'eph.meleeDMLMod', mode: 2, priority: null, value: '-10'}],\r\n        options: {selfDestroy: true, unique: true}\r\n    };\r\n}\r\n","const CONDITION_ICON = 'icons/svg/skull.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return;\r\n\r\n    const CONDITION = game.hm3.Condition.DYING;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    const ON_CREATE_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nawait token.deleteAllMoraleConditions();\r\nawait token.combatant?.update({defeated: true});\r\nawait token.addCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!!token.actor.player) {\r\n    await game.hm3.GmSays({\r\n        text:\r\n            '<b>' +\r\n            token.name +\r\n            '</b> is <b>unconscious</b> due to a <b>Mortal Wound</b> and is <b>Dying</b>. Life-saving measures should be initiated as quickly as possible.',\r\n        source: 'Combat 14'\r\n    });\r\n} else {\r\n    await game.hm3.GmSays({\r\n        text: '<b>' + token.name + '</b> is <b>Dead</b> due to a <b>Mortal Wound</b>.',\r\n        source: 'Combat 14'\r\n    });\r\n}\r\nconsole.info('HM3 | Condition: ${CONDITION} created for token: ${token.name}');\r\n`;\r\n\r\n    const ON_TURN_START_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nawait game.hm3.GmSays({\r\n    text: '<b>' + token.name + '</b> stays unconscious due to a <b>Mortal Wound</b>. <b>Turn ends.</b>',\r\n    source: 'Combat 14',\r\n    token\r\n});\r\nawait token.turnEnds();\r\n`;\r\n\r\n    const ON_DELETE_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nawait token.combatant?.update({defeated: false});\r\ngame.hm3.macros.updateOverlay(token);\r\nconsole.info(\"HM3 | Condition: ${CONDITION} deleted for token: ${token.name}\");\r\n`;\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label: CONDITION,\r\n            token,\r\n            type: 'GameTime',\r\n            seconds: game.hm3.CONST.TIME.INDEFINITE,\r\n            flags: {\r\n                effectmacro: {\r\n                    onCreate: {script: ON_CREATE_MACRO},\r\n                    onTurnStart: {script: ON_TURN_START_MACRO},\r\n                    onDelete: {script: ON_DELETE_MACRO}\r\n                },\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [],\r\n        options: {overlay: true, unique: true}\r\n    };\r\n}\r\n","// Character selects and executes any Action Option, with a +10 bonus to EML. If the character’s\r\n// current morale state is non-normal, it returns to normal. (COMBAT 16)\r\nconst CONDITION_ICON = 'icons/svg/upgrade.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return false;\r\n\r\n    // Inanimate creatures are immune to morale conditions\r\n    if (token.hasCondition(game.hm3.Condition.INANIMATE)) return false;\r\n\r\n    const CONDITION = game.hm3.Condition.EMPOWERED;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    const ON_CREATE_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nawait token.deleteAllMoraleConditions(game.hm3.Condition.EMPOWERED);\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious) await game.hm3.Gm2GmSays(\"<b>\" + token.name + \"</b> is now <b>Empowered</b>, and adds 10 to any EML this turn.\", \"Combat 16\");\r\nconsole.info(\"HM3 | Condition: ${CONDITION} created for token: ${token.name}\");\r\n`;\r\n\r\n    const ON_TURN_START_MACRO = ``;\r\n\r\n    const type = options.oneRound || options.oneTurn ? 'Combat' : 'GameTime';\r\n    const seconds = type === 'GameTime' ? game.hm3.CONST.TIME.INDEFINITE : undefined;\r\n    const rounds = type === 'Combat' && options.oneRound ? 1 : undefined;\r\n    const turns = type === 'Combat' && options.oneTurn ? 1 : undefined;\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label: CONDITION,\r\n            rounds,\r\n            seconds,\r\n            token,\r\n            turns,\r\n            type,\r\n            flags: {\r\n                effectmacro: {onCreate: {script: ON_CREATE_MACRO}, onTurnStart: {script: ON_TURN_START_MACRO}},\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [{key: 'eph.meleeAMLMod', mode: 2, priority: null, value: '10'}], // TODO must be a general bonus on ALL skills\r\n        options: {selfDestroy: true, unique: true}\r\n    };\r\n}\r\n","// const GRAPPLED_ICON = 'systems/hm3/images/icons/svg/manacles.svg';\r\nconst GRAPPLED_ICON = 'icons/svg/net.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return;\r\n\r\n    return {\r\n        effectData: {\r\n            label: game.hm3.Condition.GRAPPLED,\r\n            token,\r\n            icon: GRAPPLED_ICON,\r\n            type: 'GameTime',\r\n            seconds: game.hm3.CONST.TIME.INDEFINITE\r\n        },\r\n        changes: [],\r\n        options: {unique: true}\r\n    };\r\n}\r\n","const CONDITION_ICON = 'systems/hm3/images/icons/svg/skeleton-white.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return;\r\n\r\n    const CONDITION = game.hm3.Condition.INANIMATE;\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label: CONDITION,\r\n            seconds: game.hm3.CONST.TIME.INDEFINITE,\r\n            token,\r\n            type: 'GameTime'\r\n        },\r\n        changes: [\r\n            {key: 'eph.fatigue', mode: 2, priority: null, value: `-100`},\r\n            {key: 'eph.totalInjuryLevels', mode: 2, priority: null, value: `-100`}\r\n        ],\r\n        options: {hidden: true, unique: true}\r\n    };\r\n}\r\n","const CONDITION_ICON = 'systems/hm3/images/icons/svg/no-fumble.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return;\r\n\r\n    const CONDITION = game.hm3.Condition.NO_FUMBLE;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label: CONDITION,\r\n            seconds: game.hm3.CONST.TIME.INDEFINITE,\r\n            token,\r\n            type: 'GameTime',\r\n            flags: {\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [],\r\n        options: {hidden: true, unique: true}\r\n    };\r\n}\r\n","const CONDITION_ICON = 'systems/hm3/images/icons/svg/no-outnumbered.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return;\r\n\r\n    const CONDITION = game.hm3.Condition.NO_OUTNUMBERED;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label: CONDITION,\r\n            seconds: game.hm3.CONST.TIME.INDEFINITE,\r\n            token,\r\n            type: 'GameTime',\r\n            flags: {\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [],\r\n        options: {hidden: true, unique: true}\r\n    };\r\n}\r\n","const CONDITION_ICON = 'systems/hm3/images/icons/svg/no-stumble.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return;\r\n\r\n    const CONDITION = game.hm3.Condition.NO_STUMBLE;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label: CONDITION,\r\n            seconds: game.hm3.CONST.TIME.INDEFINITE,\r\n            token,\r\n            type: 'GameTime',\r\n            flags: {\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [],\r\n        options: {hidden: true, unique: true}\r\n    };\r\n}\r\n","// A character is outnumbered if exclusively engaged by two or more opponents. When counting\r\n// opponents for this purpose, prone enemies are excluded, as are enemies who are themselves\r\n// engaged by other friendly characters. (COMBAT 11)\r\nconst CONDITION_ICON = 'systems/hm3/images/icons/svg/backup-white.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return;\r\n    if ((options?.outnumbered || 1) < 2) return;\r\n    if (token.hasCondition(game.hm3.Condition.NO_OUTNUMBERED)) return false;\r\n\r\n    const CONDITION = game.hm3.Condition.OUTNUMBERED;\r\n    const label = `${CONDITION} ${options.outnumbered}:1`;\r\n    console.info(`HM3 | Creating condition: ${label} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    const ON_CREATE_MACRO = ``;\r\n\r\n    const ON_TURN_START_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious)\r\n    await game.hm3.GmSays({\r\n        text:\r\n            '<b>' +\r\n            token.name +\r\n            '</b> is <b>${label}</b>, and gets -${\r\n        (options.outnumbered - 1) * 10\r\n    } on <b>All</b> defense rolls including counterattack.',\r\n        source: 'Combat 11',\r\n        gmonly: !token.player\r\n    });\r\n`;\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label,\r\n            seconds: game.hm3.CONST.TIME.INDEFINITE,\r\n            token,\r\n            type: 'GameTime',\r\n            flags: {\r\n                effectmacro: {onCreate: {script: ON_CREATE_MACRO}, onTurnStart: {script: ON_TURN_START_MACRO}},\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [{key: 'eph.outnumbered', mode: 2, priority: null, value: `${options.outnumbered}`}],\r\n        options: {unique: true}\r\n    };\r\n}\r\n","// const PRONE_ICON = 'systems/hm3/images/icons/svg/falling.svg';\r\nconst CONDITION_ICON = 'icons/svg/falling.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return false;\r\n\r\n    if (token.hasCondition(game.hm3.Condition.NO_STUMBLE)) return false;\r\n\r\n    const CONDITION = game.hm3.Condition.PRONE;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    const ON_CREATE_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nawait token.document.setFlag('wall-height', 'tokenHeight', 2);\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious)\r\n    await game.hm3.GmSays({\r\n        text:\r\n            '<b>' +\r\n            token.name +\r\n            '</b> falls prone, and getting up takes one action. <b>All</b> opponents gain +20 on <b>All</b> attack and defense rolls.',\r\n        source: 'Combat 11'\r\n    });\r\nconsole.info('HM3 | Condition: ${CONDITION} created for token: ${token.name}');\r\n`;\r\n\r\n    const ON_TURN_START_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nconst distracted = token.hasCondition(game.hm3.Condition.DISTRACTED);\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (distracted || unconscious) return;\r\nconst PRONE_IMG = '${CONDITION_ICON}';\r\nawait game.hm3.GmSays({\r\n    text:\r\n        '<b>' + token.name + '</b> is prone, and <b>All</b> opponents gain +20 on <b>All</b> attack and defense rolls.',\r\n    source: 'Combat 11',\r\n    gmonly: !token.player\r\n});\r\nawait Requestor.request({\r\n    title: game.hm3.Condition.PRONE,\r\n    description: '<div class=\"chat-card fluff\"><p>Getting up takes <b>ONE Action</b>.</p></div>',\r\n    img: PRONE_IMG,\r\n    limit: Requestor.LIMIT.OPTION,\r\n    speaker: ChatMessage.getSpeaker({token}),\r\n    buttonData: [\r\n        {\r\n            label: 'Rise',\r\n            command: async function () {\r\n                const token = canvas.tokens.get('${token.id}');\r\n                await token.deleteCondition(game.hm3.Condition.PRONE);\r\n            }\r\n        },\r\n        {\r\n            label: 'Ignore',\r\n            command: async function () {\r\n                const token = canvas.tokens.get('${token.id}');\r\n                await game.hm3.GmSays({\r\n                    text: 'Ok, ' + token.name + ' remains lying on the floor.',\r\n                    source: 'Combat 11',\r\n                    gmonly: !token.player\r\n                });\r\n            }\r\n        }\r\n    ]\r\n});\r\n`;\r\n\r\n    const ON_DELETE_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nawait token.document.setFlag('wall-height', 'tokenHeight', token.actor.system.height || 6);\r\nif (game.combat?.started && game.combat.combatant) {\r\n    if (game.combat.combatant.id === token.combatant?.id) {\r\n        await game.hm3.GmSays({\r\n            text: '<b>' + token.name + '</b> rises successfully. <b>Turn ends.</b>',\r\n            source: 'Combat 11',\r\n            token\r\n        });\r\n        await token.turnEnds();\r\n    } else {\r\n        await game.hm3.GmSays({text: '<b>' + token.name + '</b> rises successfully.', source: 'Combat 11', token});\r\n    }\r\n}\r\ngame.hm3.macros.updateOverlay(token);\r\nconsole.info('HM3 | Condition: ${CONDITION} deleted for token: ${token.name}');\r\n`;\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label: CONDITION,\r\n            seconds: game.hm3.CONST.TIME.INDEFINITE,\r\n            token,\r\n            type: 'GameTime',\r\n            flags: {\r\n                effectmacro: {\r\n                    onCreate: {script: ON_CREATE_MACRO},\r\n                    onTurnStart: {script: ON_TURN_START_MACRO},\r\n                    onDelete: {script: ON_DELETE_MACRO}\r\n                },\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [],\r\n        options: {\r\n            overlay: !(\r\n                token.hasCondition(game.hm3.Condition.DYING) ||\r\n                token.hasCondition(game.hm3.Condition.UNCONSCIOUS) ||\r\n                token.hasCondition(game.hm3.Condition.SHOCKED)\r\n            ),\r\n            unique: true\r\n        }\r\n    };\r\n}\r\n","const CONDITION_ICON = 'systems/hm3/images/icons/svg/arm-sling.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return;\r\n\r\n    const CONDITION = game.hm3.Condition.SECONDARY_HAND;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    const ON_TURN_START_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious)\r\n    await game.hm3.GmSays({\r\n        text:\r\n            '<b>' + token.name + '</b> fights with the <b>Secondary Hand</b>, and gets -10 on <b>All</b> attack rolls.',\r\n        source: 'Combat 3 & 11',\r\n        gmonly: !token.player\r\n    });\r\n`;\r\n\r\n    return {\r\n        effectData: {\r\n            label: CONDITION,\r\n            token,\r\n            icon: CONDITION_ICON,\r\n            type: 'GameTime',\r\n            seconds: game.hm3.CONST.TIME.INDEFINITE,\r\n            flags: {\r\n                effectmacro: {onTurnStart: {script: ON_TURN_START_MACRO}},\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [{key: 'eph.meleeAMLMod', mode: 2, value: '-10'}],\r\n        options: {unique: true}\r\n    };\r\n}\r\n","const CONDITION_ICON = 'icons/svg/lightning.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return false;\r\n\r\n    // Inanimate creatures cannot be shocked\r\n    if (token.hasCondition(game.hm3.Condition.INANIMATE)) return false;\r\n\r\n    const CONDITION = game.hm3.Condition.SHOCKED;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    const ON_CREATE_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nconst dateTime = SimpleCalendar?.api?.currentDateTimeDisplay();\r\nawait game.hm3.macros.createInjury({\r\n    token,\r\n    name: 'Shock',\r\n    subType: 'shock',\r\n    healRate: 4,\r\n    notes: 'Started: ' + dateTime?.date + ' - ' + dateTime?.time\r\n});\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious) {\r\n    if (game.combat?.started && !token.player) await token.combatant.update({defeated: true});\r\n    const turnEnds = game.combat?.started && game.combat.combatant.id === token.combatant.id;\r\n    if (turnEnds) {\r\n        await game.hm3.GmSays({\r\n            text:\r\n                '<b>' +\r\n                token.name +\r\n                '</b> is in <b>Shock</b> and displays a variety of symptoms including pallor, cold sweats, weakness, nausea, thirst, and groaning. <b>' +\r\n                token.name +\r\n                '</b> is incoherent and gazes helplessly at the injuries. <b>Turn Ends.</b>',\r\n            source: 'Combat 14',\r\n            token\r\n        });\r\n        await token.turnEnds();\r\n    } else {\r\n        await game.hm3.GmSays({\r\n            text:\r\n                '<b>' +\r\n                token.name +\r\n                '</b> is in <b>Shock</b> and displays a variety of symptoms including pallor, cold sweats, weakness, nausea, thirst, and groaning. <b>' +\r\n                token.name +\r\n                '</b> is incoherent and gazes helplessly at the injuries.',\r\n            source: 'Combat 14',\r\n            token\r\n        });\r\n    }\r\n}\r\nconsole.info('HM3 | Condition: ${CONDITION} created for token: ${token.name}');\r\n`;\r\n\r\n    const ON_TURN_START_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious)\r\n    await game.hm3.GmSays({\r\n        text:\r\n            '<b>' +\r\n            token.name +\r\n            '</b> is in <b>Shock</b>. Shock prevents the use of skills, spells, and psionic talents. In a combat situation, a character in <b>Shock</b> may Rest, Walk/Crawl (at half move), or be led away; the character will <b>Ignore</b> any attacks.',\r\n        source: 'Combat 18',\r\n        token\r\n    });\r\n`;\r\n\r\n    const ON_DELETE_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\ngame.hm3.macros.updateOverlay(token);\r\nconsole.info(\"HM3 | Condition: ${CONDITION} deleted for token: ${token.name}\");\r\n`;\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label: CONDITION,\r\n            seconds: game.hm3.CONST.TIME.INDEFINITE,\r\n            token,\r\n            type: 'GameTime',\r\n            flags: {\r\n                effectmacro: {\r\n                    onCreate: {script: ON_CREATE_MACRO},\r\n                    onTurnStart: {script: ON_TURN_START_MACRO},\r\n                    onDelete: {script: ON_DELETE_MACRO}\r\n                },\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [],\r\n        options: {\r\n            overlay: !(\r\n                token.hasCondition(game.hm3.Condition.DYING) || token.hasCondition(game.hm3.Condition.UNCONSCIOUS)\r\n            ),\r\n            unique: true\r\n        }\r\n    };\r\n}\r\n","// Character selects and executes any Action Option, with a -10 bonus to EML. If the character’s\r\n// current morale state is non-normal, it returns to normal. (COMBAT 16)\r\nconst CONDITION_ICON = 'icons/svg/downgrade.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return false;\r\n\r\n    // Inanimate creatures are immune to morale conditions\r\n    if (token.hasCondition(game.hm3.Condition.INANIMATE)) return false;\r\n\r\n    const CONDITION = game.hm3.Condition.WEAKENED;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    const ON_CREATE_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nawait token.deleteAllMoraleConditions('${CONDITION}');\r\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\r\nif (!unconscious) await game.hm3.Gm2GmSays(\"<b>\" + token.name + \"</b> is now <b>Weakened</b>, and adds -10 to any EML this turn.\", \"Combat 16\", !token.player);\r\nconsole.info(\"HM3 | Condition: ${CONDITION} created for token: ${token.name}\");\r\n`;\r\n\r\n    const ON_TURN_START_MACRO = ``;\r\n\r\n    const type = options.oneRound || options.oneTurn ? 'Combat' : 'GameTime';\r\n    const seconds = type === 'GameTime' ? game.hm3.CONST.TIME.INDEFINITE : undefined;\r\n    const rounds = type === 'Combat' && options.oneRound ? 1 : undefined;\r\n    const turns = type === 'Combat' && options.oneTurn ? 1 : undefined;\r\n\r\n    return {\r\n        effectData: {\r\n            icon: CONDITION_ICON,\r\n            label: CONDITION,\r\n            rounds,\r\n            seconds,\r\n            token,\r\n            turns,\r\n            type,\r\n            flags: {\r\n                effectmacro: {onCreate: {script: ON_CREATE_MACRO}, onTurnStart: {script: ON_TURN_START_MACRO}},\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [{key: 'eph.meleeAMLMod', mode: 2, priority: null, value: '-10'}], // TODO must be a general bonus on ALL skills\r\n        options: {selfDestroy: true, unique: true}\r\n    };\r\n}\r\n","export class RollHM3 extends Roll {\r\n    constructor(formula, data = {}, options = {}) {\r\n        super(formula, data, options);\r\n\r\n        // console.assert(options.name, '');\r\n        // console.assert(options.type, '');\r\n\r\n        this._target = options.target ?? null;\r\n        this._check = this._target !== null ? (formula.toLowerCase().includes('d100') ? 'd100' : 'd6') : null;\r\n\r\n        this._effTarget = null;\r\n        this._maximum = null;\r\n        this._minimum = null;\r\n        this._name = options.name ?? 'Unknown';\r\n        this._targetCode = options.targetCode ?? null;\r\n        this._targetCritical = options.targetCritical ?? null;\r\n        this._targetSubstantial = options.targetSubstantial ?? null;\r\n        this._targetSuccess = options.targetSuccess ?? null;\r\n        this._targetValue = null;\r\n        this._type = options.type ?? 'Unknown';\r\n\r\n        if (this._target !== null && this._check === 'd100') {\r\n            this._effTarget = Math.max(Math.min(this._target, 95), 5);\r\n        } else if (this._target !== null && this._check === 'd6') {\r\n            this._effTarget = Math.max(Math.min(this._target, 18), 3);\r\n        }\r\n    }\r\n\r\n    get debug() {\r\n        return game.settings.get('hm3', 'debugMode');\r\n    }\r\n\r\n    get cheating() {\r\n        return game.settings.get('hm3', 'cheatMode');\r\n    }\r\n\r\n    get autocheating() {\r\n        return (\r\n            !!this._effTarget &&\r\n            (this._targetCritical !== null || this._targetSubstantial !== null || this._targetSuccess !== null)\r\n        );\r\n    }\r\n\r\n    get isCritical() {\r\n        if (this._check === 'd6') return false;\r\n        if (this._effTarget !== null) {\r\n            return this.total % 5 === 0;\r\n        }\r\n    }\r\n\r\n    get isSubstantial() {\r\n        if (this._check === 'd6') return false;\r\n        if (this._effTarget !== null) {\r\n            return this.total <= this._effTarget / 2 || this.total > this._effTarget + (100 - this._effTarget) / 2;\r\n        }\r\n    }\r\n\r\n    get isSuccess() {\r\n        if (this._effTarget !== null) {\r\n            return this.total <= this._effTarget;\r\n        }\r\n    }\r\n\r\n    get minimum() {\r\n        return this._minimum;\r\n    }\r\n\r\n    get maximum() {\r\n        return this._maximum;\r\n    }\r\n\r\n    get code() {\r\n        if (this._check === 'd100') {\r\n            let code = 'm';\r\n            if (this.isCritical) code = 'c';\r\n            else if (this.isSubstantial) code = 's';\r\n            if (this.isSuccess) code += 's';\r\n            else code += 'f';\r\n            return code;\r\n        } else if (this._check === 'd6') {\r\n            if (this.isSuccess) return 's';\r\n            else return 'f';\r\n        }\r\n    }\r\n\r\n    async evaluate({\r\n        minimize = false,\r\n        maximize = false,\r\n        allowStrings = false,\r\n        allowInteractive = true,\r\n        ...options\r\n    } = {}) {\r\n        if (this.autocheating && !this.isDeterministic) {\r\n            return this._cheatRoll({minimize, maximize, allowStrings, allowInteractive, options});\r\n        } else if (this.cheating && !this.isDeterministic) {\r\n            await this._minMax();\r\n\r\n            const data = await game.hm3.socket.executeAsGM(\r\n                'cheating',\r\n                this._check ?? 'roll',\r\n                this._name,\r\n                this._type,\r\n                this._formula,\r\n                this._minimum,\r\n                this._maximum,\r\n                this._effTarget\r\n            );\r\n\r\n            this._targetCritical = data.targetCritical ?? null;\r\n            this._targetSubstantial = data.targetSubstantial ?? null;\r\n            this._targetSuccess = data.targetSuccess ?? null;\r\n            this._targetValue = data.targetValue ?? null;\r\n\r\n            return this._cheatRoll({minimize, maximize, allowStrings, allowInteractive, options});\r\n        }\r\n\r\n        return super.evaluate({minimize, maximize, allowStrings, allowInteractive, options});\r\n    }\r\n\r\n    async _cheatRoll({\r\n        minimize = false,\r\n        maximize = false,\r\n        allowStrings = false,\r\n        allowInteractive = true,\r\n        ...options\r\n    } = {}) {\r\n        let cnt = 1000;\r\n        let obj = null;\r\n        do {\r\n            this._reset();\r\n            obj = await super.evaluate({minimize, maximize, allowStrings, allowInteractive, options});\r\n        } while (\r\n            --cnt > 0 &&\r\n            ((this._targetCritical !== null ? this._targetCritical !== this.isCritical : false) ||\r\n                (this._targetSubstantial !== null ? this._targetSubstantial !== this.isSubstantial : false) ||\r\n                (this._targetSuccess !== null ? this._targetSuccess !== this.isSuccess : false) ||\r\n                (this._targetValue !== null ? this._targetValue !== this.total : false))\r\n        );\r\n\r\n        return obj;\r\n    }\r\n\r\n    _reset() {\r\n        this._dice = [];\r\n        this.terms.forEach((element) => {\r\n            element._evaluated = false;\r\n            element.results = [];\r\n        });\r\n        this._evaluated = false;\r\n        this._resolver = undefined;\r\n        this._root = undefined;\r\n        this._total = undefined;\r\n    }\r\n\r\n    async _minMax() {\r\n        this._minimum = (\r\n            await super.evaluate({\r\n                minimize: true,\r\n                maximize: false,\r\n                allowStrings: false,\r\n                allowInteractive: false\r\n            })\r\n        ).total;\r\n        this._reset();\r\n        this._maximum = (\r\n            await super.evaluate({\r\n                minimize: false,\r\n                maximize: true,\r\n                allowStrings: false,\r\n                allowInteractive: false\r\n            })\r\n        ).total;\r\n        this._reset();\r\n    }\r\n}\r\n","import {ActorHM3} from './actor/actor.js';\nimport * as combat from './combat.js';\nimport * as berserk from './condition/berserk.js';\nimport * as broken from './condition/broken.js';\nimport * as cautious from './condition/cautious.js';\nimport * as closemode from './condition/closemode.js';\nimport * as desperate from './condition/desperate.js';\nimport * as distracted from './condition/distracted.js';\nimport * as dying from './condition/dying.js';\nimport * as empowered from './condition/empowered.js';\nimport * as grappled from './condition/grappled.js';\nimport * as inanimate from './condition/inanimate.js';\nimport * as nofumble from './condition/nofumble.js';\nimport * as nooutnumbered from './condition/nooutnumbered.js';\nimport * as nostumble from './condition/nostumble.js';\nimport * as outnumbered from './condition/outnumbered.js';\nimport * as prone from './condition/prone.js';\nimport * as secondaryhand from './condition/secondaryhand.js';\nimport * as shocked from './condition/shocked.js';\nimport * as unconscious from './condition/unconscious.js';\nimport * as weakened from './condition/weakened.js';\nimport {HM3} from './config.js';\nimport {DiceHM3} from './hm3-dice.js';\nimport {RollHM3} from './hm3-roll.js';\nimport {TokenDocumentHM3, TokenHM3} from './hm3-token.js';\nimport {Aspect, Condition, InjuryType, ItemType, SkillType} from './hm3-types.js';\nimport {Mutex} from './mutex.js';\nimport * as utility from './utility.js';\n\n/**\n * Create a script macro from an Item drop.\n * Get an existing item macro if one exists, otherwise create a new one.\n * @param {Object} data     The dropped data\n * @param {number} slot     The hotbar slot to use\n * @returns {Promise}\n */\nexport function createHM3Macro(data, slot) {\n    if (data.type !== 'Item') return true; // Continue normal processing for non-Item documents\n    handleItemMacro(data, slot);\n    return false;\n}\n\nasync function handleItemMacro(data, slot) {\n    const item = fromUuidSync(data.uuid);\n    if (!item?.system) {\n        ui.notifications.warn('No macro exists for that type of object.');\n        return null;\n    }\n\n    let title = item.name;\n    if (item.actor) {\n        title = `${item.actor.name}'s ${item.name}`;\n    }\n\n    let cmdSuffix;\n    switch (item.type) {\n        case ItemType.SKILL:\n            cmdSuffix = `skillRoll(\"${item.uuid}\");`;\n            break;\n\n        case 'psionic':\n            cmdSuffix = `usePsionicRoll(\"${item.uuid}\");`;\n            break;\n\n        case 'spell':\n            cmdSuffix = `castSpellRoll(\"${item.uuid}\");`;\n            break;\n\n        case 'invocation':\n            cmdSuffix = `invokeRitualRoll(\"${item.uuid}\");`;\n            break;\n\n        case 'weapongear':\n            return askWeaponMacro(item.uuid, slot, item.img);\n\n        case 'missilegear':\n            return askMissileMacro(item.uuid, slot, item.img);\n\n        case 'injury':\n            cmdSuffix = `healingRoll(\"${item.name}\");`;\n            break;\n\n        default:\n            return null; // Unhandled item, so ignore\n    }\n\n    return applyMacro(title, `await game.hm3.macros.${cmdSuffix}`, slot, item.img, {'hm3.itemMacro': false});\n}\n\nasync function applyMacro(name, command, slot, img, flags) {\n    let macro = [game.macros.values()].find((m) => m.name === name && m.command === command);\n    if (!macro) {\n        macro = await Macro.create({\n            name: name,\n            type: 'script',\n            img: img,\n            command: command,\n            flags: flags\n        });\n    }\n    game.user.assignHotbarMacro(macro, slot);\n    return null;\n}\n\nfunction askWeaponMacro(weaponUuid, slot, img) {\n    const item = fromUuidSync(weaponUuid);\n    if (!item) {\n        ui.notifications.warn(`No weapon with Uuid ${weaponUuid}`);\n    }\n\n    const dlghtml = '<p>Select the type of weapon macro to create:</p>';\n\n    let actorName = '';\n    if (item.actor) {\n        actorName = `${item.actor.name}'s `;\n    }\n\n    // Create the dialog window\n    return new Promise((resolve) => {\n        new Dialog({\n            title: 'Select Weapon Macro',\n            content: dlghtml.trim(),\n            buttons: {\n                enhAttackButton: {\n                    label: 'Automated Combat',\n                    callback: async (html) => {\n                        return applyMacro(\n                            `${item.name} Automated Combat`,\n                            `await game.hm3.macros.weaponAttack(\"${weaponUuid}\");`,\n                            slot,\n                            img,\n                            {\n                                'hm3.itemMacro': false\n                            }\n                        );\n                    }\n                },\n                attackButton: {\n                    label: 'Attack',\n                    callback: async (html) => {\n                        return applyMacro(\n                            `${actorName}${item.name} Attack Roll`,\n                            `await game.hm3.macros.weaponAttackRoll(\"${weaponUuid}\");`,\n                            slot,\n                            img,\n                            {'hm3.itemMacro': false}\n                        );\n                    }\n                },\n                defendButton: {\n                    label: 'Defend',\n                    callback: async (html) => {\n                        return applyMacro(\n                            `${actorName}${item.name} Defend Roll`,\n                            `await game.hm3.macros.weaponDefendRoll(\"${weaponUuid}\");`,\n                            slot,\n                            img,\n                            {'hm3.itemMacro': false}\n                        );\n                    }\n                },\n                damageButton: {\n                    label: 'Damage',\n                    callback: async (html) => {\n                        return applyMacro(\n                            `${actorName}${item.name} Damage Roll`,\n                            `await game.hm3.macros.weaponDamageRoll(\"${weaponUuid}\");`,\n                            slot,\n                            img,\n                            {'hm3.itemMacro': false}\n                        );\n                    }\n                }\n            },\n            default: 'enhAttackButton',\n            close: () => resolve(false)\n        }).render(true);\n    });\n}\n\nfunction askMissileMacro(name, slot, img, actorSuffix) {\n    const dlghtml = '<p>Select the type of missile macro to create:</p>';\n\n    // Create the dialog window\n    return new Promise((resolve) => {\n        new Dialog({\n            title: 'Select Missile Macro',\n            content: dlghtml.trim(),\n            buttons: {\n                enhAttackButton: {\n                    label: 'Automated Combat',\n                    callback: async (html) => {\n                        return applyMacro(\n                            `${name} Automated Combat`,\n                            `game.hm3.macros.missileAttack(\"${name}\");`,\n                            slot,\n                            img,\n                            {\n                                'hm3.itemMacro': false\n                            }\n                        );\n                    }\n                },\n                attackButton: {\n                    label: 'Attack',\n                    callback: async (html) => {\n                        return applyMacro(\n                            `${actorName}'s ${name} Attack Roll`,\n                            `game.hm3.macros.missileAttackRoll(\"${name}\"${actorSuffix});`,\n                            slot,\n                            img,\n                            {'hm3.itemMacro': false}\n                        );\n                    }\n                },\n                damageButton: {\n                    label: 'Damage',\n                    callback: async (html) => {\n                        return applyMacro(\n                            `${actorName}'s ${name} Damage Roll`,\n                            `game.hm3.macros.missileDamageRoll(\"${name}\"${actorSuffix});`,\n                            slot,\n                            img,\n                            {'hm3.itemMacro': false}\n                        );\n                    }\n                }\n            },\n            default: 'enhAttackButton',\n            close: () => resolve(false)\n        }).render(true);\n    });\n}\n\nasync function getItemAndActor(itemName, myActor, type) {\n    let result = {actor: myActor, item: null, speaker: ChatMessage.getSpeaker()};\n    if (itemName) {\n        result.item = await combat.getItem(itemName, type, myActor);\n        myActor = result.item.actor || myActor;\n\n        if (result.item?.type !== type) {\n            if (result.item) {\n                ui.notifications.warn(\n                    `Ignoring ${HM3.ITEM_TYPE_LABEL[type].singular} test because ${result.item.name} is not a ${HM3.ITEM_TYPE_LABEL[type].singular}`\n                );\n            } else {\n                ui.notifications.warn(\n                    `Ignoring ${HM3.ITEM_TYPE_LABEL[type].singular} test because no ${HM3.ITEM_TYPE_LABEL[type].singular} found for '${itemName}'`\n                );\n            }\n            return null;\n        }\n    }\n\n    result = getActor(result);\n    if (!result) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    return result;\n}\n\nexport async function skillRoll(itemName, noDialog = false, myActor = null) {\n    const {actor, item, speaker} = await getItemAndActor(itemName, myActor, 'skill');\n\n    const stdRollData = {\n        type: `skill-${item.name}`,\n        skill: `${item.name}`,\n        label: `${item.name} Skill Test`,\n        target: item.system.effectiveMasteryLevel,\n        notesData: {\n            up: actor.system.universalPenalty,\n            pp: actor.system.physicalPenalty,\n            il: actor.system.eph.totalInjuryLevels || 0,\n            fatigue: actor.system.eph.fatigue,\n            eml: item.system.effectiveMasteryLevel,\n            ml: item.system.masteryLevel,\n            sb: item.system.skillBase.value,\n            si: item.system.skillIndex\n        },\n        speaker: speaker,\n        fastforward: noDialog,\n        notes: item.system.notes,\n        effSkillBase: item.system.skillBase.value,\n        isCraftOrLore: [SkillType.CRAFT, 'Lore'].includes(item.system.type)\n    };\n    if (actor.isToken) {\n        stdRollData.token = actor.token.id;\n    } else {\n        stdRollData.actor = actor.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preSkillRoll', stdRollData, actor, item);\n    if (hooksOk) {\n        const result = await DiceHM3.d100StdRoll(stdRollData);\n        if (result) {\n            item.runCustomMacro(result);\n            callOnHooks('hm3.onSkillRoll', actor, result, stdRollData, item);\n\n            utility.improveFlag(item, {success: result.roll.isSuccess});\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function castSpellRoll(itemName, noDialog = false, myActor = null) {\n    const {actor, item, speaker} = await getItemAndActor(itemName, myActor, 'spell');\n\n    const stdRollData = {\n        type: `spell-${item.name}`,\n        skill: `${item.name}`,\n        label: `Casting ${item.name}`,\n        target: item.system.effectiveMasteryLevel,\n        notesData: {\n            up: actor.system.universalPenalty,\n            pp: actor.system.physicalPenalty,\n            il: actor.system.eph.totalInjuryLevels || 0,\n            fatigue: actor.system.eph.fatigue,\n            eml: item.system.effectiveMasteryLevel,\n            ml: item.system.masteryLevel,\n            sb: item.system.skillBase,\n            si: item.system.skillIndex,\n            spellName: item.name,\n            convocation: item.system.convocation,\n            level: item.system.level\n        },\n        speaker: speaker,\n        fastforward: noDialog,\n        notes: item.system.notes\n    };\n    if (actor.isToken) {\n        stdRollData.token = actor.token.id;\n    } else {\n        stdRollData.actor = actor.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preSpellRoll', stdRollData, actor, item);\n    if (hooksOk) {\n        const result = await DiceHM3.d100StdRoll(stdRollData);\n        if (result) {\n            item.runCustomMacro(result);\n            callOnHooks('hm3.onSpellRoll', actor, result, stdRollData, item);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function invokeRitualRoll(itemName, noDialog = false, myActor = null) {\n    const {actor, item, speaker} = await getItemAndActor(itemName, myActor, 'invocation');\n\n    const stdRollData = {\n        type: `invocation-${item.name}`,\n        skill: `${item.name}`,\n        label: `Invoking ${item.name} Ritual`,\n        target: item.system.effectiveMasteryLevel,\n        notesData: {\n            up: actor.system.universalPenalty,\n            pp: actor.system.physicalPenalty,\n            il: actor.system.eph.totalInjuryLevels || 0,\n            fatigue: actor.system.eph.fatigue,\n            eml: item.system.effectiveMasteryLevel,\n            ml: item.system.masteryLevel,\n            sb: item.system.skillBase,\n            si: item.system.skillIndex,\n            invocationName: item.name,\n            diety: item.system.diety,\n            circle: item.system.circle\n        },\n        speaker: speaker,\n        fastforward: noDialog,\n        notes: item.system.notes\n    };\n    if (actor.isToken) {\n        stdRollData.token = actor.token.id;\n    } else {\n        stdRollData.actor = actor.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preInvocationRoll', stdRollData, actor, item);\n    if (hooksOk) {\n        const result = await DiceHM3.d100StdRoll(stdRollData);\n        if (result) {\n            item.runCustomMacro(result);\n            callOnHooks('hm3.onInvocationRoll', actor, result, stdRollData, item);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function usePsionicRoll(itemName, noDialog = false, myActor = null) {\n    const {actor, item, speaker} = await getItemAndActor(itemName, myActor, 'psionic');\n\n    const stdRollData = {\n        type: `psionic-${item.name}`,\n        skill: `${item.name}`,\n        label: `Using ${item.name} Talent`,\n        target: item.system.effectiveMasteryLevel,\n        notesData: {\n            up: actor.system.universalPenalty,\n            pp: actor.system.physicalPenalty,\n            il: actor.system.eph.totalInjuryLevels || 0,\n            fatigue: actor.system.eph.fatigue,\n            eml: item.system.effectiveMasteryLevel,\n            ml: item.system.masteryLevel,\n            sb: item.system.skillBase.value,\n            si: item.system.skillIndex,\n            psionicName: item.name,\n            fatigueCost: item.system.fatigue\n        },\n        speaker: speaker,\n        fastforward: noDialog,\n        notes: item.system.notes\n    };\n    if (actor.isToken) {\n        stdRollData.token = actor.token.id;\n    } else {\n        stdRollData.actor = actor.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.prePsionicsRoll', stdRollData, actor, item);\n    if (hooksOk) {\n        const result = await DiceHM3.d100StdRoll(stdRollData);\n        if (result) {\n            item.runCustomMacro(result);\n            callOnHooks('hm3.onPsionicsRoll', actor, result, stdRollData, item);\n\n            utility.fatigueReceived(actor, item.system.fatigue);\n            utility.improveFlag(item, {success: result.roll.isSuccess});\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function testAbilityD6Roll(ability, noDialog = false, myActor = null) {\n    return testAbilityD6RollAlt({ability, noDialog, myActor});\n}\n\n/**\n * Alternative implementation.\n * @param {*} options\n * @returns\n */\nexport async function testAbilityD6RollAlt(options) {\n    options = foundry.utils.mergeObject({noDialog: false, myActor: null, blind: false}, options);\n\n    const actorInfo = getActor({actor: options.myActor, item: null, speaker: ChatMessage.getSpeaker()});\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    let abilities;\n    if (actorInfo.actor.type === 'character') {\n        abilities = Object.keys(game.model.Actor.character.abilities);\n    } else if (actorInfo.actor.type === 'creature') {\n        abilities = Object.keys(game.model.Actor.creature.abilities);\n    } else {\n        ui.notifications.warn(`${actorInfo.name} does not have ability scores.`);\n        return null;\n    }\n    if (!options.ability || !abilities.includes(options.ability)) return null;\n\n    const stdRollData = {\n        type: `${options.ability}-d6`,\n        skill: `${options.ability[0].toUpperCase()}${options.ability.slice(1)}`,\n        label: `d6 ${options.ability[0].toUpperCase()}${options.ability.slice(1)} Roll`,\n        target: actorInfo.actor.system.abilities[options.ability].effective,\n        numdice: 3,\n        notesData: {},\n        speaker: actorInfo.speaker,\n        fastforward: options.noDialog,\n        notes: ''\n    };\n    if (actorInfo.actor.isToken) {\n        stdRollData.token = actorInfo.actor.token.id;\n    } else {\n        stdRollData.actor = actorInfo.actor.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preAbilityRollD6', stdRollData, actorInfo.actor);\n    if (hooksOk) {\n        const result = await DiceHM3.d6Roll(stdRollData);\n        if (result) {\n            actorInfo.actor.runCustomMacro(result);\n            callOnHooks('hm3.onAbilityRollD6', result, result, stdRollData);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function testAbilityD100Roll(ability, noDialog = false, myActor = null, multiplier = 5) {\n    return testAbilityD100RollAlt({ability, noDialog, myActor, multiplier});\n}\n\n/**\n * Alternative implementation.\n * @param {*} options\n * @returns\n */\nexport async function testAbilityD100RollAlt(options) {\n    options = foundry.utils.mergeObject(\n        {\n            ability: null,\n            noDialog: false,\n            myActor: null,\n            multiplier: 5,\n            blind: false,\n            private: false,\n            fluff: null,\n            fluffResult: null\n        },\n        options\n    );\n\n    const actorInfo = getActor({\n        actor: options.myActor,\n        item: null,\n        speaker: ChatMessage.getSpeaker({actor: options.myActor})\n    });\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    let abilities;\n    if (actorInfo.actor.type === 'character') {\n        abilities = Object.keys(game.model.Actor.character.abilities);\n    } else if (actorInfo.actor.type === 'creature') {\n        abilities = Object.keys(game.model.Actor.creature.abilities);\n    } else {\n        ui.notifications.warn(`${actorInfo.actor.name} does not have ability scores.`);\n        return null;\n    }\n    if (!options.ability || !abilities.includes(options.ability)) return null;\n\n    const stdRollData = {\n        type: `${options.ability}-d100`,\n        skill: `${options.ability[0].toUpperCase()}${options.ability.slice(1)}`,\n        label: `d100 ${options.ability[0].toUpperCase()}${options.ability.slice(1)} Roll`,\n        effSkillBase: Math.max(1, actorInfo.actor.system.abilities[options.ability].effective),\n        target: Math.max(5, actorInfo.actor.system.abilities[options.ability].effective * options.multiplier),\n        notesData: {},\n        speaker: actorInfo.speaker,\n        fastforward: options.noDialog,\n        notes: '',\n        isAbility: true,\n        multiplier: options.multiplier,\n        blind: options.blind,\n        private: options.private,\n        fluff: options.fluff,\n        fluffResult: options.fluffResult\n    };\n    if (actorInfo.actor.isToken) {\n        stdRollData.token = actorInfo.actor.token.id;\n    } else {\n        stdRollData.actor = actorInfo.actor.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preAbilityRollD100', stdRollData, actorInfo.actor);\n    if (hooksOk) {\n        const result = await DiceHM3.d100StdRoll(stdRollData);\n        if (result) {\n            actorInfo.actor.runCustomMacro(result);\n            callOnHooks('hm3.onAbilityRollD100', actorInfo.actor, result, stdRollData);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function weaponDamageRoll(itemName, aspect = null, myActor = null) {\n    if (aspect) {\n        if (!HM3.allowedAspects.includes(aspect)) {\n            ui.notifications.warn(`Invalid aspect requested on damage roll: ${aspect}`);\n            return null;\n        }\n    }\n\n    const {actor, item, speaker} = await getItemAndActor(itemName, myActor, 'weapongear');\n\n    const rollData = {\n        notesData: {\n            up: actor.system.universalPenalty,\n            pp: actor.system.physicalPenalty,\n            il: actor.system.eph.totalInjuryLevels || 0,\n            fatigue: actor.system.eph.fatigue,\n            weaponName: item.name\n        },\n        weapon: item.name,\n        data: actor,\n        speaker: speaker,\n        aspect: aspect ? aspect : null,\n        notes: item.system.notes\n    };\n    if (actor.isToken) {\n        rollData.token = actor.token.id;\n    } else {\n        rollData.actor = actor.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preDamageRoll', rollData, actor);\n    if (hooksOk) {\n        const result = await DiceHM3.damageRoll(rollData);\n        if (result) {\n            callOnHooks('hm3.onDamageRoll', actor, result, rollData);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function missileDamageRoll(itemName, range = null, myActor = null) {\n    myActor &&= myActor instanceof Actor ? myActor : fromUuidSync(myActor);\n    if (range) {\n        if (!HM3.allowedRanges.includes(range)) {\n            ui.notifications.warn(`Invalid range requested on damage roll: ${range}`);\n            return null;\n        }\n    }\n\n    const {actor, item, speaker} = await getItemAndActor(itemName, myActor, 'missilegear');\n\n    const rollData = {\n        notesData: {\n            up: actor.system.universalPenalty,\n            pp: actor.system.physicalPenalty,\n            il: actor.system.eph.totalInjuryLevels || 0,\n            fatigue: actor.system.eph.fatigue,\n            missileName: item.name,\n            aspect: item.system.weaponAspect\n        },\n        name: item.name,\n        aspect: item.system.weaponAspect,\n        defaultRange: range,\n        impactShort: item.system.impact.short,\n        impactMedium: item.system.impact.medium,\n        impactLong: item.system.impact.long,\n        impactExtreme: item.system.impact.extreme,\n        data: actor,\n        speaker: speaker,\n        notes: item.system.notes\n    };\n    if (actor.isToken) {\n        rollData.token = actor.token.id;\n    } else {\n        rollData.actor = actor.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preMissileDamageRoll', rollData, actor, item);\n    if (hooksOk) {\n        const result = await DiceHM3.missileDamageRoll(rollData);\n        if (result) {\n            callOnHooks('hm3.onMissileDamageRoll', actor, result, rollData);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function weaponAttackRoll(itemName, noDialog = false, myActor = null) {\n    const {actor, item, speaker} = await getItemAndActor(itemName, myActor, 'weapongear');\n\n    const stdRollData = {\n        label: `${item.name} Attack`,\n        target: item.system.attackMasteryLevel,\n        notesData: {\n            up: actor.system.universalPenalty,\n            pp: actor.system.physicalPenalty,\n            il: actor.system.eph.totalInjuryLevels || 0,\n            fatigue: actor.system.eph.fatigue,\n            ml: item.system.masteryLevel,\n            sb: item.system.skillBase,\n            si: item.system.skillIndex,\n            weaponName: item.name,\n            attack: item.system.attack,\n            atkMod: item.system.attackModifier,\n            aml: item.system.attackMasteryLevel\n        },\n        speaker: speaker,\n        fastforward: noDialog,\n        notes: item.system.notes\n    };\n    if (actor.isToken) {\n        stdRollData.token = actor.token.id;\n    } else {\n        stdRollData.actor = actor.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preWeaponAttackRoll', stdRollData, actor, item);\n    if (hooksOk) {\n        const result = await DiceHM3.d100StdRoll(stdRollData);\n        if (result) {\n            callOnHooks('hm3.onWeaponAttackRoll', actor, result, stdRollData, item);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function weaponDefendRoll(itemName, noDialog = false, myActor = null) {\n    const {actor, item, speaker} = await getItemAndActor(itemName, myActor, 'weapongear');\n\n    let outnumberedMod = 0;\n    if (actor.system?.eph?.outnumbered > 1) {\n        outnumberedMod = Math.floor(actor.system.eph.outnumbered - 1) * -10;\n    }\n\n    const stdRollData = {\n        label: `${item.name} Defense`,\n        target: item.system.defenseMasteryLevel,\n        modifier: outnumberedMod,\n        notesData: {\n            up: actor.system.universalPenalty,\n            pp: actor.system.physicalPenalty,\n            il: actor.system.eph.totalInjuryLevels || 0,\n            fatigue: actor.system.eph.fatigue,\n            ml: item.system.masteryLevel,\n            sb: item.system.skillBase,\n            si: item.system.skillIndex,\n            weaponName: item.name,\n            defense: item.system.defense,\n            dml: item.system.defenseMasteryLevel\n        },\n        speaker: speaker,\n        fastforward: noDialog,\n        notes: item.system.notes\n    };\n    if (actor.isToken) {\n        stdRollData.token = actor.token.id;\n    } else {\n        stdRollData.actor = actor.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preWeaponDefendRoll', stdRollData, actor, item);\n    if (hooksOk) {\n        const result = await DiceHM3.d100StdRoll(stdRollData);\n        if (result) {\n            callOnHooks('hm3.onWeaponDefendRoll', actor, result, stdRollData, item);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function missileAttackRoll(itemName, myActor = null) {\n    const {actor, item, speaker} = await getItemAndActor(itemName, myActor, 'missilegear');\n\n    const rollData = {\n        notesData: {\n            up: actor.system.universalPenalty,\n            pp: actor.system.physicalPenalty,\n            il: actor.system.eph.totalInjuryLevels || 0,\n            fatigue: actor.system.eph.fatigue,\n            missileName: item.name\n        },\n        name: item.name,\n        target: item.system.attackMasteryLevel,\n        aspect: item.system.weaponAspect,\n        rangeShort: item.system.range.short,\n        rangeMedium: item.system.range.medium,\n        rangeLong: item.system.range.long,\n        rangeExtreme: item.system.range.extreme,\n        data: item,\n        speaker: speaker,\n        notes: item.system.notes\n    };\n    if (actor.isToken) {\n        rollData.token = actor.token.id;\n    } else {\n        rollData.actor = actor.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preMissileAttackRoll', rollData, actor, item);\n    if (hooksOk) {\n        const result = await DiceHM3.missileAttackRoll(rollData);\n        if (result) {\n            callOnHooks('hm3.onMissileAttackRoll', actor, result, rollData, item);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function injuryRoll(myActor = null, rollData = {}) {\n    const actorInfo = getActor({actor: myActor, item: null, speaker: null});\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    rollData.notesData = {};\n    rollData.actor = actorInfo.actor;\n    rollData.speaker = actorInfo.speaker;\n    rollData.notes = '';\n\n    const hooksOk = Hooks.call('hm3.preInjuryRoll', rollData, actorInfo.actor);\n    if (hooksOk) {\n        const result = await DiceHM3.injuryRoll(rollData);\n        if (result) {\n            callOnHooks('hm3.onInjuryRoll', actorInfo.actor, result, rollData);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function healingRoll(itemName, noDialog = false, myActor = null) {\n    const {actor, item, speaker} = await getItemAndActor(itemName, myActor, ItemType.INJURY);\n    const subType = item.system.subType || InjuryType.HEALING;\n\n    if (\n        subType === InjuryType.HEALING &&\n        (isNaN(item.system.injuryLevel) || item.system?.injuryLevel < 1 || item.system?.injuryLevel > 5)\n    ) {\n        ui.notifications.warn(`No valid injury level specified.`);\n        return null;\n    }\n\n    if (isNaN(item.system.healRate) || item.system?.healRate < 1 || item.system?.healRate > 7) {\n        return treatmentRoll(actor, item, speaker);\n    }\n\n    // Negligible injury (EE) heals automatically\n    if (item.system?.healRate === 7) {\n        await item.delete();\n        return null;\n    }\n\n    const stdRollData = {\n        fastforward: noDialog,\n        label: `${item.name} Healing Roll`,\n        notes: item.system.notes,\n        physicianSkills: actor.getPartySkills('Physician'),\n        speaker: speaker,\n        subType,\n        target: item.system.healRate * actor.system.endurance,\n        type: 'healing',\n        notesData: {\n            endurance: actor.system.endurance,\n            fatigue: actor.system.eph.fatigue,\n            healRate: item.system.healRate,\n            il: actor.system.eph.totalInjuryLevels || 0,\n            injuryName: item.name,\n            pp: actor.system.physicalPenalty,\n            up: actor.system.universalPenalty\n        }\n    };\n    if (actor.isToken) {\n        stdRollData.token = actor.token.id;\n    } else {\n        stdRollData.actor = actor.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preHealingRoll', stdRollData, actor, item);\n    if (hooksOk) {\n        const result = await DiceHM3.d100StdRoll(stdRollData);\n        item.runCustomMacro(result);\n        if (result) {\n            await heal(item, result);\n            if (result.roll.preData?.physician)\n                await utility.improveFlag(result.roll.preData.physician, {actor, success: result.isSuccess});\n            callOnHooks('hm3.onHealingRoll', actor, result, stdRollData, item);\n        }\n        return result;\n    }\n    return null;\n}\n\nasync function treatmentRoll(actor, injury, speaker) {\n    const treatmentTable =\n        HM3.treatmentTable[injury.system.aspect || Aspect.BLUNT][Math.floor(injury.system.injuryLevel / 2)];\n\n    let fluff =\n        `<p><b>Injury:</b> ${treatmentTable.injury}</p><p><b>Description:</b> ${treatmentTable.desc}</p><p><b>Treatment:</b> ${treatmentTable.treatment}</p>`.trim();\n    let treatment = '';\n    if (treatmentTable.treatment.includes('Surgery')) {\n        fluff += `<p><b>Surgery</b> takes some minutes. It requires sharp knives, and a needle and thread for sutures. Anesthetic is highly recommended (patients tend to struggle and whimper otherwise) and disinfectants are a good idea too. Such items may be purchased from good apothecaries and improve <b>Treatment EML 10-20</b>.</p>`;\n        treatment += `<p><b>Surgery</b> took ${await rollResultAsync('10d6', {\n            name: actor.name,\n            type: 'treatmentRoll Surgery'\n        })} minutes.</p>`;\n    }\n    if (treatmentTable.treatment.includes('Compress')) {\n        fluff += `<p>Apply cold <b>compress</b> for some minutes. Herbal remedies and balms that reduce swelling add improve <b>Treatment EML 10-20</b>.</p>`;\n        treatment += `<p>Cold <b>compress</b> took ${await rollResultAsync('5d6', {\n            name: actor.name,\n            type: 'treatmentRoll Compress'\n        })} minutes.</p>`;\n    }\n    if (treatmentTable.treatment.includes('Splint')) {\n        fluff += `<p>Setting bone and <b>splinting</b> takes some minutes.</p>`;\n        treatment += `<p><b>Splinting</b> took ${await rollResultAsync('5d6', {\n            name: actor.name,\n            type: 'treatmentRoll Splint'\n        })} minutes.</p>`;\n    }\n    if (treatmentTable.treatment.includes('Clean') || treatmentTable.treatment.includes('Surgery')) {\n        fluff += `<p><b>Cleaning and dressing</b> takes some minutes and requires water and bandages.</p>`;\n        treatment += `<p><b>Cleaning and dressing</b> took ${5 * injury.system.injuryLevel} minutes.</p>`;\n    }\n    if (treatmentTable.treatment.includes('Warming')) {\n        fluff += `<p>Gentle <b>warming</b> (blanket, healthy person's flesh, etc.) of the injury for a few hours.</p>`;\n        treatment += `<p><b>Warming</b> took ${await rollResultAsync('1d3', {\n            name: actor.name,\n            type: 'treatmentRoll Warming'\n        })} hours.</p>`;\n    }\n\n    const stdRollData = {\n        fastforward: false,\n        fluff,\n        fluffResult: {\n            CS:\n                treatment +\n                `<p>Excellent work! ${\n                    treatmentTable.cs === 7 ? 'EE' : 'H' + treatmentTable.cs\n                } is the best result possible.</p>`,\n            MS:\n                treatment +\n                `<p>Good work. ${treatmentTable.ms === 7 ? 'EE' : 'H' + treatmentTable.ms} is a solid result.</p>`,\n            MF: treatment + `<p>Lousy work. H${treatmentTable.mf} is just as bad as without treatment.</p>`,\n            CF: treatment + `<p>Catastrophic work! H${treatmentTable.cf} is worse than without treatment.</p>`\n        },\n        label: `${injury.name} Treatment Roll`,\n        notes: injury.system.notes,\n        physicianSkills: actor.getPartySkills('Physician'),\n        speaker: speaker,\n        subType: injury.system.subType,\n        target: 0,\n        treatmentTable,\n        type: 'treatment',\n        notesData: {\n            endurance: actor.system.endurance,\n            fatigue: actor.system.eph.fatigue,\n            healRate: injury.system.healRate,\n            il: actor.system.eph.totalInjuryLevels || 0,\n            injuryName: injury.name,\n            pp: actor.system.physicalPenalty,\n            up: actor.system.universalPenalty\n        }\n    };\n    if (actor.isToken) {\n        stdRollData.token = actor.token.id;\n    } else {\n        stdRollData.actor = actor.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preTreatmentRoll', stdRollData, actor, injury);\n    if (hooksOk) {\n        const result = await DiceHM3.d100StdRoll(stdRollData);\n        if (result) {\n            let success = result.isCritical ? 'c' : 'm';\n            success += result.isSuccess ? 's' : 'f';\n            const hr = treatmentTable[success];\n            await injury.update({'system.healRate': hr});\n            if (result.roll.preData?.physician)\n                await utility.improveFlag(result.roll.preData.physician, {actor, success: result.isSuccess});\n            callOnHooks('hm3.onTreatmentRoll', actor, result, stdRollData, injury);\n        }\n        return result;\n    }\n    return null;\n}\n\nasync function heal(injury, result) {\n    const subType = injury.system.subType || InjuryType.HEALING;\n    switch (subType) {\n        case InjuryType.BLOODLOSS:\n            // TBD\n            break;\n\n        case InjuryType.HEALING:\n            if (result.isSuccess) {\n                const il = injury.system.injuryLevel - (result.isCritical ? 2 : 1);\n                if (il <= 0) await injury.delete(); // fully healed\n                else await injury.update({'system.injuryLevel': il}); // partially healed\n            }\n            break;\n\n        case InjuryType.DISEASE:\n        case InjuryType.POISON:\n        case InjuryType.TOXIN:\n        case InjuryType.SHOCK:\n            let hr;\n            if (result.isSuccess) hr = injury.system.healRate + (result.isCritical ? 2 : 1);\n            else hr = injury.system.healRate - (result.isCritical ? 2 : 1);\n            if (hr >= 6) await injury.delete(); // Fully recovered at HR6\n            else if (hr <= 0) {\n                // Patient is dead at HR0\n            } else await injury.update({'system.healRate': hr}); // partially recovered\n            break;\n    }\n}\n\nexport async function dodgeRoll(noDialog = false, myActor = null) {\n    const actorInfo = getActor({actor: myActor, item: null, speaker: null});\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    const stdRollData = {\n        type: 'dodge',\n        label: `Dodge Roll`,\n        target: actorInfo.actor.system.dodge,\n        notesData: {},\n        speaker: actorInfo.speaker,\n        fastforward: noDialog,\n        notes: ''\n    };\n    if (actorInfo.actor.isToken) {\n        stdRollData.token = actorInfo.actor.token.id;\n    } else {\n        stdRollData.actor = actorInfo.actor.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preDodgeRoll', stdRollData, actorInfo.actor);\n    if (hooksOk) {\n        const result = await DiceHM3.d100StdRoll(stdRollData);\n        if (result) {\n            callOnHooks('hm3.onDodgeRoll', actorInfo.actor, result, stdRollData);\n        }\n        return result;\n    }\n    return null;\n}\n\n/**\n * TODO\n * @param {Object} options - Additional options\n * @param {boolean} [options.noDialog=false] -\n * @param {boolean} [options.myActor=null] -\n * @param {boolean} [options.token=null] -\n * @param {boolean} [options.injuryLevel=0] -\n */\nexport async function killRoll(options) {\n    options = foundry.utils.mergeObject({noDialog: false, myActor: null, token: null, injuryLevel: 0}, options);\n\n    const actorInfo = getActor({actor: options.myActor, item: null, speaker: null, token: options.token});\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    let hooksOk = false;\n    let stdRollData = null;\n    stdRollData = {\n        fastforward: options.noDialog,\n        label: `Kill Roll`,\n        notes: '',\n        notesData: {},\n        numdice: options.injuryLevel,\n        speaker: actorInfo.speaker,\n        target: actorInfo.actor.system.endurance,\n        type: 'kill'\n    };\n    if (actorInfo.actor.isToken) {\n        stdRollData.token = actorInfo.actor.token.id;\n        options.token = actorInfo.actor.token;\n    } else {\n        stdRollData.actor = actorInfo.actor.id;\n        stdRollData.token = options.token?.id;\n    }\n\n    hooksOk = Hooks.call('hm3.preKillRoll', stdRollData, actorInfo.actor);\n    if (hooksOk) {\n        const result = await DiceHM3.d6Roll(stdRollData);\n        actorInfo.actor.runCustomMacro(result);\n\n        if (result) {\n            if (!result.isSuccess) {\n                // DYING!!!\n                await options.token?.addCondition(game.hm3.Condition.DYING);\n            } else {\n                await game.hm3.GmSays({\n                    text: `<b>${options.token.name}</b> just survives this <b>Fatal</b> wound, and makes a normal <b>Shock</b> roll.`,\n                    source: 'Combat 14'\n                });\n            }\n\n            callOnHooks('hm3.onKillRoll', actorInfo.actor, result, stdRollData);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function shockRoll(noDialog = false, myActor = null, token = null, mode = 0) {\n    const actorInfo = getActor({actor: myActor, item: null, speaker: null, token});\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    if (actorInfo.actor?.hasCondition(Condition.INANIMATE)) {\n        ui.notifications.warn(`Token is inanimate, and immune to shock.`);\n        return null;\n    }\n\n    let hooksOk = false;\n    const stdRollData = {\n        fastforward: noDialog,\n        label: `Shock Roll`,\n        notes: '',\n        notesData: {},\n        numdice: actorInfo.actor.system.universalPenalty,\n        speaker: actorInfo.speaker,\n        target: actorInfo.actor.system.endurance,\n        type: 'shock'\n    };\n    if (actorInfo.actor.isToken) {\n        stdRollData.token = actorInfo.actor.token.id;\n        token = actorInfo.actor.token;\n    } else {\n        stdRollData.actor = actorInfo.actor.id;\n        stdRollData.token = token?.id;\n    }\n    if (mode > 0) stdRollData.noTA = true;\n\n    hooksOk = Hooks.call('hm3.preShockRoll', stdRollData, actorInfo.actor);\n    if (hooksOk) {\n        const result = await DiceHM3.d6Roll(stdRollData);\n        actorInfo.actor.runCustomMacro(result);\n\n        if (result) {\n            if (mode === 0 && !result.isSuccess) {\n                // 1st failed SHOCK roll - combatant faints and gets unconscious\n                await token?.addCondition(Condition.UNCONSCIOUS);\n            } else if (mode > 0) {\n            }\n\n            callOnHooks('hm3.onShockRoll', actorInfo.actor, result, stdRollData);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function willShockRoll({myActor = null, noDialog = false, token = null}) {\n    const actorInfo = getActor({actor: myActor, item: null, speaker: null, token});\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    if (actorInfo.actor?.hasCondition(Condition.INANIMATE)) {\n        ui.notifications.warn(`Token is inanimate, and immune to shock.`);\n        return null;\n    }\n\n    let hooksOk = false;\n    const stdRollData = {\n        fastforward: noDialog,\n        label: `Mental Shock Roll`,\n        notes: '',\n        notesData: {},\n        numdice: actorInfo.actor.system.universalPenalty,\n        speaker: actorInfo.speaker,\n        target: actorInfo.actor.system.abilities.will.base,\n        type: 'willshock'\n    };\n    if (actorInfo.actor.isToken) {\n        stdRollData.token = actorInfo.actor.token.id;\n    } else {\n        stdRollData.actor = actorInfo.actor.id;\n        stdRollData.token = token?.id;\n    }\n\n    hooksOk = Hooks.call('hm3.preWillShockRoll', stdRollData, actorInfo.actor);\n    if (hooksOk) {\n        const result = await DiceHM3.d6Roll(stdRollData);\n\n        if (result) {\n            callOnHooks('hm3.onWillShockRoll', actorInfo.actor, result, stdRollData);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function stumbleRoll(noDialog = false, myActor = null, opponentToken = null, token = null) {\n    const actorInfo = getActor({actor: myActor, item: null, speaker: null});\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    if (actorInfo.actor?.hasCondition(Condition.NO_STUMBLE)) {\n        ui.notifications.warn(`Token has No Stumble feat.`);\n        return null;\n    }\n\n    const stdRollData = {\n        fastforward: noDialog,\n        label: `${actorInfo.actor.isToken ? actorInfo.actor.token.name : actorInfo.actor.name} Stumble Roll`,\n        notes: '',\n        notesData: {},\n        numdice: 3,\n        opponentToken,\n        speaker: actorInfo.speaker,\n        target: actorInfo.actor.system.eph.stumbleTarget,\n        type: 'stumble'\n    };\n    if (actorInfo.actor.isToken) {\n        stdRollData.token = actorInfo.actor.token.id;\n        token = actorInfo.actor.token;\n    } else {\n        stdRollData.actor = actorInfo.actor.id;\n        stdRollData.token = token?.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preStumbleRoll', stdRollData, actorInfo.actor);\n    if (hooksOk) {\n        const result = await DiceHM3.d6Roll(stdRollData);\n        if (result) {\n            actorInfo.actor.runCustomMacro(result);\n            if (!result.isSuccess) {\n                await token?.addCondition(Condition.PRONE);\n                // Opponent gains a TA\n                await combat.setTA();\n            }\n            callOnHooks('hm3.onStumbleRoll', actorInfo.actor, result, stdRollData);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function fumbleRoll(noDialog = false, myActor = null, opponentToken = null, token = null) {\n    const actorInfo = getActor({actor: myActor, item: null, speaker: null});\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    if (actorInfo.actor?.hasCondition(Condition.NO_FUMBLE)) {\n        ui.notifications.warn(`Token has No Fumble feat.`);\n        return null;\n    }\n\n    // Sometimes fumble rolls were set for animals with DEX 0. They have to make a stumble roll instead.\n    if (actorInfo.actor.system.abilities.dexterity.base <= 0) {\n        if (game.user.isGM) ui.notifications.warn(`Fumble target is not set for ${actorInfo.token.name}.`);\n        return stumbleRoll(noDialog, myActor, opponentToken, token);\n    }\n\n    const stdRollData = {\n        actor: actorInfo.actor,\n        fastforward: noDialog,\n        label: `${actorInfo.actor.isToken ? actorInfo.actor.token.name : actorInfo.actor.name} Fumble Roll`,\n        notes: '',\n        notesData: {},\n        numdice: 3,\n        opponentToken,\n        speaker: actorInfo.speaker,\n        target: actorInfo.actor.system.eph.fumbleTarget,\n        type: 'fumble'\n    };\n    if (actorInfo.actor.isToken) {\n        stdRollData.token = actorInfo.actor.token.id;\n        token = actorInfo.actor.token;\n    } else {\n        stdRollData.actor = actorInfo.actor.id;\n        stdRollData.token = token?.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preFumbleRoll', stdRollData, actorInfo.actor);\n    if (hooksOk) {\n        const result = await DiceHM3.d6Roll(stdRollData);\n        if (result) {\n            actorInfo.actor.runCustomMacro(result);\n            if (!result.isSuccess) {\n                // Opponent gains a TA\n                await combat.setTA();\n            }\n            callOnHooks('hm3.onFumbleRoll', actorInfo.actor, result, stdRollData);\n        }\n        return result;\n    }\n    return null;\n}\n\n/**\n *\n * @param {string} atkTokenId\n * @param {string} defTokenId\n * @param {number} atkDice\n * @param {number} defDice\n * @returns\n */\nexport async function throwDownRoll(atkTokenId, defTokenId, atkDice, defDice) {\n    const atkToken = canvas.tokens.get(atkTokenId);\n    if (!atkToken) {\n        ui.notifications.warn(`Attacker ${atkToken.name} could not be found on canvas.`);\n        return null;\n    }\n\n    const defToken = canvas.tokens.get(defTokenId);\n    if (!defToken) {\n        ui.notifications.warn(`Defender ${defToken.name} could not be found on canvas.`);\n        return null;\n    }\n\n    const hooksOk = Hooks.call('hm3.preThrowDownRoll', atkToken, defToken);\n    if (hooksOk) {\n        let atkResult = 0,\n            defResult = 0;\n        // re-roll ties\n        while (atkResult === defResult) {\n            // House rule: To make GRAPPLE more attractive and effective, the player who starts\n            // the grapple receives more dice according to the success result (one or two more).\n            atkResult = rollResultAsync(`${3 + atkDice}d6 + ${atkToken.actor.system.abilities.strength.effective}`);\n            defResult = rollResultAsync(`${3 + defDice}d6 + ${defToken.actor.system.abilities.strength.effective}`);\n        }\n\n        let ata = false,\n            dta = false,\n            resultDesc = '',\n            goProne;\n        if (atkResult > defResult) {\n            // Attacker has thrown the defender to the ground and wins a Tactical Advantage.\n            goProne = async () => await createCondition(defToken, Condition.PRONE);\n            resultDesc = `${atkToken.name} has thrown ${defToken.name} to the ground and wins a Tactical Advantage.`;\n            ata = true;\n        } else {\n            // Defender has thrown the attacker to the ground and wins a Tactical Advantage.\n            goProne = async () => await createCondition(atkToken, Condition.PRONE);\n            resultDesc = `${defToken.name} has thrown ${atkToken.name} to the ground and wins a Tactical Advantage.`;\n            dta = true;\n        }\n\n        if (ata || dta) {\n            // Only one TA per turn\n            if (!(await combat.setTA())) {\n                ata = false;\n                dta = false;\n            }\n        }\n\n        const chatData = {\n            ata,\n            atkTokenId: atkToken.id,\n            attacker: atkToken.name,\n            attackRoll: atkResult,\n            defender: defToken.name,\n            defenseRoll: defResult,\n            defTokenId: defToken.id,\n            dta,\n            hasAttackHit: false,\n            resultDesc,\n            title: `Throw Down Roll`,\n            visibleAtkActorId: atkToken.actor.id,\n            visibleDefActorId: defToken.actor.id\n        };\n\n        let chatTemplate = 'systems/hm3/templates/chat/attack-result-card.hbs';\n\n        const html = await renderTemplate(chatTemplate, chatData);\n\n        let messageData = {\n            content: html.trim(),\n            sound: CONFIG.sounds.dice,\n            speaker: ChatMessage.getSpeaker(),\n            user: game.user.id\n        };\n\n        // Create a chat message\n        await ChatMessage.create(messageData, {});\n        await goProne();\n\n        callOnHooks('hm3.onThrowDownRoll', atkToken, defToken, {atkResult, defResult});\n    }\n    return null;\n}\n\nexport async function fallingRoll(noDialog = false, myActor = null, token = null) {\n    const actorInfo = getActor({actor: myActor, item: null, speaker: null});\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    let dlgTemplate = 'systems/hm3/templates/dialog/falling-test-dialog.hbs';\n    let dialogData = {\n        clear: true,\n        grabbing: false,\n        height: 6,\n        modifier: 0\n    };\n\n    const dodgeSkill = actorInfo.actor.items.find((item) => item.type === ItemType.SKILL && item.name === 'Dodge');\n    const acrobaticsSkill = actorInfo.actor.items.find(\n        (item) => item.type === ItemType.SKILL && item.name === 'Acrobatics'\n    );\n\n    dialogData.skill = 'Dodge';\n    dialogData.skills = [{key: 'Dodge'}];\n    if (acrobaticsSkill) {\n        dialogData.skill = 'Acrobatics';\n        dialogData.skills = [{key: 'Acrobatics'}, {key: 'Dodge'}];\n    }\n\n    dialogData.surface = '0';\n    dialogData.surfaces = [\n        {key: '-3', label: 'Deep Water (3 feet or more) (-3d6)'},\n        {key: '-2', label: 'Shallow Water (less than 3 feet) (-2d6)'},\n        {key: '-1', label: 'Soft Ground (mud, bog, etc.) (-1d6)'},\n        {key: '0', label: 'Normal Ground (grass, earth, etc.) (+0)'},\n        {key: '1', label: 'Hard Ground (paving stone, etc.) (+1d6)'},\n        {key: '2', label: 'Rocky Ground (+2d6)'}\n    ];\n\n    const html = await renderTemplate(dlgTemplate, dialogData);\n\n    // Create the dialog window\n    let dlg = await Dialog.prompt({\n        content: html.trim(),\n        label: 'Roll',\n        options: {width: 550},\n        title: 'Falling Test',\n        callback: async (html) => {\n            const form = html[0].querySelector('form');\n            const formClear = form.clear.checked;\n            const formGrabbing = form.grabbing.checked;\n            const formHeight = Number(form.height.value);\n            const formModifier = Number(form.modifier.value);\n            const formSkill = form.skills.value;\n            const formSurface = Number(form.surfaces.value);\n\n            let dice = Math.ceil(formHeight / 10 + Number.EPSILON); // 1d6 per 10 feet of fall\n            dice += formSurface; // Add surface modifier\n\n            if (formGrabbing) {\n                const effSkillBase = actorInfo.actor.system.abilities.dexterity.effective; // Use Dexterity for grabbing\n\n                const stdRollData = {\n                    actor: actorInfo.actor,\n                    effSkillBase,\n                    fastforward: true,\n                    isAbility: true,\n                    label: `d100 Dexterity Roll`,\n                    multiplier: 5,\n                    name: `${actorInfo.token.name} tries to grab something while falling.`,\n                    notes: '',\n                    notesData: {},\n                    numdice: 1,\n                    skill: 'Dexterity',\n                    speaker: actorInfo.speaker,\n                    target: effSkillBase * 5, // Target is Dexterity EML * 5\n                    type: 'dexterity-d100'\n                };\n                if (actorInfo.actor.isToken) {\n                    stdRollData.token = actorInfo.actor.token.id;\n                } else {\n                    stdRollData.actor = actorInfo.actor.id;\n                    stdRollData.token = token?.id;\n                }\n\n                stdRollData.addlInfoCallback = (result) => {\n                    const progress = `Fall modifier:`;\n\n                    if (result.isSuccess) {\n                        if (result.isCritical) {\n                            dice += -3; // Critical success reduces fall damage by 3d6\n                            return `<p>${progress} -3d6</p>`;\n                        } else {\n                            dice += -2; // Success reduces fall damage by 2d6\n                            return `<p>${progress} -2d6</p>`;\n                        }\n                    } else {\n                        if (result.isCritical) {\n                            return `<p>${actorInfo.token.name} has wrenched one arm, giving a Blunt Minor Injury (M1).</p>`;\n                        } else {\n                            return `<p>No effect</p>`;\n                        }\n                    }\n                };\n\n                const dex = await DiceHM3.d100StdRoll(stdRollData);\n                if (!dex.isSuccess && dex.isCritical) {\n                    await DiceHM3.injuryRoll({\n                        actor: actorInfo.actor,\n                        aim: 'Mid',\n                        aspect: Aspect.BLUNT,\n                        impact: 1,\n                        items: actorInfo.actor.items,\n                        location: `${(await rollResultAsync('1d2')) === 1 ? 'Right' : 'Left'} Shoulder`,\n                        name: `Character has wrenched one arm.`,\n                        noArmor: true,\n                        speaker: actorInfo.speaker\n                    });\n                }\n            }\n\n            let success = false;\n            if (formClear && formHeight > 15) {\n                let target =\n                    formSkill === 'Acrobatics'\n                        ? acrobaticsSkill.system.effectiveMasteryLevel\n                        : dodgeSkill.system.effectiveMasteryLevel;\n                target = HM100Check(target + formModifier);\n\n                const stdRollData = {\n                    actor: actorInfo.actor,\n                    fastforward: true,\n                    label: `${formSkill} Skill Test`,\n                    name: `${actorInfo.token.name} tries to avoid falling damage.`,\n                    notes: '',\n                    notesData: {},\n                    numdice: 1,\n                    skill: formSkill,\n                    speaker: actorInfo.speaker,\n                    target,\n                    type: 'falling'\n                };\n                if (actorInfo.actor.isToken) {\n                    stdRollData.token = actorInfo.actor.token.id;\n                } else {\n                    stdRollData.actor = actorInfo.actor.id;\n                    stdRollData.token = token?.id;\n                }\n\n                stdRollData.addlInfoCallback = (result) => {\n                    const progress = `Fall modifier:`;\n                    const CS = {'Dodge': -2, 'Acrobatics': -3};\n                    const MS = {'Dodge': -1, 'Acrobatics': -2};\n                    const MF = {'Dodge': 1, 'Acrobatics': 0};\n                    const CF = {'Dodge': 2, 'Acrobatics': 1};\n\n                    if (result.isSuccess) {\n                        if (result.isCritical) {\n                            dice += CS[stdRollData.skill];\n                            return `<p>${progress} ${CS[stdRollData.skill]}d6</p>`;\n                        } else {\n                            dice += MS[stdRollData.skill];\n                            return `<p>${progress} ${MS[stdRollData.skill]}d6</p>`;\n                        }\n                    } else {\n                        if (result.isCritical) {\n                            dice += CF[stdRollData.skill];\n                            return `<p>${progress} +${CF[stdRollData.skill]}d6</p>`;\n                        } else {\n                            dice += MF[stdRollData.skill];\n                            return `<p>${progress} +${MF[stdRollData.skill]}d6</p>`;\n                        }\n                    }\n                };\n\n                const dodge = await DiceHM3.d100StdRoll(stdRollData);\n                success = dodge.isSuccess;\n            }\n\n            dice = Math.max(dice, 0);\n            await DiceHM3.injuryRoll({\n                actor: actorInfo.actor,\n                aim: success ? 'Low' : 'Mid',\n                aspect: Aspect.BLUNT,\n                impact: await game.hm3.macros.rollResultAsync(dice + 'd6', {\n                    name: actorInfo.actor.name,\n                    type: 'fallingRoll'\n                }),\n                items: actorInfo.actor.items,\n                name: `Falling from ${formHeight} feet with ${dice}d6 blunt damage.`,\n                speaker: actorInfo.speaker\n            });\n        }\n    });\n\n    return null;\n}\n\nexport async function genericDamageRoll(myActor = null) {\n    const actorInfo = getActor({actor: myActor, item: null, speaker: ChatMessage.getSpeaker()});\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    const rollData = {\n        weapon: '',\n        data: actorInfo.actor,\n        speaker: actorInfo.speaker,\n        notesData: {},\n        notes: ''\n    };\n    if (actorInfo.actor.isToken) {\n        rollData.token = actorInfo.actor.token.id;\n    } else {\n        rollData.actor = actorInfo.actor.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preDamageRoll', rollData, actorInfo.actor);\n    if (hooksOk) {\n        const result = await DiceHM3.damageRoll(rollData);\n        if (result) {\n            callOnHooks('hm3.onDamageRoll', actorInfo.actor, result, rollData);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function moraleRoll(noDialog = false, myActor = null) {\n    const actorInfo = getActor({actor: myActor, item: null, speaker: null});\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    if (actorInfo.actor?.hasCondition(Condition.INANIMATE)) {\n        ui.notifications.warn(`Token is inanimate, and immune to morale.`);\n        return null;\n    }\n\n    const ini = actorInfo.actor.items.find((x) => x.name === 'Initiative');\n    if (!ini) {\n        ui.notifications.warn(`No Initiative skill for this actor for this action could be determined.`);\n        return null;\n    }\n\n    let token = actorInfo.token;\n    const unconscious = actorInfo.actor?.hasCondition(Condition.UNCONSCIOUS);\n    if (unconscious) {\n        ui.notifications.warn(`Token is unconscious.`);\n        return null;\n    }\n\n    const stdRollData = {\n        actor: actorInfo.actor,\n        fastforward: noDialog,\n        label: `${actorInfo.actor.isToken ? actorInfo.actor.token.name : actorInfo.actor.name} Morale Roll`,\n        notes: '',\n        notesData: {},\n        private: true, // hidden to players\n        speaker: actorInfo.speaker,\n        target: ini.system.effectiveMasteryLevel + 5 * actorInfo.actor.system.encumbrance, // encumbrance do not count for morale\n        type: 'Morale-d100'\n    };\n\n    if (actorInfo.actor.isToken) {\n        stdRollData.token = actorInfo.actor.token.id;\n        // token = actorInfo.actor.token;\n    } else {\n        stdRollData.actor = actorInfo.actor.id;\n        // token = actorInfo.actor.prototypeToken;\n        // stdRollData.token = token?.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preMoraleRoll', stdRollData, actorInfo.actor);\n    if (hooksOk) {\n        const result = await DiceHM3.d100StdRoll(stdRollData);\n        if (result) {\n            actorInfo.actor.runCustomMacro(result);\n            if (result.isSuccess && result.isCritical) {\n                // CS - Empowered\n                await token?.addCondition(Condition.EMPOWERED, {oneTurn: true});\n            } else if (!result.isSuccess && !result.isCritical) {\n                // MF - Cautious, turn ends\n                await token?.addCondition(Condition.CAUTIOUS, {oneRound: true});\n            } else if (!result.isSuccess && result.isCritical) {\n                // CF\n                const total = await game.hm3.macros.rollResultAsync('1d100', {\n                    name: actorInfo.actor.name,\n                    type: 'CF moraleRoll'\n                });\n                if (total <= 25) {\n                    await token?.addCondition(Condition.BERSERK);\n                } else if (total <= 50) {\n                    await token?.addCondition(Condition.DESPERATE);\n                } else if (total <= 75) {\n                    await token?.addCondition(Condition.BROKEN);\n                } else {\n                    await token?.addCondition(Condition.CAUTIOUS);\n                }\n            }\n            callOnHooks('hm3.onMoraleRoll', actorInfo.actor, result, stdRollData);\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function steedCommandRoll(noDialog = false, myActor = null) {\n    const actorInfo = getActor({actor: myActor, item: null, speaker: null});\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    if (!actorInfo.actor.system.mounted) {\n        ui.notifications.warn(`Actor is not mounted.`);\n        return null;\n    }\n\n    const riding = actorInfo.actor.items.find((item) => item.type === ItemType.SKILL && item.name.includes('Riding'));\n    if (!riding) {\n        ui.notifications.warn(`No Riding skill for this actor for this action could be determined.`);\n        return null;\n    }\n\n    let token = actorInfo.token;\n\n    const stdRollData = {\n        actor: actorInfo.actor,\n        fastforward: noDialog || !actorInfo.actor.hasPlayerOwner,\n        label: `${actorInfo.actor.isToken ? actorInfo.actor.token.name : actorInfo.actor.name} Steed Command Check`,\n        notes: '',\n        notesData: {},\n        private: !actorInfo.actor.hasPlayerOwner,\n        speaker: actorInfo.speaker,\n        target: riding.system.effectiveMasteryLevel,\n        type: 'SteedCommand-d100'\n    };\n\n    if (actorInfo.actor.isToken) {\n        stdRollData.token = actorInfo.actor.token.id;\n        // token = actorInfo.actor.token;\n    } else {\n        stdRollData.actor = actorInfo.actor.id;\n        // token = actorInfo.actor.prototypeToken;\n        // stdRollData.token = token?.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preSteedCommandRoll', stdRollData, actorInfo.actor);\n    if (hooksOk) {\n        const result = await DiceHM3.d100StdRoll(stdRollData);\n        if (result) {\n            actorInfo.actor.runCustomMacro(result);\n            if (result.isSuccess && result.isCritical) {\n                // CS - +10 AML COMBAT 21\n                await token?.addCondition(Condition.EMPOWERED, {oneTurn: true});\n            } else if (!result.isSuccess && !result.isCritical) {\n                // MF - -10 AML COMBAT 21\n                await token?.addCondition(Condition.WEAKENED, {oneTurn: true});\n            } else if (!result.isSuccess && result.isCritical) {\n                // CF - Unhorsed (no roll) COMBAT 21\n                unhorsingRoll(noDialog, myActor, true);\n            }\n            callOnHooks('hm3.onSteedCommandRoll', actorInfo.actor, result, stdRollData);\n\n            utility.improveFlag(riding, {success: result.isSuccess});\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function unhorsingRoll(noDialog = false, myActor = null, autofail = false) {\n    const actorInfo = getActor({actor: myActor, item: null, speaker: null});\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    if (!actorInfo.actor.system.mounted) {\n        ui.notifications.warn(`Actor is not mounted.`);\n        return null;\n    }\n\n    const riding = actorInfo.actor.items.find((item) => item.type === ItemType.SKILL && item.name.includes('Riding'));\n    if (!riding) {\n        ui.notifications.warn(`No Riding skill for this actor for this action could be determined.`);\n        return null;\n    }\n\n    let token = actorInfo.token;\n\n    const stdRollData = {\n        actor: actorInfo.actor,\n        fastforward: noDialog,\n        label: `${actorInfo.actor.isToken ? actorInfo.actor.token.name : actorInfo.actor.name} Unhorsing Roll`,\n        modifier: actorInfo.actor.system.eph.unhorsing || 0,\n        notes: '',\n        notesData: {},\n        private: !actorInfo.actor.hasPlayerOwner,\n        speaker: actorInfo.speaker,\n        target: riding.system.effectiveMasteryLevel,\n        type: 'SteedCommand-d100'\n    };\n\n    if (actorInfo.actor.isToken) {\n        stdRollData.token = actorInfo.actor.token.id;\n        // token = actorInfo.actor.token;\n    } else {\n        stdRollData.actor = actorInfo.actor.id;\n        // token = actorInfo.actor.prototypeToken;\n        // stdRollData.token = token?.id;\n    }\n\n    const hooksOk = Hooks.call('hm3.preUnhorsingRoll', stdRollData, actorInfo.actor);\n    if (hooksOk) {\n        const result = !autofail ? await DiceHM3.d100StdRoll(stdRollData) : {isSuccess: false, isCritical: false};\n        if (result) {\n            actorInfo.actor.runCustomMacro(result);\n            if (result.isSuccess) {\n                // CS/MS - rider stays in saddle (COMBAT 24)\n                await game.hm3.GmSays({text: `<b>${token.name}</b> stays in the saddle.`, source: 'Combat 24'});\n                if (result.isCritical) {\n                    // CS - rider gains TA (COMBAT 24)\n                }\n            } else {\n                // CF/MF - rider is thrown (COMBAT 24)\n                await game.hm3.GmSays({text: `<b>${token.name}</b> is thrown.`, source: 'Combat 24'});\n            }\n            callOnHooks('hm3.onUnhorsingRoll', actorInfo.actor, result, stdRollData);\n\n            utility.improveFlag(riding, {success: result.isSuccess});\n        }\n        return result;\n    }\n    return null;\n}\n\nexport async function changeFatigue(newValue, myActor = null) {\n    const actorInfo = getActor({actor: myActor, item: null, speaker: ChatMessage.getSpeaker()});\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    const updateData = {};\n    if (/^\\s*[+-]/.test(newValue)) {\n        // relative change\n        const changeValue = parseInt(newValue, 10);\n        if (!isNaN(changeValue))\n            updateData['system.fatigue'] = Math.max(actorInfo.actor.system.fatigue + changeValue, 0);\n    } else {\n        const value = parseInt(newValue, 10);\n        if (!isNaN(value)) updateData['system.fatigue'] = value;\n    }\n    if (typeof updateData['system.fatigue'] !== 'undefined') {\n        await actorInfo.actor.update(updateData);\n    }\n\n    return true;\n}\n\nexport async function changeMissileQuanity(missileName, newValue, myActor = null) {\n    myActor &&= myActor instanceof Actor ? myActor : fromUuidSync(myActor);\n    const missile = await combat.getItem(missileName, 'missilegear', myActor);\n    const actorParam = {actor: myActor, item: null, speaker: ChatMessage.getSpeaker()};\n\n    if (missile?.type === 'missilegear') {\n        if (missile.parent) {\n            actorParam.actor = missile.parent;\n            actorParam.speaker = ChatMessage.getSpeaker({actor: missile.parent});\n        }\n    }\n\n    const actorInfo = getActor(result, myActor);\n    if (!actorInfo) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    if (!missile) {\n        ui.notifications.warn(`${missileName} could not be found in the list of missiles for ${actorInfo.actor.name}.`);\n        return null;\n    }\n\n    const updateData = {};\n    if (/^\\s*[+-]/.test(newValue)) {\n        // relative change\n        const changeValue = parseInt(newValue, 10);\n        if (!isNaN(changeValue)) updateData['system.quantity'] = Math.max(missile.system.quantity + changeValue, 0);\n    } else {\n        const value = parseInt(newValue, 10);\n        if (!isNaN(value)) updateData['system.quantity'] = value;\n    }\n\n    if (typeof updateData['system.quantity'] !== 'undefined') {\n        const item = actorInfo.actor.items.get(missile.id);\n        await item.update(updateData);\n    }\n    return true;\n}\n\nexport async function setSkillDevelopmentFlag(skillName, myActor = null) {\n    myActor &&= myActor instanceof Actor ? myActor : fromUuidSync(myActor);\n    const skill = await combat.getItem(skillName, 'skill', myActor);\n\n    const actor = getActor(result, myActor);\n    if (!actor) {\n        ui.notifications.warn(`No actor for this action could be determined.`);\n        return null;\n    }\n\n    if (!skill) {\n        ui.notifications.warn(`${skillName} could not be found in the list of skills for ${actor.name}.`);\n        return null;\n    }\n\n    if (!actor.isOwner) {\n        ui.notifications.warn(`You are not an owner of ${actor.name}, so you may not set the skill development flag.`);\n        return null;\n    }\n\n    if (!skill.system.improveFlag) {\n        const updateData = {'system.improveFlag': 1};\n        await skill.update(updateData);\n    }\n\n    return true;\n}\n\n/*--------------------------------------------------------------*/\n/*        AUTOMATED COMBAT                                      */\n/*--------------------------------------------------------------*/\n\nexport async function weaponAttack(itemName = null, noDialog = false, myToken = null, forceAllow = false) {\n    const combatant = getTokenInCombat(myToken, forceAllow);\n    if (!combatant) return null;\n\n    const targetToken = getUserTargetedToken(combatant);\n    if (!targetToken) return null;\n\n    let weapon = null;\n    if (itemName) {\n        weapon = await combat.getItem(itemName, 'weapongear', combatant.actor);\n    }\n\n    // If an attack is carried out unarmed, you can select the GRAPPLE option.\n    const unarmed = weapon?.system.assocSkill.toLowerCase().includes('unarmed') || false;\n\n    const hooksOk = Hooks.call('hm3.preMeleeAttack', combatant, targetToken, weapon, unarmed);\n    if (hooksOk) {\n        const result = await combat.meleeAttack(combatant.token, targetToken, {weaponItem: weapon, unarmed, noDialog});\n        Hooks.call('hm3.onMeleeAttack', result, combatant, targetToken, weapon, unarmed);\n        return result;\n    }\n    return null;\n}\n\nexport async function missileAttack(itemName = null, noDialog = false, myToken = null, forceAllow = false) {\n    const combatant = getTokenInCombat(myToken, forceAllow);\n    if (!combatant) return null;\n\n    const targetToken = getUserTargetedToken(combatant);\n    if (!targetToken) return null;\n\n    let missile = null;\n    if (itemName) {\n        missile = await combat.getItem(itemName, 'missilegear', combatant.actor);\n    }\n\n    const hooksOk = Hooks.call('hm3.preMissileAttack', combatant, targetToken, missile);\n    if (hooksOk) {\n        const result = await combat.missileAttack(combatant.token, targetToken, missile);\n        Hooks.call('hm3.onMissileAttack', result, combatant, targetToken, missile);\n        return result;\n    }\n    return null;\n}\n\nexport async function esotericAttack(itemName = null, noDialog = false, myToken = null, forceAllow = false) {\n    const combatant = getTokenInCombat(myToken, forceAllow);\n    if (!combatant) return null;\n\n    const targetToken = getUserTargetedToken(combatant);\n    if (!targetToken) return null;\n\n    let esoteric = null;\n    if (itemName) {\n        esoteric = await combat.getItem(itemName, 'skill', combatant.actor);\n    }\n\n    const hooksOk = Hooks.call('hm3.preEsotericAttack', combatant, targetToken, esoteric);\n    if (hooksOk) {\n        const result = await combat.esotericAttack(combatant.token, targetToken, esoteric);\n        Hooks.call('hm3.onEsotericAttack', result, combatant, targetToken, esoteric);\n        return result;\n    }\n    return null;\n}\n\n/**\n * Resume the attack with the defender performing the \"Counterstrike\" defense.\n * Note that this defense is only applicable to melee attacks.\n *\n * @param {*} atkTokenId Token representing the attacker\n * @param {*} defTokenId Token representing the defender/counterstriker\n * @param {*} atkWeaponName Name of the weapon the attacker is using\n * @param {*} atkEffAML The effective AML (Attack Mastery Level) of the attacker after modifiers applied\n * @param {*} atkAim Attack aim (\"High\", \"Mid\", \"Low\")\n * @param {*} atkAspect Weapon aspect (\"Blunt\", \"Edged\", \"Piercing\")\n * @param {*} atkImpactMod Additional modifier to impact\n * @param {boolean} isGrappleAtk\n */\nexport async function meleeCounterstrikeResume(\n    atkTokenId,\n    defTokenId,\n    atkWeaponName,\n    atkEffAML,\n    atkAim,\n    atkAspect,\n    atkImpactMod,\n    isGrappleAtk,\n    noDialog = false\n) {\n    const atkToken = canvas.tokens.get(atkTokenId);\n    if (!atkToken) {\n        ui.notifications.warn(`Attacker ${atkToken.name} could not be found on canvas.`);\n        return null;\n    }\n\n    const defToken = canvas.tokens.get(defTokenId);\n    if (!defToken) {\n        ui.notifications.warn(`Defender ${defToken.name} could not be found on canvas.`);\n        return null;\n    }\n\n    const hooksOk = Hooks.call(\n        'hm3.preMeleeCounterstrikeResume',\n        atkToken,\n        defToken,\n        atkWeaponName,\n        atkEffAML,\n        atkAim,\n        atkAspect,\n        atkImpactMod,\n        isGrappleAtk\n    );\n    if (hooksOk) {\n        const result = await combat.meleeCounterstrikeResume(\n            atkToken,\n            defToken,\n            atkWeaponName,\n            atkEffAML,\n            atkAim,\n            atkAspect,\n            atkImpactMod,\n            isGrappleAtk\n        );\n        Hooks.call(\n            'hm3.onMeleeCounterstrikeResume',\n            result,\n            atkToken,\n            defToken,\n            atkWeaponName,\n            atkEffAML,\n            atkAim,\n            atkAspect,\n            atkImpactMod,\n            isGrappleAtk\n        );\n        return result;\n    }\n    return null;\n}\n\n/**\n * Resume the attack with the defender performing the \"Dodge\" defense.\n *\n * @param {*} atkTokenId Token representing the attacker\n * @param {*} defTokenId Token representing the defender\n * @param {*} type Type of attack: \"melee\" or \"missile\"\n * @param {*} weaponName Name of the weapon the attacker is using\n * @param {*} effAML The effective AML (Attack Mastery Level) of the attacker after modifiers applied\n * @param {*} aim Attack aim (\"High\", \"Mid\", \"Low\")\n * @param {*} aspect Weapon aspect (\"Blunt\", \"Edged\", \"Piercing\")\n * @param {*} impactMod Additional modifier to impact\n */\nexport async function dodgeResume(\n    atkTokenId,\n    defTokenId,\n    type,\n    weaponName,\n    effAML,\n    aim,\n    aspect,\n    impactMod,\n    isGrappleAtk,\n    noDialog = false\n) {\n    const atkToken = canvas.tokens.get(atkTokenId);\n    if (!atkToken) {\n        ui.notifications.warn(`Attacker ${atkToken.name} could not be found on canvas.`);\n        return null;\n    }\n\n    const defToken = canvas.tokens.get(defTokenId);\n    if (!defToken) {\n        ui.notifications.warn(`Defender ${defToken.name} could not be found on canvas.`);\n        return null;\n    }\n\n    const hooksOk = Hooks.call(\n        'hm3.preDodgeResume',\n        atkToken,\n        defToken,\n        type,\n        weaponName,\n        effAML,\n        aim,\n        aspect,\n        impactMod,\n        isGrappleAtk\n    );\n    if (hooksOk) {\n        const result = await combat.dodgeResume(\n            atkToken,\n            defToken,\n            type,\n            weaponName,\n            effAML,\n            aim,\n            aspect,\n            impactMod,\n            isGrappleAtk\n        );\n        Hooks.call(\n            'hm3.onDodgeResume',\n            result,\n            atkToken,\n            defToken,\n            type,\n            weaponName,\n            effAML,\n            aim,\n            aspect,\n            impactMod,\n            isGrappleAtk\n        );\n        return result;\n    }\n    return null;\n}\n\n/**\n * Resume the attack with the defender performing the \"Block\" defense.\n *\n * @param {*} atkTokenId Token representing the attacker\n * @param {*} defTokenId Token representing the defender\n * @param {*} type Type of attack: \"melee\" or \"missile\"\n * @param {*} weaponName Name of the weapon the attacker is using\n * @param {*} effAML The effective AML (Attack Mastery Level) of the attacker after modifiers applied\n * @param {*} aim Attack aim (\"High\", \"Mid\", \"Low\")\n * @param {*} aspect Weapon aspect (\"Blunt\", \"Edged\", \"Piercing\")\n * @param {*} impactMod Additional modifier to impact\n */\nexport async function blockResume(\n    atkTokenId,\n    defTokenId,\n    type,\n    weaponName,\n    effAML,\n    aim,\n    aspect,\n    impactMod,\n    isGrappleAtk,\n    noDialog = false\n) {\n    const atkToken = canvas.tokens.get(atkTokenId);\n    if (!atkToken) {\n        ui.notifications.warn(`Attacker ${atkToken.name} could not be found on canvas.`);\n        return null;\n    }\n\n    const defToken = canvas.tokens.get(defTokenId);\n    if (!defToken) {\n        ui.notifications.warn(`Defender ${defToken.name} could not be found on canvas.`);\n        return null;\n    }\n\n    const hooksOk = Hooks.call(\n        'hm3.preBlockResume',\n        atkToken,\n        defToken,\n        type,\n        weaponName,\n        effAML,\n        aim,\n        aspect,\n        impactMod,\n        isGrappleAtk\n    );\n    if (hooksOk) {\n        const result = await combat.blockResume(\n            atkToken,\n            defToken,\n            type,\n            weaponName,\n            effAML,\n            aim,\n            aspect,\n            impactMod,\n            isGrappleAtk,\n            noDialog\n        );\n        Hooks.call(\n            'hm3.onBlockResume',\n            result,\n            atkToken,\n            defToken,\n            type,\n            weaponName,\n            effAML,\n            aim,\n            aspect,\n            impactMod,\n            isGrappleAtk\n        );\n        return result;\n    }\n    return null;\n}\n\nexport async function esotericResume(atkTokenId, defTokenId, atkWeaponName, atkEffAML, noDialog = false) {\n    const atkToken = canvas.tokens.get(atkTokenId);\n    if (!atkToken) {\n        ui.notifications.warn(`Attacker ${atkToken.name} could not be found on canvas.`);\n        return null;\n    }\n\n    const defToken = canvas.tokens.get(defTokenId);\n    if (!defToken) {\n        ui.notifications.warn(`Defender ${defToken.name} could not be found on canvas.`);\n        return null;\n    }\n\n    const hooksOk = Hooks.call('hm3.preEsotericResume', atkToken, defToken, atkWeaponName, atkEffAML);\n    if (hooksOk) {\n        const result = await combat.esotericResume(atkToken, defToken, atkWeaponName, atkEffAML);\n        Hooks.call('hm3.onEsotericResume', result, atkToken, defToken, atkWeaponName, atkEffAML);\n        return result;\n    }\n    return null;\n}\n\n/**\n * Resume the attack with the defender performing the \"Ignore\" defense.\n *\n * @param {*} atkTokenId Token representing the attacker\n * @param {*} defTokenId Token representing the defender\n * @param {*} type Type of attack: \"melee\" or \"missile\"\n * @param {*} weaponName Name of the weapon the attacker is using\n * @param {*} effAML The effective AML (Attack Mastery Level) of the attacker after modifiers applied\n * @param {*} aim Attack aim (\"High\", \"Mid\", \"Low\")\n * @param {*} aspect Weapon aspect (\"Blunt\", \"Edged\", \"Piercing\")\n * @param {*} impactMod Additional modifier to impact\n */\nexport async function ignoreResume(\n    atkTokenId,\n    defTokenId,\n    type,\n    weaponName,\n    effAML,\n    aim,\n    aspect,\n    impactMod,\n    isGrappleAtk,\n    noDialog = false\n) {\n    const atkToken = canvas.tokens.get(atkTokenId);\n    if (!atkToken) {\n        ui.notifications.warn(`Attacker ${atkToken.name} could not be found on canvas.`);\n        return null;\n    }\n\n    const defToken = canvas.tokens.get(defTokenId);\n    if (!defToken) {\n        ui.notifications.warn(`Defender ${defToken.name} could not be found on canvas.`);\n        return null;\n    }\n\n    const hooksOk = Hooks.call(\n        'hm3.preIgnoreResume',\n        atkToken,\n        defToken,\n        type,\n        weaponName,\n        effAML,\n        aim,\n        aspect,\n        impactMod,\n        isGrappleAtk\n    );\n    if (hooksOk) {\n        const result = await combat.ignoreResume(\n            atkToken,\n            defToken,\n            type,\n            weaponName,\n            effAML,\n            aim,\n            aspect,\n            impactMod,\n            isGrappleAtk\n        );\n        Hooks.call(\n            'hm3.onIgnoreResume',\n            result,\n            atkToken,\n            defToken,\n            type,\n            weaponName,\n            effAML,\n            aim,\n            aspect,\n            impactMod,\n            isGrappleAtk\n        );\n        return result;\n    }\n    return null;\n}\n\n/*--------------------------------------------------------------*/\n/*        UTILITY FUNCTIONS                                     */\n/*--------------------------------------------------------------*/\n\n/**\n * Determines the identity of the current token/actor that is in combat. If token\n * is specified, tries to use token (and will allow it regardless if user is GM.),\n * otherwise returned token will be the combatant whose turn it currently is.\n *\n * @param {TokenHM3} token\n */\nfunction getTokenInCombat(token = null, forceAllow = false) {\n    if (token && (game.user.isGM || forceAllow)) {\n        const result = {token: token, actor: token.actor};\n        return result;\n    }\n\n    if (!game.combat || game.combat.combatants.length === 0) {\n        ui.notifications.warn(`No active combatant.`);\n        return null;\n    }\n\n    const combatant = game.combat.combatant;\n\n    if (token && token.id !== combatant.token.id) {\n        ui.notifications.warn(`${token.name} cannot perform that action at this time.`);\n        return null;\n    }\n\n    if (!combatant.actor.isOwner) {\n        ui.notifications.warn(`You do not have permissions to control ${combatant.token.name}.`);\n        return null;\n    }\n\n    token = canvas.tokens.get(combatant.token.id);\n    return {token: token, actor: combatant.actor};\n}\n\nfunction getSingleSelectedToken() {\n    const numTargets = canvas.tokens?.controlled?.length;\n    if (!numTargets) {\n        ui.notifications.warn(`No selected tokens on the canvas.`);\n        return null;\n    }\n\n    if (numTargets > 1) {\n        ui.notifications.warn(`There are ${numTargets} selected tokens on the canvas, please select only one`);\n        return null;\n    }\n\n    return canvas.tokens.controlled[0];\n}\n\nfunction getUserTargetedToken(combatant) {\n    const targets = game.user.targets;\n    if (!targets?.size) {\n        ui.notifications.warn(`No targets selected, you must select exactly one target, combat aborted.`);\n        return null;\n    } else if (targets.size > 1) {\n        ui.notifications.warn(`${targets} targets selected, you must select exactly one target, combat aborted.`);\n    }\n\n    const targetToken = Array.from(game.user.targets)[0];\n\n    if (combatant?.token && targetToken.id === combatant.token.id) {\n        ui.notifications.warn(`You have targetted the combatant, they cannot attack themself, combat aborted.`);\n        return null;\n    }\n\n    return targetToken;\n}\n\nfunction getActor({item, actor, speaker, token} = {}) {\n    const result = {item, actor, speaker, token};\n    if (item?.actor) {\n        result.actor = item.actor;\n        result.speaker = ChatMessage.getSpeaker({actor: result.actor});\n    } else {\n        // If actor is an Actor, just return it\n        if (result.actor instanceof Actor) {\n            result.speaker ||= ChatMessage.getSpeaker({actor: result.actor});\n        } else {\n            if (!result.actor) {\n                // If actor was null, lets try to figure it out from the Speaker\n                result.speaker = ChatMessage.getSpeaker();\n                if (result.speaker?.token) {\n                    const token = canvas.tokens.get(result.speaker.token);\n                    result.actor = token.actor;\n                } else {\n                    result.actor = result.speaker?.actor;\n                }\n                if (!result.actor) {\n                    ui.notifications.warn(`No actor selected, roll ignored.`);\n                    return null;\n                }\n            } else {\n                result.actor = fromUuidSync(result.actor);\n                result.speaker = ChatMessage.getSpeaker({actor: result.actor});\n            }\n\n            if (!result.actor) {\n                ui.notifications.warn(`No actor selected, roll ignored.`);\n                return null;\n            }\n        }\n    }\n    if (!result.token) result.token = canvas.tokens.get(result.speaker.token);\n\n    if (!result.actor.isOwner) {\n        ui.notifications.warn(`You do not have permissions to control ${result.actor.name}.`);\n        return null;\n    }\n\n    return result;\n}\n\nexport function callOnHooks(hook, actor, result, rollData, item = null) {\n    const rollResult = {\n        type: result.type,\n        title: result.title,\n        origTarget: result.origTarget,\n        modifier: (result.plusMinus === '-' ? -1 : 1) * result.modifier,\n        modifiedTarget: result.modifiedTarget,\n        rollValue: result.rollValue,\n        isSuccess: result.isSuccess,\n        isCritical: result.isCritical,\n        result: result.isSuccess ? (result.isCritical ? 'CS' : 'MS') : result.isCritical ? 'CF' : 'MF',\n        description: result.description,\n        notes: result.notes\n    };\n\n    const foundMacro = game.macros.getName(hook);\n\n    if (foundMacro && !foundMacro.hasPlayerOwner) {\n        const token = actor?.isToken ? actor.token : null;\n\n        utility.executeMacroScript(foundMacro, {\n            actor: actor,\n            token: token,\n            rollResult: rollResult,\n            rollData: rollData,\n            item: item\n        });\n    }\n\n    if (item) {\n        return Hooks.call(hook, actor, rollResult, rollData, item, result);\n    } else {\n        return Hooks.call(hook, actor, rollResult, rollData, result);\n    }\n}\n\n/**\n * Calculates the distance between two tokens.\n * @param {number} sourceTokenId The id of token #1.\n * @param {number} targetTokenId The id of token #2.\n * @param {boolean} gridUnits If true, the distance is returned in grid units.\n * @returns\n */\nexport function distanceBtwnTwoTokens(sourceTokenId, targetTokenId, gridUnits = false) {\n    const source = canvas.tokens.get(sourceTokenId);\n    const target = canvas.tokens.get(targetTokenId);\n\n    if (!source || !target || !canvas.scene || !canvas.scene.grid) return 9999;\n\n    const sourceElevation = source.document?.elevation || 0;\n    const targetElevation = target.document?.elevation || 0;\n\n    let distance = utility.truncate(canvas.grid.measurePath([source.center, target.center]).distance, 0);\n    distance = Math.sqrt(distance ** 2 + (sourceElevation - targetElevation) ** 2);\n    distance = Math.ceil(distance / canvas.dimensions.distance) * canvas.dimensions.distance;\n\n    if (gridUnits) return distance / canvas.dimensions.distance;\n\n    return distance;\n}\n\n/**\n * TODO\n * @param {*} options\n * @returns\n */\nexport function getAllTokens(options) {\n    options = foundry.utils.mergeObject({friendly: true, neutral: true, secret: true, hostile: true}, options);\n    return canvas.scene.tokens.contents.filter(\n        (t) =>\n            (t.disposition === CONST.TOKEN_DISPOSITIONS.FRIENDLY && options.friendly) ||\n            (t.disposition === CONST.TOKEN_DISPOSITIONS.NEUTRAL && options.neutral) ||\n            (t.disposition === CONST.TOKEN_DISPOSITIONS.SECRET && options.secret) ||\n            (t.disposition === CONST.TOKEN_DISPOSITIONS.HOSTILE && options.hostile)\n    );\n}\n\n/**\n * TODO\n * @param {*} options\n * @returns\n */\nexport function getSpecificTokens(options) {\n    options = foundry.utils.mergeObject({friendly: false, neutral: false, secret: false, hostile: false}, options);\n    return getAllTokens(options);\n}\n\n/**\n * TODO\n * Kudos: https://stackoverflow.com/questions/37224912/circle-line-segment-collision\n * @param {*} circle\n * @param {*} line\n * @param {*} centerToCenter\n * @returns\n */\nexport function pathIntersectsCircle(circle, line, centerToCenter = true) {\n    const size = canvas.grid.size / canvas.grid.distance;\n    const radius = (centerToCenter ? circle.radius : circle.radius + canvas.grid.distance) * size;\n    const c = new PIXI.Circle(circle.center.x, circle.center.y, radius);\n    const ixs = c.segmentIntersections(line.p1, line.p2);\n    if (ixs.length === 0) return null;\n    else if (ixs.length === 1) return ixs[0];\n    else {\n        const d0 = (line.p1.x - ixs[0].x) ** 2 + (line.p1.y - ixs[0].y) ** 2;\n        const d1 = (line.p1.x - ixs[1].x) ** 2 + (line.p1.y - ixs[1].y) ** 2;\n        return d0 <= d1 ? ixs[0] : ixs[1];\n    }\n}\n\n/**\n * TODO\n * @param {ActorHM3|TokenHM3|TokenDocumentHM3} actorOrToken\n * @param {string} aeName\n * @returns\n */\nexport function hasActiveEffect(actorOrToken, aeName, strict = false) {\n    const ae = getActiveEffect(actorOrToken, aeName, strict);\n    return !!ae && !!ae?.active;\n}\n\n/**\n * TODO\n * @param {ActorHM3|TokenHM3|TokenDocumentHM3} actorOrToken\n * @param {string} aeName\n * @returns\n */\nexport function getActiveEffect(actorOrToken, aeName, strict = false) {\n    let actor = actorOrToken instanceof ActorHM3 ? actorOrToken : null;\n    if (!actor) {\n        actor =\n            actorOrToken instanceof TokenHM3 || actorOrToken instanceof TokenDocumentHM3 ? actorOrToken.actor : null;\n    }\n\n    if (actor && aeName) {\n        return strict\n            ? actor.allApplicableEffects(true).find((ae) => ae.name === aeName)\n            : actor\n                  .allApplicableEffects(true)\n                  .find(\n                      (ae) =>\n                          ae.name.toLowerCase().includes(aeName.toLowerCase()) ||\n                          aeName.toLowerCase().includes(ae.name.toLowerCase())\n                  );\n    } else return null;\n}\n\nlet createMutex = new Mutex();\n\n/**\n * TODO\n * @param {Object} effectData - Data to create the effect\n * @param {Object[]} [effectData.flags=[]] -\n * @param {string} [effectData.icon='icons/svg/aura.svg'] -\n * @param {string} [effectData.label] -\n * @param {number} [effectData.postpone=0] -\n * @param {number} [effectData.rounds=1] -\n * @param {number} [effectData.seconds] -\n * @param {number} [effectData.startRound] -\n * @param {number} [effectData.startTime] -\n * @param {number} [effectData.startTurn] -\n * @param {number} [effectData.token] -\n * @param {number} [effectData.turns=0] -\n * @param {string} [effectData.type] -\n * @param {Object[]} [changes=[]] -\n * @param {Object} options - Additional options\n * @param {boolean} [options.hidden=false] - Non GMs will not see this effect\n * @param {boolean} [options.selfDestroy=false] - The effect deletes itself after completion\n * @param {boolean} [options.unique=false] - The effect is unique and cannot exist more than once\n * @returns {Promise<HarnMasterActiveEffect>}\n */\nexport async function createActiveEffect(effectData, changes = [], options = {}) {\n    return createMutex.runExclusive(async () => {\n        effectData = foundry.utils.mergeObject(\n            {\n                flags: [],\n                icon: 'icons/svg/aura.svg',\n                label: null,\n                postpone: 0,\n                rounds: 1,\n                seconds: null,\n                startRound: null,\n                startTime: null,\n                startTurn: null,\n                token: null,\n                turns: 0,\n                type: null // 'GameTime' | 'Combat'\n            },\n            effectData\n        );\n\n        // mandatory\n        if (!effectData.label || !effectData.token || !effectData.type) {\n            console.error('HM3 | Macro \"createActiveEffect\" needs label, token & type as mandatory input!');\n            return null;\n        }\n\n        options = foundry.utils.mergeObject({hidden: false, selfDestroy: false, unique: false}, options);\n\n        changes = changes.map((change) => {\n            change = foundry.utils.mergeObject({key: '', value: 0, mode: 2, priority: null}, change);\n            const keys = getObjectKeys(effectData.token.actor.system);\n            change.key = 'system.' + keys.find((v) => v.includes(change.key));\n            return change;\n        });\n\n        if (options.unique && hasActiveEffect(effectData.token, effectData.label)) {\n            if (game.user.isGM) ui.notifications.info(`HM3 | Effect ${effectData.label} is unique and already exists.`);\n            return null;\n        }\n\n        const aeData = {\n            changes,\n            flags: effectData.flags,\n            icon: effectData.icon,\n            label: effectData.label,\n            origin: effectData.token.actor.uuid\n        };\n\n        if (effectData.type === 'GameTime') {\n            const postpone = effectData.postpone;\n            const startTime = effectData.startTime || game.time.worldTime + postpone;\n            const seconds = effectData.seconds === null ? null : effectData.seconds || 1;\n\n            aeData['duration.startTime'] = startTime;\n            aeData['duration.seconds'] = seconds;\n        } else if (effectData.type === 'Combat' && !!game.combats.active?.current) {\n            const startRound = effectData.startRound || game.combats.active.current.round || 1;\n            const startTurn = effectData.startTurn || game.combats.active.current.turn || 0;\n            const rounds = effectData.rounds;\n            const turns = effectData.turns;\n\n            aeData['duration.combat'] = game.combats.active.id;\n            aeData['duration.startRound'] = startRound;\n            aeData['duration.startTurn'] = startTurn;\n            aeData['duration.rounds'] = rounds;\n            aeData['duration.turns'] = turns;\n        } else {\n            return null;\n        }\n\n        const effect = await ActiveEffect.create(aeData, {parent: effectData.token.actor});\n\n        if (options.hidden) await effect.setFlag('hm3', 'hidden', true);\n        if (options.unique) await effect.setFlag('hm3', 'unique', true);\n\n        if (options.selfDestroy) {\n            await effect.setFlag('hm3', 'selfDestroy', true);\n            await effect.setFlag(\n                'effectmacro',\n                'onDisable.script',\n                `game.hm3.macros.deleteActiveEffect('${effectData.token.id}', '${effect.id}');`\n            );\n        }\n\n        return effect;\n    });\n}\n\nlet deleteMutex = new Mutex();\n/**\n * Deletes an active effect from the token.\n * @param {string} tokenId - The id of the token\n * @param {string} effectId - The id of the active effect\n * @returns {Promise<void>}\n */\nexport async function deleteActiveEffect(tokenId, effectId) {\n    if (!tokenId || !effectId || !canvas.tokens.get(tokenId)) return;\n    // sometimes effect macros fire twice -> race condition\n    await deleteMutex.runExclusive(async () => {\n        const token = canvas.tokens.get(tokenId);\n        const effect = token?.actor?.allApplicableEffects().find((e) => e.id === effectId);\n        return effect?.delete();\n    });\n}\n\n/**\n * Creates a condition on the token.\n * @param {TokenHM3} token - The token to apply the condition to\n * @param {string} condition - The condition to apply\n * @param {Object} [conditionOptions={}] - Options for the condition\n * @param {number} [conditionOptions.numTurns=0] - Number of turns defaults to 0\n * @param {boolean} [conditionOptions.oneRoll=false] - Only one roll defaults to false\n * @param {boolean} [conditionOptions.oneRound=false] - Only one round defaults to false\n * @param {boolean} [conditionOptions.oneTurn=false] - Only one turn defaults to false\n * @param {number} [conditionOptions.outnumbered=1] - Outnumbered defaults to 1\n * @returns {Promise<HarnMasterActiveEffect>}\n */\nexport async function createCondition(token, condition, conditionOptions = {}) {\n    if (!token) return null;\n\n    conditionOptions = foundry.utils.mergeObject(\n        {\n            numTurns: 0,\n            oneRoll: false,\n            oneRound: false,\n            oneTurn: false,\n            outnumbered: 1,\n            overlay: false\n        },\n        conditionOptions\n    );\n\n    let cond, condData;\n    switch (condition) {\n        case Condition.BLINDED:\n        case Condition.DEAFENED:\n        case Condition.INCAPACITATED:\n            if (game.user.isGM) ui.notifications.info(`Condition '${condition}' not yet implemented.`);\n            return null;\n\n        // This is a special state of battle frenzy. Any character who enters this mode must take the most\n        // aggressive action available for Attack or Defense, adding 20 to EML to Attack or Counterstrike.\n        // Further Initiative rolls are ignored until the battle ends. (COMBAT 16)\n        case Condition.BERSERK:\n            condData = await berserk.createCondition(token, conditionOptions);\n            break;\n\n        // The character is unable to fight in any useful way. The only available options are flight or\n        // surrender. Flight is normally preferable; surrender is a last resort. If neither is feasible,\n        // the character makes a Rest or Pass action option, but can defend if attacked except that\n        // Counterstrike is prohibited. (COMBAT 16)\n        case Condition.BROKEN:\n            condData = await broken.createCondition(token, conditionOptions);\n            break;\n\n        // A cautious character will not Engage, must choose Pass if engaged, and cannot select the\n        // Counterstrike defense. (COMBAT 16)\n        case Condition.CAUTIOUS:\n            condData = await cautious.createCondition(token, conditionOptions);\n            break;\n\n        case Condition.CLOSE_MODE:\n            condData = await closemode.createCondition(token, conditionOptions);\n            break;\n\n        // Character tries to conclude the battle, one way or the other, as soon as possible. Until\n        // the situation changes and a new Initiative Test is passed, the character selects the most\n        // aggressive option available. (COMBAT 16)\n        case Condition.DESPERATE:\n            condData = await desperate.createCondition(token, conditionOptions);\n            break;\n\n        case Condition.DISTRACTED:\n            condData = await distracted.createCondition(token, conditionOptions);\n            break;\n\n        case Condition.DYING:\n            condData = await dying.createCondition(token, conditionOptions);\n            break;\n\n        // Character selects and executes any Action Option, with a +10 bonus to EML. If the character’s\n        // current morale state is non-normal, it returns to normal. (COMBAT 16)\n        case Condition.EMPOWERED:\n            condData = await empowered.createCondition(token, conditionOptions);\n            break;\n\n        case Condition.GRAPPLED:\n            condData = await grappled.createCondition(token, conditionOptions);\n            break;\n\n        case Condition.INANIMATE:\n            condData = await inanimate.createCondition(token, conditionOptions);\n            break;\n\n        case Condition.NO_FUMBLE:\n            condData = await nofumble.createCondition(token, conditionOptions);\n            break;\n\n        case Condition.NO_OUTNUMBERED:\n            condData = await nooutnumbered.createCondition(token, conditionOptions);\n            break;\n\n        case Condition.NO_STUMBLE:\n            condData = await nostumble.createCondition(token, conditionOptions);\n            break;\n\n        // A character is outnumbered if exclusively engaged by two or more opponents. When counting\n        // opponents for this purpose, prone enemies are excluded, as are enemies who are themselves\n        // engaged by other friendly characters. (COMBAT 11)\n        case Condition.OUTNUMBERED:\n            condData = await outnumbered.createCondition(token, conditionOptions);\n            break;\n\n        case Condition.PRONE:\n            condData = await prone.createCondition(token, conditionOptions);\n            break;\n\n        case Condition.SECONDARY_HAND:\n            condData = await secondaryhand.createCondition(token, conditionOptions);\n            break;\n\n        case Condition.SHOCKED:\n            condData = await shocked.createCondition(token, conditionOptions);\n            break;\n\n        case Condition.UNCONSCIOUS:\n            condData = await unconscious.createCondition(token, conditionOptions);\n            break;\n\n        // Character selects and executes any Action Option, with a +10 bonus to EML. If the character’s\n        // current morale state is non-normal, it returns to normal. (COMBAT 16)\n        case Condition.WEAKENED:\n            condData = await weakened.createCondition(token, conditionOptions);\n            break;\n\n        default:\n            if (game.user.isGM) ui.notifications.error(`${condition} is no valid condition.`);\n            return null;\n    }\n\n    if (!condData) {\n        if (game.user.isGM) ui.notifications.error(`Condition ${condition} could not be created.`);\n        return null;\n    }\n\n    if (condData.options.unique && token.hasCondition(condition)) {\n        if (game.user.isGM) ui.notifications.info(`HM3 | Condition ${condition} is unique and already exists.`);\n        return null;\n    }\n\n    if (condData.options.overlay) {\n        condData.effectData.flags.core = {overlay: true};\n    }\n\n    Object.keys(condData.effectData.flags?.effectmacro || {}).forEach((v) => {\n        const condMacro = condData.effectData.flags.effectmacro[v];\n        condMacro.script =\n            'let success=true;try{' +\n            condMacro.script.trim() +\n            `}catch(error){success=false;game.hm3.gmconsole('error','Error in Condition \"${condition}\" - Effect Macro \"${v}\"',error);} \n            finally{Hooks.callAllUsers('hm3.${condData.effectData.flags.hm3.uuid}', success);}`;\n        condMacro.script = utility.beautify(condMacro.script);\n    });\n\n    condData.effectData.system = {status: 'Running'};\n\n    const onCreateScript = condData.effectData.flags?.effectmacro?.onCreate?.script;\n    if (!onCreateScript || onCreateScript?.length === 0) {\n        return createActiveEffect(condData.effectData, condData.changes, condData.options);\n    } else {\n        const uuid = condData.effectData.flags.hm3.uuid;\n        const callbackPromise = new Promise((resolve, reject) => {\n            let timer;\n            Hooks.once(`hm3.${uuid}`, (success) => {\n                if (timer) clearTimeout(timer);\n                resolve(success);\n            });\n            timer = setTimeout(\n                () => reject({error: `HM3 | Timeout in 'onCreate' callback for Condition ${condition}!`, condData}),\n                5000\n            );\n        });\n\n        const res = await Promise.allSettled([\n            callbackPromise,\n            createActiveEffect(condData.effectData, condData.changes, condData.options)\n        ]);\n\n        return res[1].value;\n    }\n}\n\nexport async function deleteCondition(token, condition) {\n    if (!token || !condition || !condition?.id) return null;\n\n    if (!condition.hasDeleteMacro()) {\n        return deleteActiveEffect(token.id, condition.id);\n    } else {\n        const uuid = condition.flags.hm3.uuid;\n        const callbackPromise = new Promise((resolve, reject) => {\n            let timer;\n            Hooks.once(`hm3.${uuid}`, (success) => {\n                if (timer) clearTimeout(timer);\n                resolve(success);\n            });\n            timer = setTimeout(\n                () =>\n                    reject({error: `HM3 | Timeout in 'onDelete' callback for Condition ${condition.name}!`, condition}),\n                5000\n            );\n        });\n\n        let ret = null;\n        try {\n            ret = await Promise.allSettled([callbackPromise, deleteActiveEffect(token.id, condition.id)]);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            return ret[1].value;\n        }\n    }\n}\n\n/**\n *\n * @param {Object} injuryData\n * @param {number} [injuryData.aspect='Blunt']\n * @param {Object[]} [injuryData.flags=[]]\n * @param {number} [injuryData.healRate=0]\n * @param {number} [injuryData.injuryLevel=0]\n * @param {string} [injuryData.name]\n * @param {string} [injuryData.notes='']\n * @param {string} [injuryData.subType='healing']\n * @param {TokenHM3} [injuryData.token]\n * @param {Object} [options={}]\n * @returns {Promise<ItemHM3>}\n */\nexport async function createInjury(injuryData, options = {}) {\n    injuryData = foundry.utils.mergeObject(\n        {\n            aspect: Aspect.BLUNT,\n            flags: [],\n            healRate: 0,\n            icon: 'systems/hm3/images/icons/svg/injury.svg',\n            injuryLevel: 0,\n            name: null,\n            notes: '',\n            subType: InjuryType.HEALING, // bloodloss, disease, healing, infection, poison, shock, toxin (different healing rolls)\n            token: null\n        },\n        injuryData\n    );\n    options = foundry.utils.mergeObject({}, options); // TBD\n\n    // mandatory\n    if (!injuryData.name || !injuryData.token) {\n        console.error('HM3 | Macro \"createInjury\" needs name & token as mandatory input!');\n        return null;\n    }\n\n    let sev;\n    if (injuryData.injuryLevel === 1) sev = 'M';\n    else if (injuryData.injuryLevel <= 3) sev = 'S';\n    else sev = 'G';\n\n    const injury = await Item.create(\n        {\n            flags: injuryData.flags,\n            icon: injuryData.icon,\n            name: injuryData.name,\n            origin: injuryData.token.actor.uuid,\n            type: 'injury',\n            system: {\n                aspect: injuryData.aspect,\n                healRate: injuryData.healRate,\n                injuryLevel: injuryData.injuryLevel,\n                notes: injuryData.notes,\n                severity: sev,\n                subType: injuryData.subType\n            }\n        },\n        {parent: injuryData.token.actor}\n    );\n    injuryData.injuryId = injury.id;\n\n    // await createInjuryHelper(injuryData);\n\n    return injury;\n}\n\n/**\n *\n * @param {TokenHM3} token\n * @param {string} injuryId\n * @param {string} injuryName\n * @returns\n */\nexport async function createInjuryHelper(injuryData) {\n    const timestamp = SimpleCalendar.api.timestamp();\n\n    let startTime, scDate;\n    switch (injuryData.subType) {\n        case InjuryType.BLOODLOSS: // HR: always H6\n        case InjuryType.HEALING: // HR: varies, plus half Physician EML\n            startTime = SimpleCalendar.api.timestampPlusInterval(timestamp, {day: 5});\n            scDate = SimpleCalendar.api.timestampToDate(startTime);\n            break;\n\n        case InjuryType.DISEASE: // HR: varies\n        case InjuryType.INFECTION: // HR: varies (same as wound), plus Physician SI\n            startTime = SimpleCalendar.api.timestampPlusInterval(timestamp, {day: 1});\n            scDate = SimpleCalendar.api.timestampToDate(startTime);\n            break;\n\n        case InjuryType.POISON: // HR: varies\n        case InjuryType.TOXIN: // HR: varies\n            const minute = injuryData.minute || 5;\n            const second = injuryData.second || 0;\n            startTime = SimpleCalendar.api.timestampPlusInterval(timestamp, {minute, second});\n            break;\n\n        case InjuryType.SHOCK: // HR: always H5, plus half Physician EML\n            startTime = SimpleCalendar.api.timestampPlusInterval(timestamp, {hour: 4});\n            break;\n\n        default:\n            console.error('HM3 | Wrong injury subType.');\n            break;\n    }\n\n    // Make the healing rolls at midnight (besides poison & shock rolls)\n    if (scDate) {\n        startTime = SimpleCalendar.api.dateToTimestamp({\n            year: scDate.year,\n            month: scDate.month,\n            day: scDate.day,\n            hour: 0,\n            minute: 0,\n            seconds: 0\n        });\n    }\n\n    return createActiveEffect(\n        {\n            label: `Injury Helper (${injuryData.name})`,\n            seconds: 1,\n            startTime,\n            token,\n            type: 'GameTime',\n            flags: {\n                effectmacro: {\n                    onDelete: {\n                        script: `const token = canvas.tokens.get('${injuryData.token.id}');\nif(token.hasInjury('${injuryData.injuryId}'))\n    await game.hm3.macros.createInjuryHelper(${injuryData});`\n                    }\n                }\n            }\n        },\n        [],\n        {\n            hidden: true,\n            selfDestroy: true\n        }\n    );\n}\n\n/**\n *\n * @param {*} obj\n * @param {string} prefix\n * @returns\n */\nexport function getObjectKeys(obj, prefix) {\n    var isobject = function (x) {\n        return Object.prototype.toString.call(x) === '[object Object]';\n    };\n\n    var keys = Object.keys(obj);\n    prefix = prefix ? prefix + '.' : '';\n    return keys.reduce(function (result, key) {\n        if (isobject(obj[key])) {\n            result = result.concat(getObjectKeys(obj[key], prefix + key));\n        } else {\n            result.push(prefix + key);\n        }\n        return result;\n    }, []);\n}\n\nexport function rollObject(formula, options = {}) {\n    return new RollHM3(formula, {}, options);\n}\n\nexport async function rollObjectEvaluatedAsync(formula, options = {}) {\n    return rollObject(formula, options).evaluate();\n}\n\nexport async function rollResultAsync(formula, options = {}) {\n    return (await rollObjectEvaluatedAsync(formula, options)).total;\n}\n\n/**\n * Returns the between 5 (always success) and 95 (always a failure) clamped value.\n * @param {number} value - The value to be clamped.\n * @returns The clamped value.\n */\nexport function HM100Check(value) {\n    return Math.max(Math.min(Math.round(value), 95), 5);\n}\n\nvar g;\nexport async function drawDebugPoint(p) {\n    // g = new PIXI.Graphics();\n    // game.canvas.addChild(g);\n    // g.zIndex = -1;\n    // g.beginFill(0xff0000, 1.0).drawCircle(p.x, p.y, 16);\n    // const c = new PIXI.Circle(p.x, p.y, 6);\n    // const dl = game.canvas.getLayerByEmbeddedName('Drawing');\n    // const shape = new foundry.data.RectangleShapeData({x: p.x, y: p.y, width: 5, height: 5});\n    // const rs = foundry.canvas.regios.RegionShape.create({data: shape});\n    // // const shape = new foundry.data.CircleShapeData({x: p.x, y: p.y, radius: 5});\n    // const data = [{x: p.x, y: p.y, fillColor: '#ffffff', shape}];\n    // const dd = await DrawingDocument.create(data);\n    // const d = dl.createObject(dd);\n    return;\n}\n\n/**\n * Checks if the token can perform a TA (Tactical Advantage) of the given type.\n * @param {TokenHM3} token - The token to check\n * @returns {boolean} - True if the TA is possible, false otherwise\n */\nexport async function isTAPossible(token) {\n    if (!token) return true;\n\n    const cautious = token.hasCondition(Condition.CAUTIOUS);\n    const distracted = token.hasCondition(Condition.DISTRACTED);\n    const unconscious = token.hasCondition(Condition.UNCONSCIOUS);\n\n    return !cautious && !distracted && !unconscious && (await game.hm3.socket.executeAsGM('isFirstTA'));\n}\n\nexport async function updateOverlay(token) {\n    let condition = null;\n\n    if (token.hasCondition(Condition.DYING)) {\n        condition = token.getCondition(Condition.DYING);\n        if (condition.testUserPermission(game.user, 'OWNER')) await condition.setFlag('core', 'overlay', true);\n    } else if (token.hasCondition(Condition.UNCONSCIOUS)) {\n        condition = token.getCondition(Condition.UNCONSCIOUS);\n        if (condition.testUserPermission(game.user, 'OWNER')) await condition.setFlag('core', 'overlay', true);\n    } else if (token.hasCondition(Condition.SHOCKED)) {\n        condition = token.getCondition(Condition.SHOCKED);\n        if (condition.testUserPermission(game.user, 'OWNER')) await condition.setFlag('core', 'overlay', true);\n    } else if (token.hasCondition(Condition.PRONE)) {\n        condition = token.getCondition(Condition.PRONE);\n        if (condition.testUserPermission(game.user, 'OWNER')) await condition.setFlag('core', 'overlay', true);\n    }\n\n    return condition;\n}\n","// const UNCONSCIOUS_ICON = 'systems/hm3/images/icons/svg/shock.svg';\r\n\r\n/**\r\n *\r\n * @param {TokenHM3} token\r\n * @param {Object} [options={}] - Options for the condition\r\n * @param {boolean} [options.oneRoll=false] - Only one roll defaults to false\r\n * @param {boolean} [options.oneRound=false] - Only one round defaults to false\r\n * @param {boolean} [options.oneTurn=false] - Only one turn defaults to false\r\n * @param {number} [options.outnumbered=1] - Outnumbered defaults to 1\r\n * @returns\r\n */\r\nexport async function createCondition(token, options = {}) {\r\n    if (!token) return false;\r\n\r\n    // Inanimate creatures cannot get unconscious\r\n    if (token.hasCondition(game.hm3.Condition.INANIMATE)) return false;\r\n\r\n    const CONDITION = game.hm3.Condition.UNCONSCIOUS;\r\n    console.info(`HM3 | Creating condition: ${CONDITION} for token: ${token.name}`, options);\r\n\r\n    const uuid = foundry.utils.randomID();\r\n\r\n    const ON_CREATE_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nawait token.deleteAllMoraleConditions();\r\nawait token.addCondition(game.hm3.Condition.PRONE);\r\nconst almostDying = !token.player && token.actor.system.shockIndex.value < game.hm3.CONST.COMBAT.SHOCK_INDEX_THRESHOLD;\r\nif (almostDying) {\r\n    await token.combatant?.update({defeated: true});\r\n    await game.hm3.GmSays({\r\n        text: '<b>' + token.name + '</b> is <b>Defeated</b> due to <b>Too Many Wounds</b>.',\r\n        source: 'House Rule',\r\n        token\r\n    });\r\n} else if (!token.dying) {\r\n    await game.hm3.GmSays({\r\n        text:\r\n            'Overwhelmed by pain, blood loss, and exhaustion, <b>' +\r\n            token.name +\r\n            '</b> collapses unconscious onto the battlefield, falling <b>Prone</b> amidst the chaos.',\r\n        source: 'Combat 14',\r\n        token\r\n    });\r\n}\r\nconsole.info('HM3 | Condition: ${CONDITION} created for token: ${token.name}');\r\n`;\r\n\r\n    const ON_TURN_START_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nif (token.dying || token.combatant.isDefeated) return;\r\nawait game.hm3.GmSays({\r\n    text: '<b>' + token.name + '</b> needs a successful <b>Shock</b> roll to regain consciousness.',\r\n    source: 'Combat 14',\r\n    gmonly: !token.player,\r\n    token\r\n});\r\nconst success = (await game.hm3.macros.shockRoll(!token.player, token.actor, token, 1)).isSuccess;\r\nif (success) {\r\n    // Combatant regains consciousness\r\n    await game.hm3.GmSays({\r\n        text:\r\n            '<b>' +\r\n            token.name +\r\n            '</b> regains consciousness and starts coming back to full senses, though stability remains uncertain. Another <b>Shock Roll</b> is needed.',\r\n        source: 'Combat 14',\r\n        token\r\n    });\r\n    token.disableCondition('${CONDITION}', 500); // postpone a bit\r\n} else {\r\n    // Combatant stays unconscious\r\n    await game.hm3.GmSays({\r\n        text: '<b>' + token.name + '</b> stays unconscious. <b>Turn ends.</b>',\r\n        source: 'Combat 14',\r\n        token\r\n    });\r\n    await token.turnEnds();\r\n}\r\n`;\r\n\r\n    // On disable (regain consciousness), make a last SHOCK roll (SKILLS 22, COMBAT 14)\r\n    const ON_DISABLE_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\nif (!game.combat?.started && !token.player) return;\r\nconst ok = (await game.hm3.macros.shockRoll(!token.player, token.actor, token, 2)).isSuccess;\r\nawait token.deleteCondition('${CONDITION}');\r\nif (ok) {\r\n    // Combatant is back\r\n    await game.hm3.GmSays({\r\n        text: '<b>' + token.name + '</b> regains consciousness and resumes functioning normally. <b>Turn Ends.</b>',\r\n        source: 'Combat 14'\r\n    });\r\n    await token.turnEnds();\r\n} else {\r\n    // Combatant is now SHOCKED\r\n    await token.addCondition(game.hm3.Condition.SHOCKED);\r\n}\r\n`;\r\n\r\n    const ON_DELETE_MACRO = `\r\nconst token = canvas.tokens.get('${token.id}');\r\nif (!token) return;\r\ngame.hm3.macros.updateOverlay(token);\r\nconsole.info(\"HM3 | Condition: ${CONDITION} deleted for token: ${token.name}\");\r\n`;\r\n\r\n    return {\r\n        effectData: {\r\n            label: CONDITION,\r\n            token,\r\n            icon: CONFIG.statusEffects.find((e) => e.id === 'unconscious').img, // UNCONSCIOUS_ICON\r\n            type: 'GameTime',\r\n            seconds: await game.hm3.macros.rollResultAsync(`2d6 * ${game.hm3.CONST.TIME.MINUTE}`), // 2d6 minutes\r\n            flags: {\r\n                effectmacro: {\r\n                    onCreate: {script: ON_CREATE_MACRO},\r\n                    onTurnStart: {script: ON_TURN_START_MACRO},\r\n                    onDisable: {script: ON_DISABLE_MACRO},\r\n                    onDelete: {script: ON_DELETE_MACRO}\r\n                },\r\n                hm3: {uuid}\r\n            }\r\n        },\r\n        changes: [],\r\n        options: {overlay: !token.hasCondition(game.hm3.Condition.DYING), unique: true}\r\n    };\r\n}\r\n","import {DiceHM3} from '../../hm3-dice';\r\nimport {ItemType} from '../../hm3-types';\r\nimport {callOnHooks} from '../../macros';\r\nimport {HM100Check, truncate} from '../../utility';\r\n\r\nexport class ActorProxy {\r\n    constructor(actor) {\r\n        this._actor = actor;\r\n    }\r\n\r\n    get actor() {\r\n        return this._actor;\r\n    }\r\n    get id() {\r\n        return this._actor.id;\r\n    }\r\n    get img() {\r\n        return this._actor.img;\r\n    }\r\n    get link() {\r\n        return this._actor.link;\r\n    }\r\n    get macrolist() {\r\n        return this._actor.macrolist\r\n            .map((m) => {\r\n                m.trigger = game.macros.get(m.id)?.getFlag('hm3', 'trigger');\r\n                m.ownerId = game.macros.get(m.id)?.getFlag('hm3', 'ownerId'); // currently not needed\r\n                return m;\r\n            })\r\n            .sort((a, b) =>\r\n                a?.name.toLowerCase() > b?.name.toLowerCase()\r\n                    ? 1\r\n                    : b?.name.toLowerCase() > a?.name.toLowerCase()\r\n                    ? -1\r\n                    : 0\r\n            );\r\n    }\r\n    get name() {\r\n        return this._actor.name;\r\n    }\r\n    get proxies() {\r\n        return this._actor.proxies;\r\n    }\r\n    get type() {\r\n        return this._actor.type;\r\n    }\r\n    get subtype() {\r\n        return this._actor.subtype;\r\n    }\r\n    get uuid() {\r\n        return this._actor.uuid;\r\n    }\r\n\r\n    //\r\n    // System Stats\r\n    //\r\n\r\n    get bioImage() {\r\n        return this._actor.system.bioImage;\r\n    }\r\n    get description() {\r\n        return this._actor.system.description;\r\n    }\r\n    get hasDescription() {\r\n        return this.description && this.description.length > 0;\r\n    }\r\n\r\n    //\r\n    // Derived Stats\r\n    //\r\n\r\n    get totalArmorWeight() {\r\n        return truncate(\r\n            this.proxies\r\n                .filter((item) => item.type === ItemType.ARMORGEAR && item.isCarried)\r\n                .reduce((partialSum, item) => partialSum + item.quantity * item.weight, 0)\r\n        );\r\n    }\r\n\r\n    get totalMiscGearWeight() {\r\n        return truncate(\r\n            this.proxies\r\n                .filter(\r\n                    (item) =>\r\n                        (item.type === ItemType.MISCGEAR || item.type === ItemType.CONTAINERGEAR) && item.isCarried\r\n                )\r\n                .reduce((partialSum, item) => partialSum + item.quantity * item.weight, 0)\r\n        );\r\n    }\r\n\r\n    get totalMissileWeight() {\r\n        return truncate(\r\n            this.proxies\r\n                .filter((item) => item.type === ItemType.MISSILEGEAR && item.isCarried)\r\n                .reduce((partialSum, item) => partialSum + item.quantity * item.weight, 0)\r\n        );\r\n    }\r\n\r\n    get totalWeaponWeight() {\r\n        return truncate(\r\n            this.proxies\r\n                .filter((item) => item.type === ItemType.WEAPONGEAR && item.isCarried)\r\n                .reduce((partialSum, item) => partialSum + item.quantity * item.weight, 0)\r\n        );\r\n    }\r\n\r\n    get totalGearWeight() {\r\n        return truncate(\r\n            this.totalArmorWeight + this.totalMiscGearWeight + this.totalMissileWeight + this.totalWeaponWeight\r\n        );\r\n    }\r\n\r\n    Skill(name) {\r\n        return this.proxies.find(\r\n            (item) => item.type === ItemType.SKILL && item.name.toLowerCase().includes(name.toLowerCase())\r\n        );\r\n    }\r\n\r\n    activateListeners(html) {\r\n        let visited = {};\r\n        this.proxies.forEach((element) => {\r\n            if (!visited[element.cls]) {\r\n                element.activateListeners(html);\r\n                visited[element.cls] = true;\r\n            }\r\n        });\r\n        visited = {};\r\n\r\n        html.off('click', '.ability-d6-roll');\r\n        html.on('click', '.ability-d6-roll', async (ev) => {\r\n            const ability = ev.currentTarget.dataset.ability;\r\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\r\n            const target = this[ability].effective;\r\n\r\n            const stdRollData = {\r\n                fastforward,\r\n                label: `3d6 ${ability[0].toUpperCase()}${ability.slice(1)} Roll`,\r\n                numdice: 3,\r\n                skill: `${ability[0].toUpperCase()}${ability.slice(1)}`,\r\n                speaker: ChatMessage.getSpeaker({actor: this.actor}),\r\n                target,\r\n                type: `${ability}-d6`\r\n            };\r\n\r\n            if (this.actor.isToken) stdRollData.token = this.actor.token.id;\r\n            else stdRollData.actor = this.actor.id;\r\n\r\n            const hooksOk = Hooks.call('hm3.preAbilityRollD6', stdRollData, this.actor);\r\n            if (hooksOk) {\r\n                const result = await DiceHM3.d6Roll(stdRollData);\r\n                if (result) callOnHooks('hm3.onAbilityRollD6', result, result, stdRollData);\r\n                return result;\r\n            }\r\n            return null;\r\n        });\r\n\r\n        html.off('click', '.ability-d100-roll');\r\n        html.on('click', '.ability-d100-roll', async (ev) => {\r\n            const ability = ev.currentTarget.dataset.ability;\r\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\r\n            const effSkillBase = this[ability].effective;\r\n\r\n            const stdRollData = {\r\n                effSkillBase,\r\n                fastforward,\r\n                isAbility: true,\r\n                label: `1d100 ${ability[0].toUpperCase()}${ability.slice(1)} Roll`,\r\n                multiplier: 5,\r\n                skill: `${ability[0].toUpperCase()}${ability.slice(1)}`,\r\n                speaker: ChatMessage.getSpeaker({actor: this.actor}),\r\n                target: HM100Check(effSkillBase * 5),\r\n                type: `${ability}-d100`\r\n            };\r\n\r\n            if (this.actor.isToken) stdRollData.token = this.actor.token.id;\r\n            else stdRollData.actor = this.actor.id;\r\n\r\n            const hooksOk = Hooks.call('hm3.preAbilityRollD100', stdRollData, this.actor);\r\n            if (hooksOk) {\r\n                const result = await DiceHM3.d100StdRoll(stdRollData);\r\n                if (result) callOnHooks('hm3.onAbilityRollD100', this.actor, result, stdRollData);\r\n                return result;\r\n            }\r\n            return null;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method searches through all the active effects on this actor and applies\r\n     * only that active effect whose key matches the specified 'property' value.\r\n     *\r\n     * The purpose is to allow an active effect to be applied after normal active effect\r\n     * processing is complete.\r\n     *\r\n     * @param {String} property The Actor data model property to apply\r\n     * @param {number} value\r\n     */\r\n    applySpecificActiveEffect(property, value) {\r\n        const overrides = {};\r\n        foundry.utils.setProperty(this.actor, property, value);\r\n\r\n        // Organize non-disabled effects by their application priority\r\n        const changes = this.actor.allApplicableEffects(true).reduce((chgs, e) => {\r\n            if (!e.active) return chgs;\r\n            const chgList = e.changes.filter((chg) => chg.key === property);\r\n            return chgs.concat(\r\n                chgList.map((c) => {\r\n                    c = foundry.utils.duplicate(c);\r\n                    c.effect = e;\r\n                    c.priority = c.priority ?? c.mode * 10;\r\n                    return c;\r\n                })\r\n            );\r\n        }, []);\r\n        changes.sort((a, b) => a.priority - b.priority);\r\n\r\n        // Apply all changes\r\n        for (let change of changes) {\r\n            change.effect.apply(this.actor, change);\r\n            const result = this.roundChange(this.actor, change);\r\n            if (result !== null) overrides[change.key] = result;\r\n        }\r\n\r\n        // Expand the set of final overrides\r\n        // foundry.utils.mergeObject(this.overrides, foundry.utils.expandObject(overrides));\r\n        return Math.max(Math.round(overrides[property] ?? value), 0);\r\n    }\r\n\r\n    roundChange(item, change) {\r\n        const current = foundry.utils.getProperty(item, change.key) ?? null;\r\n        const ct = foundry.utils.getType(current);\r\n        if (ct === 'number' && !Number.isInteger(current)) {\r\n            const update = Math.round(current + Number.EPSILON);\r\n            foundry.utils.setProperty(item, change.key, update);\r\n            return update;\r\n        } else {\r\n            return current;\r\n        }\r\n    }\r\n}\r\n","import {Condition, ItemType} from '../../hm3-types';\r\nimport {HM6Check, truncate} from '../../utility';\r\nimport {ActorHM3} from '../actor';\r\nimport {ActorProxy} from './actor-proxy';\r\n\r\nexport class LivingProxy extends ActorProxy {\r\n    get biography() {\r\n        return this._actor.system.biography;\r\n    }\r\n    get damageDie() {\r\n        return 6;\r\n    }\r\n    get dodge() {\r\n        return (\r\n            this._actor.system.v2.dodge ??\r\n            this.applySpecificActiveEffect('system.v2.dodge', this.Skill('Dodge')?.EML ?? 0)\r\n        );\r\n    }\r\n    get fatigue() {\r\n        return this._actor.system.fatigue ?? 0;\r\n    }\r\n    get gender() {\r\n        return this._actor.system.gender ?? 'Male';\r\n    }\r\n    get initiative() {\r\n        return (\r\n            this._actor.system.v2.initiative ??\r\n            this.applySpecificActiveEffect('system.v2.initiative', this.Skill('Initiative')?.EML ?? 0)\r\n        );\r\n    }\r\n    get load() {\r\n        return truncate(this.totalGearWeight, 0);\r\n    }\r\n    get loadRating() {\r\n        return this._actor.system.loadRating ?? 0;\r\n    }\r\n    get mounted() {\r\n        return this._actor.system.mounted ?? false;\r\n    }\r\n    get move() {\r\n        return this._calcAbility('system.move', true);\r\n    }\r\n    get shockIndex() {\r\n        return {\r\n            value: this.isInanimate\r\n                ? Math.max(100 - Math.round(100 * (this.IP / this.endurance)), 0)\r\n                : ActorHM3.normProb(this.endurance, this.UP * 3.5, this.UP),\r\n            max: 100\r\n        };\r\n    }\r\n    get size() {\r\n        return this._actor.system.size || 6;\r\n    }\r\n    get species() {\r\n        return this._actor.system.species;\r\n    }\r\n\r\n    //\r\n    // Abilities\r\n    //\r\n    get strength() {\r\n        return this._calcAbility('system.abilities.strength', true);\r\n    }\r\n    get stamina() {\r\n        return this._calcAbility('system.abilities.stamina', true);\r\n    }\r\n    get dexterity() {\r\n        return this._calcAbility('system.abilities.dexterity', true);\r\n    }\r\n    get agility() {\r\n        return this._calcAbility('system.abilities.agility', true);\r\n    }\r\n    get intelligence() {\r\n        return this._calcAbility('system.abilities.intelligence', false);\r\n    }\r\n    get aura() {\r\n        return this._calcAbility('system.abilities.aura', false);\r\n    }\r\n    get will() {\r\n        return this._calcAbility('system.abilities.will', false);\r\n    }\r\n    get eyesight() {\r\n        return this._calcAbility('system.abilities.eyesight', false);\r\n    }\r\n    get hearing() {\r\n        return this._calcAbility('system.abilities.hearing', false);\r\n    }\r\n    get smell() {\r\n        return this._calcAbility('system.abilities.smell', false);\r\n    }\r\n    get voice() {\r\n        return this._calcAbility('system.abilities.voice', false);\r\n    }\r\n    get comeliness() {\r\n        return this._calcAbility('system.abilities.comeliness', null);\r\n    }\r\n    get morality() {\r\n        return this._calcAbility('system.abilities.morality', null);\r\n    }\r\n    get STR() {\r\n        return this.strength.effective;\r\n    }\r\n    get STA() {\r\n        return this.stamina.effective;\r\n    }\r\n    get DEX() {\r\n        return this.dexterity.effective;\r\n    }\r\n    get AGL() {\r\n        return this.agility.effective;\r\n    }\r\n    get INT() {\r\n        return this.intelligence.effective;\r\n    }\r\n    get AUR() {\r\n        return this.aura.effective;\r\n    }\r\n    get WIL() {\r\n        return this.will.effective;\r\n    }\r\n    get EYE() {\r\n        return this.eyesight.effective;\r\n    }\r\n    get HRG() {\r\n        return this.hearing.effective;\r\n    }\r\n    get SML() {\r\n        return this.smell.effective;\r\n    }\r\n    get VOI() {\r\n        return this.voice.effective;\r\n    }\r\n    get CML() {\r\n        return this.comeliness.effective;\r\n    }\r\n    get MOR() {\r\n        return this.morality.effective;\r\n    }\r\n    get END() {\r\n        return this.endurance;\r\n    }\r\n    get MOV() {\r\n        return this.move.effective;\r\n    }\r\n\r\n    //\r\n    // Derived Stats\r\n    //\r\n\r\n    // Maximum weight carried\r\n    get capacity() {\r\n        return {max: this.loadRating + this.endurance * 10, value: this.totalGearWeight};\r\n    }\r\n    // Endurance\r\n    get endurance() {\r\n        const ML = this.Skill('Condition')?.ML;\r\n        return (\r\n            this._actor.system.v2.endurance ??\r\n            this.applySpecificActiveEffect(\r\n                'system.v2.endurance',\r\n                Math.round(ML ? ML / 5 : (this.strength.base + this.stamina.base + this.will.base) / 3)\r\n            )\r\n        );\r\n    }\r\n    // Encumbrance\r\n    get encumbrance() {\r\n        return Math.floor(Math.max(this.totalGearWeight - this.loadRating, 0) / this.END);\r\n    }\r\n    // Encumbrance Penalty\r\n    get EP() {\r\n        return (\r\n            this._actor.system.v2.encumbrancePenalty ??\r\n            this.applySpecificActiveEffect(\r\n                'system.v2.encumbrancePenalty',\r\n                this.mounted ? Math.round(this.encumbrance / 2) : this.encumbrance\r\n            )\r\n        );\r\n    }\r\n    // Fatigue Penalty\r\n    get FP() {\r\n        return (\r\n            this._actor.system.v2.fatiguePenalty ??\r\n            (this.isInanimate\r\n                ? 0\r\n                : this.applySpecificActiveEffect(\r\n                      'system.v2.fatiguePenalty',\r\n                      this.mounted ? Math.round(this.fatigue / 2) : this.fatigue\r\n                  ))\r\n        );\r\n    }\r\n    // Injury Penalty\r\n    get IP() {\r\n        return (\r\n            this._actor.system.v2.injuryPenalty ??\r\n            (this.isInanimate\r\n                ? 0\r\n                : this.applySpecificActiveEffect(\r\n                      'system.v2.injuryPenalty',\r\n                      this.proxies\r\n                          .filter((item) => item.type === ItemType.INJURY)\r\n                          .reduce((partialSum, item) => partialSum + item.IL, 0)\r\n                  ))\r\n        );\r\n    }\r\n    // Universal Penalty\r\n    get UP() {\r\n        return (\r\n            this._actor.system.v2.universalPenalty ??\r\n            this.applySpecificActiveEffect('system.v2.universalPenalty', this.IP + this.FP)\r\n        );\r\n    }\r\n    // Physical Penalty\r\n    get PP() {\r\n        return (\r\n            this._actor.system.v2.physicalPenalty ??\r\n            this.applySpecificActiveEffect('system.v2.physicalPenalty', this.UP + this.EP)\r\n        );\r\n    }\r\n\r\n    get hasSteed() {\r\n        return !!this.Skill('Riding')?.actorUuid;\r\n    }\r\n\r\n    get steed() {\r\n        return this.hasSteed ? fromUuidSync(this.Skill('Riding').actorUuid) : null;\r\n    }\r\n\r\n    get containers() {\r\n        // Setup the fake container entry for \"On Person\" container\r\n        const containers = {\r\n            'on-person': {\r\n                'name': 'On Person',\r\n                'type': ItemType.CONTAINERGEAR,\r\n\r\n                'container': 'on-person',\r\n                'collapsed': this.actor.getFlag('hm3', 'onPersonContainerCollapsed') || false,\r\n                'capacity': {\r\n                    'max': this.capacity.max,\r\n                    'value': this.capacity.value\r\n                }\r\n            }\r\n        };\r\n\r\n        this.proxies.forEach((item) => {\r\n            if (item.type === ItemType.CONTAINERGEAR) {\r\n                containers[item.id] = item;\r\n            }\r\n        });\r\n\r\n        return containers;\r\n    }\r\n\r\n    //\r\n    // Conditions\r\n    //\r\n    get isInanimate() {\r\n        return this.actor.hasCondition(Condition.INANIMATE);\r\n    }\r\n\r\n    _calcAbility(ability, isPhysical) {\r\n        const ctx = this;\r\n        const prop = foundry.utils.getProperty(this._actor, ability)?.base || 0;\r\n        let v2Ability = ability.replace('abilities', 'v2');\r\n        if (v2Ability === 'system.move') v2Ability = 'system.v2.move';\r\n        const value = foundry.utils.getProperty(v2Ability);\r\n        return {\r\n            get base() {\r\n                return prop;\r\n            },\r\n            get effective() {\r\n                return (\r\n                    value ??\r\n                    ctx.applySpecificActiveEffect(\r\n                        v2Ability,\r\n                        HM6Check(prop - (isPhysical === null ? 0 : isPhysical ? ctx.PP : ctx.UP))\r\n                    )\r\n                );\r\n            }\r\n        };\r\n    }\r\n}\r\n","import {LivingProxy} from './living-proxy';\r\n\r\nexport class CharacterProxy extends LivingProxy {\r\n    get culture() {\r\n        return this._actor.system.culture;\r\n    }\r\n    get frame() {\r\n        return this._actor.system.frame;\r\n    }\r\n    get heigth() {\r\n        return this._actor.system.heigth;\r\n    }\r\n    get occupation() {\r\n        return this._actor.system.occupation;\r\n    }\r\n    get socialClass() {\r\n        return this._actor.system.socialClass;\r\n    }\r\n    get species() {\r\n        return super.species || 'Human';\r\n    }\r\n    get sunsign() {\r\n        return this._actor.system.sunsign;\r\n    }\r\n    get weight() {\r\n        return this._actor.system.weight;\r\n    }\r\n}\r\n","import {ItemType} from '../../hm3-types';\r\nimport {ActorProxy} from './actor-proxy';\r\n\r\nexport class ContainerProxy extends ActorProxy {\r\n    get capacity() {\r\n        const max = this._actor.system.capacity.max;\r\n        const value = this.totalGearWeight;\r\n        let pct = Math.round(((max - value) / (max || 1)) * 100);\r\n        pct = Math.max(Math.min(pct, 100), 0); // ensure value is between 0 and 100 inclusive)\r\n\r\n        return {max, pct, value};\r\n    }\r\n\r\n    get containers() {\r\n        // Setup the fake container entry for \"Content\" container\r\n        const containers = {\r\n            'on-person': {\r\n                'name': 'Content',\r\n                'type': ItemType.CONTAINERGEAR,\r\n                'container': 'on-person',\r\n                'collapsed': this.actor.getFlag('hm3', 'onPersonContainerCollapsed') || false,\r\n                'capacity': {\r\n                    'max': this.capacity.max,\r\n                    'value': this.capacity.value\r\n                }\r\n            }\r\n        };\r\n\r\n        this.proxies.forEach((item) => {\r\n            if (item.type === ItemType.CONTAINERGEAR) {\r\n                containers[item.id] = item;\r\n            }\r\n        });\r\n\r\n        return containers;\r\n    }\r\n}\r\n","import {LivingProxy} from './living-proxy';\r\n\r\nexport class CreatureProxy extends LivingProxy {\r\n    get damageDie() {\r\n        return this.size;\r\n    }\r\n}\r\n","import {HM3} from '../config.js';\nimport {DiceHM3} from '../hm3-dice.js';\nimport {ActorType, CompanionType, Condition, ItemType, SkillType} from '../hm3-types.js';\nimport * as macros from '../macros.js';\nimport * as utility from '../utility.js';\nimport {CharacterProxy} from './proxies/character-proxy.js';\nimport {ContainerProxy} from './proxies/container-proxy.js';\nimport {CreatureProxy} from './proxies/creature-proxy.js';\n\nfunction createCachingHandler(api, name) {\n    const cache = new Map();\n    const cacheTTL = 200; // [ms]\n\n    return new Proxy(api, {\n        get(target, property, receiver) {\n            if (typeof target[property] === 'function') return Reflect.get(target, property);\n\n            const now = Date.now();\n\n            // Check if we have a valid cached response\n            if (cache.has(property)) {\n                const {data, timestamp} = cache.get(property);\n\n                // If the cache is still fresh, use it\n                if (now - timestamp < cacheTTL) {\n                    console.info(`HM3 | Using cached data for actor ${name} ${property} by ${target[property]}`);\n                    return data;\n                } else {\n                    console.info(`HM3 | Cache expired for ${property}`);\n                }\n            }\n\n            // Otherwise, call the actual API\n            console.info(`HM3 | Fetching data for actor ${name} ${property} by ${target[property]}`);\n            const data = Reflect.get(target, property);\n\n            // Cache the response\n            cache.set(property, {\n                data,\n                timestamp: now\n            });\n\n            return data;\n        }\n    });\n}\n\n/**\n * Extend the base Actor by defining a custom roll data structure which is ideal for the Simple system.\n * @extends {Actor}\n */\nexport class ActorHM3 extends Actor {\n    static _proxyMap = new Map();\n\n    get proxy() {\n        if (!ActorHM3._proxyMap.has(this.uuid)) {\n            let aproxy = null;\n            switch (this.type) {\n                case ActorType.CHARACTER:\n                    aproxy = new CharacterProxy(this);\n                    break;\n                case ActorType.CONTAINER:\n                    aproxy = new ContainerProxy(this);\n                    break;\n                case ActorType.CREATURE:\n                    aproxy = new CreatureProxy(this);\n                    break;\n            }\n\n            // aproxy = createCachingHandler(aproxy, this.name);\n            ActorHM3._proxyMap.set(this.uuid, aproxy);\n        }\n\n        return ActorHM3._proxyMap.get(this.uuid);\n    }\n\n    get proxies() {\n        return this.items.contents.map((item) => {\n            return item.proxy;\n        });\n    }\n\n    get macrolist() {\n        return game.macros.contents.filter((m) => m.getFlag('hm3', 'ownerId') === this.id) || [];\n    }\n\n    get macrofolder() {\n        return game.folders.get(game.settings.get('hm3', 'actorMacrosFolderId')) || null;\n    }\n\n    get player() {\n        return game.users.find((u) => !u.isGM && this.testUserPermission(u, 'OWNER')) || null;\n    }\n\n    /**\n     * Mainly for the Party Sheet module.\n     */\n    get subtype() {\n        if (!!this.player && this.type === ActorType.CHARACTER) return 'pc';\n        else if (this.type === ActorType.CHARACTER) return 'npc';\n        else return this.type;\n    }\n\n    get skillImprovement() {\n        return !!this.player || !!this.getFlag('hm3', 'SkillImprovement');\n    }\n\n    pronoun(capital = false) {\n        const p = () => {\n            if (!this.system.gender) return 'It';\n            return this.system.gender === 'Male' ? 'His' : 'Her';\n        };\n        return capital ? p() : p().toLowerCase();\n    }\n\n    hasLinkedSteed() {\n        const riding = this.items.find((item) => item.type === ItemType.SKILL && item.name.includes('Riding'));\n        return !!riding && !!riding.system.actorUuid;\n    }\n\n    getSteeds() {\n        const steeds = this.items.contents.filter(\n            (item) => item.type === ItemType.COMPANION && item.system.type === CompanionType.STEED\n        );\n        return steeds.map((steed) => {\n            return fromUuidSync(steed.system.actorUuid);\n        });\n    }\n\n    getParty() {\n        const party = this.items.contents.filter(\n            (item) => item.type === ItemType.COMPANION && item.system.type === CompanionType.PARTY\n        );\n        return [\n            this,\n            ...party.map((party) => {\n                return fromUuidSync(party.system.actorUuid);\n            })\n        ];\n    }\n\n    getPartySkills(skill) {\n        const party = this.getParty();\n        return party\n            .map((p) => {\n                return p.items.getName(skill);\n            })\n            .filter((p) => !!p)\n            .sort((a, b) => b.system.effectiveMasteryLevel - a.system.effectiveMasteryLevel);\n    }\n\n    /**\n     * The original FVTT return of the applicable effects does not take the permissions into account.\n     * With this implementation, a player must have at least LIMITED permission to see the active effect.\n     * @override\n     * @param {boolean} [override=false]\n     * @returns\n     */\n    allApplicableEffects(override = false) {\n        override ||= !game.settings.get('hm3', 'activeEffectPermissions');\n\n        const effects = [];\n        for (const effect of super.allApplicableEffects()) {\n            if (override) {\n                effects.push(effect);\n            } else {\n                const hidden = effect.hidden && !game.user.isGM;\n                if (effect.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED) && !hidden) {\n                    effects.push(effect);\n                }\n            }\n        }\n\n        return effects;\n    }\n\n    /**\n     *\n     * @param {Condition} condition\n     * @returns\n     */\n    hasCondition(condition) {\n        return macros.hasActiveEffect(this, condition, condition === Condition.OUTNUMBERED ? false : true);\n    }\n\n    /**\n     *\n     * @param {Condition} condition\n     * @returns\n     */\n    getCondition(condition) {\n        return macros.getActiveEffect(this, condition, condition === Condition.OUTNUMBERED ? false : true);\n    }\n\n    static defaultName({type, parent, pack} = {}) {\n        const documentName = this.metadata.name;\n        let collection;\n        if (parent) collection = parent.getEmbeddedCollection(documentName);\n        else if (pack) collection = game.packs.get(pack);\n        else collection = game.collections.get(documentName);\n        const takenNames = new Set();\n        for (const document of collection) takenNames.add(document.name);\n        const baseName = CONFIG.Actor.typeLabels[type] ? CONFIG.Actor.typeLabels[type] : type;\n        let name = baseName;\n        let index = 1;\n        while (takenNames.has(name)) name = `${baseName} (${++index})`;\n        return name;\n    }\n\n    static async createDialog(data = {}, {parent = null, pack = null, types, ...options} = {}) {\n        if (this.hasTypeData && types) {\n            if (types.length === 0) throw new Error('The array of sub-types to restrict to must not be empty');\n            for (const type of types) {\n                if (type === CONST.BASE_DOCUMENT_TYPE || !this.TYPES.includes(type)) {\n                    throw new Error(`Invalid ${this.documentName} sub-type: \"${type}\"`);\n                }\n            }\n        }\n\n        // Collect data\n        const documentTypes = this.TYPES.filter((t) => t !== CONST.BASE_DOCUMENT_TYPE && types?.includes(t) !== false);\n        let collection;\n        if (!parent) {\n            if (pack) collection = game.packs.get(pack);\n            else collection = game.collections.get(this.documentName);\n        }\n        const folders = collection?._formatFolderSelectOptions() ?? [];\n        const label = game.i18n.localize(this.metadata.label);\n        const title = game.i18n.format('DOCUMENT.Create', {type: label});\n        let defaultType = CONFIG[this.documentName]?.defaultType;\n        if (!defaultType || types?.includes(defaultType) === false) defaultType = documentTypes[0];\n        const type = data.type || defaultType;\n\n        // Render the document creation form\n        const html = await renderTemplate(`templates/sidebar/document-create.html`, {\n            folders,\n            name: data.name || '',\n            defaultName: this.implementation.defaultName({type, parent, pack}),\n            folder: data.folder,\n            hasFolders: folders.length > 1,\n            type,\n            types: Object.fromEntries(\n                documentTypes\n                    .map((t) => {\n                        const label = CONFIG[this.documentName]?.typeLabels?.[t] ?? t;\n                        return [t, game.i18n.has(label) ? game.i18n.localize(label) : t];\n                    })\n                    .sort((a, b) => a[1].localeCompare(b[1], game.i18n.lang))\n            ),\n            hasTypes: this.hasTypeData,\n            content: `<div class=\"form-group\">\n            <label for=\"initDefaults\" class=\"init-checkbox\">Initialize default skills &amp; locations</label>\n            <input type=\"checkbox\" id=\"initDefaults\" name=\"initDefaults\" checked />\n            </div>\n            <div class=\"form-group\">\n            <label for=\"locations\" class=\"location-dropdown\">Locations</label>\n            <select name=\"locations\" id=\"locations\">\n              <option value=\"default-humanoid\">Default Humanoid</option>\n              <option value=\"simplified-humanoid\">Simplified Humanoid</option>\n              <option value=\"default-horse\">Default Horse</option>\n              <option value=\"default-dog\">Default Dog</option>\n            </select>\n            </div>`\n        });\n\n        // Render the confirmation dialog window\n        return Dialog.prompt({\n            title,\n            content: html,\n            label: title,\n            render: (html) => {\n                if (!this.hasTypeData) return;\n                html[0].querySelector('[name=\"type\"]').addEventListener('change', (e) => {\n                    html[0].querySelector('[name=\"name\"]').placeholder = this.implementation.defaultName({\n                        type: e.target.value,\n                        parent,\n                        pack\n                    });\n                });\n            },\n            callback: (html) => {\n                const form = html[0].querySelector('form');\n                const fd = new FormDataExtended(form);\n                foundry.utils.mergeObject(data, fd.object, {inplace: true});\n                if (!data.folder) delete data['folder'];\n                if (documentTypes.length === 1) data.type = documentTypes[0];\n                if (!data.name?.trim()) data.name = this.implementation.defaultName({type: data.type, parent, pack});\n                const createOptions = {parent, pack, renderSheet: true};\n                return this.create(data, createOptions);\n            },\n            rejectClose: false,\n            options\n        });\n    }\n\n    /** @override */\n    // async _preUpdate(changes, options, user) {\n    //     if (changes.system) {\n    //         // Make sure, that fatigue is a positive number incl 0\n    //         if (\n    //             Object.hasOwn(changes.system, 'fatigue') &&\n    //             (changes.system.fatigue === null || changes.system.fatigue === undefined || changes.system.fatigue < 0)\n    //         ) {\n    //             changes.system.fatigue = 0;\n    //             options.diff = false;\n    //         }\n    //     }\n\n    //     return super._preUpdate(changes, options, user);\n    // }\n\n    /** @override */\n    async _onCreate(data, options, userId) {\n        await super._onCreate(data, options, userId);\n        if (this.testUserPermission(game.user, 'OWNER') && this.type === ActorType.CHARACTER)\n            await this.setFlag('hm3', 'SkillImprovement', true);\n    }\n\n    /** @override */\n    async _preCreate(createData, options, user) {\n        await super._preCreate(createData, options, user);\n\n        // If the created actor has items (only applicable to duplicated actors) bypass the new actor creation logic\n        if (!createData.initDefaults || createData.items) return;\n\n        // Setup default Actor type specific data.\n\n        const updateData = {};\n\n        if (createData.type === ActorType.CHARACTER) {\n            updateData['system.description'] = await (\n                await fetch('systems/hm3/module/actor/character-description.html')\n            ).text();\n            updateData['system.biography'] =\n                '<h1>Data</h1>\\n<table style=\"width: 95%;\" border=\"1\">\\n<tbody>\\n<tr>\\n<td style=\"padding: 2px; width: 143.6px;\"><strong>Birthdate</strong></td>\\n<td style=\"padding: 2px; width: 432px;\">&nbsp;</td>\\n</tr>\\n<tr>\\n<td style=\"padding: 2px; width: 143.6px;\"><strong>Birthplace</strong></td>\\n<td style=\"padding: 2px; width: 432px;\">&nbsp;</td>\\n</tr>\\n<tr>\\n<td style=\"padding: 2px; width: 143.6px;\"><strong>Sibling Rank</strong></td>\\n<td style=\"padding: 2px; width: 432px;\">x of y</td>\\n</tr>\\n<tr>\\n<td style=\"padding: 2px; width: 143.6px;\"><strong>Parent(s)</strong></td>\\n<td style=\"padding: 2px; width: 432px;\">&nbsp;</td>\\n</tr>\\n<tr>\\n<td style=\"padding: 2px; width: 143.6px;\"><strong>Parent Occupation</strong></td>\\n<td style=\"padding: 2px; width: 432px;\">&nbsp;</td>\\n</tr>\\n<tr>\\n<td style=\"padding: 2px; width: 143.6px;\"><strong>Estrangement</strong></td>\\n<td style=\"padding: 2px; width: 432px;\">&nbsp;</td>\\n</tr>\\n<tr>\\n<td style=\"padding: 2px; width: 143.6px;\"><strong>Clanhead</strong></td>\\n<td style=\"padding: 2px; width: 432px;\">&nbsp;</td>\\n</tr>\\n<tr>\\n<td style=\"padding: 2px; width: 143.6px;\"><strong>Medical Traits</strong></td>\\n<td style=\"padding: 2px; width: 432px;\">&nbsp;</td>\\n</tr>\\n<tr>\\n<td style=\"padding: 2px; width: 143.6px;\"><strong>Psyche Traits</strong></td>\\n<td style=\"padding: 2px; width: 432px;\">&nbsp;</td>\\n</tr>\\n</tbody>\\n</table>\\n<h1>Life Story</h1>';\n            updateData['system.bioImage'] = 'systems/hm3/images/svg/knight-silhouette.svg';\n            updateData.items = [];\n\n            // Add standard skills\n            await ActorHM3.addItemsFromPack(HM3.defaultCharacterSkills, ['hm3.character'], updateData.items);\n\n            switch (createData.locations) {\n                case 'simplified-humanoid':\n                    ActorHM3._createSimpleHumanoidLocations(updateData.items);\n                    break;\n                case 'default-horse':\n                    ActorHM3._createHorseLocations(updateData.items);\n                    break;\n                case 'default-dog':\n                    ActorHM3._createDogLocations(updateData.items);\n                    break;\n                case 'default-humanoid':\n                default:\n                    // Add standard armor locations\n                    ActorHM3._createDefaultHumanoidLocations(updateData.items, false);\n                    break;\n            }\n        } else if (createData.type === 'creature') {\n            updateData['system.description'] = '';\n            updateData['system.biography'] =\n                '<h1>Data</h1>\\n<table style=\"width: 95%;\" border=\"1\">\\n<tbody>\\n<tr>\\n<td style=\"padding: 2px; width: 143.6px;\"><strong>Habitat</strong></td>\\n<td style=\"padding: 2px; width: 432px;\">&nbsp;</td>\\n</tr>\\n<tr>\\n<td style=\"padding: 2px; width: 143.6px;\"><strong>Height</strong></td>\\n<td style=\"padding: 2px; width: 432px;\">&nbsp;</td>\\n</tr>\\n<tr>\\n<td style=\"padding: 2px; width: 143.6px;\"><strong>Weight</strong></td>\\n<td style=\"padding: 2px; width: 432px;\"></td>\\n</tr>\\n<tr>\\n<td style=\"padding: 2px; width: 143.6px;\"><strong>Diet</strong></td>\\n<td style=\"padding: 2px; width: 432px;\">&nbsp;</td>\\n</tr>\\n<tr>\\n<td style=\"padding: 2px; width: 143.6px;\"><strong>Lifespan</strong></td>\\n<td style=\"padding: 2px; width: 432px;\">&nbsp;</td>\\n</tr>\\n<tr>\\n<td style=\"padding: 2px; width: 143.6px;\"><strong>Group</strong></td>\\n<td style=\"padding: 2px; width: 432px;\">&nbsp;</td>\\n</tr>\\n</tbody>\\n</table>\\n<h1>Special Abilities</h1>\\n<p>Describe any special abilities.</p>\\n<h1>Attacks</h1>\\n<p>Describe methods of attack.</p>\\n<h1>Behavior</h1>\\n<p>Describe behavioral aspects.</p>';\n            updateData['system.bioImage'] = 'systems/hm3/images/svg/monster-silhouette.svg';\n            updateData.items = [];\n\n            // Add standard skills\n            await ActorHM3.addItemsFromPack(HM3.defaultCreatureSkills, ['hm3.character'], updateData.items);\n\n            switch (createData.locations) {\n                case 'simplified-humanoid':\n                    ActorHM3._createSimpleHumanoidLocations(updateData.items);\n                    break;\n                case 'default-horse':\n                    ActorHM3._createHorseLocations(updateData.items);\n                    break;\n                case 'default-dog':\n                    ActorHM3._createDogLocations(updateData.items);\n                    break;\n                case 'default-humanoid':\n                default:\n                    // Add standard armor locations\n                    ActorHM3._createDefaultHumanoidLocations(updateData.items, false);\n                    break;\n            }\n        } else if (createData.type === 'container') {\n            updateData['system.capacity.max'] = 1;\n            updateData['system.description'] = '';\n            updateData['system.bioImage'] = 'systems/hm3/images/icons/svg/chest.svg';\n            updateData['img'] = 'systems/hm3/images/icons/svg/chest.svg';\n        }\n        this.updateSource(updateData);\n\n        // Sanity Check\n        if (createData.type === ActorType.CHARACTER || createData.type === 'creature') {\n            let totalWeightHigh = 0;\n            let totalWeightMid = 0;\n            let totalWeightLow = 0;\n            let numArmorLocations = 0;\n            updateData.items.forEach((it) => {\n                if (it.type === ItemType.ARMORLOCATION) {\n                    totalWeightHigh += it.system.probWeight['high'];\n                    totalWeightMid += it.system.probWeight['mid'];\n                    totalWeightLow += it.system.probWeight['low'];\n                    numArmorLocations++;\n                }\n            });\n\n            if (totalWeightHigh % 100 || totalWeightMid % 100 || totalWeightLow % 100) {\n                if (game.user.isGM)\n                    ui.notifications.warn(\n                        `Armor prob weight is NOT equal to 100, 1000 or 10000. ${this.name}: ${totalWeightHigh} | ${totalWeightMid} | ${totalWeightLow}`,\n                        {permanent: true}\n                    );\n            }\n        }\n    }\n\n    /**\n     * Add all of the items from a pack with the specified names\n     * @param {*} itemNames Array of item names to include\n     * @param {*} packNames Array of packNames of compendium packs containing items\n     * @param {*} items array of ItemData elements to populate\n     */\n    static async addItemsFromPack(itemNames, packNames, items) {\n        let itNames = foundry.utils.deepClone(itemNames);\n        const itemAry = [];\n        for (let packName of packNames) {\n            const pack = game.packs.get(packName);\n            await pack.getDocuments().then((result) => {\n                let chain = Promise.resolve();\n                result.forEach(async (item, index) => {\n                    chain = await chain.then(async () => {\n                        if (itNames.includes(item.name)) {\n                            const clone = item.toObject();\n                            clone.effects = clone.effects.contents;\n                            // Set the created time for added items\n                            if (clone.system?.hasOwnProperty('createdTime'))\n                                clone.system.createdTime = game.time.worldTime;\n                            itemAry.push(clone);\n                            // Ensure we don't continue looking for the itemName after we have found one\n                            itNames = itNames.filter((i) => i !== item.name);\n                        }\n                    });\n                });\n            });\n        }\n        itemAry.sort((a, b) => itemNames.indexOf(a.name) - itemNames.indexOf(b.name));\n        items.push(...itemAry);\n    }\n\n    /**\n     * Create an armorlocation ItemData element\n     *\n     * @param {*} locName Location Name\n     * @param {*} templateName Location Template Name\n     * @returns an armorlocation ItemData\n     */\n    static _setupLocation(locName, templateName) {\n        const armorLocationData = foundry.utils.deepClone(game.model.Item.armorlocation);\n        foundry.utils.mergeObject(armorLocationData, HM3.injuryLocations[templateName]);\n        armorLocationData.probWeight.high *= 10;\n        armorLocationData.probWeight.mid *= 10;\n        armorLocationData.probWeight.low *= 10;\n        return {name: locName, type: ItemType.ARMORLOCATION, system: armorLocationData};\n    }\n\n    /**\n     * Add armorlocation items to the items array for all of the locations for\n     * a humanoid\n     *\n     * @param {*} items Array of ItemData elements\n     */\n    static _createDefaultHumanoidLocations(items, face = true) {\n        items.push(ActorHM3._setupLocation('Skull', 'Skull'));\n        face\n            ? items.push(ActorHM3._setupLocation('Face', 'Face'))\n            : ActorHM3._createDefaultHumanoidFaceLocations(items);\n        items.push(ActorHM3._setupLocation('Neck', 'Neck'));\n        items.push(ActorHM3._setupLocation('Left Shoulder', 'Shoulder'));\n        items.push(ActorHM3._setupLocation('Right Shoulder', 'Shoulder'));\n        items.push(ActorHM3._setupLocation('Left Upper Arm', 'Upper Arm'));\n        items.push(ActorHM3._setupLocation('Right Upper Arm', 'Upper Arm'));\n        items.push(ActorHM3._setupLocation('Left Elbow', 'Elbow'));\n        items.push(ActorHM3._setupLocation('Right Elbow', 'Elbow'));\n        items.push(ActorHM3._setupLocation('Left Forearm', 'Forearm'));\n        items.push(ActorHM3._setupLocation('Right Forearm', 'Forearm'));\n        items.push(ActorHM3._setupLocation('Left Hand', 'Hand'));\n        items.push(ActorHM3._setupLocation('Right Hand', 'Hand'));\n        items.push(ActorHM3._setupLocation('Thorax', 'Thorax'));\n        items.push(ActorHM3._setupLocation('Abdomen', 'Abdomen'));\n        items.push(ActorHM3._setupLocation('Groin', 'Groin'));\n        items.push(ActorHM3._setupLocation('Left Hip', 'Hip'));\n        items.push(ActorHM3._setupLocation('Right Hip', 'Hip'));\n        items.push(ActorHM3._setupLocation('Left Thigh', 'Thigh'));\n        items.push(ActorHM3._setupLocation('Right Thigh', 'Thigh'));\n        items.push(ActorHM3._setupLocation('Left Knee', 'Knee'));\n        items.push(ActorHM3._setupLocation('Right Knee', 'Knee'));\n        items.push(ActorHM3._setupLocation('Left Calf', 'Calf'));\n        items.push(ActorHM3._setupLocation('Right Calf', 'Calf'));\n        items.push(ActorHM3._setupLocation('Left Foot', 'Foot'));\n        items.push(ActorHM3._setupLocation('Right Foot', 'Foot'));\n    }\n\n    static _createDefaultHumanoidFaceLocations(items) {\n        items.push(ActorHM3._setupLocation('Left Eye', 'Eye'));\n        items.push(ActorHM3._setupLocation('Right Eye', 'Eye'));\n        items.push(ActorHM3._setupLocation('Nose', 'Nose'));\n        items.push(ActorHM3._setupLocation('Left Ear', 'Ear'));\n        items.push(ActorHM3._setupLocation('Right Ear', 'Ear'));\n        items.push(ActorHM3._setupLocation('Left Cheek', 'Cheek'));\n        items.push(ActorHM3._setupLocation('Right Cheek', 'Cheek'));\n        items.push(ActorHM3._setupLocation('Mouth', 'Mouth'));\n        items.push(ActorHM3._setupLocation('Jaw', 'Jaw'));\n    }\n\n    /**\n     * Add armorlocation items to the items array for all of the locations for\n     * a humanoid, simplified\n     *\n     * @param {*} items Array of ItemData elements\n     */\n    static _createSimpleHumanoidLocations(items) {\n        items.push(ActorHM3._setupLocation('Head', 'Head, humanoid simple'));\n        items.push(ActorHM3._setupLocation('Neck', 'Neck, humanoid simple'));\n        items.push(ActorHM3._setupLocation('Left Arm', 'Arm, humanoid simple'));\n        items.push(ActorHM3._setupLocation('Right Arm', 'Arm, humanoid simple'));\n        items.push(ActorHM3._setupLocation('Thorax', 'Thorax, humanoid simple'));\n        items.push(ActorHM3._setupLocation('Abdomen', 'Abdomen, humanoid simple'));\n        items.push(ActorHM3._setupLocation('Left Leg', 'Leg, humanoid simple'));\n        items.push(ActorHM3._setupLocation('Right Leg', 'Leg, humanoid simple'));\n    }\n\n    /**\n     * Add armorlocation items to the items array for all of the locations for\n     * a horse\n     *\n     * @param {*} items Array of ItemData elements\n     */\n    static _createHorseLocations(items) {\n        items.push(ActorHM3._setupLocation('Head', 'Head, horse'));\n        items.push(ActorHM3._setupLocation('Neck', 'Neck, horse'));\n        items.push(ActorHM3._setupLocation('Left Fore Leg', 'Fore Leg, horse'));\n        items.push(ActorHM3._setupLocation('Right Fore Leg', 'Fore Leg, horse'));\n        items.push(ActorHM3._setupLocation('Left Flank (Thorax)', 'Flank, horse'));\n        items.push(ActorHM3._setupLocation('Right Flank (Thorax)', 'Flank, horse'));\n        items.push(ActorHM3._setupLocation('Abdomen', 'Abdomen, horse'));\n        items.push(ActorHM3._setupLocation('Left Quarter', 'Quarter, horse'));\n        items.push(ActorHM3._setupLocation('Right Quarter', 'Quarter, horse'));\n        items.push(ActorHM3._setupLocation('Left Hind Leg', 'Hind Leg, horse'));\n        items.push(ActorHM3._setupLocation('Right Hind Leg', 'Hind Leg, horse'));\n        items.push(ActorHM3._setupLocation('Tail', 'Tail, horse'));\n    }\n\n    /**\n     * Add armorlocation items to the items array for all of the locations for\n     * a dog\n     *\n     * @param {*} items Array of ItemData elements\n     */\n    static _createDogLocations(items) {\n        items.push(ActorHM3._setupLocation('Head', 'Head, dog'));\n        items.push(ActorHM3._setupLocation('Neck', 'Neck, dog'));\n        items.push(ActorHM3._setupLocation('Left Fore Leg', 'Fore Leg, dog'));\n        items.push(ActorHM3._setupLocation('Right Fore Leg', 'Fore Leg, dog'));\n        items.push(ActorHM3._setupLocation('Thorax', 'Thorax, dog'));\n        items.push(ActorHM3._setupLocation('Abdomen', 'Abdomen, dog'));\n        items.push(ActorHM3._setupLocation('Left Hind Leg', 'Hind Leg, dog'));\n        items.push(ActorHM3._setupLocation('Right Hind Leg', 'Hind Leg, dog'));\n        items.push(ActorHM3._setupLocation('Tail', 'Tail, dog'));\n    }\n\n    /**\n     * When prepareBaseData() runs, the Actor.items map is not available, or if it is, it\n     * is not dependable.  The very next method will update the Actor.items map using\n     * information from the Actor._source.items array.  So, at this point we may safely\n     * use Actor._source.items, so long as we remember that that data is going to be going\n     * through a prepareData() stage next.\n     *\n     * @override */\n    prepareBaseData() {\n        super.prepareBaseData();\n        const actorData = this.system;\n        const actorItems = this.items;\n\n        // Ephemeral data is kept together with other actor data,\n        // but it is not in the data model so it will not be saved.\n        if (!actorData.eph) actorData.eph = {};\n        const eph = actorData.eph;\n        actorData.v2 = {};\n        for (const key of Object.keys(game.hm3.config.activeEffectKeyV2)) {\n            foundry.utils.setProperty(this, key, null);\n        }\n\n        actorData.totalWeight = 0;\n\n        this.calcTotalGearWeight();\n\n        // Prepare data items unique to containers\n        if (this.type === 'container') {\n            actorData.capacity.value = actorData.totalWeight;\n            actorData.capacity.pct = Math.round(\n                ((actorData.capacity.max - actorData.capacity.value) / (actorData.capacity.max || 1)) * 100\n            );\n            actorData.capacity.pct = Math.max(Math.min(actorData.capacity.pct, 100), 0); // ensure value is between 0 and 100 inclusive)\n            return;\n        }\n\n        // Initialize derived attributes\n        actorData.abilities.strength.effective = 0;\n        actorData.abilities.stamina.effective = 0;\n        actorData.abilities.dexterity.effective = 0;\n        actorData.abilities.agility.effective = 0;\n        actorData.abilities.intelligence.effective = 0;\n        actorData.abilities.aura.effective = 0;\n        actorData.abilities.will.effective = 0;\n        actorData.abilities.eyesight.effective = 0;\n        actorData.abilities.hearing.effective = 0;\n        actorData.abilities.smell.effective = 0;\n        actorData.abilities.voice.effective = 0;\n        actorData.abilities.comeliness.effective = 0;\n        actorData.abilities.morality.effective = 0;\n        actorData.abilities.strength.modified = 0;\n        actorData.abilities.stamina.modified = 0;\n        actorData.abilities.dexterity.modified = 0;\n        actorData.abilities.agility.modified = 0;\n        actorData.abilities.intelligence.modified = 0;\n        actorData.abilities.aura.modified = 0;\n        actorData.abilities.will.modified = 0;\n        actorData.abilities.eyesight.modified = 0;\n        actorData.abilities.hearing.modified = 0;\n        actorData.abilities.smell.modified = 0;\n        actorData.abilities.voice.modified = 0;\n        actorData.abilities.comeliness.modified = 0;\n        actorData.abilities.morality.modified = 0;\n        actorData.dodge = 0;\n        actorData.initiative = 0;\n        actorData.endurance = 0;\n        if (!actorData.shockIndex) actorData.shockIndex = {value: 100, max: 100};\n        actorData.move.effective = 0;\n        actorData.universalPenalty = 0;\n        actorData.physicalPenalty = 0;\n        actorData.totalInjuryLevels = 0;\n        if (!actorData.injuryLevels) actorData.injuryLevels = {value: 0, max: 6};\n        actorData.encumbrance = 0;\n        actorData.condition = 0;\n        actorData.mounted = !!actorData.mounted;\n\n        // Setup temporary work values masking the base values\n        eph.move = actorData.move.base;\n        eph.fatigue = actorData.fatigue || 0;\n        eph.strength = actorData.abilities.strength.base;\n        eph.stamina = actorData.abilities.stamina.base;\n        eph.dexterity = actorData.abilities.dexterity.base;\n        eph.agility = actorData.abilities.agility.base;\n        eph.eyesight = actorData.abilities.eyesight.base;\n        eph.hearing = actorData.abilities.hearing.base;\n        eph.smell = actorData.abilities.smell.base;\n        eph.voice = actorData.abilities.voice.base;\n        eph.intelligence = actorData.abilities.intelligence.base;\n        eph.will = actorData.abilities.will.base;\n        eph.aura = actorData.abilities.aura.base;\n        eph.morality = actorData.abilities.morality.base;\n        eph.comeliness = actorData.abilities.comeliness.base;\n        eph.endurance = actorData.endurance;\n\n        eph.meleeAMLMod = 0;\n        eph.meleeDMLMod = 0;\n        eph.missileAMLMod = 0;\n        eph.outnumbered = 0;\n        eph.commSkillsMod = 0;\n        eph.physicalSkillsMod = 0;\n        eph.combatSkillsMod = 0;\n        eph.craftSkillsMod = 0;\n        eph.ritualSkillsMod = 0;\n        eph.magicSkillsMod = 0;\n        eph.psionicTalentsMod = 0;\n        eph.itemAMLMod = 0;\n        eph.itemDMLMod = 0;\n        eph.itemEMLMod = 0;\n        eph.itemCustomMod = 0;\n        eph.unhorsing = 0;\n\n        // Calculate endurance (in case Condition not present)\n        actorData.endurance = Math.round(\n            (actorData.abilities.strength.base + actorData.abilities.stamina.base + actorData.abilities.will.base) / 3\n        );\n\n        const oldTotalInjuryLevels = actorData.injuryLevels.value;\n        // Calculate values based on items\n        actorItems.forEach((it) => {\n            const itemData = it.system;\n            if (it.type === ItemType.INJURY) {\n                // Calculate total injury levels\n                actorData.totalInjuryLevels += itemData.injuryLevel || 0;\n            } else if (it.type === ItemType.SKILL && it.name.includes('Condition')) {\n                // if Condition skill is present, use that for endurance instead\n                if (!itemData.masteryLevel) {\n                    actorData.abilities.strength.modified = eph.strength;\n                    actorData.abilities.stamina.modified = eph.stamina;\n                    actorData.abilities.will.modified = eph.will;\n                    it.prepareData();\n                    it.postProcessItems();\n                }\n                actorData.endurance = Math.round((itemData.masteryLevel || 5 * actorData.endurance) / 5);\n                actorData.condition = itemData.masteryLevel;\n            }\n        });\n\n        // Safety net: We divide things by endurance, so ensure it is > 0\n        actorData.endurance = Math.max(actorData.endurance, 1);\n\n        if (this.hasCondition(Condition.INANIMATE)) {\n            // If the actor is Inanimate, ensure max injury levels is equal to endurance\n            if (actorData.injuryLevels.max !== actorData.endurance) {\n                setTimeout(() => this.update({'system.injuryLevels.max': actorData.endurance}), 500);\n            }\n        } else if (actorData.injuryLevels.max !== 6) {\n            // If the actor is not Inanimate, ensure max injury levels is 6\n            setTimeout(() => this.update({'system.injuryLevels.max': 6}), 500);\n        }\n\n        eph.totalInjuryLevels = actorData.totalInjuryLevels;\n        eph.effectiveWeight = actorData.loadRating\n            ? Math.max(actorData.totalWeight - actorData.loadRating, 0)\n            : actorData.totalWeight;\n        actorData.encumbrance = Math.floor(eph.effectiveWeight / actorData.endurance);\n\n        if (oldTotalInjuryLevels !== actorData.totalInjuryLevels) {\n            Hooks.call('hm3.onTotalInjuryLevelsChanged', this, oldTotalInjuryLevels, actorData.totalInjuryLevels);\n        }\n\n        Hooks.call('hm3.onActorPrepareBaseData', this);\n    }\n\n    /**\n     * Perform data preparation after Items preparation and Active Effects have\n     * been applied.\n     *\n     * Note that all Active Effects have already been applied by this point, so\n     * nothing in this method will be affected further by Active Effects.\n     *\n     * @override */\n    prepareDerivedData() {\n        super.prepareDerivedData();\n        const actorData = this.system;\n\n        const eph = actorData.eph;\n\n        this._calcGearWeightTotals();\n\n        if (this.type === 'container') {\n            return;\n        }\n\n        // store AE-affected ability scores\n        actorData.abilities.strength.modified = eph.strength;\n        actorData.abilities.stamina.modified = eph.stamina;\n        actorData.abilities.dexterity.modified = eph.dexterity;\n        actorData.abilities.agility.modified = eph.agility;\n        actorData.abilities.eyesight.modified = eph.eyesight;\n        actorData.abilities.hearing.modified = eph.hearing;\n        actorData.abilities.smell.modified = eph.smell;\n        actorData.abilities.voice.modified = eph.voice;\n        actorData.abilities.intelligence.modified = eph.intelligence;\n        actorData.abilities.will.modified = eph.will;\n        actorData.abilities.aura.modified = eph.aura;\n        actorData.abilities.morality.modified = eph.morality;\n        actorData.abilities.comeliness.modified = eph.comeliness;\n\n        // The effect of Load on a character’s physical activities. It is equal to Load ÷ Endurance, rounded off to the nearest whole number. (COMBAT 2)\n        this.system.encumbrance = Math.floor(this.system.eph.effectiveWeight / this.system.endurance);\n        if (this.system.mounted) {\n            this.system.encumbrance = Math.round(this.system.encumbrance / 2 + Number.EPSILON);\n            eph.fatigue = Math.round(eph.fatigue / 2 + Number.EPSILON) || 0;\n        }\n        // All common character and creature derived data below here\n\n        // Since active effects may have modified these values, we must ensure\n        // that they are integers and not floating values. Round to nearest integer.\n        actorData.encumbrance = Math.max(Math.round(actorData.encumbrance + Number.EPSILON), 0);\n        actorData.endurance = Math.max(Math.round(actorData.endurance + Number.EPSILON), 0);\n        actorData.move.effective = Math.max(Math.round(eph.move + Number.EPSILON), 0);\n        eph.totalInjuryLevels = Math.max(Math.round(eph.totalInjuryLevels + Number.EPSILON), 0);\n        eph.fatigue = Math.max(Math.round(eph.fatigue + Number.EPSILON), 0) || 0;\n\n        // Universal Penalty and Physical Penalty are used to calculate many\n        // things, including effectiveMasteryLevel for all skills,\n        // endurance, move, etc.\n        ActorHM3.calcUniversalPenalty(this);\n        this.applySpecificActiveEffect('system.universalPenalty');\n        actorData.universalPenalty = Math.floor(Math.max(actorData.universalPenalty || 0, 0));\n\n        ActorHM3.calcPhysicalPenalty(this);\n        this.applySpecificActiveEffect('system.physicalPenalty');\n        actorData.physicalPenalty = Math.floor(Math.max(actorData.physicalPenalty || 0, 0));\n\n        ActorHM3.calcShockIndex(this);\n\n        // Calculate current Move speed.  Cannot go below 0\n        // HEURISTIC: Assume if base move < 25 that user is specifying hexes for movement (use PP as penalty);\n        // 25+ means they are specifying feet (and use PP*5 as penalty); unlikely many characters will have\n        // a base Agility of <= 4 and will want to specify the base move speed in feet.\n        // Eventually we will standardize on \"feet\" and this heuristic can be removed.\n        actorData.move.effective = Math.max(\n            eph.move - (actorData.move.base < 25 ? actorData.physicalPenalty : actorData.physicalPenalty * 5),\n            0\n        );\n\n        // Setup effective abilities (accounting for UP and PP)\n        this._setupEffectiveAbilities(actorData);\n\n        // Calculate Important Roll Targets\n        eph.stumbleTarget = Math.max(actorData.abilities.agility.effective, 0);\n        eph.fumbleTarget = Math.max(actorData.abilities.dexterity.effective, 0);\n\n        // Process all the final post activities for each item\n        this.items.forEach((it) => {\n            it.postProcessItems();\n\n            // Apply AE based on skill types (not based on individual skills, that comes later)\n            if ([ItemType.SKILL, ItemType.PSIONIC].includes(it.type)) {\n                this.applySkillTypeActiveEffect(it);\n            }\n        });\n\n        // Apply the individual AE for skills\n        this._applySkillActiveEffects();\n\n        // Calculate spell effective mastery level values\n        this._refreshSpellsAndInvocations();\n\n        // Collect all combat skills into a map for use later\n        let combatSkills = {};\n        this.items.forEach((it) => {\n            const itemData = it.system;\n            if (\n                it.type === ItemType.SKILL &&\n                (itemData.type === SkillType.COMBAT || it.name.toLowerCase() === 'throwing')\n            ) {\n                combatSkills[it.name] = {\n                    'name': it.name,\n                    'eml': itemData.effectiveMasteryLevel\n                };\n            }\n        });\n\n        this._setupWeaponData(combatSkills);\n\n        this._generateArmorLocationMap(actorData);\n\n        // Ensure all EML, AML, and DML are min 5\n        this._setMinMaxEML_AML_DML();\n\n        // Store \"special\" skill properties\n        this.items.forEach((it) => {\n            const itemData = it.system;\n            if (it.type === ItemType.SKILL) {\n                switch (it.name.toLowerCase()) {\n                    case 'dodge':\n                        actorData.dodge = itemData.effectiveMasteryLevel;\n                        break;\n\n                    case 'initiative':\n                        actorData.initiative = itemData.effectiveMasteryLevel;\n                        break;\n\n                    case 'condition':\n                        actorData.condition = itemData.effectiveMasteryLevel;\n                        break;\n                }\n            }\n        });\n\n        Hooks.call('hm3.onActorPrepareDerivedData', this);\n\n        return;\n    }\n\n    /**\n     * Calculate the total weight of all gear carried\n     */\n    calcTotalGearWeight() {\n        const actorItems = this.items;\n        const actorData = this.system;\n\n        // If not the owner of this actor, then this method is useless\n        if (!this.isOwner) return;\n\n        // check to ensure items are available\n        if (!actorItems) return;\n\n        // Find all containergear, and track whether container is carried or not\n        const containerCarried = {};\n        actorItems.forEach((it) => {\n            if (it.type === ItemType.CONTAINERGEAR) {\n                containerCarried[it.id] = it.system.isCarried;\n            }\n        });\n\n        let totalWeight = 0;\n        actorItems.forEach((it) => {\n            const itemData = it.system;\n            if (it.type.endsWith('gear')) {\n                // If gear is on-person, then check the carried flag to determine\n                // whether the gear is carried. Otherwise, it must be in a container,\n                // so check whether the container is carried.\n                if (itemData.container === 'on-person') {\n                    if (itemData.isCarried) {\n                        totalWeight += itemData.weight * itemData.quantity;\n                    }\n                } else {\n                    if (containerCarried[itemData.container]) {\n                        totalWeight += itemData.weight * itemData.quantity;\n                    }\n                }\n            }\n        });\n\n        // Normalize weight to two decimal points\n        totalWeight = utility.truncate(totalWeight);\n\n        actorData.totalWeight = totalWeight;\n\n        return;\n    }\n\n    /**\n     * Calculate the weight of the gear. Note that this is somewhat redundant\n     * with the calculation being done during item create/update/delete,\n     * but here we are generating a much more fine-grained set of data\n     * regarding the weight distribution.\n     */\n    _calcGearWeightTotals() {\n        const eph = this.system.eph;\n\n        eph.totalWeaponWeight = 0;\n        eph.totalMissileWeight = 0;\n        eph.totalArmorWeight = 0;\n        eph.totalMiscGearWeight = 0;\n\n        let tempWeight = 0;\n\n        // Initialize all container capacity values\n        this.items.forEach((it) => {\n            if (it.type === ItemType.CONTAINERGEAR) it.system.capacity.value = 0;\n        });\n\n        this.items.forEach((it) => {\n            const itemData = it.system;\n            tempWeight = 0;\n\n            if (it.type.endsWith('gear')) {\n                // If the gear is inside of a container, then the \"carried\"\n                // flag is inherited from the container.\n                if (itemData.container && itemData.container !== 'on-person') {\n                    const container = this.items.find((i) => i.id === itemData.container);\n                    if (container) itemData.isCarried = container.system.isCarried;\n                }\n            }\n\n            switch (it.type) {\n                case ItemType.WEAPONGEAR:\n                    tempWeight = Math.max(itemData.weight * itemData.quantity, 0);\n                    if (!itemData.isCarried) break;\n                    eph.totalWeaponWeight += tempWeight;\n                    break;\n\n                case ItemType.MISSILEGEAR:\n                    tempWeight = Math.max(itemData.weight * itemData.quantity, 0);\n                    if (!itemData.isCarried) break;\n                    eph.totalMissileWeight += tempWeight;\n                    break;\n\n                case ItemType.ARMORGEAR:\n                    tempWeight = Math.max(itemData.weight * itemData.quantity, 0);\n                    if (!itemData.isCarried) break;\n                    eph.totalArmorWeight += tempWeight;\n                    break;\n\n                case ItemType.MISCGEAR:\n                case ItemType.CONTAINERGEAR:\n                    tempWeight = Math.max(itemData.weight * itemData.quantity, 0);\n                    if (!itemData.isCarried) break;\n                    eph.totalMiscGearWeight += tempWeight;\n                    break;\n            }\n\n            if (it.type.endsWith('gear')) {\n                const cid = itemData.container;\n                if (cid && cid != 'on-person') {\n                    const container = this.items.get(cid);\n                    if (container) {\n                        container.system.capacity.value = utility.truncate(\n                            container.system.capacity.value + tempWeight\n                        );\n                    } else {\n                        // If container is set and is not 'on-person', but if we can't find the container,\n                        // move the item back to 'on-person'.\n                        itemData.container = 'on-person';\n                    }\n                }\n            }\n        });\n\n        // It seems whenever doing math on floating point numbers, very small\n        // amounts get introduced creating very long decimal values.\n        // Correct any math weirdness; keep to two decimal points\n        eph.totalArmorWeight = utility.truncate(eph.totalArmorWeight);\n        eph.totalWeaponWeight = utility.truncate(eph.totalWeaponWeight);\n        eph.totalMissileWeight = utility.truncate(eph.totalMissileWeight);\n        eph.totalMiscGearWeight = utility.truncate(eph.totalMiscGearWeight);\n\n        eph.totalGearWeight =\n            eph.totalWeaponWeight + eph.totalMissileWeight + eph.totalArmorWeight + eph.totalMiscGearWeight;\n        eph.totalGearWeight = utility.truncate(eph.totalGearWeight);\n    }\n\n    _setupEffectiveAbilities(actorData) {\n        const eph = this.system.eph;\n\n        // Affected by physical penalty\n        actorData.abilities.strength.effective = Math.max(\n            Math.round(eph.strength + Number.EPSILON) - actorData.physicalPenalty,\n            0\n        );\n        actorData.abilities.stamina.effective = Math.max(\n            Math.round(eph.stamina + Number.EPSILON) - actorData.physicalPenalty,\n            0\n        );\n        actorData.abilities.agility.effective = Math.max(\n            Math.round(eph.agility + Number.EPSILON) - actorData.physicalPenalty,\n            0\n        );\n        actorData.abilities.dexterity.effective = Math.max(\n            Math.round(eph.dexterity + Number.EPSILON) - actorData.physicalPenalty,\n            0\n        );\n\n        // Affected by universal penalty\n        actorData.abilities.intelligence.effective = Math.max(\n            Math.round(eph.intelligence + Number.EPSILON) - actorData.universalPenalty,\n            0\n        );\n        actorData.abilities.aura.effective = Math.max(\n            Math.round(eph.aura + Number.EPSILON) - actorData.universalPenalty,\n            0\n        );\n        actorData.abilities.will.effective = Math.max(\n            Math.round(eph.will + Number.EPSILON) - actorData.universalPenalty,\n            0\n        );\n        actorData.abilities.eyesight.effective = Math.max(\n            Math.round(eph.eyesight + Number.EPSILON) - actorData.universalPenalty,\n            0\n        );\n        actorData.abilities.hearing.effective = Math.max(\n            Math.round(eph.hearing + Number.EPSILON) - actorData.universalPenalty,\n            0\n        );\n        actorData.abilities.smell.effective = Math.max(\n            Math.round(eph.smell + Number.EPSILON) - actorData.universalPenalty,\n            0\n        );\n        actorData.abilities.voice.effective = Math.max(\n            Math.round(eph.voice + Number.EPSILON) - actorData.universalPenalty,\n            0\n        );\n\n        // Not affected by any penalties\n        actorData.abilities.comeliness.effective = Math.max(Math.round(eph.comeliness + Number.EPSILON), 0);\n        actorData.abilities.morality.effective = Math.max(Math.round(eph.morality + Number.EPSILON), 0);\n    }\n\n    /**\n     * Consolidated method to setup all gear, including misc gear, weapons,\n     * and missiles.  (not armor yet)\n     */\n    _setupWeaponData(combatSkills) {\n        const eph = this.system.eph;\n\n        // Just ensure we take care of any NaN or other falsy nonsense\n        if (!eph.missileAMLMod) eph.missileAMLMod = 0;\n        if (!eph.weaponAMLMod) eph.weaponAMLMod = 0;\n        if (!eph.weaponDMLMod) eph.weaponDMLMod = 0;\n\n        this.items.forEach((it) => {\n            const itemData = it.system;\n            if (it.type === ItemType.MISSILEGEAR) {\n                // Reset mastery levels in case nothing matches\n                itemData.attackMasteryLevel = 5;\n\n                // If the associated skill is in our combat skills list, get EML from there\n                // and then calculate AML.\n                let assocSkill = itemData.assocSkill;\n                if (typeof combatSkills[assocSkill] !== 'undefined') {\n                    let skillEml = combatSkills[assocSkill].eml;\n                    itemData.attackMasteryLevel = (skillEml || 0) + (itemData.attackModifier || 0);\n                }\n            } else if (it.type === ItemType.WEAPONGEAR) {\n                // Reset mastery levels in case nothing matches\n                itemData.attackMasteryLevel = 5;\n                itemData.defenseMasteryLevel = 5;\n                let weaponName = itemData.name;\n\n                // If associated skill is 'None', see if there is a skill with the\n                // same name as the weapon; if so, then set it to that skill.\n                if (itemData.assocSkill === 'None') {\n                    // If no combat skill with this name exists, search for next weapon\n                    if (typeof combatSkills[weaponName] === 'undefined') return;\n\n                    // A matching skill was found, set associated Skill to that combat skill\n                    itemData.assocSkill = combatSkills[weaponName].name;\n                }\n\n                // At this point, we know the Associated Skill is not blank. If that\n                // associated skill is in our combat skills list, get EML from there\n                // and then calculate AML and DML.\n                let assocSkill = itemData.assocSkill;\n                if (typeof combatSkills[assocSkill] !== 'undefined') {\n                    let skillEml = combatSkills[assocSkill].eml;\n                    itemData.attackMasteryLevel =\n                        (skillEml || 0) + (itemData.attack || 0) + (itemData.attackModifier || 0);\n                    itemData.defenseMasteryLevel = (skillEml || 0) + (itemData.defense || 0);\n                }\n            }\n        });\n\n        // Apply the individual AE for weapons\n        this._applyWeaponActiveEffects();\n    }\n\n    _setMinEML_AML_DML() {\n        this.items.forEach((it) => {\n            const itemData = it.system;\n            switch (it.type) {\n                case ItemType.SKILL:\n                case ItemType.PSIONIC:\n                case ItemType.SPELL:\n                case ItemType.INVOCATION:\n                    itemData.effectiveMasteryLevel = Math.max(itemData.effectiveMasteryLevel, 5);\n                    break;\n\n                case ItemType.WEAPONGEAR:\n                    itemData.attackMasteryLevel = Math.max(itemData.attackMasteryLevel, 5);\n                    itemData.defenseMasteryLevel = Math.max(itemData.defenseMasteryLevel, 5);\n                    break;\n\n                case ItemType.MISSILEGEAR:\n                    itemData.attackMasteryLevel = Math.max(itemData.attackMasteryLevel, 5);\n                    break;\n            }\n        });\n    }\n\n    _setMinMaxEML_AML_DML() {\n        this.items.forEach((it) => {\n            const itemData = it.system;\n            switch (it.type) {\n                case ItemType.SKILL:\n                case ItemType.PSIONIC:\n                case ItemType.SPELL:\n                case ItemType.INVOCATION:\n                    itemData.effectiveMasteryLevel = Math.min(Math.max(itemData.effectiveMasteryLevel, 5), 95);\n                    break;\n\n                case ItemType.WEAPONGEAR:\n                    itemData.attackMasteryLevel = Math.min(Math.max(itemData.attackMasteryLevel, 5), 95);\n                    itemData.defenseMasteryLevel = Math.min(Math.max(itemData.defenseMasteryLevel, 5), 95);\n                    break;\n\n                case ItemType.MISSILEGEAR:\n                    itemData.attackMasteryLevel = Math.min(Math.max(itemData.attackMasteryLevel, 5), 95);\n                    break;\n            }\n        });\n    }\n\n    _refreshSpellsAndInvocations() {\n        this._resetAllSpellsAndInvocations();\n        this.items.forEach((it) => {\n            const itemData = it.system;\n            if (it.type === ItemType.SKILL && itemData.type === SkillType.MAGIC) {\n                this._setConvocationSpells(\n                    it.name,\n                    itemData.skillBase.value,\n                    itemData.masteryLevel,\n                    itemData.effectiveMasteryLevel\n                );\n            } else if (it.type === ItemType.SKILL && itemData.type === SkillType.RITUAL) {\n                this._setRitualInvocations(\n                    it.name,\n                    itemData.skillBase.value,\n                    itemData.masteryLevel,\n                    itemData.effectiveMasteryLevel\n                );\n            }\n        });\n    }\n\n    _resetAllSpellsAndInvocations() {\n        this.items.forEach((it) => {\n            const itemData = it.system;\n            if (it.type === ItemType.SPELL || it.type === ItemType.INVOCATION) {\n                itemData.effectiveMasteryLevel = 0;\n                itemData.skillIndex = 0;\n                itemData.masteryLevel = 0;\n                itemData.effectiveMasteryLevel = 0;\n            }\n        });\n    }\n\n    _setConvocationSpells(convocation, sb, ml, eml) {\n        if (!convocation || convocation.length == 0) return;\n\n        let lcConvocation = convocation.toLowerCase();\n        this.items.forEach((it) => {\n            const itemData = it.system;\n            if (\n                it.type === ItemType.SPELL &&\n                itemData.convocation &&\n                itemData.convocation.toLowerCase() === lcConvocation\n            ) {\n                itemData.effectiveMasteryLevel = eml - itemData.level * 5;\n                itemData.skillIndex = Math.floor(ml / 10);\n                itemData.masteryLevel = ml;\n                itemData.skillBase = sb;\n            }\n        });\n    }\n\n    _setRitualInvocations(diety, sb, ml, eml) {\n        if (!diety || diety.length == 0) return;\n\n        let lcDiety = diety.toLowerCase();\n        this.items.forEach((it) => {\n            const itemData = it.system;\n            if (it.type === ItemType.INVOCATION && itemData.diety && itemData.diety.toLowerCase() === lcDiety) {\n                itemData.effectiveMasteryLevel = eml - itemData.circle * 5;\n                itemData.skillIndex = Math.floor(ml / 10);\n                itemData.masteryLevel = ml;\n                itemData.skillBase = sb;\n            }\n        });\n    }\n\n    _generateArmorLocationMap(data) {\n        // If there is no armor gear, don't make any changes to the armorlocations;\n        // leave all custom values alone.  But if there is even one piece\n        // of armor, then these calculations take over.\n        if (!this.itemTypes.armorgear.length) return;\n\n        // Initialize\n        const armorMap = {};\n        const ilMap = HM3.injuryLocations;\n        Object.keys(ilMap).forEach((ilName) => {\n            const name = ilMap[ilName].impactType;\n            if (name != 'base' && name != 'custom') {\n                armorMap[ilName] = {\n                    name: name,\n                    blunt: 0,\n                    edged: 0,\n                    piercing: 0,\n                    fire: 0,\n                    squeeze: 0,\n                    tear: 0,\n                    layers: ''\n                };\n            }\n        });\n\n        this.items.forEach((it) => {\n            const itemData = it.system;\n\n            if (it.type === ItemType.ARMORGEAR && itemData.isCarried && itemData.isEquipped) {\n                // Go through all of the armor locations for this armor,\n                // applying this armor's settings to each location\n\n                // If locations doesn't exist, then just abandon and continue\n                if (!itemData.hasOwnProperty('locations')) {\n                    return;\n                }\n\n                itemData.locations.forEach((l) => {\n                    // If the location is unknown, skip the rest\n                    if (typeof armorMap[l] != 'undefined') {\n                        const AQ = itemData.armorQuality || 0;\n                        // Add this armor's protection to the location\n                        if (itemData.hasOwnProperty('protection')) {\n                            armorMap[l].blunt += Math.min(\n                                2 * itemData.protection.blunt,\n                                itemData.protection.blunt + AQ\n                            );\n                            armorMap[l].edged += Math.min(\n                                2 * itemData.protection.edged,\n                                itemData.protection.edged + AQ\n                            );\n                            armorMap[l].piercing += Math.min(\n                                2 * itemData.protection.piercing,\n                                itemData.protection.piercing + AQ\n                            );\n                            armorMap[l].fire += Math.min(2 * itemData.protection.fire, itemData.protection.fire + AQ);\n                            armorMap[l].squeeze += Math.min(\n                                2 * itemData.protection.squeeze,\n                                itemData.protection.squeeze + AQ\n                            );\n                            armorMap[l].tear += Math.min(2 * itemData.protection.tear, itemData.protection.tear + AQ);\n                        } else {\n                            console.warn(`HM3 | item has no 'protection' property`);\n                        }\n\n                        // if a material has been specified, add it to the layers\n                        if (itemData.material.length > 0) {\n                            if (armorMap[l].layers.length > 0) {\n                                armorMap[l].layers += ', ';\n                            }\n                            let AQBonus = '';\n                            if (AQ !== 0) AQBonus = (AQ > 0 ? '+' : '-') + Math.abs(AQ);\n                            armorMap[l].layers += itemData.material + AQBonus;\n                        }\n                    }\n                });\n            }\n        });\n\n        // Remove empty items from armormap\n\n        // For efficiency, convert the map into an Array\n        const armorArray = Object.values(armorMap);\n\n        // We now have a full map of all of the armor, let's apply it to\n        // existing armor locations\n        this.items.forEach((it) => {\n            const itemData = it.system;\n            if (it.type === ItemType.ARMORLOCATION) {\n                let armorProt = armorArray.find((a) => a.name === itemData.impactType);\n\n                // We will ignore any armorProt if there is no armor values specified\n                if (armorProt) {\n                    itemData.blunt = armorProt.blunt;\n                    itemData.edged = armorProt.edged;\n                    itemData.piercing = armorProt.piercing;\n                    itemData.fire = armorProt.fire;\n                    itemData.layers = armorProt.layers;\n                }\n            }\n        });\n    }\n\n    async skillDevRoll(item, showChatMsg = true) {\n        if (this.type === ActorType.CREATURE && this.system.species.toLowerCase().includes('horse')) {\n            // Steed Initiative and Trample cannot be increased if they already equal or exceed Riding ML. (COMBAT 20)\n            if (['Initiative', 'Trample'].includes(item.name)) {\n                const rider = fromUuidSync(this.system.ownerUuid);\n                if (rider) {\n                    const riding = rider.items.find(\n                        (item) => item.type === game.hm3.ItemType.SKILL && item.name.includes('Riding')\n                    );\n                    if (item.system.masteryLevel >= riding.system.masteryLevel) {\n                        await game.hm3.GmSays({\n                            text:\n                                `<h4>${this.name}: ${item.name}</h4>` +\n                                game.i18n.localize('hm3.SDR.SteedSkills') +\n                                `<p style=\"font-size: smaller; font-variant: small-caps;\">(${item.name} ML${item.system.masteryLevel} &ge; Riding ML${riding.system.masteryLevel})</p>`,\n                            source: 'Combat 20'\n                        });\n                        await item.update({\n                            'system.improveFlag': 0\n                        });\n                        return false;\n                    }\n                }\n            }\n        }\n\n        const result = await DiceHM3.sdrRoll(item, showChatMsg);\n\n        if (result?.sdrIncr) {\n            // Characters may begin selecting specialties when a skill reaches ML 40 (SKILLS 2)\n            if (item.type === ItemType.SKILL && result.sdrIncr === 2) {\n                if (item.system.masteryLevel < 40) {\n                    await game.hm3.GmSays({\n                        text: `<h4>${this.name}: ${item.name}</h4>` + game.i18n.localize('hm3.SDR.SkillSpecialty'),\n                        source: 'SKILLS 2'\n                    });\n                    return false;\n                }\n            }\n\n            await item.update({\n                'system.improveFlag': 0,\n                'system.masteryLevel': +item.system.masteryLevel + (result.sdrIncr === 2 ? 2 : 1)\n            });\n            return true;\n        } else {\n            await item.update({'system.improveFlag': 0});\n            return false;\n        }\n    }\n\n    static chatListeners(html) {\n        html.on('click', '.card-buttons button', this._onChatCardAction.bind(this));\n    }\n\n    static async _onChatCardAction(event) {\n        event.preventDefault();\n        const button = event.currentTarget;\n        button.disabled = true;\n        const action = button.dataset.action;\n        const injuryLevel = button.dataset.injuryLevel;\n\n        let actor = null;\n        if (button.dataset.actorId) {\n            actor = game.actors.get(button.dataset.actorId);\n            if (!actor) {\n                console.warn(`HM3 | Action=${action}; Cannot find actor ${button.dataset.actorId}`);\n                button.disabled = false;\n                return null;\n            }\n        }\n        let token = null;\n        if (button.dataset.tokenId) {\n            token = canvas.tokens.get(button.dataset.tokenId);\n            if (!token) {\n                console.warn(`HM3 | Action=${action}; Cannot find token ${button.dataset.tokenId}`);\n                button.disabled = false;\n                return null;\n            }\n        }\n\n        if (!actor && token) {\n            actor = token.actor;\n        }\n\n        let atkToken = null;\n        if (button.dataset.atkTokenId) {\n            atkToken = canvas.tokens.get(button.dataset.atkTokenId);\n            if (!atkToken) {\n                console.warn(`HM3 | Action=${action}; Cannot find attack token ${button.dataset.atkTokenId}`);\n                button.disabled = false;\n                return null;\n            }\n        }\n\n        let defToken = null;\n        if (button.dataset.defTokenId) {\n            defToken = canvas.tokens.get(button.dataset.defTokenId);\n            if (!defToken) {\n                console.warn(`HM3 | Action=${action}; Cannot find defense token ${button.dataset.defTokenId}`);\n                button.disabled = false;\n                return null;\n            }\n        }\n\n        let opponentToken = null;\n        if (button.dataset.opponentTokenId) {\n            opponentToken = canvas.tokens.get(button.dataset.opponentTokenId);\n            if (!opponentToken) {\n                console.warn(`HM3 | Action=${action}; Cannot find opponent token ${button.dataset.opponentTokenId}`);\n                button.disabled = false;\n                return null;\n            }\n        }\n\n        switch (action) {\n            case 'injury':\n                macros.injuryRoll(token.actor, {\n                    actor: token.actor,\n                    aim: button.dataset.aim,\n                    aspect: button.dataset.aspect,\n                    atkToken,\n                    attackerId: button.dataset.atkTokenId,\n                    attackWeapon: button.dataset.attackWeapon,\n                    impact: button.dataset.impact,\n                    items: token.actor.items,\n                    token,\n                    tokenId: token.id\n                });\n                break;\n\n            case 'ata-attack':\n            case 'dta-attack':\n            case 'ota-attack':\n                macros.weaponAttack(null, false, atkToken, true);\n                break;\n\n            case 'dodge':\n                return macros.dodgeResume(\n                    atkToken.id,\n                    defToken.id,\n                    button.dataset.weaponType,\n                    button.dataset.weapon,\n                    button.dataset.effAml,\n                    button.dataset.aim,\n                    button.dataset.aspect,\n                    button.dataset.impactMod,\n                    button.dataset.grappleAtk === 'true',\n                    event.shiftKey || event.ctrlKey || event.altKey\n                );\n                break;\n\n            case 'ignore':\n                macros.ignoreResume(\n                    atkToken.id,\n                    defToken.id,\n                    button.dataset.weaponType,\n                    button.dataset.weapon,\n                    button.dataset.effAml,\n                    button.dataset.aim,\n                    button.dataset.aspect,\n                    button.dataset.impactMod,\n                    button.dataset.grappleAtk === 'true',\n                    event.shiftKey || event.ctrlKey || event.altKey\n                );\n                break;\n\n            case 'block':\n                macros.blockResume(\n                    atkToken.id,\n                    defToken.id,\n                    button.dataset.weaponType,\n                    button.dataset.weapon,\n                    button.dataset.effAml,\n                    button.dataset.aim,\n                    button.dataset.aspect,\n                    button.dataset.impactMod,\n                    button.dataset.grappleAtk === 'true',\n                    event.shiftKey || event.ctrlKey || event.altKey\n                );\n                break;\n\n            case 'counterstrike':\n                macros.meleeCounterstrikeResume(\n                    atkToken.id,\n                    defToken.id,\n                    button.dataset.weapon,\n                    button.dataset.effAml,\n                    button.dataset.aim,\n                    button.dataset.aspect,\n                    button.dataset.impactMod,\n                    button.dataset.grappleAtk === 'true',\n                    event.shiftKey || event.ctrlKey || event.altKey\n                );\n                break;\n\n            case 'esoteric':\n                macros.esotericResume(\n                    atkToken.id,\n                    defToken.id,\n                    button.dataset.weapon,\n                    button.dataset.effAml,\n                    event.shiftKey || event.ctrlKey || event.altKey\n                );\n                break;\n\n            case 'shock':\n                macros.shockRoll(false, actor, token);\n                break;\n\n            case 'willshock':\n                macros.willShockRoll({\n                    atkToken,\n                    attackerId: button.dataset.atkTokenId,\n                    attackWeapon: button.dataset.attackWeapon,\n                    impact: button.dataset.impact,\n                    items: token.actor.items,\n                    myActor: token.actor,\n                    noDialog: event.shiftKey || event.ctrlKey || event.altKey,\n                    token,\n                    tokenId: token.id\n                });\n                break;\n\n            case 'kill':\n                macros.killRoll({myActor: actor, token, injuryLevel});\n                break;\n\n            case 'stumble':\n                macros.stumbleRoll(false, actor, opponentToken, token);\n                break;\n\n            case 'fumble':\n                macros.fumbleRoll(false, actor, opponentToken, token);\n                break;\n\n            case 'throwdown':\n                macros.throwDownRoll(\n                    atkToken.id,\n                    defToken.id,\n                    Number(button.dataset.atkDice),\n                    Number(button.dataset.defDice)\n                );\n                break;\n\n            case 'falling':\n                macros.fallingRoll(false, actor, token);\n                break;\n\n            default:\n                console.warn(`HM3 | Action=${action}; No handler for this action`);\n                break;\n        }\n\n        button.disabled = false;\n    }\n\n    applyActiveEffects() {\n        const overrides = {};\n        this.statuses.clear();\n\n        // Organize non-disabled effects by their application priority\n        const changes = [];\n        for (const effect of this.allApplicableEffects(true)) {\n            if (!effect.active) continue;\n            changes.push(\n                ...effect.changes.map((change) => {\n                    const c = foundry.utils.deepClone(change);\n                    c.effect = effect;\n                    c.priority = c.priority ?? c.mode * 10;\n                    return c;\n                })\n            );\n            for (const statusId of effect.statuses) this.statuses.add(statusId);\n        }\n        changes.sort((a, b) => a.priority - b.priority);\n\n        // Apply all changes\n        for (let change of changes) {\n            if (!change.key) continue;\n            const changes = change.effect.apply(this, change);\n            Object.assign(overrides, changes);\n        }\n\n        // Expand the set of final overrides\n        this.overrides = foundry.utils.expandObject(overrides);\n    }\n\n    /**\n     * This method implements Item-based effects.  It applies three types of AE:\n     *   Skill EML - Modifies the EML of a specific Skill (or Psionic talent)\n     *\n     * Note that unlike normal Active Effects, these effects apply to the Itens data model,\n     * not the Actor's data model.\n     *\n     * The \"value\" field should look like \"<item name>:<magnitude>\"\n     */\n    _applySkillActiveEffects() {\n        const ownedItems = this.items;\n        const changes = this.allApplicableEffects(true).reduce((chgs, e) => {\n            if (!e.active) return chgs;\n            const emlChanges = e.changes.filter((chg) => {\n                if (chg.key === 'system.eph.itemEMLMod') {\n                    const val = utility.parseAEValue(chg.value);\n                    if (val.length != 2) return false;\n                    const magnitude = Number.parseFloat(val[1]);\n                    if (isNaN(magnitude)) return false;\n                    const skillName = val[0];\n                    return Array.from(ownedItems).some(\n                        (i) => i.name === skillName && (i.type === ItemType.SKILL || i.type === ItemType.PSIONIC)\n                    );\n                } else {\n                    return false;\n                }\n            });\n\n            return chgs.concat(\n                emlChanges.map((c) => {\n                    c = foundry.utils.duplicate(c);\n                    const val = utility.parseAEValue(c.value);\n                    const itemName = val[0];\n                    c.value = utility.truncate(Number.parseFloat(val[1]));\n                    c.key = 'system.effectiveMasteryLevel';\n                    c.item = this.itemTypes.skill.find((it) => it.name === itemName);\n                    if (!c.item) c.item = this.itemTypes.psionic.find((it) => it.name === itemName);\n                    c.effect = e;\n                    c.priority = c.priority ?? c.mode * 10;\n                    return c;\n                })\n            );\n        }, []);\n        changes.sort((a, b) => a.priority - b.priority);\n\n        // Apply all changes\n        for (let change of changes) {\n            if (!change.item) continue; // THIS IS AN ERROR; Should generate an error\n            change.effect.apply(change.item, change);\n            this.roundChange(change.item, change);\n        }\n    }\n\n    /**\n     * This method implements Item-based weapon effects.  It applies two types of AE:\n     *   Weapon Attack ML - Modifies the AML of a single weapon\n     *   Weapon Defense ML - Modifies the DML of a single weapon\n     *\n     * Note that unlike normal Active Effects, these effects apply to the Items data model,\n     * not the Actor's data model.\n     *\n     * The \"value\" field should look like \"<item name>:<magnitude>\"\n     */\n    _applyWeaponActiveEffects() {\n        const changes = this.allApplicableEffects(true).reduce((chgs, e) => {\n            if (!e.active) return chgs;\n            const amlChanges = e.changes.filter((chg) => {\n                if (chg.key === 'system.eph.itemAMLMod') {\n                    const val = utility.parseAEValue(chg.value);\n                    if (val.length != 2) return false;\n                    const magnitude = Number.parseInt(val[1], 10);\n                    if (isNaN(magnitude)) return false;\n                    const skillName = val[0];\n                    for (let item of this.items.contents) {\n                        if (\n                            item.name === skillName &&\n                            (item.type === ItemType.WEAPONGEAR || item.type === ItemType.MISSILEGEAR)\n                        )\n                            return true;\n                    }\n                }\n\n                return false;\n            });\n\n            const dmlChanges = e.changes.filter((chg) => {\n                if (chg.key === 'system.eph.itemDMLMod') {\n                    const val = utility.parseAEValue(chg.value);\n                    if (val.length != 2) return false;\n                    const magnitude = Number.parseInt(val[1], 10);\n                    if (isNaN(magnitude)) return false;\n                    const skillName = val[0];\n                    for (let item of this.items.contents) {\n                        if (item.name === skillName && item.type === ItemType.WEAPONGEAR) return true;\n                    }\n                }\n\n                return false;\n            });\n\n            const allChanges = amlChanges.concat(dmlChanges);\n            return chgs.concat(\n                allChanges.map((c) => {\n                    c = foundry.utils.duplicate(c);\n                    const val = utility.parseAEValue(c.value);\n                    const itemName = val[0];\n                    c.value = Number.parseInt(val[1], 10);\n                    switch (c.key) {\n                        case 'system.eph.itemAMLMod':\n                            c.key = 'system.attackMasteryLevel';\n                            c.item = this.itemTypes.weapongear.find((it) => it.name === itemName);\n                            if (!c.item) c.item = this.itemTypes.missilegear.find((it) => it.name === itemName);\n                            break;\n\n                        case 'system.eph.itemDMLMod':\n                            c.key = 'system.defenseMasteryLevel';\n                            c.item = this.itemTypes.weapongear.find((it) => it.name === itemName);\n                            break;\n                    }\n\n                    c.effect = e;\n                    c.priority = c.priority ?? c.mode * 10;\n                    return c;\n                })\n            );\n        }, []);\n        changes.sort((a, b) => a.priority - b.priority);\n\n        // Apply all changes\n        for (let change of changes) {\n            if (!change.item) continue; // THIS IS AN ERROR; Should generate an error\n            change.effect.apply(change.item, change);\n            this.roundChange(change.item, change);\n        }\n    }\n\n    roundChange(item, change) {\n        const current = foundry.utils.getProperty(item, change.key) ?? null;\n        const ct = foundry.utils.getType(current);\n        if (ct === 'number' && !Number.isInteger(current)) {\n            const update = Math.round(current + Number.EPSILON);\n            foundry.utils.setProperty(item, change.key, update);\n            return update;\n        } else {\n            return current;\n        }\n    }\n\n    /**\n     * This method searches through all the active effects on this actor and applies\n     * only that active effect whose key matches the specified 'property' value.\n     *\n     * The purpose is to allow an active effect to be applied after normal active effect\n     * processing is complete.\n     *\n     * @param {String} property The Actor data model property to apply\n     */\n    applySpecificActiveEffect(property) {\n        const overrides = {};\n\n        // Organize non-disabled effects by their application priority\n        const changes = this.allApplicableEffects(true).reduce((chgs, e) => {\n            if (!e.active) return chgs;\n            const chgList = e.changes.filter((chg) => chg.key === property);\n            return chgs.concat(\n                chgList.map((c) => {\n                    c = foundry.utils.duplicate(c);\n                    c.effect = e;\n                    c.priority = c.priority ?? c.mode * 10;\n                    return c;\n                })\n            );\n        }, []);\n        changes.sort((a, b) => a.priority - b.priority);\n\n        // Apply all changes\n        for (let change of changes) {\n            change.effect.apply(this, change);\n            const result = this.roundChange(this, change);\n            if (result !== null) overrides[change.key] = result;\n        }\n\n        // Expand the set of final overrides\n        foundry.utils.mergeObject(this.overrides, foundry.utils.expandObject(overrides));\n    }\n\n    /**\n     * This method applys a blanket skill AE modifier to all skills of a particular type.\n     * For instance, if the skill is a communication skill, then it will apply the\n     * data.eph.commSkillsMod modifier to the effectiveMasteryLevel for that skill.\n     *\n     * @param {ItemHM3} skill The item representing the skill to apply the active effect to.\n     */\n    applySkillTypeActiveEffect(skill) {\n        const skillData = skill.system;\n        // Organize non-disabled effects by their application priority\n        const changes = this.allApplicableEffects(true).reduce((chgs, e) => {\n            if (!e.active) return chgs;\n            if (![ItemType.SKILL, ItemType.PSIONIC].includes(skill.type)) return chgs;\n            const skillChanges = e.changes.filter(\n                (chg) =>\n                    (chg.key === 'system.eph.commSkillsMod' && skillData.type === SkillType.COMMUNICATION) ||\n                    (chg.key === 'system.eph.physicalSkillsMod' && skillData.type === SkillType.PHYSICAL) ||\n                    (chg.key === 'system.eph.combatSkillsMod' && skillData.type === SkillType.COMBAT) ||\n                    (chg.key === 'system.eph.craftSkillsMod' && skillData.type === SkillType.CRAFT) ||\n                    (chg.key === 'system.eph.ritualSkillsMod' && skillData.type === SkillType.RITUAL) ||\n                    (chg.key === 'system.eph.magicSkillsMod' && skillData.type === SkillType.MAGIC) ||\n                    (chg.key === 'system.eph.psionicTalentsMod' && skill.type === ItemType.PSIONIC)\n            );\n            return chgs.concat(\n                skillChanges.map((c) => {\n                    c = foundry.utils.duplicate(c);\n                    c.key = 'system.effectiveMasteryLevel';\n                    c.effect = e;\n                    c.priority = c.priority ?? c.mode * 10;\n                    return c;\n                })\n            );\n        }, []);\n        changes.sort((a, b) => a.priority - b.priority);\n\n        // Apply all changes\n        for (let change of changes) {\n            change.effect.apply(skill, change);\n            this.roundChange(skill, change);\n        }\n    }\n\n    /*    applyWeaponActiveEffect(weapon) {\n        // Organize non-disabled effects by their application priority\n        const changes = this.effects.reduce((chgs, e) => {\n            if (e.disabled) return chgs;\n            if (![ItemType.WEAPONGEAR, ItemType.MISSILEGEAR].includes(weapon.type)) return chgs;\n            const weaponChanges = e.changes.filter(\n                chg => ['system.eph.meleeAMLMod', 'system.eph.meleeDMLMod', 'system.eph.missileAMLMod'].includes(chg.key));\n            return chgs.concat(weaponChanges.map(c => {\n                c = foundry.utils.duplicate(c);\n                c.key = c.key === 'system.eph.meleeDMLMod' ? 'system.defenseMasteryLevel' : 'system.attackMasteryLevel';\n                c.effect = e;\n                c.priority = c.priority ?? (c.mode * 10);\n                return c;\n            }));\n        }, []);\n        changes.sort((a, b) => a.priority - b.priority);\n\n        // Apply all changes\n        for (let change of changes) {\n            change.effect.apply(weapon, change);\n            this.roundChange(weapon, change);\n        }\n    }\n*/\n\n    /**\n     * Run a custom macro assigned to this item.\n     *\n     * Returns an object with the following fields:\n     *\n     * type: type of roll (ability-d6, ability-d100, shock, stumble, fumble, dodge, healing)\n     * title: Chat label for Roll,\n     * origTarget: Unmodified target value,\n     * modifier: Modifier added to origTarget value,\n     * modifiedTarget: Final modified target value,\n     * rollValue: roll number,\n     * isSuccess: is roll successful,\n     * isCritical: is roll critical,\n     * result: 'MS', 'CS', 'MF', 'CF',\n     * description: textual description of roll success or failure,\n     * notes: rendered notes,\n     */\n    async runCustomMacro(rollInput) {\n        if (!rollInput) return null;\n\n        const actorData = this.system;\n        const rollResult = {\n            type: rollInput.type,\n            title: rollInput.title,\n            origTarget: rollInput.origTarget,\n            modifier: (rollInput.plusMinus === '-' ? -1 : 1) * rollInput.modifier,\n            modifiedTarget: rollInput.modifiedTarget,\n            rollValue: rollInput.rollValue,\n            isSuccess: rollInput.isSuccess,\n            isCritical: rollInput.isCritical,\n            result: rollInput.isSuccess ? (rollInput.isCritical ? 'CS' : 'MS') : rollInput.isCritical ? 'CF' : 'MF',\n            description: rollInput.description,\n            notes: rollInput.notes\n        };\n\n        if (!actorData.macros.command) return null;\n\n        const macro = await Macro.create(\n            {\n                name: `${this.name} ${this.type} macro`,\n                type: actorData.macros.type,\n                scope: 'global',\n                command: actorData.macros.command\n            },\n            {temporary: true}\n        );\n        if (!macro) {\n            console.error(\n                `HM3 | Failure initializing macro '${this.name} ${this.type} macro', type=${actorData.system.macros.type}, command='${actorData.system.macros.command}'`\n            );\n            return null;\n        }\n\n        const token = this.isToken ? this.token : null;\n\n        return utility.executeMacroScript(macro, {\n            actor: this,\n            token: token,\n            rollResult: rollResult\n        });\n    }\n\n    static _normalcdf(x) {\n        var t = 1 / (1 + 0.2316419 * Math.abs(x));\n        var d = 0.3989423 * Math.exp((-x * x) / 2);\n        var prob = d * t * (0.3193815 + t * (-0.3565638 + t * (1.781478 + t * (-1.821256 + t * 1.330274))));\n        if (x > 0) {\n            prob = 1 - prob;\n        }\n        return prob;\n    }\n\n    static normProb(z, mean, sd) {\n        let prob;\n        if (sd == 0) {\n            prob = z < mean ? 0 : 100;\n        } else {\n            prob = Math.round(ActorHM3._normalcdf((z - mean) / sd) * 100);\n        }\n\n        return prob;\n    }\n\n    static calcUniversalPenalty(actor) {\n        const data = actor.system;\n        data.universalPenalty = data.eph.totalInjuryLevels + (data.eph.fatigue || 0);\n        return data.universalPenalty;\n    }\n\n    static calcPhysicalPenalty(actor) {\n        const data = actor.system;\n        data.physicalPenalty = data.universalPenalty + data.encumbrance;\n        return data.physicalPenalty;\n    }\n\n    static calcShockIndex(actor) {\n        const data = actor.system;\n        const old = data.shockIndex.value;\n\n        if (actor.hasCondition(Condition.INANIMATE)) {\n            data.shockIndex.value = Math.max(100 - Math.round(100 * (data.totalInjuryLevels / data.endurance)), 0);\n        } else {\n            data.shockIndex.value = ActorHM3.normProb(\n                data.endurance,\n                data.universalPenalty * 3.5,\n                data.universalPenalty\n            );\n        }\n\n        if (actor.testUserPermission(game.user, 'OWNER')) {\n            if (data.shockIndex.value !== old) {\n                actor.update({'system.shockIndex': data.shockIndex}).then(() => {\n                    Hooks.call('hm3.onCalcShockIndex', actor, old, data.shockIndex.value);\n                    Hooks.call('hm3.onShockIndexChanged', actor, old, data.shockIndex.value);\n                    if (data.shockIndex.value < old) {\n                        Hooks.call('hm3.onShockIndexReduced', actor, old, data.shockIndex.value);\n                    } else if (data.shockIndex.value > old) {\n                        Hooks.call('hm3.onShockIndexIncreased', actor, old, data.shockIndex.value);\n                    }\n                });\n            } else {\n                Hooks.call('hm3.onCalcShockIndex', actor, old, data.shockIndex.value);\n            }\n        }\n    }\n}\n","import {getRelevantActors} from './utility';\n\n/**\n * Manage Active Effect instances through the Actor Sheet via effect control buttons.\n * @param {MouseEvent} event      The left-click event on the effect control\n * @param {Actor|Item} owner      The owning document which manages this effect\n */\nexport async function onManageActiveEffect(event, owner) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const li = a.closest('li');\n    const action = a.dataset.action;\n\n    let effect;\n    if (owner instanceof Actor)\n        effect = li.dataset.effectId ? owner.allApplicableEffects().find((e) => e.id === li.dataset.effectId) : null;\n    if (owner instanceof Item) effect = li.dataset.effectId ? owner.effects.get(li.dataset.effectId) : null;\n\n    switch (action) {\n        case 'create':\n            const dlgTemplate = 'systems/hm3/templates/dialog/active-effect-start.hbs';\n            const dialogData = {\n                gameTime: game.time.worldTime\n            };\n            if (game.combat) {\n                dialogData.combatId = game.combat.id;\n                dialogData.combatRound = game.combat.round;\n                dialogData.combatTurn = game.combat.turn;\n            }\n            const html = await renderTemplate(dlgTemplate, dialogData);\n\n            // Create the dialog window\n            return Dialog.prompt({\n                title: 'Select Start Time',\n                content: html,\n                label: 'OK',\n                callback: async (html) => {\n                    const form = html.querySelector('#active-effect-start');\n                    const fd = new FormDataExtended(form);\n                    const formdata = fd.object;\n                    const startType = formdata.startType;\n\n                    const aeData = {\n                        label: 'New Effect',\n                        icon: 'icons/svg/aura.svg',\n                        origin: owner.uuid\n                    };\n                    if (startType === 'nowGameTime') {\n                        aeData['duration.startTime'] = dialogData.gameTime;\n                        aeData['duration.seconds'] = 1;\n                    } else if (startType === 'nowCombat') {\n                        aeData['duration.combat'] = dialogData.combatId;\n                        aeData['duration.startRound'] = dialogData.combatRound;\n                        aeData['duration.startTurn'] = dialogData.combatTurn;\n                        aeData['duration.rounds'] = 1;\n                        aeData['duration.turns'] = 0;\n                    }\n                    return ActiveEffect.create(aeData, {parent: owner});\n                },\n                options: {jQuery: false}\n            });\n\n        case 'edit':\n            return effect.sheet.render(true);\n\n        case 'delete':\n            if (effect.parent instanceof Item && effect.parent?.parent instanceof Actor)\n                return ui.notifications.info(\n                    `This effect (${effect.name}) originates from an item (${effect.parent.name}) and cannot be deleted.`\n                );\n            return new Dialog({\n                title: 'Delete Active Effect',\n                content:\n                    '<p>Are you sure?</p><p>This active effect will be permanently deleted and cannot be recovered.</p>',\n                buttons: {\n                    yes: {\n                        icon: '<i class=\"fas fa-check\"></i>',\n                        label: 'Yes',\n                        callback: async (html) => {\n                            await effect.delete();\n                        }\n                    },\n                    no: {\n                        icon: '<i class=\"fas fa-times\"></i>',\n                        label: 'No',\n                        callback: async (html) => {}\n                    }\n                },\n                default: 'yes'\n            }).render(true);\n\n        case 'toggle':\n            const updateData = {};\n            if (effect.disabled) {\n                // Enable the Active Effect\n                updateData['disabled'] = false;\n\n                // Also set the timer to start now\n                updateData['duration.startTime'] = game.time.worldTime;\n                if (game.combat) {\n                    updateData['duration.startRound'] = game.combat.round;\n                    updateData['duration.startTurn'] = game.combat.turn;\n                }\n            } else {\n                // Disable the Active Effect\n                updateData['disabled'] = true;\n            }\n            return effect.update(updateData);\n\n        case 'void':\n        default:\n            break;\n    }\n}\n\nexport async function checkStartedActiveEffects() {\n    const actors = getRelevantActors();\n    for (let actor of actors) {\n        if (actor.allApplicableEffects(true)?.length) {\n            const aeStarted = await setAEStatus(actor);\n            actor.sheet.conditionalRender({aeStarted});\n        }\n    }\n\n    // // Handle game actors first\n    // for (let actor of game.actors.values()) {\n    //     if (actor.player?.active && actor.isOwner && actor.allApplicableEffects(true)?.length) {\n    //         const aeStarted = await setAEStatus(actor);\n    //         actor.sheet.conditionalRender({aeStarted});\n    //     }\n    // }\n\n    // // Next, handle tokens (only unlinked tokens)\n    // for (let token of canvas.tokens.ownedTokens.values()) {\n    //     if (!token.document.actorLink && token.actor?.allApplicableEffects(true)?.length) {\n    //         const aeStarted = await setAEStatus(token.actor);\n    //         token.actor.sheet.conditionalRender({aeStarted});\n    //     }\n    // }\n}\n\nasync function setAEStatus(actor) {\n    let aeStarted = false;\n    for (const effect of actor.allApplicableEffects(true)) {\n        if (effect.system.status === undefined) {\n            if (effect.started) {\n                await effect.update({'system.status': 'Running'});\n                aeStarted = true;\n            } else await effect.update({'system.status': 'Pending'});\n        } else if (effect.system.status === 'Pending') {\n            if (effect.started) {\n                await effect.update({'system.status': 'Running'});\n                aeStarted = true;\n            }\n        } else if (effect.system.status === 'Started') {\n            // rename\n            await effect.update({'system.status': 'Running'});\n        }\n    }\n    return aeStarted;\n}\n\n/**\n * This function searches all actors and tokens that are owned\n * by the user and disables them if their duration has expired.\n */\nexport async function checkExpiredActiveEffects() {\n    const actors = getRelevantActors();\n    for (let actor of actors) {\n        if (actor.allApplicableEffects(true)?.length) {\n            const aeDisabled = await disableExpiredAE(actor);\n            actor.sheet.conditionalRender({aeDisabled});\n        }\n    }\n\n    // // Handle game actors first\n    // for (let actor of game.actors.values()) {\n    //     if (actor.player?.active && actor.isOwner && actor.allApplicableEffects(true)?.length) {\n    //         const aeDisabled = await disableExpiredAE(actor);\n    //         actor.sheet.conditionalRender({aeDisabled});\n    //     }\n    // }\n\n    // // Next, handle tokens (only unlinked tokens)\n    // for (let token of canvas.tokens.ownedTokens.values()) {\n    //     if (!token.document.actorLink && token.actor?.allApplicableEffects(true)?.length) {\n    //         const aeDisabled = await disableExpiredAE(token.actor);\n    //         token.actor.sheet.conditionalRender({aeDisabled});\n    //     }\n    // }\n}\n\n/**\n * Checks all of the active effects for a single actor and disables\n * them if their duration has expired.\n *\n * @param {ActorHM3} actor\n */\nasync function disableExpiredAE(actor) {\n    let changed = false;\n    for (let effect of actor.allApplicableEffects(true)) {\n        if (!effect.disabled) {\n            const duration = effect.duration;\n            if (duration.type !== 'none') {\n                if (duration.remaining <= 0) {\n                    await effect.update({'disabled': true, 'system.status': 'Ended'});\n                    changed = true;\n                }\n            }\n        }\n    }\n    return changed;\n}\n","import {Hook} from './hm3-types.js';\nimport {getActorFromMacro} from './utility.js';\n\nconst supportedHMHooks = Object.values(Hook);\n\nconst supportedFoundryHooks = [\n    'applyTokenStatusEffect',\n    'combatRound',\n    'combatStart',\n    'combatTurn',\n    'combatTurnChange',\n    'createCombatant',\n    'createToken',\n    'deleteCombatant',\n    'deleteToken',\n    'pauseGame',\n    'preUpdateCombat',\n    'preUpdateCombatant',\n    'preUpdateToken',\n    'targetToken',\n    'updateCombat',\n    'updateCombatant',\n    'updateToken',\n    'updateWorldTime'\n];\n\n/**\n * Manage Macro instances through the Actor Sheet via macro control buttons.\n * @param {MouseEvent} event      The left-click event on the effect control\n * @param {Actor|Item} owner      The owning document which manages this effect\n */\nexport async function onManageMacro(event, owner) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const li = a.closest('li');\n    const clickOnName = !!(\n        li.firstElementChild?.className?.includes('macro-name') &&\n        a.dataset.action !== 'create' &&\n        a.dataset.action !== 'delete'\n    );\n    const action = clickOnName ? 'edit' : a.dataset.action;\n    let macro = li.dataset.macroId ? game.macros.get(li.dataset.macroId) : null;\n    switch (action) {\n        case 'create':\n            macro = await Macro.create({name: `New macro`, type: 'script', scope: 'global', folder: owner.macrofolder});\n            await macro.setFlag('hm3', 'trigger', 'manual');\n            await macro.setFlag('hm3', 'ownerId', owner.id);\n\n            return macro.sheet.render(true);\n\n        case 'edit':\n            return macro.sheet.render(true);\n\n        case 'delete':\n            return new Dialog({\n                title: 'Delete Macro',\n                content: '<p>Are you sure?</p><p>This macro will be permanently deleted and cannot be recovered.</p>',\n                buttons: {\n                    yes: {\n                        icon: '<i class=\"fas fa-check\"></i>',\n                        label: 'Yes',\n                        callback: async (html) => {\n                            await macro.delete();\n                            getActorFromMacro(macro)?.sheet.render();\n                        }\n                    },\n                    no: {\n                        icon: '<i class=\"fas fa-times\"></i>',\n                        label: 'No',\n                        callback: async (html) => {}\n                    }\n                },\n                default: 'yes'\n            }).render(true);\n    }\n}\n\n/**\n * TODO\n */\nexport async function registerHooks() {\n    [...supportedFoundryHooks, ...supportedHMHooks].forEach((hook) => {\n        Hooks.on(hook, async (...args) => await executeHook(...args, hook));\n    });\n}\n\n/**\n * TODO\n * @param  {...any} args\n */\nasync function executeHook(...args) {\n    const hook = args.pop();\n\n    await Promise.all(\n        game.macros.contents.map(async (macro) => {\n            const trigger = macro.getFlag('hm3', 'trigger');\n            if (trigger === hook) {\n                if (macro.canExecute) {\n                    const actorId = macro.getFlag('hm3', 'ownerId') || null;\n                    try {\n                        await macro.execute({\n                            macroActor: game.actors.get(actorId) || null,\n                            macroTokens: actorId\n                                ? canvas.scene.tokens.contents.filter((t) => t.actor.id === actorId)\n                                : null,\n                            allOtherTokens: actorId\n                                ? canvas.scene.tokens.contents.filter((t) => t.actor.id !== actorId)\n                                : null,\n                            triggerArgs: args, // original args from the hook\n                            macros: game.hm3.macros // convenience\n                        });\n                    } catch (err) {\n                        if (game.user.isGM)\n                            ui.notifications.error(\n                                `Error executing macro ${macro.name} (${macro.id}) for hook ${hook}:`\n                            );\n                    }\n                }\n            }\n        })\n    );\n}\n","import {onManageActiveEffect} from '../effect.js';\nimport {ActorType, CompanionType, ItemType, SkillType} from '../hm3-types.js';\nimport {onManageMacro} from '../macro.js';\nimport * as macros from '../macros.js';\nimport * as utility from '../utility.js';\n\n/**\n * Extend the basic ActorSheet with some common capabilities\n * @extends {ActorSheet}\n */\nexport class BaseActorSheetHM3v2 extends ActorSheet {\n    /**\n     * Is this PseudoDocument sheet editable by the current User?\n     * This is governed by the editPermission threshold configured for the class.\n     * @type {boolean}\n     */\n    // get isEditable() {\n    //     if (game.packs.get(this.item.pack)?.locked) return false;\n    //     return this.item.testUserPermission(game.user, this.options.editPermission);\n    // }\n\n    /** @inheritDoc */\n    async _prepareContext(options) {\n        return {\n            ...(await super._prepareContext(options)),\n            document: this.document,\n            editable: this.isEditable,\n            options: this.options\n        };\n    }\n\n    /** @override */\n    async getData(options = {}) {\n        const start = performance.now();\n\n        if (!this.actor.system.eph.stumbleTarget) {\n            // sometimes it is not initialized correctly\n            this.actor.prepareDerivedData();\n        }\n\n        let context = foundry.utils.mergeObject(super.getData(options), {actor: null, items: null});\n        context = foundry.utils.mergeObject(context, {\n            aproxy: this.actor.proxy,\n            config: CONFIG.HM3,\n            customSunSign: game.settings.get('hm3', 'customSunSign'),\n            dtypes: ['String', 'Number', 'Boolean'],\n            editable: this.isEditable && this._mode === this.constructor.MODES.EDIT,\n            effects: this.actor.allApplicableEffects().map((effect) => {\n                return {\n                    'changes': utility.aeChanges(effect),\n                    'disabled': effect.disabled,\n                    'duration': utility.aeDuration(effect),\n                    'id': effect.id,\n                    'img': effect.img,\n                    'name': effect.name,\n                    'source': effect,\n                    'sourceName': effect.sourceName\n                };\n            }),\n            filters: this._filters,\n            hasRwPermission: game.user.isGM || !game.settings.get('hm3', 'strictGmMode'),\n            hasSteed: this.actor.hasLinkedSteed(),\n            isCharacter: this.document.type === ActorType.CHARACTER,\n            isCharacterMancer: this.actor.getFlag('hm3', 'CharacterMancer') || false,\n            isContainer: this.document.type === ActorType.CONTAINER,\n            isCreature: this.document.type === ActorType.CREATURE,\n            isGM: game.user.isGM,\n            isSkillImprovement: this.actor.skillImprovement,\n            items: this.actor.proxies.filter((item) => item.visible).sort((a, b) => a.sort - b.sort),\n            labels: this.actor.labels || {},\n            macroTypes: [\n                {key: 'chat', label: 'Chat'},\n                {key: 'script', label: 'Script'}\n            ],\n            strictMode: game.settings.get('hm3', 'strictGmMode')\n        });\n        context = foundry.utils.mergeObject(context, {\n            cssClass: context.editable ? 'editable' : this.isEditable ? 'interactable' : 'locked',\n            ...this._itemLists(context.items)\n        });\n\n        context.descriptionHTML = await TextEditor.enrichHTML(this.object.system.description, {\n            secrets: game.user.isGM,\n            relativeTo: this.object.system\n        });\n\n        console.info(`HM3 | ActorHM3.getData: ${utility.truncate(performance.now() - start)} ms`);\n\n        return context;\n    }\n\n    _itemLists(proxies) {\n        return {\n            get physicalSkills() {\n                return proxies.filter((item) => item.type === ItemType.SKILL && item.subtype === SkillType.PHYSICAL);\n            },\n            get communicationSkills() {\n                return proxies.filter(\n                    (item) => item.type === ItemType.SKILL && item.subtype === SkillType.COMMUNICATION\n                );\n            },\n            get combatSkills() {\n                return proxies.filter((item) => item.type === ItemType.SKILL && item.subtype === SkillType.COMBAT);\n            },\n            get craftSkills() {\n                return proxies.filter((item) => item.type === ItemType.SKILL && item.subtype === SkillType.CRAFT);\n            },\n            get magicSkills() {\n                return proxies.filter((item) => item.type === ItemType.SKILL && item.subtype === SkillType.MAGIC);\n            },\n            get ritualSkills() {\n                return proxies.filter((item) => item.type === ItemType.SKILL && item.subtype === SkillType.RITUAL);\n            },\n            get companions() {\n                return proxies.filter((item) => item.type === ItemType.COMPANION);\n            },\n            get injuries() {\n                return proxies.filter((item) => item.type === ItemType.INJURY);\n            },\n            get invocations() {\n                return proxies.filter((item) => item.type === ItemType.INVOCATION);\n            },\n            get missiles() {\n                return proxies.filter((item) => item.type === ItemType.MISSILEGEAR);\n            },\n            get psionics() {\n                return proxies.filter((item) => item.type === ItemType.PSIONIC);\n            },\n            get spells() {\n                return proxies.filter((item) => item.type === ItemType.SPELL);\n            },\n            get esoterics() {\n                return proxies.filter((item) =>\n                    [ItemType.INVOCATION, ItemType.PSIONIC, ItemType.SPELL].includes(item.type)\n                );\n            },\n            get companionParty() {\n                return proxies.filter(\n                    (item) => item.type === ItemType.COMPANION && item.subtype === CompanionType.PARTY\n                );\n            },\n            get companionAnimal() {\n                return proxies.filter(\n                    (item) => item.type === ItemType.COMPANION && item.subtype === CompanionType.ANIMAL\n                );\n            },\n            get companionSteed() {\n                return proxies.filter(\n                    (item) => item.type === ItemType.COMPANION && item.subtype === CompanionType.STEED\n                );\n            },\n            get companionFollower() {\n                return proxies.filter(\n                    (item) => item.type === ItemType.COMPANION && item.subtype === CompanionType.FOLLOWER\n                );\n            },\n            get companionConnection() {\n                return proxies.filter(\n                    (item) => item.type === ItemType.COMPANION && item.subtype === CompanionType.CONNECTION\n                );\n            },\n            get companionFriend() {\n                return proxies.filter(\n                    (item) => item.type === ItemType.COMPANION && item.subtype === CompanionType.FRIEND\n                );\n            },\n            get companionFoe() {\n                return proxies.filter((item) => item.type === ItemType.COMPANION && item.subtype === CompanionType.FOE);\n            },\n            // Check for esoteric attack options\n            get esotericAtkOptions() {\n                proxies.filter(\n                    (item) => game.hm3.config.esotericCombatItems.attack.includes(item.name) && item.isEquipped\n                );\n            },\n            // Check for esoteric defense options\n            get esotericDefOptions() {\n                proxies.filter((item) => game.hm3.config.esotericCombatItems.defense.includes(item.name));\n            }\n        };\n    }\n\n    /** @override */\n    _onSortItem(event, itemData) {\n        // TODO - for now, don't allow sorting for Synthetic Actors\n        if (this.actor.isToken) return;\n\n        if (!itemData.type.endsWith('gear')) return super._onSortItem(event, itemData);\n\n        // Get the drag source and its siblings\n        const source = this.actor.items.get(itemData._id);\n        const siblings = this.actor.items.filter((i) => {\n            return i.type.endsWith('gear') && i.id !== source.id;\n        });\n\n        // Get the drop target\n        const dropTarget = event.target.closest('.item');\n        const targetId = dropTarget ? dropTarget.dataset.itemId : null;\n        const target = siblings.find((s) => s.id === targetId);\n\n        // Ensure we are only sorting like-types\n        if (target && !target.type.endsWith('gear')) return;\n\n        // Perform the sort\n        const sortUpdates = SortingHelpers.performIntegerSort(source, {target: target, siblings});\n        const updateData = sortUpdates.map((u) => {\n            const update = u.update;\n            update._id = u.target._id;\n            return update;\n        });\n\n        // Perform the update\n        return this.actor.updateEmbeddedDocuments('Item', updateData);\n    }\n\n    /** @override */\n    async _onDropActor(event, data) {\n        if (!this.actor.isOwner) return false;\n\n        const companion = await Actor.fromDropData(data);\n        if (!companion || companion?.type === 'container') return false;\n        if (this.actor.id === companion.id) {\n            ui.notifications.warn('You cannot add yourself.');\n            return false;\n        }\n\n        await this.actor.createEmbeddedDocuments('Item', [\n            {\n                name: companion.name,\n                type: 'companion',\n                system: {\n                    actorUuid: companion.uuid\n                }\n            }\n        ]);\n\n        return true;\n    }\n\n    /** @override */\n    async _onDropItem(event, data) {\n        if (!this.actor.isOwner) return false;\n\n        const droppedItem = await Item.fromDropData(data);\n\n        // Check if coming from a compendium pack ||\n        // Skills, spells, etc. (non-gear) ||\n        // Gear coming from world items list\n        if (droppedItem.pack || !droppedItem.type?.endsWith('gear') || !droppedItem.parent) {\n            const closestContainer = event.target.closest('[data-container-id]');\n            const destContainer = closestContainer?.dataset.containerId\n                ? closestContainer.dataset.containerId\n                : 'on-person';\n\n            let newItem = await super._onDropItem(event, data);\n            if (!newItem) return;\n            newItem = newItem[0];\n            // If the item is some type of gear (other than containergear), then\n            // make sure we set the container to the same as the dropped location\n            // (this allows people to move items into containers easily)\n            if (newItem?.type?.endsWith('gear') && newItem?.type !== 'containergear') {\n                if (newItem.system.container !== destContainer) {\n                    await newItem.update({'system.container': destContainer});\n                }\n            }\n        } else {\n            // At this point we know the item is some sort of gear, and coming from an actor\n\n            // Destination containerid: set to 'on-person' if a containerid can't be found\n            const closestContainer = event.target.closest('[data-container-id]');\n            const destContainer = closestContainer?.dataset.containerId\n                ? closestContainer.dataset.containerId\n                : 'on-person';\n\n            // Dropping an item into the same actor (Token or Linked)\n            if (\n                (droppedItem.parent.isToken && this.actor.token?.id === droppedItem.parent.token.id) ||\n                (!droppedItem.parent.isToken && !this.actor.isToken && droppedItem.parent.id === this.actor.id)\n            ) {\n                // If the item is some type of gear (other than containergear), then\n                // make sure we set the container to the same as the dropped location\n                // (this allows people to move items into containers easily)\n                if (droppedItem.type.endsWith('gear') && droppedItem.type !== 'containergear') {\n                    if (droppedItem.system.container !== destContainer) {\n                        await droppedItem.update({'system.container': destContainer});\n                    }\n                }\n\n                return super._onDropItem(event, data);\n            }\n\n            // At this point we know this dropped item is Gear coming from an actor,\n\n            // Containers are a special case, and they need to be processed specially\n            if (droppedItem.type === ItemType.CONTAINERGEAR) return this._moveContainer(event, droppedItem);\n\n            // Set the destination container to the closest drop containerid\n            droppedItem.system.container = destContainer;\n\n            const quantity = droppedItem.system.quantity;\n\n            // Source quantity really should never be 0 or negative; if so, just decline\n            // the drop request.\n            if (quantity <= 0) return false;\n\n            if (quantity > 1) {\n                // Ask how many to move\n                return this._moveQtyDialog(event, droppedItem);\n            } else {\n                return this._moveItems(droppedItem, 1);\n            }\n        }\n    }\n\n    async _moveContainer(event, item) {\n        // create new container\n\n        if (!item.parent) {\n            ui.notifications.warn(`Error accessing actor where container is coming from, move aborted`);\n            throw Error(`Error accessing actor where container is coming from, move aborted`);\n        }\n\n        let itData = item.toObject;\n        delete itData._id;\n        const containerResult = await Item.create(itData, {parent: this.actor});\n        if (!containerResult) {\n            ui.notifications.warn(`Error while moving container, move aborted`);\n            return null;\n        }\n\n        // move all items into new container\n        let failure = false;\n        for (let it of item.parent.items.values()) {\n            if (!failure && it.system.container === data.id) {\n                itData = it.toObject();\n                delete itData._id;\n                itData.system.container = containerResult.id;\n                const result = await Item.create(itData, {parent: this.actor});\n                if (result) {\n                    await Item.deleteDocuments([it.id], {parent: item.parent});\n                } else {\n                    failure = true;\n                }\n            }\n        }\n\n        if (failure) {\n            ui.notifications.error(\n                `Error duing move of items from source to destination, container has been only partially moved!`\n            );\n            return null;\n        }\n\n        // delete old container\n        await Item.deleteDocuments([data._id], {parent: item.parent});\n        return containerResult;\n    }\n\n    async _moveQtyDialog(event, item) {\n        // Get source actor\n        if (!item.parent) {\n            ui.notifications.warn(`Error accessing actor where container is coming from, move aborted`);\n            throw Error(`Error accessing actor where container is coming from, move aborted`);\n        }\n\n        // Render modal dialog\n        let dlgTemplate = 'systems/hm3/templates/dialog/item-qty.hbs';\n        let dialogData = {\n            itemName: item.name,\n            sourceName: item.parent.name,\n            targetName: this.actor.name,\n            maxItems: item.system.quantity\n        };\n\n        const dlghtml = await renderTemplate(dlgTemplate, dialogData);\n\n        // Create the dialog window\n        return Dialog.prompt({\n            title: 'Move Items',\n            content: dlghtml,\n            label: 'OK',\n            callback: async (html) => {\n                const form = html.querySelector('#items-to-move');\n                const fd = new FormDataExtended(form);\n                const formdata = fd.object;\n                let formQtyToMove = parseInt(formdata.itemstomove);\n\n                if (formQtyToMove <= 0) {\n                    return false;\n                } else {\n                    return this._moveItems(item, formQtyToMove);\n                }\n            },\n            options: {jQuery: false}\n        });\n    }\n\n    async _moveItems(item, moveQuantity) {\n        const sourceName = item.name;\n        const sourceType = item.type;\n        const sourceQuantity = item.system.quantity;\n\n        if (!item.parent) {\n            ui.notifications.warn(`Error accessing actor where container is coming from, move aborted`);\n            return null;\n        }\n\n        // Look for a similar item locally\n        let result = this.actor.items.find((it) => it.type === sourceType && it.name === sourceName);\n\n        if (result) {\n            // update quantity\n            const newTargetQuantity = result.system.quantity + moveQuantity;\n            await result.update({'system.quantity': newTargetQuantity});\n        } else {\n            // Create an item\n            const itData = item.toObject();\n            delete itData._id;\n\n            itData.system.quantity = moveQuantity;\n            itData.system.container = 'on-person';\n            result = await Item.create(itData, {parent: this.actor});\n        }\n\n        if (result) {\n            if (moveQuantity >= sourceQuantity) {\n                await Item.deleteDocuments([item.id], {parent: item.parent});\n            } else {\n                const newSourceQuantity = sourceQuantity - moveQuantity;\n                await item.update({'system.quantity': newSourceQuantity});\n            }\n        }\n        return result;\n    }\n\n    /** @override */\n    async _onDropItemCreate(itemData) {\n        const actor = this.actor;\n        if (!actor.isOwner) return false;\n\n        if (!itemData.type.endsWith('gear')) {\n            if (actor.type === ActorType.CONTAINER) {\n                ui.notifications.warn(\n                    `You may only place physical objects in a container; drop of ${itemData.name} refused.`\n                );\n                return false;\n            }\n\n            actor.items.forEach((it) => {\n                // Generally, if the items have the same type and name,\n                // then merge the dropped item onto the existing item.\n                if (it.type === itemData.type && it.name === itemData.name) {\n                    this.mergeItem(it, itemData);\n\n                    // Don't actually allow the new item\n                    // to be created.\n                    return false;\n                }\n            });\n\n            return Item.create(itemData, {parent: this.actor});\n        }\n\n        return super._onDropItemCreate(itemData);\n    }\n\n    /** @override */\n    activateListeners(html) {\n        super.activateListeners(html);\n\n        if (!game.user.isGM) {\n            html.find('.facade-image').click(async (ev) => {\n                new ImagePopout(this.actor.system.bioImage, {\n                    title: this.actor.name,\n                    uuid: this.actor.uuid\n                }).render(true);\n            });\n\n            html.find('.profile-img').click(async (ev) => {\n                new ImagePopout(this.actor.img, {\n                    title: this.actor.name,\n                    uuid: this.actor.uuid\n                }).render(true);\n            });\n        }\n\n        // Everything below here is only needed if the sheet is editable\n        if (!this.options.editable) return;\n\n        this.actor.proxy.activateListeners(html);\n\n        html.find('.character-mancer').click(async (ev) => {\n            await this.actor.unsetFlag('hm3', 'CharacterMancer');\n            this.actor.sheet.render();\n        });\n\n        // Add Inventory Item\n        html.find('.item-create').click(this._onItemCreate.bind(this));\n\n        // Update Inventory Item\n        html.find('.item-edit, .gear-name').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const item = this.actor.items.get(li.data('itemId'));\n            item.sheet.render(true);\n        });\n\n        // Delete Inventory Item\n        html.find('.item-delete').click(this._onItemDelete.bind(this));\n\n        // Dump Esoteric Description to Chat\n        html.find('.item-dumpdesc').click(this._onDumpEsotericDescription.bind(this));\n\n        html.find('.item-minimize, .item-maximize').click(this._onContainerCollapse.bind(this));\n\n        // html.on('click', '.fff-name', (ev) => {\n        //     const el = ev.currentTarget.querySelector('#companion'); //.dataset; // .innerText;\n        //     if (!el) return;\n        //     const uuid = el.dataset.itemActorUuid;\n        //     const actor = fromUuidSync(uuid);\n        //     actor.sheet.render(true);\n        // });\n\n        html.on('click', '.item-name, .spell-name', (ev) => {\n            switch (ev.currentTarget.innerText) {\n                case 'Magic Spells':\n                    ui.notifications.info('Magic Spells sorted!');\n                    const convocations = new Map([\n                        ['Fyvria', 1],\n                        ['Jmorvi', 2],\n                        ['Lyahvi', 3],\n                        ['Odivshe', 4],\n                        ['Peleahn', 5],\n                        ['Savorya', 6],\n                        ['Neutral', 7]\n                    ]);\n                    this.object.items.forEach(async (i) => {\n                        if (i.type === ItemType.SPELL) {\n                            await i.update({\n                                'sort': Number(\n                                    convocations.get(i.system.convocation).toString() +\n                                        i.system.level.toString() +\n                                        (i.name.toLowerCase().charCodeAt(0) - 87).toString() +\n                                        (i.name.toLowerCase().charCodeAt(1) - 87).toString() +\n                                        (i.name.toLowerCase().charCodeAt(2) - 87).toString() +\n                                        ((i.name.toLowerCase().charCodeAt(3) | 97) - 87).toString() +\n                                        ((i.name.toLowerCase().charCodeAt(4) | 97) - 87).toString()\n                                )\n                            });\n                        }\n                    });\n                    break;\n\n                case 'Ritual Invocations':\n                    ui.notifications.info('Ritual Invocations sorted!');\n                    this.object.items.forEach(async (i) => {\n                        if (i.type === ItemType.INVOCATION) {\n                            await i.update({\n                                'sort': Number(\n                                    i.system.circle.toString() +\n                                        (i.name.toLowerCase().charCodeAt(0) - 87).toString() +\n                                        (i.name.toLowerCase().charCodeAt(1) - 87).toString() +\n                                        (i.name.toLowerCase().charCodeAt(2) - 87).toString() +\n                                        ((i.name.toLowerCase().charCodeAt(3) | 97) - 87).toString() +\n                                        ((i.name.toLowerCase().charCodeAt(4) | 97) - 87).toString()\n                                )\n                            });\n                        }\n                    });\n                    break;\n\n                case 'Psionic Talents':\n                    ui.notifications.info('Psionic Talents sorted!');\n                    this.object.items.forEach(async (i) => {\n                        if (i.type === ItemType.PSIONIC) {\n                            await i.update({\n                                'sort': Number(\n                                    (i.name.toLowerCase().charCodeAt(0) - 87).toString() +\n                                        (i.name.toLowerCase().charCodeAt(1) - 87).toString() +\n                                        (i.name.toLowerCase().charCodeAt(2) - 87).toString() +\n                                        ((i.name.toLowerCase().charCodeAt(3) | 97) - 87).toString() +\n                                        ((i.name.toLowerCase().charCodeAt(4) | 97) - 87).toString()\n                                )\n                            });\n                        }\n                    });\n                    break;\n            }\n        });\n\n        // Active Effect management\n        html.find('.effect-control, .effect-name').click((ev) => onManageActiveEffect(ev, this.document));\n\n        // Macro management\n        html.find('.macro-control, .macro-name').click((ev) => onManageMacro(ev, this.document));\n\n        // Ensure all text is selected when entering number input field\n        html.on('click', \"input[type='number']\", (ev) => {\n            ev.currentTarget.select();\n        });\n\n        // Ensure all text is selected when entering text input field\n        html.on('click', \"input[type='text']\", (ev) => {\n            ev.currentTarget.select();\n        });\n\n        html.on('change', \"input[type='text']\", (ev) => {\n            if (ev.target.name === 'item-quantity-special') {\n                this._handleQtyInput(ev.target.id.slice(0, 16), ev.target.value);\n            } else if (ev.target.name === 'item-sbx-special') {\n                this._handleSbxInput(ev.target.id.slice(0, 16), ev.target.value);\n            } else if (ev.target.name === 'item-op-special') {\n                this._handleOpInput(ev.target.id.slice(0, 16), ev.target.value);\n            }\n        });\n\n        // Filter on name for Skills\n        // html.on('keyup', '.skill-name-filter', (ev) => {\n        //     this.skillNameFilter = $(ev.currentTarget).val();\n        //     const lcSkillNameFilter = this.skillNameFilter.toLowerCase();\n        //     let skills = html.find('.skill-item');\n        //     for (let skill of skills) {\n        //         const skillName = skill.getAttribute('data-item-name');\n        //         if (lcSkillNameFilter) {\n        //             if (skillName.toLowerCase().includes(lcSkillNameFilter)) {\n        //                 $(skill).show();\n        //             } else {\n        //                 $(skill).hide();\n        //             }\n        //         } else {\n        //             $(skill).show();\n        //         }\n        //     }\n        // });\n\n        // Filter on name for gear\n        // html.on('keyup', '.gear-name-filter', (ev) => {\n        //     this.gearNameFilter = $(ev.currentTarget).val();\n        //     const lcGearNameFilter = this.gearNameFilter.toLowerCase();\n        //     let gearItems = html.find('.gear-item');\n        //     for (let gear of gearItems) {\n        //         const gearName = gear.getAttribute('data-item-name');\n        //         if (lcGearNameFilter) {\n        //             if (gearName.toLowerCase().includes(lcGearNameFilter)) {\n        //                 $(gear).show();\n        //             } else {\n        //                 $(gear).hide();\n        //             }\n        //         } else {\n        //             $(gear).show();\n        //         }\n        //     }\n        // });\n\n        // Filter on name for macros\n        html.on('keyup', '.macros-name-filter', (ev) => {\n            this.macrosNameFilter = $(ev.currentTarget).val();\n            const lcMacrosNameFilter = this.macrosNameFilter.toLowerCase();\n            let macroItems = html.find('.macro');\n            for (let macro of macroItems) {\n                const macroName = macro.getAttribute('data-macro-name');\n                if (lcMacrosNameFilter) {\n                    if (macroName.toLowerCase().includes(lcMacrosNameFilter)) {\n                        $(macro).show();\n                    } else {\n                        $(macro).hide();\n                    }\n                } else {\n                    $(macro).show();\n                }\n            }\n        });\n\n        // Filter on name for effects\n        // html.on('keyup', '.effects-name-filter', (ev) => {\n        //     this.effectsNameFilter = $(ev.currentTarget).val();\n        //     const lcEffectsNameFilter = this.effectsNameFilter.toLowerCase();\n        //     let effectItems = html.find('.effect');\n        //     for (let effect of effectItems) {\n        //         const effectName = effect.getAttribute('data-effect-name');\n        //         if (lcEffectsNameFilter) {\n        //             if (effectName.toLowerCase().includes(lcEffectsNameFilter)) {\n        //                 $(effect).show();\n        //             } else {\n        //                 $(effect).hide();\n        //             }\n        //         } else {\n        //             $(effect).show();\n        //         }\n        //     }\n        // });\n\n        // Standard 1d100 Skill Roll\n        // html.find('.skill-roll').click((ev) => {\n        //     const li = $(ev.currentTarget).parents('.item');\n        //     const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n        //     const item = this.actor.items.get(li.data('itemId'));\n        //     macros.skillRoll(item?.uuid, fastforward, this.actor);\n        // });\n\n        // Standard 1d100 Spell Casting Roll\n        // html.find('.spell-roll').click((ev) => {\n        //     const li = $(ev.currentTarget).parents('.item');\n        //     const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n        //     const item = this.actor.items.get(li.data('itemId'));\n        //     macros.castSpellRoll(item?.uuid, fastforward, this.actor);\n        // });\n\n        // Standard 1d100 Ritual Invocation Roll\n        // html.find('.invocation-roll').click((ev) => {\n        //     const li = $(ev.currentTarget).parents('.item');\n        //     const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n        //     const item = this.actor.items.get(li.data('itemId'));\n        //     macros.invokeRitualRoll(item?.uuid, fastforward, this.actor);\n        // });\n\n        // Standard 1d100 Psionic Talent Roll\n        // html.find('.psionic-roll').click((ev) => {\n        //     const li = $(ev.currentTarget).parents('.item');\n        //     const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n        //     const item = this.actor.items.get(li.data('itemId'));\n        //     macros.usePsionicRoll(item?.uuid, fastforward, this.actor);\n        // });\n\n        // d6 Ability Score Roll\n        // html.find('.ability-d6-roll').click((ev) => {\n        //     const ability = ev.currentTarget.dataset.ability;\n        //     const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n        //     macros.testAbilityD6Roll(ability, fastforward, this.actor);\n        // });\n\n        // d100 Ability Score Roll\n        // html.find('.ability-d100-roll').click((ev) => {\n        //     const ability = ev.currentTarget.dataset.ability;\n        //     const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n        //     macros.testAbilityD100Roll(ability, fastforward, this.actor);\n        // });\n\n        // Weapon Damage Roll\n        html.find('.weapon-damage-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const aspect = ev.currentTarget.dataset.aspect;\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.weaponDamageRoll(item?.uuid, aspect, this.actor);\n        });\n\n        // Missile Damage Roll\n        html.find('.missile-damage-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const range = ev.currentTarget.dataset.range;\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.missileDamageRoll(item?.uuid, range, this.actor);\n        });\n\n        // Melee Weapon Attack\n        html.find('.melee-weapon-attack').click((ev) => {\n            // If we are a synthetic actor, token will be set\n            let token = this.actor.token;\n            if (!token) {\n                // We are not a synthetic actor, so see if there is exactly one linked actor on the canvas\n                const tokens = this.actor.getActiveTokens(true);\n                if (tokens.length == 0) {\n                    ui.notifications.warn(\n                        `There are no tokens linked to this actor on the canvas, double-click on a specific token on the canvas.`\n                    );\n                    return null;\n                } else if (tokens.length > 1) {\n                    ui.notifications.warn(\n                        `There are ${tokens.length} tokens linked to this actor on the canvas, so the attacking token can't be identified.`\n                    );\n                    return null;\n                }\n                token = tokens[0];\n            }\n\n            const li = $(ev.currentTarget).parents('.item');\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.weaponAttack(item?.uuid, false, token);\n        });\n\n        // Missile Weapon Attack\n        html.find('.missile-weapon-attack').click((ev) => {\n            // If we are a synthetic actor, token will be set\n            let token = this.actor.token;\n            if (!token) {\n                // We are not a synthetic actor, so see if there is exactly one linked actor on the canvas\n                const tokens = this.actor.getActiveTokens(true);\n                if (tokens.length == 0) {\n                    ui.notifications.warn(\n                        `There are no tokens linked to this actor on the canvas, double-click on a specific token on the canvas.`\n                    );\n                    return null;\n                } else if (tokens.length > 1) {\n                    ui.notifications.warn(\n                        `There are ${tokens.length} tokens linked to this actor on the canvas, so the attacking token can't be identified.`\n                    );\n                    return null;\n                }\n                token = tokens[0];\n            }\n\n            const li = $(ev.currentTarget).parents('.item');\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.missileAttack(item?.uuid, false, token);\n        });\n\n        // Esoteric Attack\n        html.find('.esoteric-attack').click((ev) => {\n            // If we are a synthetic actor, token will be set\n            let token = this.actor.token;\n            if (!token) {\n                // We are not a synthetic actor, so see if there is exactly one linked actor on the canvas\n                const tokens = this.actor.getActiveTokens(true);\n                if (tokens.length == 0) {\n                    ui.notifications.warn(\n                        `There are no tokens linked to this actor on the canvas, double-click on a specific token on the canvas.`\n                    );\n                    return null;\n                } else if (tokens.length > 1) {\n                    ui.notifications.warn(\n                        `There are ${tokens.length} tokens linked to this actor on the canvas, so the attacking token can't be identified.`\n                    );\n                    return null;\n                }\n                token = tokens[0];\n            }\n\n            const li = $(ev.currentTarget).parents('.item');\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.esotericAttack(item?.uuid, false, token);\n        });\n\n        // Weapon Attack Roll\n        html.find('.weapon-attack-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.weaponAttackRoll(item?.uuid, fastforward, this.actor);\n        });\n\n        // Weapon Defend Roll\n        html.find('.weapon-defend-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.weaponDefendRoll(item?.uuid, fastforward, this.actor);\n        });\n\n        // Missile Attack Roll\n        html.find('.missile-attack-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.missileAttackRoll(item?.uuid, this.actor);\n        });\n\n        // Injury Roll\n        html.find('.injury-roll').click((ev) => macros.injuryRoll(this.actor));\n\n        // Healing Roll\n        html.find('.healing-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.healingRoll(item?.uuid, fastforward, this.actor);\n            //const ifff = new ImportFFF();\n            //ifff.importFromJSON('test.json');\n        });\n\n        // Dodge Roll\n        html.find('.dodge-roll').click((ev) => macros.dodgeRoll(ev.shiftKey || ev.altKey || ev.ctrlKey, this.actor));\n\n        // Shock Roll\n        html.find('.shock-roll').click((ev) => macros.shockRoll(ev.shiftKey || ev.altKey || ev.ctrlKey, this.actor));\n\n        // Stumble Roll\n        html.find('.stumble-roll').click((ev) =>\n            macros.stumbleRoll(ev.shiftKey || ev.altKey || ev.ctrlKey, this.actor)\n        );\n\n        // Fumble Roll\n        html.find('.fumble-roll').click((ev) => macros.fumbleRoll(ev.shiftKey || ev.altKey || ev.ctrlKey, this.actor));\n\n        // Generic Damage Roll\n        html.find('.damage-roll').click((ev) => macros.genericDamageRoll(this.actor));\n\n        // Falling Roll\n        html.find('.falling-roll').click((ev) => macros.fallingRoll(false, this.actor));\n\n        // Morale Roll\n        html.find('.morale-roll').click((ev) => macros.moraleRoll(ev.shiftKey || ev.altKey || ev.ctrlKey, this.actor));\n\n        // Mount / Dismount\n        html.find('.mount-action').click(this._onToggleMount.bind(this));\n\n        // Steed Command Check\n        html.find('.steedcommand-roll').click((ev) =>\n            macros.steedCommandRoll(ev.shiftKey || ev.altKey || ev.ctrlKey, this.actor)\n        );\n\n        // Unhorsing Roll\n        html.find('.unhorsing-roll').click((ev) =>\n            macros.unhorsingRoll(ev.shiftKey || ev.altKey || ev.ctrlKey, this.actor)\n        );\n\n        // Toggle carry state\n        html.find('.item-carry').click(this._onToggleCarry.bind(this));\n\n        // Toggle equip state\n        html.find('.item-equip').click(this._onToggleEquip.bind(this));\n\n        // Toggle improve state\n        html.find('.item-improve').click(this._onToggleImprove.bind(this));\n\n        // More Info\n        html.find('.more-info').click(this._onMoreInfo.bind(this));\n\n        html.find('.facade-image').on('click', this._onShowBioImage.bind(this));\n\n        html.find('.profile-img').on('click', this._onShowProfileImage.bind(this));\n    }\n\n    /* -------------------------------------------- */\n\n    /** @inheritDoc */\n    // async activateEditor(name, options = {}, initialContent = '') {\n    //     options.relativeLinks = true;\n    //     options.plugins = {\n    //         menu: ProseMirror.ProseMirrorMenu.build(ProseMirror.defaultSchema, {\n    //             compact: true,\n    //             destroyOnSave: false,\n    //             onSave: () => this.saveEditor(name, {remove: false})\n    //         })\n    //     };\n    //     return super.activateEditor(name, options, initialContent);\n    // }\n\n    async _onItemDelete(event) {\n        event.preventDefault();\n        const header = event.currentTarget;\n        const data = foundry.utils.deepClone(header.dataset);\n        const li = $(header).parents('.item');\n        const itemId = li.data('itemId');\n        if (itemId) {\n            const item = this.actor.items.get(itemId);\n            if (!item) {\n                console.error(`HM3 | Delete aborted, item ${itemId} in actor ${this.actor.name} was not found.`);\n                return;\n            }\n\n            let title = `Delete ${data.label}`;\n            let content;\n            if (item.type === 'containergear') {\n                title = 'Delete Container';\n                content = '<p>WARNING: All items in this container will be deleted as well!</p><p>Are you sure?</p>';\n            } else {\n                content = '<p>Are you sure?</p>';\n            }\n\n            // Create the dialog window\n            let agree = false;\n            await Dialog.confirm({\n                title: title,\n                content: content,\n                yes: () => (agree = true)\n            });\n\n            if (agree) {\n                const deleteItems = [];\n\n                // Add all items in the container to the delete list\n                if (item.type === 'containeritem') {\n                    this.actor.items.forEach((it) => {\n                        if (item.type.endsWith('gear') && it.systemn.container === itemId) deleteItems.push(it.id);\n                    });\n                }\n\n                deleteItems.push(itemId); // ensure we delete the container last\n\n                for (let it of deleteItems) {\n                    await Item.deleteDocuments([it], {parent: this.actor});\n                    li.slideUp(200, () => this.render(false));\n                }\n            }\n        }\n    }\n\n    async _onContainerCollapse(ev) {\n        const el = ev.currentTarget.dataset;\n        if (!el) return;\n        const container = fromUuidSync(el.cuuid);\n        if (container) {\n            if (el.action === 'minimize') {\n                container.update({'system.collapsed': true});\n            } else if (el.action === 'maximize') {\n                container.update({'system.collapsed': false});\n            }\n        } else if (el.containerId === 'on-person') {\n            if (el.action === 'minimize') {\n                this.actor.setFlag('hm3', 'onPersonContainerCollapsed', true);\n            } else if (el.action === 'maximize') {\n                this.actor.setFlag('hm3', 'onPersonContainerCollapsed', false);\n            }\n        }\n    }\n\n    async mergeItem(item, other) {\n        if (item.type != other.type) {\n            return;\n        }\n\n        const data = item.system;\n        const otherData = other.system;\n        const updateData = {};\n\n        if (!data.notes) updateData['system.notes'] = otherData.notes;\n        if (!data.source) updateData['system.source'] = otherData.source;\n        if (!data.description) updateData['system.description'] = otherData.description;\n        if (!data.macros.type || data.macros.type !== otherData.macros.type)\n            updateData['system.macros.type'] = otherData.macros.type;\n        if (!data.macros.command) updateData['system.macros.command'] = otherData.macros.command;\n        updateData['img'] = other.img;\n\n        switch (item.type) {\n            case 'skill':\n                // If the skill types don't match, return without change\n                if (data.type != otherData.type) {\n                    return;\n                }\n\n                // NOTE: We never copy over the skillbase value or\n                // the Piety value, those must always be set in the\n                // actor's sheet.\n\n                // If the skillbase is blank, copy it over from dropped item\n                if (!data.skillBase.formula) {\n                    updateData['system.skillBase.formula'] = otherData.skillBase.formula;\n                    updateData['system.skillBase.isFormulaValid'] = otherData.skillBase.isFormulaValid;\n                }\n                break;\n\n            case 'spell':\n                updateData['system.convocation'] = otherData.convocation;\n                updateData['system.level'] = otherData.level;\n                break;\n\n            case 'invocation':\n                updateData['system.diety'] = otherData.diety;\n                updateData['system.circle'] = otherData.circle;\n                break;\n\n            case 'psionic':\n                // If the skillbase is blank, copy it over from dropped item\n                if (!data.skillBase.formula) {\n                    updateData['system.skillBase.formula'] = otherData.skillBase.formula;\n                    updateData['system.skillBase.isFormulaValid'] = otherData.skillBase.isFormulaValid;\n                }\n                updateData['system.fatigue'] = otherData.fatigue || 0;\n                break;\n        }\n\n        await item.update(updateData);\n\n        return;\n    }\n\n    async _onItemCreate(event) {\n        event.preventDefault();\n        const header = event.currentTarget;\n        // Grab any data associated with this control.\n        const dataset = foundry.utils.deepClone(header.dataset);\n\n        let extraList = [];\n        let extraLabel = null;\n\n        let name;\n\n        // Ask type\n        // Initialize a default name.\n        if (dataset.type === 'skill' && dataset.skilltype) {\n            name = utility.createUniqueName(`New ${dataset.skilltype} Skill`, this.actor.itemTypes.skill);\n        } else if (dataset.type == 'trait' && dataset.traittype) {\n            name = utility.createUniqueName(`New ${dataset.traittype} Trait`, this.actor.itemTypes.trait);\n        } else if (dataset.type.endsWith('gear')) {\n            name = 'New Gear';\n            extraList = ['Misc. Gear', 'Armor', 'Melee Weapon', 'Missile Weapon', 'Container'];\n            extraLabel = 'Gear Type';\n        } else {\n            switch (dataset.type) {\n                case ItemType.ARMORLOCATION:\n                    name = utility.createUniqueName('New Location', this.actor.itemTypes.armorlocation);\n                    break;\n\n                case 'injury':\n                    name = utility.createUniqueName('New Injury', this.actor.itemTypes.injury);\n                    break;\n\n                case 'spell':\n                    name = utility.createUniqueName('New Spell', this.actor.itemTypes.spell);\n                    break;\n\n                case 'invocation':\n                    name = utility.createUniqueName('New Invocation', this.actor.itemTypes.invocation);\n                    break;\n\n                case 'psionic':\n                    name = utility.createUniqueName('New Psionic', this.actor.itemTypes.psionic);\n                    break;\n\n                default:\n                    console.error(`HM3 | Can't create item: unknown item type '${dataset.type}'`);\n                    return null;\n            }\n        }\n\n        // Render modal dialog\n        let dlgTemplate = 'systems/hm3/templates/dialog/create-item.hbs';\n        let dialogData = {\n            type: dataset.type,\n            title: name,\n            placeholder: name,\n            extraList: extraList,\n            extraLabel: extraLabel\n        };\n\n        const dlghtml = await renderTemplate(dlgTemplate, dialogData);\n\n        // Create the dialog window\n        return Dialog.prompt({\n            title: dialogData.title,\n            content: dlghtml,\n            label: 'Create',\n            callback: async (html) => {\n                const form = html.querySelector('#create-item');\n                const fd = new FormDataExtended(form);\n                const formdata = fd.object;\n                let itemName = formdata.name;\n                let extraValue = formdata.extra_value;\n\n                const updateData = {name: itemName, type: dataset.type};\n                if (dataset.type === 'gear') {\n                    if (extraValue === 'Container') updateData.type = 'containergear';\n                    else if (extraValue === 'Armor') updateData.type = 'armorgear';\n                    else if (extraValue === 'Melee Weapon') updateData.type = 'weapongear';\n                    else if (extraValue === 'Missile Weapon') updateData.type = 'missilegear';\n                    else updateData.type = 'miscgear';\n                }\n\n                // Item Data\n                if (dataset.type === 'skill') updateData['system.type'] = dataset.skilltype;\n                else if (dataset.type === 'trait') updateData['system.type'] = dataset.traittype;\n                else if (dataset.type.endsWith('gear')) updateData['system.container'] = dataset.containerId;\n                else if (dataset.type === 'spell') updateData['system.convocation'] = extraValue;\n                else if (dataset.type === 'invocation') updateData['system.diety'] = extraValue;\n\n                // Finally, create the item!\n                const result = await Item.create(updateData, {parent: this.actor});\n\n                if (!result) {\n                    throw new Error(\n                        `Error creating item '${updateData.name}' of type '${updateData.type}' on character '${this.actor.name}'`\n                    );\n                }\n\n                // Bring up edit dialog to complete creating item\n                const item = this.actor.items.get(result.id);\n                item.sheet.render(true);\n\n                return result;\n            },\n            options: {jQuery: false}\n        });\n    }\n\n    async _onToggleMount(event) {\n        event.preventDefault();\n\n        const riding = this.actor.items.find(\n            (item) => item.type === game.hm3.ItemType.SKILL && item.name.includes('Riding')\n        );\n\n        const steed = fromUuidSync(riding.system.actorUuid);\n        if (steed) {\n            if (!this.actor.system.mounted) {\n                Hooks.call('hm3.onMount', this.actor, steed);\n            } else {\n                Hooks.call('hm3.onUnmount', this.actor, steed);\n            }\n        }\n    }\n\n    /**\n     * Handle toggling the carry state of an Owned Item within the Actor\n     * @param {Event} event   The triggering click event\n     * @private\n     */\n    async _onToggleCarry(event) {\n        event.preventDefault();\n        const itemId = event.currentTarget.closest('.item').dataset.itemId;\n        const item = this.actor.items.get(itemId);\n\n        // Only process inventory (\"gear\") items, otherwise ignore\n        if (item.type.endsWith('gear')) {\n            const attr = 'system.isCarried';\n            const ret = await item.update({[attr]: !foundry.utils.getProperty(item, attr)});\n\n            for (const effect of item.effects.contents) {\n                await effect.update({disabled: !item.system.isEquipped || !item.system.isCarried});\n            }\n\n            return ret;\n        }\n\n        return null;\n    }\n\n    /**\n     * Handle toggling the carry state of an Owned Item within the Actor\n     * @param {Event} event   The triggering click event\n     * @private\n     */\n    async _onToggleEquip(event) {\n        event.preventDefault();\n        const itemId = event.currentTarget.closest('.item').dataset.itemId;\n        const item = this.actor.items.get(itemId);\n\n        // Only process inventory (\"gear\") items, otherwise ignore\n        if (item.type.endsWith('gear')) {\n            const attr = 'system.isEquipped';\n            const ret = await item.update({[attr]: !foundry.utils.getProperty(item, attr)});\n\n            for (const effect of item.effects.contents) {\n                await effect.update({disabled: !item.system.isEquipped || !item.system.isCarried});\n            }\n\n            return ret;\n        }\n\n        return null;\n    }\n\n    /**\n     * Handle toggling the improve state of an Owned Item within the Actor\n     * @param {Event} event   The triggering click event\n     * @private\n     */\n    async _onToggleImprove(event) {\n        event.preventDefault();\n        const itemId = event.currentTarget.closest('.item').dataset.itemId;\n        const item = this.actor.items.get(itemId);\n\n        // Only process skills and psionics, otherwise ignore\n        if (item.type === 'skill' || item.type === 'psionic') {\n            if (!item.system.improveFlag) {\n                return item.update({'system.improveFlag': 1});\n            } else {\n                return this._improveToggleDialog(item);\n            }\n        }\n\n        return null;\n    }\n\n    async _onMoreInfo(event) {\n        event.preventDefault();\n        const journalEntry = event.currentTarget.dataset.journalEntry;\n\n        const helpJournal = await game.packs.find((p) => p.collection === `hm3.system-help`).getDocuments();\n        const article = helpJournal.find((i) => i.name === journalEntry);\n        //const article = game.journal.getName(journalEntry);\n        if (!article) {\n            console.error(`HM3 | Can't find journal entry with name \"${journalEntry}\".`);\n            return null;\n        }\n        article.sheet.render(true, {editable: false});\n        return null;\n    }\n\n    async _improveToggleDialog(item) {\n        // Condition skill is maxed out (SKILLS 9)\n        if (item.type === 'skill' && item.name === 'Condition') {\n            if (item.system.masteryLevel >= 7 * item.system.skillBase.value) {\n                await game.hm3.GmSays({\n                    text: `<h4>${this.actor.name}: ${item.name}</h4>` + game.i18n.localize('hm3.SDR.ConditionSkillMax'),\n                    source: 'SKILLS 9'\n                });\n                return;\n            }\n        }\n\n        let dlghtml = game.i18n.localize('hm3.SDR.MainDlgHtml');\n        // Create the dialog window\n        return new Promise((resolve) => {\n            new Dialog(\n                {\n                    title: game.i18n.localize('hm3.SDR.Toggle'),\n                    content: dlghtml.trim(),\n                    buttons: {\n                        performSDR: {\n                            label: game.i18n.localize('hm3.SDR.Perform'),\n                            callback: async () => {\n                                let num = item.system.improveFlag;\n\n                                if (num <= 2) num = 1; // 1, 2\n                                else if (num <= 5) num = 2; // 3, 4, 5\n                                else if (num <= 9) num = 3; // 6, 7, 8, 9\n                                else if (num <= 14) num = 4; // 10, 11, 12, 13, 14\n                                else num = 5; // 15, 16, ...\n\n                                for (let i = 0; i < num; i++) {\n                                    await this.actor.skillDevRoll(item);\n                                }\n                                resolve(true);\n                            }\n                        },\n                        performTrainingSDR: {\n                            label: game.i18n.localize('hm3.SDR.PerformTraining'),\n                            callback: async (html) => {\n                                // Special rules for combat skills\n                                if (item.type === 'skill' && item.system.type === 'Combat') {\n                                    // Once opened, Development Rolls are made only for Combat Experience (SKILLS 18)\n                                    if (item.name === 'Initiative') {\n                                        await game.hm3.GmSays({\n                                            text:\n                                                `<h4>${this.actor.name}: ${item.name}</h4>` +\n                                                game.i18n.localize('hm3.SDR.InitiativeExperience'),\n                                            source: 'SKILLS 18'\n                                        });\n                                        return;\n                                    }\n                                    // Weapon Skills may be developed by practice/training as normal, but no weapon skill\n                                    // can be increased beyond ML70 except by actual combat experience (SKILLS 18)\n                                    else if (item.system.masteryLevel >= 70) {\n                                        await game.hm3.GmSays({\n                                            text:\n                                                `<h4>${this.actor.name}: ${item.name}</h4>` +\n                                                game.i18n.localize('hm3.SDR.CombatExperience'),\n                                            source: 'SKILLS 18'\n                                        });\n                                        return;\n                                    }\n                                }\n                                dlghtml = game.i18n.localize('hm3.SDR.TrainingDlgHtml');\n                                return new Promise((resolve) => {\n                                    new Dialog({\n                                        title: game.i18n.localize('hm3.SDR.SDRs'),\n                                        content: dlghtml.trim(),\n                                        buttons: {\n                                            roll: {\n                                                label: game.i18n.localize('hm3.SDR.Roll'),\n                                                callback: async (html) => {\n                                                    const num = Number(html.find('#sdr')[0].value);\n                                                    let success = 0;\n                                                    for (let i = 0; i < num; i++) {\n                                                        // Condition skill is maxed out (SKILLS 9)\n                                                        if (item.type === 'skill' && item.name === 'Condition') {\n                                                            if (\n                                                                item.system.masteryLevel >=\n                                                                7 * item.system.skillBase.value\n                                                            ) {\n                                                                await game.hm3.GmSays({\n                                                                    text:\n                                                                        `<h4>${this.actor.name}: ${item.name}</h4>` +\n                                                                        game.i18n.localize(\n                                                                            'hm3.SDR.ConditionSkillMax'\n                                                                        ) +\n                                                                        `<p>(${num - i} SDRs left)</p>`,\n                                                                    source: 'SKILLS 9'\n                                                                });\n                                                                break;\n                                                            }\n                                                        }\n                                                        if (item.type === 'skill' && item.system.type === 'Combat') {\n                                                            if (item.system.masteryLevel >= 70) {\n                                                                await game.hm3.GmSays({\n                                                                    text:\n                                                                        `<h4>${this.actor.name}: ${item.name}</h4>` +\n                                                                        game.i18n.localize('hm3.SDR.CombatExperience') +\n                                                                        `<p>(${num - i} SDRs left)</p>`,\n                                                                    source: 'SKILLS 18'\n                                                                });\n                                                                break;\n                                                            }\n                                                        }\n\n                                                        if (await this.actor.skillDevRoll(item, false)) success++;\n                                                    }\n                                                    await game.hm3.GmSays({\n                                                        text: `<h4>${this.actor.name}: ${item.name}</h4>${success}/${num} SDRs succeeded`\n                                                    });\n                                                    resolve(true);\n                                                }\n                                            }\n                                        },\n                                        default: 'roll',\n                                        close: () => resolve(false)\n                                    }).render(true);\n                                });\n                            }\n                        },\n                        disableFlag: {\n                            label: game.i18n.localize('hm3.SDR.DisableFlag'),\n                            callback: async () => {\n                                return item.update({'system.improveFlag': 0});\n                            }\n                        }\n                    },\n                    default: 'performSDR',\n                    close: () => resolve(false)\n                },\n                {width: 550}\n            ).render(true);\n        });\n    }\n\n    async _onDumpEsotericDescription(event) {\n        event.preventDefault();\n        const header = event.currentTarget;\n        const li = $(header).parents('.item');\n        const itemId = li.data('itemId');\n\n        if (itemId) {\n            const item = this.actor.items.get(itemId);\n            if (!item) {\n                return;\n            }\n\n            const itemData = item.system;\n\n            if (['spell', 'invocation', 'psionic'].includes(item.type)) {\n                const chatData = {\n                    name: item.name,\n                    desc: itemData.description,\n                    notes: itemData.notes || null,\n                    fatigue: item.type === 'psionic' ? itemData.fatigue : null\n                };\n\n                if (item.type === 'spell') {\n                    chatData.level = utility.romanize(itemData.level);\n                    chatData.title = `${itemData.convocation} Spell`;\n                } else if (item.type === 'invocation') {\n                    chatData.level = utility.romanize(itemData.circle);\n                    chatData.title = `${itemData.diety} Invocation`;\n                } else if (item.type === 'psionic') {\n                    chatData.level = `F${itemData.fatigue}`;\n                    chatData.title = `Psionic Talent`;\n                }\n\n                const chatTemplate = 'systems/hm3/templates/chat/esoteric-desc-card.hbs';\n\n                const html = await renderTemplate(chatTemplate, chatData);\n\n                const messageData = {\n                    user: game.user.id,\n                    speaker: ChatMessage.getSpeaker({actor: this.object}),\n                    content: html.trim(),\n                    type: CONST.CHAT_MESSAGE_STYLES.OTHER\n                };\n\n                // Create a chat message\n                return ChatMessage.create(messageData);\n            }\n        }\n    }\n\n    /**\n     * Handles the quantity input field. You can also write + or - in front of the number\n     * and everything will be calculated accordingly.\n     * @param {string} itemId - The item id.\n     * @param {string} newValue - The newly entered value.\n     */\n    async _handleQtyInput(itemId, newValue) {\n        const item = this.actor.items.find((i) => i.id === itemId);\n\n        // Ensure that at least something has been entered\n        if (newValue.length === 0) {\n            document.getElementById(itemId).value = item.system.quantity;\n            return;\n        }\n\n        const firstChar = Array.from(newValue)[0];\n\n        let isPlus = false;\n        let isMinus = false;\n        if (firstChar === '+') isPlus = true;\n        if (firstChar === '-') isMinus = true;\n        if (isPlus || isMinus) newValue = newValue.slice(1);\n\n        // Ensure that something meaningful has been entered\n        if (newValue.length === 0 || isNaN(newValue)) {\n            document.getElementById(itemId).value = item.system.quantity;\n            return;\n        }\n\n        // Only integer quantities allowed\n        newValue = utility.truncate(Number(newValue), 0);\n\n        if (isPlus) {\n            item.system.quantity = item.system.quantity + newValue;\n        } else if (isMinus) {\n            item.system.quantity = Math.max(item.system.quantity - newValue);\n        } else {\n            item.system.quantity = newValue;\n        }\n\n        document.getElementById(itemId).value = item.system.quantity;\n\n        // Update the quantity on the server\n        item.update({'system.quantity': item.system.quantity});\n    }\n\n    async _handleSbxInput(itemId, newValue) {\n        const item = this.actor.items.find((i) => i.id === itemId);\n\n        // Ensure that something meaningful has been entered\n        if (newValue.length === 0 || isNaN(newValue)) {\n            document.getElementById(itemId + '-SBx').value = item.system.skillBase.SBx;\n            return;\n        }\n\n        // Ensure that something meaningful has been entered\n        if (Number(newValue) <= 0 || Number(newValue) >= 8) {\n            document.getElementById(itemId + '-SBx').value = item.system.skillBase.SBx;\n            return;\n        }\n\n        item.system.skillBase.SBx = newValue;\n        document.getElementById(itemId + '-SBx').value = item.system.skillBase.SBx;\n\n        // Update the quantity on the server\n        await item.update({'system.skillBase.SBx': item.system.skillBase.SBx});\n        await item.update({'system.masteryLevel': 0});\n    }\n\n    async _handleOpInput(itemId, newValue) {\n        const item = this.actor.items.find((i) => i.id === itemId);\n\n        if (newValue.length === 0) {\n            item.system.skillBase.OP = null;\n            document.getElementById(itemId + '-OP').value = item.system.skillBase.OP;\n\n            // Update the quantity on the server\n            await item.update({'system.skillBase.-=OP': item.system.skillBase.OP});\n            await item.update({'system.masteryLevel': 0});\n            return;\n        }\n\n        // Ensure that something meaningful has been entered\n        if (isNaN(newValue)) {\n            document.getElementById(itemId + '-OP').value = item.system.skillBase.OP;\n            return;\n        }\n\n        // Ensure that something meaningful has been entered\n        if (Number(newValue) <= 0 || Number(newValue) >= 4) {\n            document.getElementById(itemId + '-OP').value = item.system.skillBase.OP;\n            return;\n        }\n\n        item.system.skillBase.OP = newValue;\n        document.getElementById(itemId + '-OP').value = item.system.skillBase.OP;\n\n        // Update the quantity on the server\n        await item.update({'system.skillBase.OP': item.system.skillBase.OP});\n        await item.update({'system.masteryLevel': 0});\n    }\n\n    async conditionalRender({aeDisabled = false, aeStarted = false, force = false} = {}) {\n        if (force || this._tabs[0].active === 'effects' || aeDisabled || aeStarted) {\n            return super.render(force);\n        }\n    }\n\n    static MODES = {\n        PLAY: 1,\n        EDIT: 2\n    };\n\n    _mode = null;\n\n    /** @inheritDoc */\n    async _render(force, {mode, ...options} = {}) {\n        if (mode === undefined && options.renderContext === 'createItem') mode = this.constructor.MODES.EDIT;\n        this._mode = mode ?? this._mode ?? this.constructor.MODES.PLAY;\n        if (this.rendered) {\n            const toggle = this.element[0].querySelector('.window-header .mode-slider');\n            toggle.checked = this._mode === this.constructor.MODES.EDIT;\n        }\n        return super._render(force, options);\n    }\n\n    /** @inheritDoc */\n    async _renderOuter() {\n        const html = await super._renderOuter();\n        const header = html[0].querySelector('.window-header');\n\n        // Adjust header buttons.\n        header.querySelectorAll('.header-button').forEach((btn) => {\n            const label = btn.querySelector(':scope > i').nextSibling;\n            btn.dataset.tooltip = label.textContent;\n            btn.dataset.tooltipDirection = 'UP';\n            btn.setAttribute('aria-label', label.textContent);\n            btn.addEventListener('dblclick', (event) => event.stopPropagation());\n            label.remove();\n        });\n\n        if (!game.user.isGM && this.document.limited) {\n            html[0].classList.add('limited');\n            return html;\n        }\n\n        // Add edit <-> play slide toggle.\n        if (this.isEditable) {\n            const toggle = document.createElement('slide-toggle');\n            toggle.checked = this._mode === this.constructor.MODES.EDIT;\n            toggle.classList.add('mode-slider');\n            toggle.dataset.tooltip = 'hm3.SheetModeEdit';\n            toggle.dataset.tooltipDirection = 'UP';\n            toggle.setAttribute('aria-label', game.i18n.localize('hm3.SheetModeEdit'));\n            toggle.addEventListener('change', this._onChangeSheetMode.bind(this));\n            toggle.addEventListener('dblclick', (event) => event.stopPropagation());\n            header.insertAdjacentElement('afterbegin', toggle);\n        }\n\n        // Document UUID link.\n        const firstButton = header.querySelector('.header-button');\n        const idLink = header.querySelector('.document-id-link');\n        if (idLink) {\n            firstButton?.insertAdjacentElement('beforebegin', idLink);\n            idLink.classList.add('pseudo-header-button');\n            idLink.dataset.tooltipDirection = 'UP';\n        }\n\n        return html;\n    }\n\n    async _onChangeSheetMode(event) {\n        const {MODES} = this.constructor;\n        const toggle = event.currentTarget;\n        const label = game.i18n.localize(`hm3.SheetMode${toggle.checked ? 'Play' : 'Edit'}`);\n        toggle.dataset.tooltip = label;\n        toggle.setAttribute('aria-label', label);\n        this._mode = toggle.checked ? MODES.EDIT : MODES.PLAY;\n        await this.submit();\n        this.render();\n    }\n\n    /**\n     * Handle showing the character's portrait or token art.\n     * @protected\n     */\n    _onShowBioImage() {\n        // Play mode only.\n        if (this._mode === this.constructor.MODES.PLAY && game.user.isGM) {\n            const img = this.actor.system.bioImage;\n            if (game.release.generation < 13) {\n                new ImagePopout(img, {title: this.actor.name, uuid: this.actor.uuid}).render(true);\n            } else {\n                new foundry.applications.apps.ImagePopout({\n                    src: img,\n                    uuid: this.actor.uuid,\n                    window: {title: this.actor.name}\n                }).render({force: true});\n            }\n        }\n    }\n\n    _onShowProfileImage() {\n        // Play mode only.\n        if (this._mode === this.constructor.MODES.PLAY && game.user.isGM) {\n            const img = this.actor.img;\n            if (game.release.generation < 13) {\n                new ImagePopout(img, {title: this.actor.name, uuid: this.actor.uuid}).render(true);\n            } else {\n                new foundry.applications.apps.ImagePopout({\n                    src: img,\n                    uuid: this.actor.uuid,\n                    window: {title: this.actor.name}\n                }).render({force: true});\n            }\n        }\n    }\n}\n","import {BaseActorSheetHM3v2} from './base-actor-sheet-v2.js';\n\n/**\n * Extend the base BaseActorSheetHM3v2 with some very simple modifications\n * @extends {BaseActorSheetHM3v2}\n */\nexport class CharacterSheetHM3v2 extends BaseActorSheetHM3v2 {\n    /** @override */\n    static get defaultOptions() {\n        return foundry.utils.mergeObject(super.defaultOptions, {\n            classes: ['hm3', 'sheet', 'actor', 'actor-v2', 'character'],\n            width: 810,\n            height: 850,\n            tabs: [{navSelector: '.sheet-tabs-v2', contentSelector: '.sheet-body-v2', initial: 'facade'}],\n            scrollY: ['.main-content'],\n            resizable: false\n        });\n    }\n\n    /**\n     * Get the correct HTML template path to use for rendering this particular sheet\n     * @type {String}\n     */\n    get template() {\n        if (!game.user.isGM && this.actor.limited) {\n            return 'systems/hm3/templates/actor-v2/character-limited.hbs';\n        } else {\n            return 'systems/hm3/templates/actor-v2/character-sheet.hbs';\n        }\n    }\n}\n","import {onManageActiveEffect} from '../effect.js';\nimport {ActorType, CompanionType, ItemType, SkillType} from '../hm3-types.js';\nimport {onManageMacro} from '../macro.js';\nimport * as macros from '../macros.js';\nimport * as utility from '../utility.js';\n\n/**\n * Extend the basic ActorSheet with some common capabilities\n * @extends {ActorSheet}\n */\nexport class HarnMasterBaseActorSheet extends ActorSheet {\n    /** @override */\n    async getData(options = {}) {\n        if (!this.actor.system.eph.stumbleTarget) {\n            // sometimes it is not initialized correctly\n            this.actor.prepareDerivedData();\n        }\n\n        let isOwner = this.document.isOwner;\n        const data = {\n            config: CONFIG.HM3,\n            cssClass: isOwner ? 'editable' : 'locked',\n            editable: this.isEditable,\n            isCharacter: this.document.type === 'character',\n            isCharacterMancer: this.actor.getFlag('hm3', 'CharacterMancer') || false,\n            isContainer: this.document.type === 'container',\n            isCreature: this.document.type === 'creature',\n            isSkillImprovement: this.actor.skillImprovement,\n            limited: this.document.limited,\n            options: this.options,\n            owner: isOwner\n        };\n\n        data.hasDescription = 'description' in this.object.system;\n        if (data.hasDescription) {\n            data.descriptionHTML = await TextEditor.enrichHTML(this.object.system.description, {\n                secrets: game.user.isGM,\n                relativeTo: this.object.system\n            });\n        }\n\n        data.isGM = game.user.isGM;\n        data.strictMode = game.settings.get('hm3', 'strictGmMode');\n        data.hasRwPermission = data.isGM || !data.strictMode;\n        data.isGridDistanceUnits = game.settings.get('hm3', 'distanceUnits') === 'grid';\n        data.customSunSign = game.settings.get('hm3', 'customSunSign');\n        data.actor = foundry.utils.deepClone(this.actor);\n\n        let totalWeightHigh = 0;\n        let totalWeightMid = 0;\n        let totalWeightLow = 0;\n        this.actor.items.forEach((it) => {\n            if (it.type === ItemType.ARMORLOCATION) {\n                totalWeightHigh += it.system.probWeight['high'];\n                totalWeightMid += it.system.probWeight['mid'];\n                totalWeightLow += it.system.probWeight['low'];\n            }\n        });\n        totalWeightHigh /= 100;\n        totalWeightMid /= 100;\n        totalWeightLow /= 100;\n\n        data.items = this.actor.items\n            .map((i) => {\n                // A new, truncated number is created so that weights with many decimal places (e.g. dram) are also displayed nicely.\n                if (\n                    [\n                        ItemType.ARMORGEAR,\n                        ItemType.CONTAINERGEAR,\n                        ItemType.EFFECT,\n                        ItemType.MISCGEAR,\n                        ItemType.MISSILEGEAR,\n                        ItemType.WEAPONGEAR\n                    ].includes(i.type)\n                ) {\n                    i.system.weightT = utility.truncate(i.system.weight, 3);\n                }\n                //\n                if (i.type === ItemType.ARMORLOCATION) {\n                    i.probHigh = utility.truncate(i.system.probWeight.high / totalWeightHigh, 1);\n                    i.probMid = utility.truncate(i.system.probWeight.mid / totalWeightMid, 1);\n                    i.probLow = utility.truncate(i.system.probWeight.low / totalWeightLow, 1);\n                }\n                // Dormant psionic talents may be invisible for players (ML20 or less (Psionics 3))\n                if (i.type === ItemType.PSIONIC) {\n                    i.system.visible = String(\n                        !game.settings.get('hm3', 'dormantPsionicTalents') ||\n                            i.system.masteryLevel > 20 ||\n                            i.system.effectiveMasteryLevel > 20 ||\n                            game.user.isGM\n                    );\n                }\n                //\n                if (i.type === ItemType.TRAIT) {\n                    if (i.system.type === 'Psyche') {\n                        const sev =\n                            data.config.psycheSeverity.find((v) => v.key === i.system.severity)?.label || 'Mild';\n                        i.psycheName = sev + ' ' + i.name;\n                    }\n                }\n                //\n                if (i.type === ItemType.COMPANION) {\n                    const companion = fromUuidSync(i.system.actorUuid);\n                    if (companion) {\n                        i.gender = companion.system.gender || 'Male';\n                        i.img = companion.img;\n                        i.linkToActor = companion.link;\n                        i.name = companion.name;\n                        i.occupation = companion.system.occupation || 'Unknown';\n                        i.species = companion.system.species || 'Unknown';\n                    }\n                }\n\n                // The range can also be displayed in grids (hex). Can be changed in the settings.\n                if (i.type === ItemType.MISSILEGEAR) {\n                    if (data.isGridDistanceUnits) {\n                        i.system.rangeGrid = {\n                            short: i.system.range.short / canvas.dimensions.distance,\n                            medium: i.system.range.medium / canvas.dimensions.distance,\n                            long: i.system.range.long / canvas.dimensions.distance,\n                            extreme: i.system.range.extreme / canvas.dimensions.distance\n                        };\n                    }\n                }\n\n                if (i.type === ItemType.WEAPONGEAR) {\n                    i.wq = i.system.weaponQuality + (i.system.wqModifier || 0);\n                }\n\n                if ([ItemType.SKILL, ItemType.PSIONIC].includes(i.type)) {\n                    i.isSkillImprovement = data.isSkillImprovement;\n\n                    // some special rules\n                    if (\n                        this.actor.type === ActorType.CREATURE &&\n                        this.actor.system.species.toLowerCase().includes('dog')\n                    ) {\n                        // With the exception of Awareness, dog skills may be improved by training and practice. (DOGS 2)\n                        if (i.name === 'Awareness') {\n                            i.isSkillImprovement = false;\n                        }\n                    }\n                }\n\n                return i;\n            })\n            .filter((item) => item.type !== ItemType.EFFECT || game.user.isGM);\n        data.items.sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n        data.physicalSkills = data.items.filter(\n            (item) => item.type === ItemType.SKILL && item.system.type === SkillType.PHYSICAL\n        );\n        data.communicationSkills = data.items.filter(\n            (item) => item.type === ItemType.SKILL && item.system.type === SkillType.COMMUNICATION\n        );\n        data.combatSkills = data.items.filter(\n            (item) => item.type === ItemType.SKILL && item.system.type === SkillType.COMBAT\n        );\n        data.craftSkills = data.items.filter(\n            (item) => item.type === ItemType.SKILL && item.system.type === SkillType.CRAFT\n        );\n        data.magicSkills = data.items.filter(\n            (item) => item.type === ItemType.SKILL && item.system.type === SkillType.MAGIC\n        );\n        data.ritualSkills = data.items.filter(\n            (item) => item.type === ItemType.SKILL && item.system.type === SkillType.RITUAL\n        );\n        data.companions = data.items.filter((item) => item.type === ItemType.COMPANION);\n        data.injuries = data.items.filter((item) => item.type === ItemType.INJURY);\n        data.invocations = data.items.filter((item) => item.type === ItemType.INVOCATION);\n        data.missiles = data.items.filter((item) => item.type === ItemType.MISSILEGEAR);\n        data.psionics = data.items.filter((item) => item.type === ItemType.PSIONIC);\n        data.spells = data.items.filter((item) => item.type === ItemType.SPELL);\n        data.esoterics = data.items.filter((item) =>\n            [ItemType.INVOCATION, ItemType.PSIONIC, ItemType.SPELL].includes(item.type)\n        );\n        data.companionParty = data.items.filter(\n            (item) => item.type === ItemType.COMPANION && item.system.type === CompanionType.PARTY\n        );\n        data.companionAnimal = data.items.filter(\n            (item) => item.type === ItemType.COMPANION && item.system.type === CompanionType.ANIMAL\n        );\n        data.companionSteed = data.items.filter(\n            (item) => item.type === ItemType.COMPANION && item.system.type === CompanionType.STEED\n        );\n        data.companionFollower = data.items.filter(\n            (item) => item.type === ItemType.COMPANION && item.system.type === CompanionType.FOLLOWER\n        );\n        data.companionConnection = data.items.filter(\n            (item) => item.type === ItemType.COMPANION && item.system.type === CompanionType.CONNECTION\n        );\n        data.companionFriend = data.items.filter(\n            (item) => item.type === ItemType.COMPANION && item.system.type === CompanionType.FRIEND\n        );\n        data.companionFoe = data.items.filter(\n            (item) => item.type === ItemType.COMPANION && item.system.type === CompanionType.FOE\n        );\n\n        data.adata = data.actor.system;\n        data.labels = this.actor.labels || {};\n        data.filters = this._filters;\n\n        data.macroTypes = [\n            {key: 'chat', label: 'Chat'},\n            {key: 'script', label: 'Script'}\n        ];\n\n        data.dtypes = ['String', 'Number', 'Boolean'];\n        let capacityMax = 0;\n        let capacityVal = 0;\n        if (this.actor.type === ActorType.CHARACTER) {\n            capacityMax = data.adata.endurance * 10;\n            if (data.adata.eph) {\n                capacityVal = data.adata.eph.totalGearWeight;\n            }\n        } else if (this.actor.type === ActorType.CREATURE) {\n            capacityMax = data.adata.loadRating + data.adata.endurance * 10;\n            if (data.adata.eph) {\n                capacityVal = data.adata.eph.totalGearWeight;\n            }\n        } else if (this.actor.type === ActorType.CONTAINER) {\n            capacityMax = data.adata.capacity.max;\n            capacityVal = data.adata.capacity.value;\n        }\n\n        // Setup the fake container entry for \"On Person\" container\n        data.containers = {\n            'on-person': {\n                'name': 'On Person',\n                'type': ItemType.CONTAINERGEAR,\n                'system': {\n                    'container': 'on-person',\n                    'collapsed': this.actor.getFlag('hm3', 'onPersonContainerCollapsed') || false,\n                    'capacity': {\n                        'max': capacityMax,\n                        'value': capacityVal\n                    }\n                }\n            }\n        };\n\n        this.actor.items.forEach((it) => {\n            if (it.type === ItemType.CONTAINERGEAR) {\n                data.containers[it.id] = it;\n            }\n        });\n\n        data.gearTypes = {\n            'armorgear': 'Armour',\n            'containergear': 'Container',\n            'effectgear': 'Effect',\n            'miscgear': 'Misc. Gear',\n            'missilegear': 'Missile Wpn',\n            'weapongear': 'Melee Wpn'\n        };\n\n        // get active effects\n        data.effects = {};\n        this.actor.allApplicableEffects().forEach((effect) => {\n            data.effects[effect.id] = {\n                'changes': utility.aeChanges(effect),\n                'disabled': effect.disabled,\n                'duration': utility.aeDuration(effect),\n                'id': effect.id,\n                'img': effect.img,\n                'name': effect.name,\n                'source': effect,\n                'sourceName': effect.sourceName\n            };\n        });\n\n        // migrate legacy macro\n        let macro = this.actor.macrolist.find((m) => m.getFlag('hm3', 'trigger') === 'legacy');\n        if (!macro) {\n            (async () => {\n                macro = await Macro.create({\n                    name: `${this.actor.name} Legacy Macro`,\n                    type: this.actor.system.macros.type,\n                    command: this.actor.system.macros.command,\n                    folder: this.actor.macrofolder\n                });\n                await macro.setFlag('hm3', 'trigger', 'legacy');\n                await macro.setFlag('hm3', 'ownerId', this.actor.id);\n                this.actor.sheet.render();\n            })();\n        }\n\n        // get macros\n        data.adata.macrolist = this.actor.macrolist;\n        data.adata.macrolist.map((m) => {\n            m.trigger = game.macros.get(m.id)?.getFlag('hm3', 'trigger');\n            m.ownerId = game.macros.get(m.id)?.getFlag('hm3', 'ownerId'); // currently not needed\n        });\n        data.adata.macrolist.sort((a, b) =>\n            a?.name.toLowerCase() > b?.name.toLowerCase() ? 1 : b?.name.toLowerCase() > a?.name.toLowerCase() ? -1 : 0\n        );\n\n        // default species for character is 'Human'\n        if (this.actor.type === ActorType.CHARACTER && data.adata.species.length === 0) data.adata.species = 'Human';\n\n        // default size is '6'\n        if (data.adata.size === undefined) data.adata.size = '6';\n\n        data.hasSteed = this.actor.hasLinkedSteed();\n\n        // Check for esoteric attack options\n        data.esotericAtkOptions = this.actor.items.filter(\n            (item) => game.hm3.config.esotericCombatItems.attack.includes(item.name) && item.system.isEquipped\n        );\n        // Check for esoteric defense options\n        data.esotericDefOptions = this.actor.items.filter((item) =>\n            game.hm3.config.esotericCombatItems.defense.includes(item.name)\n        );\n\n        return data;\n    }\n\n    /** @override */\n    _onSortItem(event, itemData) {\n        // TODO - for now, don't allow sorting for Synthetic Actors\n        if (this.actor.isToken) return;\n\n        if (!itemData.type.endsWith('gear')) return super._onSortItem(event, itemData);\n\n        // Get the drag source and its siblings\n        const source = this.actor.items.get(itemData._id);\n        const siblings = this.actor.items.filter((i) => {\n            return i.type.endsWith('gear') && i.id !== source.id;\n        });\n\n        // Get the drop target\n        const dropTarget = event.target.closest('.item');\n        const targetId = dropTarget ? dropTarget.dataset.itemId : null;\n        const target = siblings.find((s) => s.id === targetId);\n\n        // Ensure we are only sorting like-types\n        if (target && !target.type.endsWith('gear')) return;\n\n        // Perform the sort\n        const sortUpdates = SortingHelpers.performIntegerSort(source, {target: target, siblings});\n        const updateData = sortUpdates.map((u) => {\n            const update = u.update;\n            update._id = u.target._id;\n            return update;\n        });\n\n        // Perform the update\n        return this.actor.updateEmbeddedDocuments('Item', updateData);\n    }\n\n    /** @override */\n    async _onDropActor(event, data) {\n        if (!this.actor.isOwner) return false;\n\n        const companion = await Actor.fromDropData(data);\n        if (!companion || companion?.type === 'container') return false;\n        if (this.actor.id === companion.id) {\n            ui.notifications.warn('You cannot add yourself.');\n            return false;\n        }\n\n        await this.actor.createEmbeddedDocuments('Item', [\n            {\n                name: companion.name,\n                type: 'companion',\n                system: {\n                    actorUuid: companion.uuid\n                }\n            }\n        ]);\n\n        return true;\n    }\n\n    /** @override */\n    async _onDropItem(event, data) {\n        if (!this.actor.isOwner) return false;\n\n        const droppedItem = await Item.fromDropData(data);\n\n        // Check if coming from a compendium pack ||\n        // Skills, spells, etc. (non-gear) ||\n        // Gear coming from world items list\n        if (droppedItem.pack || !droppedItem.type?.endsWith('gear') || !droppedItem.parent) {\n            const closestContainer = event.target.closest('[data-container-id]');\n            const destContainer = closestContainer?.dataset.containerId\n                ? closestContainer.dataset.containerId\n                : 'on-person';\n\n            let newItem = await super._onDropItem(event, data);\n            if (!newItem) return;\n            newItem = newItem[0];\n            // If the item is some type of gear (other than containergear), then\n            // make sure we set the container to the same as the dropped location\n            // (this allows people to move items into containers easily)\n            if (newItem?.type?.endsWith('gear') && newItem?.type !== 'containergear') {\n                if (newItem.system.container !== destContainer) {\n                    await newItem.update({'system.container': destContainer});\n                }\n            }\n        } else {\n            // At this point we know the item is some sort of gear, and coming from an actor\n\n            // Destination containerid: set to 'on-person' if a containerid can't be found\n            const closestContainer = event.target.closest('[data-container-id]');\n            const destContainer = closestContainer?.dataset.containerId\n                ? closestContainer.dataset.containerId\n                : 'on-person';\n\n            // Dropping an item into the same actor (Token or Linked)\n            if (\n                (droppedItem.parent.isToken && this.actor.token?.id === droppedItem.parent.token.id) ||\n                (!droppedItem.parent.isToken && !this.actor.isToken && droppedItem.parent.id === this.actor.id)\n            ) {\n                // If the item is some type of gear (other than containergear), then\n                // make sure we set the container to the same as the dropped location\n                // (this allows people to move items into containers easily)\n                if (droppedItem.type.endsWith('gear') && droppedItem.type !== 'containergear') {\n                    if (droppedItem.system.container !== destContainer) {\n                        await droppedItem.update({'system.container': destContainer});\n                    }\n                }\n\n                return super._onDropItem(event, data);\n            }\n\n            // At this point we know this dropped item is Gear coming from an actor,\n\n            // Containers are a special case, and they need to be processed specially\n            if (droppedItem.type === ItemType.CONTAINERGEAR) return this._moveContainer(event, droppedItem);\n\n            // Set the destination container to the closest drop containerid\n            droppedItem.system.container = destContainer;\n\n            const quantity = droppedItem.system.quantity;\n\n            // Source quantity really should never be 0 or negative; if so, just decline\n            // the drop request.\n            if (quantity <= 0) return false;\n\n            if (quantity > 1) {\n                // Ask how many to move\n                return this._moveQtyDialog(event, droppedItem);\n            } else {\n                return this._moveItems(droppedItem, 1);\n            }\n        }\n    }\n\n    async _moveContainer(event, item) {\n        // create new container\n\n        if (!item.parent) {\n            ui.notifications.warn(`Error accessing actor where container is coming from, move aborted`);\n            throw Error(`Error accessing actor where container is coming from, move aborted`);\n        }\n\n        let itData = item.toObject;\n        delete itData._id;\n        const containerResult = await Item.create(itData, {parent: this.actor});\n        if (!containerResult) {\n            ui.notifications.warn(`Error while moving container, move aborted`);\n            return null;\n        }\n\n        // move all items into new container\n        let failure = false;\n        for (let it of item.parent.items.values()) {\n            if (!failure && it.system.container === data.id) {\n                itData = it.toObject();\n                delete itData._id;\n                itData.system.container = containerResult.id;\n                const result = await Item.create(itData, {parent: this.actor});\n                if (result) {\n                    await Item.deleteDocuments([it.id], {parent: item.parent});\n                } else {\n                    failure = true;\n                }\n            }\n        }\n\n        if (failure) {\n            ui.notifications.error(\n                `Error duing move of items from source to destination, container has been only partially moved!`\n            );\n            return null;\n        }\n\n        // delete old container\n        await Item.deleteDocuments([data._id], {parent: item.parent});\n        return containerResult;\n    }\n\n    async _moveQtyDialog(event, item) {\n        // Get source actor\n        if (!item.parent) {\n            ui.notifications.warn(`Error accessing actor where container is coming from, move aborted`);\n            throw Error(`Error accessing actor where container is coming from, move aborted`);\n        }\n\n        // Render modal dialog\n        let dlgTemplate = 'systems/hm3/templates/dialog/item-qty.hbs';\n        let dialogData = {\n            itemName: item.name,\n            sourceName: item.parent.name,\n            targetName: this.actor.name,\n            maxItems: item.system.quantity\n        };\n\n        const dlghtml = await renderTemplate(dlgTemplate, dialogData);\n\n        // Create the dialog window\n        return Dialog.prompt({\n            title: 'Move Items',\n            content: dlghtml,\n            label: 'OK',\n            callback: async (html) => {\n                const form = html.querySelector('#items-to-move');\n                const fd = new FormDataExtended(form);\n                const formdata = fd.object;\n                let formQtyToMove = parseInt(formdata.itemstomove);\n\n                if (formQtyToMove <= 0) {\n                    return false;\n                } else {\n                    return this._moveItems(item, formQtyToMove);\n                }\n            },\n            options: {jQuery: false}\n        });\n    }\n\n    async _moveItems(item, moveQuantity) {\n        const sourceName = item.name;\n        const sourceType = item.type;\n        const sourceQuantity = item.system.quantity;\n\n        if (!item.parent) {\n            ui.notifications.warn(`Error accessing actor where container is coming from, move aborted`);\n            return null;\n        }\n\n        // Look for a similar item locally\n        let result = this.actor.items.find((it) => it.type === sourceType && it.name === sourceName);\n\n        if (result) {\n            // update quantity\n            const newTargetQuantity = result.system.quantity + moveQuantity;\n            await result.update({'system.quantity': newTargetQuantity});\n        } else {\n            // Create an item\n            const itData = item.toObject();\n            delete itData._id;\n\n            itData.system.quantity = moveQuantity;\n            itData.system.container = 'on-person';\n            result = await Item.create(itData, {parent: this.actor});\n        }\n\n        if (result) {\n            if (moveQuantity >= sourceQuantity) {\n                await Item.deleteDocuments([item.id], {parent: item.parent});\n            } else {\n                const newSourceQuantity = sourceQuantity - moveQuantity;\n                await item.update({'system.quantity': newSourceQuantity});\n            }\n        }\n        return result;\n    }\n\n    /** @override */\n    async _onDropItemCreate(itemData) {\n        const actor = this.actor;\n        if (!actor.isOwner) return false;\n\n        if (!itemData.type.endsWith('gear')) {\n            if (actor.type === ActorType.CONTAINER) {\n                ui.notifications.warn(\n                    `You may only place physical objects in a container; drop of ${itemData.name} refused.`\n                );\n                return false;\n            }\n\n            actor.items.forEach((it) => {\n                // Generally, if the items have the same type and name,\n                // then merge the dropped item onto the existing item.\n                if (it.type === itemData.type && it.name === itemData.name) {\n                    this.mergeItem(it, itemData);\n\n                    // Don't actually allow the new item\n                    // to be created.\n                    return false;\n                }\n            });\n\n            return Item.create(itemData, {parent: this.actor});\n        }\n\n        return super._onDropItemCreate(itemData);\n    }\n\n    /** @override */\n    activateListeners(html) {\n        super.activateListeners(html);\n\n        if (!game.user.isGM) {\n            html.find('.facade-image').click(async (ev) => {\n                new ImagePopout(this.actor.system.bioImage, {\n                    title: this.actor.name,\n                    uuid: this.actor.uuid\n                }).render(true);\n            });\n\n            html.find('.profile-img').click(async (ev) => {\n                new ImagePopout(this.actor.img, {\n                    title: this.actor.name,\n                    uuid: this.actor.uuid\n                }).render(true);\n            });\n        }\n\n        // Everything below here is only needed if the sheet is editable\n        if (!this.options.editable) return;\n\n        html.find('.character-mancer').click(async (ev) => {\n            await this.actor.unsetFlag('hm3', 'CharacterMancer');\n            this.actor.sheet.render();\n        });\n\n        // Add Inventory Item\n        html.find('.item-create').click(this._onItemCreate.bind(this));\n\n        // Update Inventory Item\n        html.find('.item-edit, .gear-name').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const item = this.actor.items.get(li.data('itemId'));\n            item.sheet.render(true);\n        });\n\n        // Delete Inventory Item\n        html.find('.item-delete').click(this._onItemDelete.bind(this));\n\n        // Dump Esoteric Description to Chat\n        html.find('.item-dumpdesc').click(this._onDumpEsotericDescription.bind(this));\n\n        html.find('.item-minimize, .item-maximize').click(this._onContainerCollapse.bind(this));\n\n        html.on('click', '.fff-name', (ev) => {\n            const el = ev.currentTarget.querySelector('#companion'); //.dataset; // .innerText;\n            if (!el) return;\n            const uuid = el.dataset.itemActorUuid;\n            const actor = fromUuidSync(uuid);\n            actor.sheet.render(true);\n        });\n\n        html.on('click', '.item-name, .spell-name', (ev) => {\n            switch (ev.currentTarget.innerText) {\n                case 'Magic Spells':\n                    ui.notifications.info('Magic Spells sorted!');\n                    const convocations = new Map([\n                        ['Fyvria', 1],\n                        ['Jmorvi', 2],\n                        ['Lyahvi', 3],\n                        ['Odivshe', 4],\n                        ['Peleahn', 5],\n                        ['Savorya', 6],\n                        ['Neutral', 7]\n                    ]);\n                    this.object.items.forEach(async (i) => {\n                        if (i.type === ItemType.SPELL) {\n                            await i.update({\n                                'sort': Number(\n                                    convocations.get(i.system.convocation).toString() +\n                                        i.system.level.toString() +\n                                        (i.name.toLowerCase().charCodeAt(0) - 87).toString() +\n                                        (i.name.toLowerCase().charCodeAt(1) - 87).toString() +\n                                        (i.name.toLowerCase().charCodeAt(2) - 87).toString() +\n                                        ((i.name.toLowerCase().charCodeAt(3) | 97) - 87).toString() +\n                                        ((i.name.toLowerCase().charCodeAt(4) | 97) - 87).toString()\n                                )\n                            });\n                        }\n                    });\n                    break;\n\n                case 'Ritual Invocations':\n                    ui.notifications.info('Ritual Invocations sorted!');\n                    this.object.items.forEach(async (i) => {\n                        if (i.type === ItemType.INVOCATION) {\n                            await i.update({\n                                'sort': Number(\n                                    i.system.circle.toString() +\n                                        (i.name.toLowerCase().charCodeAt(0) - 87).toString() +\n                                        (i.name.toLowerCase().charCodeAt(1) - 87).toString() +\n                                        (i.name.toLowerCase().charCodeAt(2) - 87).toString() +\n                                        ((i.name.toLowerCase().charCodeAt(3) | 97) - 87).toString() +\n                                        ((i.name.toLowerCase().charCodeAt(4) | 97) - 87).toString()\n                                )\n                            });\n                        }\n                    });\n                    break;\n\n                case 'Psionic Talents':\n                    ui.notifications.info('Psionic Talents sorted!');\n                    this.object.items.forEach(async (i) => {\n                        if (i.type === ItemType.PSIONIC) {\n                            await i.update({\n                                'sort': Number(\n                                    (i.name.toLowerCase().charCodeAt(0) - 87).toString() +\n                                        (i.name.toLowerCase().charCodeAt(1) - 87).toString() +\n                                        (i.name.toLowerCase().charCodeAt(2) - 87).toString() +\n                                        ((i.name.toLowerCase().charCodeAt(3) | 97) - 87).toString() +\n                                        ((i.name.toLowerCase().charCodeAt(4) | 97) - 87).toString()\n                                )\n                            });\n                        }\n                    });\n                    break;\n            }\n        });\n\n        // Active Effect management\n        html.find('.effect-control, .effect-name').click((ev) => onManageActiveEffect(ev, this.document));\n\n        // Macro management\n        html.find('.macro-control, .macro-name').click((ev) => onManageMacro(ev, this.document));\n\n        // Ensure all text is selected when entering number input field\n        html.on('click', \"input[type='number']\", (ev) => {\n            ev.currentTarget.select();\n        });\n\n        // Ensure all text is selected when entering text input field\n        html.on('click', \"input[type='text']\", (ev) => {\n            ev.currentTarget.select();\n        });\n\n        html.on('change', \"input[type='text']\", (ev) => {\n            if (ev.target.name === 'item-quantity-special') {\n                this._handleQtyInput(ev.target.id.slice(0, 16), ev.target.value);\n            } else if (ev.target.name === 'item-sbx-special') {\n                this._handleSbxInput(ev.target.id.slice(0, 16), ev.target.value);\n            } else if (ev.target.name === 'item-op-special') {\n                this._handleOpInput(ev.target.id.slice(0, 16), ev.target.value);\n            }\n        });\n\n        // Filter on name for Skills\n        html.on('keyup', '.skill-name-filter', (ev) => {\n            this.skillNameFilter = $(ev.currentTarget).val();\n            const lcSkillNameFilter = this.skillNameFilter.toLowerCase();\n            let skills = html.find('.skill-item');\n            for (let skill of skills) {\n                const skillName = skill.getAttribute('data-item-name');\n                if (lcSkillNameFilter) {\n                    if (skillName.toLowerCase().includes(lcSkillNameFilter)) {\n                        $(skill).show();\n                    } else {\n                        $(skill).hide();\n                    }\n                } else {\n                    $(skill).show();\n                }\n            }\n        });\n\n        // Filter on name for gear\n        html.on('keyup', '.gear-name-filter', (ev) => {\n            this.gearNameFilter = $(ev.currentTarget).val();\n            const lcGearNameFilter = this.gearNameFilter.toLowerCase();\n            let gearItems = html.find('.gear-item');\n            for (let gear of gearItems) {\n                const gearName = gear.getAttribute('data-item-name');\n                if (lcGearNameFilter) {\n                    if (gearName.toLowerCase().includes(lcGearNameFilter)) {\n                        $(gear).show();\n                    } else {\n                        $(gear).hide();\n                    }\n                } else {\n                    $(gear).show();\n                }\n            }\n        });\n\n        // Filter on name for macros\n        html.on('keyup', '.macros-name-filter', (ev) => {\n            this.macrosNameFilter = $(ev.currentTarget).val();\n            const lcMacrosNameFilter = this.macrosNameFilter.toLowerCase();\n            let macroItems = html.find('.macro');\n            for (let macro of macroItems) {\n                const macroName = macro.getAttribute('data-macro-name');\n                if (lcMacrosNameFilter) {\n                    if (macroName.toLowerCase().includes(lcMacrosNameFilter)) {\n                        $(macro).show();\n                    } else {\n                        $(macro).hide();\n                    }\n                } else {\n                    $(macro).show();\n                }\n            }\n        });\n\n        // Filter on name for effects\n        html.on('keyup', '.effects-name-filter', (ev) => {\n            this.effectsNameFilter = $(ev.currentTarget).val();\n            const lcEffectsNameFilter = this.effectsNameFilter.toLowerCase();\n            let effectItems = html.find('.effect');\n            for (let effect of effectItems) {\n                const effectName = effect.getAttribute('data-effect-name');\n                if (lcEffectsNameFilter) {\n                    if (effectName.toLowerCase().includes(lcEffectsNameFilter)) {\n                        $(effect).show();\n                    } else {\n                        $(effect).hide();\n                    }\n                } else {\n                    $(effect).show();\n                }\n            }\n        });\n\n        // Standard 1d100 Skill Roll\n        html.find('.skill-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.skillRoll(item?.uuid, fastforward, this.actor);\n        });\n\n        // Standard 1d100 Spell Casting Roll\n        html.find('.spell-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.castSpellRoll(item?.uuid, fastforward, this.actor);\n        });\n\n        // Standard 1d100 Ritual Invocation Roll\n        html.find('.invocation-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.invokeRitualRoll(item?.uuid, fastforward, this.actor);\n        });\n\n        // Standard 1d100 Psionic Talent Roll\n        html.find('.psionic-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.usePsionicRoll(item?.uuid, fastforward, this.actor);\n        });\n\n        // d6 Ability Score Roll\n        html.find('.ability-d6-roll').click((ev) => {\n            const ability = ev.currentTarget.dataset.ability;\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n            macros.testAbilityD6Roll(ability, fastforward, this.actor);\n        });\n\n        // d100 Ability Score Roll\n        html.find('.ability-d100-roll').click((ev) => {\n            const ability = ev.currentTarget.dataset.ability;\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n            macros.testAbilityD100Roll(ability, fastforward, this.actor);\n        });\n\n        // Weapon Damage Roll\n        html.find('.weapon-damage-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const aspect = ev.currentTarget.dataset.aspect;\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.weaponDamageRoll(item?.uuid, aspect, this.actor);\n        });\n\n        // Missile Damage Roll\n        html.find('.missile-damage-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const range = ev.currentTarget.dataset.range;\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.missileDamageRoll(item?.uuid, range, this.actor);\n        });\n\n        // Melee Weapon Attack\n        html.find('.melee-weapon-attack').click((ev) => {\n            // If we are a synthetic actor, token will be set\n            let token = this.actor.token;\n            if (!token) {\n                // We are not a synthetic actor, so see if there is exactly one linked actor on the canvas\n                const tokens = this.actor.getActiveTokens(true);\n                if (tokens.length == 0) {\n                    ui.notifications.warn(\n                        `There are no tokens linked to this actor on the canvas, double-click on a specific token on the canvas.`\n                    );\n                    return null;\n                } else if (tokens.length > 1) {\n                    ui.notifications.warn(\n                        `There are ${tokens.length} tokens linked to this actor on the canvas, so the attacking token can't be identified.`\n                    );\n                    return null;\n                }\n                token = tokens[0];\n            }\n\n            const li = $(ev.currentTarget).parents('.item');\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.weaponAttack(item?.uuid, false, token);\n        });\n\n        // Missile Weapon Attack\n        html.find('.missile-weapon-attack').click((ev) => {\n            // If we are a synthetic actor, token will be set\n            let token = this.actor.token;\n            if (!token) {\n                // We are not a synthetic actor, so see if there is exactly one linked actor on the canvas\n                const tokens = this.actor.getActiveTokens(true);\n                if (tokens.length == 0) {\n                    ui.notifications.warn(\n                        `There are no tokens linked to this actor on the canvas, double-click on a specific token on the canvas.`\n                    );\n                    return null;\n                } else if (tokens.length > 1) {\n                    ui.notifications.warn(\n                        `There are ${tokens.length} tokens linked to this actor on the canvas, so the attacking token can't be identified.`\n                    );\n                    return null;\n                }\n                token = tokens[0];\n            }\n\n            const li = $(ev.currentTarget).parents('.item');\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.missileAttack(item?.uuid, false, token);\n        });\n\n        // Esoteric Attack\n        html.find('.esoteric-attack').click((ev) => {\n            // If we are a synthetic actor, token will be set\n            let token = this.actor.token;\n            if (!token) {\n                // We are not a synthetic actor, so see if there is exactly one linked actor on the canvas\n                const tokens = this.actor.getActiveTokens(true);\n                if (tokens.length == 0) {\n                    ui.notifications.warn(\n                        `There are no tokens linked to this actor on the canvas, double-click on a specific token on the canvas.`\n                    );\n                    return null;\n                } else if (tokens.length > 1) {\n                    ui.notifications.warn(\n                        `There are ${tokens.length} tokens linked to this actor on the canvas, so the attacking token can't be identified.`\n                    );\n                    return null;\n                }\n                token = tokens[0];\n            }\n\n            const li = $(ev.currentTarget).parents('.item');\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.esotericAttack(item?.uuid, false, token);\n        });\n\n        // Weapon Attack Roll\n        html.find('.weapon-attack-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.weaponAttackRoll(item?.uuid, fastforward, this.actor);\n        });\n\n        // Weapon Defend Roll\n        html.find('.weapon-defend-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.weaponDefendRoll(item?.uuid, fastforward, this.actor);\n        });\n\n        // Missile Attack Roll\n        html.find('.missile-attack-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.missileAttackRoll(item?.uuid, this.actor);\n        });\n\n        // Injury Roll\n        html.find('.injury-roll').click((ev) => macros.injuryRoll(this.actor));\n\n        // Healing Roll\n        html.find('.healing-roll').click((ev) => {\n            const li = $(ev.currentTarget).parents('.item');\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\n            const item = this.actor.items.get(li.data('itemId'));\n            macros.healingRoll(item?.uuid, fastforward, this.actor);\n            //const ifff = new ImportFFF();\n            //ifff.importFromJSON('test.json');\n        });\n\n        // Dodge Roll\n        html.find('.dodge-roll').click((ev) => macros.dodgeRoll(ev.shiftKey || ev.altKey || ev.ctrlKey, this.actor));\n\n        // Shock Roll\n        html.find('.shock-roll').click((ev) => macros.shockRoll(ev.shiftKey || ev.altKey || ev.ctrlKey, this.actor));\n\n        // Stumble Roll\n        html.find('.stumble-roll').click((ev) =>\n            macros.stumbleRoll(ev.shiftKey || ev.altKey || ev.ctrlKey, this.actor)\n        );\n\n        // Fumble Roll\n        html.find('.fumble-roll').click((ev) => macros.fumbleRoll(ev.shiftKey || ev.altKey || ev.ctrlKey, this.actor));\n\n        // Generic Damage Roll\n        html.find('.damage-roll').click((ev) => macros.genericDamageRoll(this.actor));\n\n        // Falling Roll\n        html.find('.falling-roll').click((ev) => macros.fallingRoll(false, this.actor));\n\n        // Morale Roll\n        html.find('.morale-roll').click((ev) => macros.moraleRoll(ev.shiftKey || ev.altKey || ev.ctrlKey, this.actor));\n\n        // Mount / Dismount\n        html.find('.mount-action').click(this._onToggleMount.bind(this));\n\n        // Steed Command Check\n        html.find('.steedcommand-roll').click((ev) =>\n            macros.steedCommandRoll(ev.shiftKey || ev.altKey || ev.ctrlKey, this.actor)\n        );\n\n        // Unhorsing Roll\n        html.find('.unhorsing-roll').click((ev) =>\n            macros.unhorsingRoll(ev.shiftKey || ev.altKey || ev.ctrlKey, this.actor)\n        );\n\n        // Toggle carry state\n        html.find('.item-carry').click(this._onToggleCarry.bind(this));\n\n        // Toggle equip state\n        html.find('.item-equip').click(this._onToggleEquip.bind(this));\n\n        // Toggle improve state\n        html.find('.item-improve').click(this._onToggleImprove.bind(this));\n\n        // More Info\n        html.find('.more-info').click(this._onMoreInfo.bind(this));\n    }\n\n    /* -------------------------------------------- */\n\n    /** @inheritDoc */\n    // async activateEditor(name, options = {}, initialContent = '') {\n    //     options.relativeLinks = true;\n    //     options.plugins = {\n    //         menu: ProseMirror.ProseMirrorMenu.build(ProseMirror.defaultSchema, {\n    //             compact: true,\n    //             destroyOnSave: false,\n    //             onSave: () => this.saveEditor(name, {remove: false})\n    //         })\n    //     };\n    //     return super.activateEditor(name, options, initialContent);\n    // }\n\n    async _onItemDelete(event) {\n        event.preventDefault();\n        const header = event.currentTarget;\n        const data = foundry.utils.deepClone(header.dataset);\n        const li = $(header).parents('.item');\n        const itemId = li.data('itemId');\n        if (itemId) {\n            const item = this.actor.items.get(itemId);\n            if (!item) {\n                console.error(`HM3 | Delete aborted, item ${itemId} in actor ${this.actor.name} was not found.`);\n                return;\n            }\n\n            let title = `Delete ${data.label}`;\n            let content;\n            if (item.type === 'containergear') {\n                title = 'Delete Container';\n                content = '<p>WARNING: All items in this container will be deleted as well!</p><p>Are you sure?</p>';\n            } else {\n                content = '<p>Are you sure?</p>';\n            }\n\n            // Create the dialog window\n            let agree = false;\n            await Dialog.confirm({\n                title: title,\n                content: content,\n                yes: () => (agree = true)\n            });\n\n            if (agree) {\n                const deleteItems = [];\n\n                // Add all items in the container to the delete list\n                if (item.type === 'containeritem') {\n                    this.actor.items.forEach((it) => {\n                        if (item.type.endsWith('gear') && it.systemn.container === itemId) deleteItems.push(it.id);\n                    });\n                }\n\n                deleteItems.push(itemId); // ensure we delete the container last\n\n                for (let it of deleteItems) {\n                    await Item.deleteDocuments([it], {parent: this.actor});\n                    li.slideUp(200, () => this.render(false));\n                }\n            }\n        }\n    }\n\n    async _onContainerCollapse(ev) {\n        const el = ev.currentTarget.dataset;\n        if (!el) return;\n        const container = fromUuidSync(el.cuuid);\n        if (container) {\n            if (el.action === 'minimize') {\n                container.update({'system.collapsed': true});\n            } else if (el.action === 'maximize') {\n                container.update({'system.collapsed': false});\n            }\n        } else if (el.containerId === 'on-person') {\n            if (el.action === 'minimize') {\n                this.actor.setFlag('hm3', 'onPersonContainerCollapsed', true);\n            } else if (el.action === 'maximize') {\n                this.actor.setFlag('hm3', 'onPersonContainerCollapsed', false);\n            }\n        }\n    }\n\n    async mergeItem(item, other) {\n        if (item.type != other.type) {\n            return;\n        }\n\n        const data = item.system;\n        const otherData = other.system;\n        const updateData = {};\n\n        if (!data.notes) updateData['system.notes'] = otherData.notes;\n        if (!data.source) updateData['system.source'] = otherData.source;\n        if (!data.description) updateData['system.description'] = otherData.description;\n        if (!data.macros.type || data.macros.type !== otherData.macros.type)\n            updateData['system.macros.type'] = otherData.macros.type;\n        if (!data.macros.command) updateData['system.macros.command'] = otherData.macros.command;\n        updateData['img'] = other.img;\n\n        switch (item.type) {\n            case 'skill':\n                // If the skill types don't match, return without change\n                if (data.type != otherData.type) {\n                    return;\n                }\n\n                // NOTE: We never copy over the skillbase value or\n                // the Piety value, those must always be set in the\n                // actor's sheet.\n\n                // If the skillbase is blank, copy it over from dropped item\n                if (!data.skillBase.formula) {\n                    updateData['system.skillBase.formula'] = otherData.skillBase.formula;\n                    updateData['system.skillBase.isFormulaValid'] = otherData.skillBase.isFormulaValid;\n                }\n                break;\n\n            case 'spell':\n                updateData['system.convocation'] = otherData.convocation;\n                updateData['system.level'] = otherData.level;\n                break;\n\n            case 'invocation':\n                updateData['system.diety'] = otherData.diety;\n                updateData['system.circle'] = otherData.circle;\n                break;\n\n            case 'psionic':\n                // If the skillbase is blank, copy it over from dropped item\n                if (!data.skillBase.formula) {\n                    updateData['system.skillBase.formula'] = otherData.skillBase.formula;\n                    updateData['system.skillBase.isFormulaValid'] = otherData.skillBase.isFormulaValid;\n                }\n                updateData['system.fatigue'] = otherData.fatigue || 0;\n                break;\n        }\n\n        await item.update(updateData);\n\n        return;\n    }\n\n    async _onItemCreate(event) {\n        event.preventDefault();\n        const header = event.currentTarget;\n        // Grab any data associated with this control.\n        const dataset = foundry.utils.deepClone(header.dataset);\n\n        let extraList = [];\n        let extraLabel = null;\n\n        let name;\n\n        // Ask type\n        // Initialize a default name.\n        if (dataset.type === 'skill' && dataset.skilltype) {\n            name = utility.createUniqueName(`New ${dataset.skilltype} Skill`, this.actor.itemTypes.skill);\n        } else if (dataset.type == 'trait' && dataset.traittype) {\n            name = utility.createUniqueName(`New ${dataset.traittype} Trait`, this.actor.itemTypes.trait);\n        } else if (dataset.type.endsWith('gear')) {\n            name = 'New Gear';\n            extraList = ['Misc. Gear', 'Armor', 'Melee Weapon', 'Missile Weapon', 'Container'];\n            extraLabel = 'Gear Type';\n        } else {\n            switch (dataset.type) {\n                case ItemType.ARMORLOCATION:\n                    name = utility.createUniqueName('New Location', this.actor.itemTypes.armorlocation);\n                    break;\n\n                case 'injury':\n                    name = utility.createUniqueName('New Injury', this.actor.itemTypes.injury);\n                    break;\n\n                case 'spell':\n                    name = utility.createUniqueName('New Spell', this.actor.itemTypes.spell);\n                    break;\n\n                case 'invocation':\n                    name = utility.createUniqueName('New Invocation', this.actor.itemTypes.invocation);\n                    break;\n\n                case 'psionic':\n                    name = utility.createUniqueName('New Psionic', this.actor.itemTypes.psionic);\n                    break;\n\n                default:\n                    console.error(`HM3 | Can't create item: unknown item type '${dataset.type}'`);\n                    return null;\n            }\n        }\n\n        // Render modal dialog\n        let dlgTemplate = 'systems/hm3/templates/dialog/create-item.hbs';\n        let dialogData = {\n            type: dataset.type,\n            title: name,\n            placeholder: name,\n            extraList: extraList,\n            extraLabel: extraLabel\n        };\n\n        const dlghtml = await renderTemplate(dlgTemplate, dialogData);\n\n        // Create the dialog window\n        return Dialog.prompt({\n            title: dialogData.title,\n            content: dlghtml,\n            label: 'Create',\n            callback: async (html) => {\n                const form = html.querySelector('#create-item');\n                const fd = new FormDataExtended(form);\n                const formdata = fd.object;\n                let itemName = formdata.name;\n                let extraValue = formdata.extra_value;\n\n                const updateData = {name: itemName, type: dataset.type};\n                if (dataset.type === 'gear') {\n                    if (extraValue === 'Container') updateData.type = 'containergear';\n                    else if (extraValue === 'Armor') updateData.type = 'armorgear';\n                    else if (extraValue === 'Melee Weapon') updateData.type = 'weapongear';\n                    else if (extraValue === 'Missile Weapon') updateData.type = 'missilegear';\n                    else updateData.type = 'miscgear';\n                }\n\n                // Item Data\n                if (dataset.type === 'skill') updateData['system.type'] = dataset.skilltype;\n                else if (dataset.type === 'trait') updateData['system.type'] = dataset.traittype;\n                else if (dataset.type.endsWith('gear')) updateData['system.container'] = dataset.containerId;\n                else if (dataset.type === 'spell') updateData['system.convocation'] = extraValue;\n                else if (dataset.type === 'invocation') updateData['system.diety'] = extraValue;\n\n                // Finally, create the item!\n                const result = await Item.create(updateData, {parent: this.actor});\n\n                if (!result) {\n                    throw new Error(\n                        `Error creating item '${updateData.name}' of type '${updateData.type}' on character '${this.actor.name}'`\n                    );\n                }\n\n                // Bring up edit dialog to complete creating item\n                const item = this.actor.items.get(result.id);\n                item.sheet.render(true);\n\n                return result;\n            },\n            options: {jQuery: false}\n        });\n    }\n\n    async _onToggleMount(event) {\n        event.preventDefault();\n\n        const riding = this.actor.items.find((item) => item.type === ItemType.SKILL && item.name.includes('Riding'));\n\n        const steed = fromUuidSync(riding.system.actorUuid);\n        if (steed) {\n            if (!this.actor.system.mounted) {\n                Hooks.call('hm3.onMount', this.actor, steed);\n            } else {\n                Hooks.call('hm3.onUnmount', this.actor, steed);\n            }\n        }\n    }\n\n    /**\n     * Handle toggling the carry state of an Owned Item within the Actor\n     * @param {Event} event   The triggering click event\n     * @private\n     */\n    async _onToggleCarry(event) {\n        event.preventDefault();\n        const itemId = event.currentTarget.closest('.item').dataset.itemId;\n        const item = this.actor.items.get(itemId);\n\n        // Only process inventory (\"gear\") items, otherwise ignore\n        if (item.type.endsWith('gear')) {\n            const attr = 'system.isCarried';\n            const ret = await item.update({[attr]: !foundry.utils.getProperty(item, attr)});\n\n            for (const effect of item.effects.contents) {\n                await effect.update({disabled: !item.system.isEquipped || !item.system.isCarried});\n            }\n\n            return ret;\n        }\n\n        return null;\n    }\n\n    /**\n     * Handle toggling the carry state of an Owned Item within the Actor\n     * @param {Event} event   The triggering click event\n     * @private\n     */\n    async _onToggleEquip(event) {\n        event.preventDefault();\n        const itemId = event.currentTarget.closest('.item').dataset.itemId;\n        const item = this.actor.items.get(itemId);\n\n        // Only process inventory (\"gear\") items, otherwise ignore\n        if (item.type.endsWith('gear')) {\n            const attr = 'system.isEquipped';\n            const ret = await item.update({[attr]: !foundry.utils.getProperty(item, attr)});\n\n            for (const effect of item.effects.contents) {\n                await effect.update({disabled: !item.system.isEquipped || !item.system.isCarried});\n            }\n\n            return ret;\n        }\n\n        return null;\n    }\n\n    /**\n     * Handle toggling the improve state of an Owned Item within the Actor\n     * @param {Event} event   The triggering click event\n     * @private\n     */\n    async _onToggleImprove(event) {\n        event.preventDefault();\n        const itemId = event.currentTarget.closest('.item').dataset.itemId;\n        const item = this.actor.items.get(itemId);\n\n        // Only process skills and psionics, otherwise ignore\n        if (item.type === 'skill' || item.type === 'psionic') {\n            if (!item.system.improveFlag) {\n                return item.update({'system.improveFlag': 1});\n            } else {\n                return this._improveToggleDialog(item);\n            }\n        }\n\n        return null;\n    }\n\n    async _onMoreInfo(event) {\n        event.preventDefault();\n        const journalEntry = event.currentTarget.dataset.journalEntry;\n\n        const helpJournal = await game.packs.find((p) => p.collection === `hm3.system-help`).getDocuments();\n        const article = helpJournal.find((i) => i.name === journalEntry);\n        //const article = game.journal.getName(journalEntry);\n        if (!article) {\n            console.error(`HM3 | Can't find journal entry with name \"${journalEntry}\".`);\n            return null;\n        }\n        article.sheet.render(true, {editable: false});\n        return null;\n    }\n\n    async _improveToggleDialog(item) {\n        // Condition skill is maxed out (SKILLS 9)\n        if (item.type === 'skill' && item.name === 'Condition') {\n            if (item.system.masteryLevel >= 7 * item.system.skillBase.value) {\n                await game.hm3.GmSays({\n                    text: `<h4>${this.actor.name}: ${item.name}</h4>` + game.i18n.localize('hm3.SDR.ConditionSkillMax'),\n                    source: 'SKILLS 9'\n                });\n                return;\n            }\n        }\n\n        let dlghtml = game.i18n.localize('hm3.SDR.MainDlgHtml');\n        // Create the dialog window\n        return new Promise((resolve) => {\n            new Dialog(\n                {\n                    title: game.i18n.localize('hm3.SDR.Toggle'),\n                    content: dlghtml.trim(),\n                    buttons: {\n                        performSDR: {\n                            label: game.i18n.localize('hm3.SDR.Perform'),\n                            callback: async () => {\n                                let num = item.system.improveFlag;\n\n                                if (num <= 2) num = 1; // 1, 2\n                                else if (num <= 5) num = 2; // 3, 4, 5\n                                else if (num <= 9) num = 3; // 6, 7, 8, 9\n                                else if (num <= 14) num = 4; // 10, 11, 12, 13, 14\n                                else num = 5; // 15, 16, ...\n\n                                for (let i = 0; i < num; i++) {\n                                    await this.actor.skillDevRoll(item);\n                                }\n                                resolve(true);\n                            }\n                        },\n                        performTrainingSDR: {\n                            label: game.i18n.localize('hm3.SDR.PerformTraining'),\n                            callback: async (html) => {\n                                // Special rules for combat skills\n                                if (item.type === 'skill' && item.system.type === 'Combat') {\n                                    // Once opened, Development Rolls are made only for Combat Experience (SKILLS 18)\n                                    if (item.name === 'Initiative') {\n                                        await game.hm3.GmSays({\n                                            text:\n                                                `<h4>${this.actor.name}: ${item.name}</h4>` +\n                                                game.i18n.localize('hm3.SDR.InitiativeExperience'),\n                                            source: 'SKILLS 18'\n                                        });\n                                        return;\n                                    }\n                                    // Weapon Skills may be developed by practice/training as normal, but no weapon skill\n                                    // can be increased beyond ML70 except by actual combat experience (SKILLS 18)\n                                    else if (item.system.masteryLevel >= 70) {\n                                        await game.hm3.GmSays({\n                                            text:\n                                                `<h4>${this.actor.name}: ${item.name}</h4>` +\n                                                game.i18n.localize('hm3.SDR.CombatExperience'),\n                                            source: 'SKILLS 18'\n                                        });\n                                        return;\n                                    }\n                                }\n                                dlghtml = game.i18n.localize('hm3.SDR.TrainingDlgHtml');\n                                return new Promise((resolve) => {\n                                    new Dialog({\n                                        title: game.i18n.localize('hm3.SDR.SDRs'),\n                                        content: dlghtml.trim(),\n                                        buttons: {\n                                            roll: {\n                                                label: game.i18n.localize('hm3.SDR.Roll'),\n                                                callback: async (html) => {\n                                                    const num = Number(html.find('#sdr')[0].value);\n                                                    let success = 0;\n                                                    for (let i = 0; i < num; i++) {\n                                                        // Condition skill is maxed out (SKILLS 9)\n                                                        if (item.type === 'skill' && item.name === 'Condition') {\n                                                            if (\n                                                                item.system.masteryLevel >=\n                                                                7 * item.system.skillBase.value\n                                                            ) {\n                                                                await game.hm3.GmSays({\n                                                                    text:\n                                                                        `<h4>${this.actor.name}: ${item.name}</h4>` +\n                                                                        game.i18n.localize(\n                                                                            'hm3.SDR.ConditionSkillMax'\n                                                                        ) +\n                                                                        `<p>(${num - i} SDRs left)</p>`,\n                                                                    source: 'SKILLS 9'\n                                                                });\n                                                                break;\n                                                            }\n                                                        }\n                                                        if (item.type === 'skill' && item.system.type === 'Combat') {\n                                                            if (item.system.masteryLevel >= 70) {\n                                                                await game.hm3.GmSays({\n                                                                    text:\n                                                                        `<h4>${this.actor.name}: ${item.name}</h4>` +\n                                                                        game.i18n.localize('hm3.SDR.CombatExperience') +\n                                                                        `<p>(${num - i} SDRs left)</p>`,\n                                                                    source: 'SKILLS 18'\n                                                                });\n                                                                break;\n                                                            }\n                                                        }\n\n                                                        if (await this.actor.skillDevRoll(item, false)) success++;\n                                                    }\n                                                    await game.hm3.GmSays({\n                                                        text: `<h4>${this.actor.name}: ${item.name}</h4>${success}/${num} SDRs succeeded`\n                                                    });\n                                                    resolve(true);\n                                                }\n                                            }\n                                        },\n                                        default: 'roll',\n                                        close: () => resolve(false)\n                                    }).render(true);\n                                });\n                            }\n                        },\n                        disableFlag: {\n                            label: game.i18n.localize('hm3.SDR.DisableFlag'),\n                            callback: async () => {\n                                return item.update({'system.improveFlag': 0});\n                            }\n                        }\n                    },\n                    default: 'performSDR',\n                    close: () => resolve(false)\n                },\n                {width: 550}\n            ).render(true);\n        });\n    }\n\n    async _onDumpEsotericDescription(event) {\n        event.preventDefault();\n        const header = event.currentTarget;\n        const li = $(header).parents('.item');\n        const itemId = li.data('itemId');\n\n        if (itemId) {\n            const item = this.actor.items.get(itemId);\n            if (!item) {\n                return;\n            }\n\n            const itemData = item.system;\n\n            if (['spell', 'invocation', 'psionic'].includes(item.type)) {\n                const chatData = {\n                    name: item.name,\n                    desc: itemData.description,\n                    notes: itemData.notes || null,\n                    fatigue: item.type === 'psionic' ? itemData.fatigue : null\n                };\n\n                if (item.type === 'spell') {\n                    chatData.level = utility.romanize(itemData.level);\n                    chatData.title = `${itemData.convocation} Spell`;\n                } else if (item.type === 'invocation') {\n                    chatData.level = utility.romanize(itemData.circle);\n                    chatData.title = `${itemData.diety} Invocation`;\n                } else if (item.type === 'psionic') {\n                    chatData.level = `F${itemData.fatigue}`;\n                    chatData.title = `Psionic Talent`;\n                }\n\n                const chatTemplate = 'systems/hm3/templates/chat/esoteric-desc-card.hbs';\n\n                const html = await renderTemplate(chatTemplate, chatData);\n\n                const messageData = {\n                    user: game.user.id,\n                    speaker: ChatMessage.getSpeaker({actor: this.object}),\n                    content: html.trim(),\n                    type: CONST.CHAT_MESSAGE_STYLES.OTHER\n                };\n\n                // Create a chat message\n                return ChatMessage.create(messageData);\n            }\n        }\n    }\n\n    /**\n     * Handles the quantity input field. You can also write + or - in front of the number\n     * and everything will be calculated accordingly.\n     * @param {string} itemId - The item id.\n     * @param {string} newValue - The newly entered value.\n     */\n    async _handleQtyInput(itemId, newValue) {\n        const item = this.actor.items.find((i) => i.id === itemId);\n\n        // Ensure that at least something has been entered\n        if (newValue.length === 0) {\n            document.getElementById(itemId).value = item.system.quantity;\n            return;\n        }\n\n        const firstChar = Array.from(newValue)[0];\n\n        let isPlus = false;\n        let isMinus = false;\n        if (firstChar === '+') isPlus = true;\n        if (firstChar === '-') isMinus = true;\n        if (isPlus || isMinus) newValue = newValue.slice(1);\n\n        // Ensure that something meaningful has been entered\n        if (newValue.length === 0 || isNaN(newValue)) {\n            document.getElementById(itemId).value = item.system.quantity;\n            return;\n        }\n\n        // Only integer quantities allowed\n        newValue = utility.truncate(Number(newValue), 0);\n\n        if (isPlus) {\n            item.system.quantity = item.system.quantity + newValue;\n        } else if (isMinus) {\n            item.system.quantity = Math.max(item.system.quantity - newValue);\n        } else {\n            item.system.quantity = newValue;\n        }\n\n        document.getElementById(itemId).value = item.system.quantity;\n\n        // Update the quantity on the server\n        item.update({'system.quantity': item.system.quantity});\n    }\n\n    async _handleSbxInput(itemId, newValue) {\n        const item = this.actor.items.find((i) => i.id === itemId);\n\n        // Ensure that something meaningful has been entered\n        if (newValue.length === 0 || isNaN(newValue)) {\n            document.getElementById(itemId + '-SBx').value = item.system.skillBase.SBx;\n            return;\n        }\n\n        // Ensure that something meaningful has been entered\n        if (Number(newValue) <= 0 || Number(newValue) >= 8) {\n            document.getElementById(itemId + '-SBx').value = item.system.skillBase.SBx;\n            return;\n        }\n\n        item.system.skillBase.SBx = newValue;\n        document.getElementById(itemId + '-SBx').value = item.system.skillBase.SBx;\n\n        // Update the quantity on the server\n        await item.update({'system.skillBase.SBx': item.system.skillBase.SBx});\n        await item.update({'system.masteryLevel': 0});\n    }\n\n    async _handleOpInput(itemId, newValue) {\n        const item = this.actor.items.find((i) => i.id === itemId);\n\n        if (newValue.length === 0) {\n            item.system.skillBase.OP = null;\n            document.getElementById(itemId + '-OP').value = item.system.skillBase.OP;\n\n            // Update the quantity on the server\n            await item.update({'system.skillBase.-=OP': item.system.skillBase.OP});\n            await item.update({'system.masteryLevel': 0});\n            return;\n        }\n\n        // Ensure that something meaningful has been entered\n        if (isNaN(newValue)) {\n            document.getElementById(itemId + '-OP').value = item.system.skillBase.OP;\n            return;\n        }\n\n        // Ensure that something meaningful has been entered\n        if (Number(newValue) <= 0 || Number(newValue) >= 4) {\n            document.getElementById(itemId + '-OP').value = item.system.skillBase.OP;\n            return;\n        }\n\n        item.system.skillBase.OP = newValue;\n        document.getElementById(itemId + '-OP').value = item.system.skillBase.OP;\n\n        // Update the quantity on the server\n        await item.update({'system.skillBase.OP': item.system.skillBase.OP});\n        await item.update({'system.masteryLevel': 0});\n    }\n\n    async conditionalRender({aeDisabled = false, aeStarted = false, force = false} = {}) {\n        if (force || this._tabs[0].active === 'effects' || aeDisabled || aeStarted) {\n            return super.render(force);\n        }\n    }\n}\n","import {HarnMasterBaseActorSheet} from './base-actor-sheet.js';\n\n/**\n * Extend the base HarnMasterBaseActorSheet with some very simple modifications\n * @extends {HarnMasterBaseActorSheet}\n */\nexport class CharacterSheetHM3 extends HarnMasterBaseActorSheet {\n    /** @override */\n    static get defaultOptions() {\n        return foundry.utils.mergeObject(super.defaultOptions, {\n            classes: ['hm3', 'sheet', 'actor', 'character'],\n            width: 810,\n            height: 850,\n            tabs: [{navSelector: '.sheet-tabs', contentSelector: '.sheet-body', initial: 'facade'}],\n            resizable: true\n        });\n    }\n\n    /**\n     * Get the correct HTML template path to use for rendering this particular sheet\n     * @type {String}\n     */\n    get template() {\n        if (!game.user.isGM && this.actor.limited) {\n            return 'systems/hm3/templates/actor/character-limited.hbs';\n        } else {\n            return 'systems/hm3/templates/actor/character-sheet.hbs';\n        }\n    }\n}\n","import {BaseActorSheetHM3v2} from './base-actor-sheet-v2.js';\n\n/**\n * Extend the base BaseActorSheetHM3v2 with some very simple modifications\n * @extends {BaseActorSheetHM3v2}\n */\nexport class ContainerSheetHM3v2 extends BaseActorSheetHM3v2 {\n    /** @override */\n    static get defaultOptions() {\n        return foundry.utils.mergeObject(super.defaultOptions, {\n            classes: ['hm3', 'sheet', 'actor', 'actor-v2', 'container'],\n            width: 700,\n            height: 640,\n            tabs: [{navSelector: '.sheet-tabs-v2', contentSelector: '.sheet-body-v2', initial: 'facade'}],\n            scrollY: ['.main-content'],\n            resizable: false\n        });\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Get the correct HTML template path to use for rendering this particular sheet\n     * @type {String}\n     */\n    get template() {\n        if (!game.user.isGM && this.actor.limited) {\n            return 'systems/hm3/templates/actor-v2/container-limited.hbs';\n        } else {\n            return 'systems/hm3/templates/actor-v2/container-sheet.hbs';\n        }\n    }\n}\n","import {HarnMasterBaseActorSheet} from './base-actor-sheet.js';\n\n/**\n * Extend the base HarnMasterBaseActorSheet with some very simple modifications\n * @extends {HarnMasterBaseActorSheet}\n */\nexport class ContainerSheetHM3 extends HarnMasterBaseActorSheet {\n    /** @override */\n    static get defaultOptions() {\n        return foundry.utils.mergeObject(super.defaultOptions, {\n            classes: ['hm3', 'sheet', 'actor', 'container'],\n            width: 700,\n            height: 640,\n            tabs: [{navSelector: '.sheet-tabs', contentSelector: '.sheet-body', initial: 'facade'}]\n        });\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Get the correct HTML template path to use for rendering this particular sheet\n     * @type {String}\n     */\n    get template() {\n        if (!game.user.isGM && this.actor.limited) {\n            return 'systems/hm3/templates/actor/container-limited.hbs';\n        } else {\n            return 'systems/hm3/templates/actor/container-sheet.hbs';\n        }\n    }\n}\n","import {BaseActorSheetHM3v2} from './base-actor-sheet-v2.js';\n\n/**\n * Extend the base BaseActorSheetHM3v2 with some very simple modifications\n * @extends {BaseActorSheetHM3v2}\n */\nexport class CreatureSheetHM3v2 extends BaseActorSheetHM3v2 {\n    /** @override */\n    static get defaultOptions() {\n        return foundry.utils.mergeObject(super.defaultOptions, {\n            classes: ['hm3', 'sheet', 'actor', 'actor-v2', 'creature'],\n            width: 810,\n            height: 850,\n            tabs: [{navSelector: '.sheet-tabs-v2', contentSelector: '.sheet-body-v2', initial: 'facade'}],\n            scrollY: ['.main-content'],\n            resizable: false\n        });\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Get the correct HTML template path to use for rendering this particular sheet\n     * @type {String}\n     */\n    get template() {\n        if (!game.user.isGM && this.actor.limited) {\n            return 'systems/hm3/templates/actor-v2/creature-limited.hbs';\n        } else {\n            return 'systems/hm3/templates/actor-v2/creature-sheet.hbs';\n        }\n    }\n}\n","import {HarnMasterBaseActorSheet} from './base-actor-sheet.js';\n\n/**\n * Extend the base HarnMasterBaseActorSheet with some very simple modifications\n * @extends {HarnMasterBaseActorSheet}\n */\nexport class CreatureSheetHM3 extends HarnMasterBaseActorSheet {\n    /** @override */\n    static get defaultOptions() {\n        return foundry.utils.mergeObject(super.defaultOptions, {\n            classes: ['hm3', 'sheet', 'actor', 'creature'],\n            width: 810,\n            height: 850,\n            tabs: [{navSelector: '.sheet-tabs', contentSelector: '.sheet-body', initial: 'facade'}]\n        });\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Get the correct HTML template path to use for rendering this particular sheet\n     * @type {String}\n     */\n    get template() {\n        if (!game.user.isGM && this.actor.limited) {\n            return 'systems/hm3/templates/actor/creature-limited.hbs';\n        } else {\n            return 'systems/hm3/templates/actor/creature-sheet.hbs';\n        }\n    }\n}\n","export class ActiveEffectHM3 extends ActiveEffect {\n    /** @override */\n    _prepareDuration() {\n        const ret = super._prepareDuration();\n\n        if (ret.duration === game.hm3.CONST.TIME.INDEFINITE) ret.label = 'Indefinite';\n        else if (ret.duration === game.hm3.CONST.TIME.PERMANENT) ret.label = 'Permanent';\n\n        return ret;\n    }\n\n    async _preUpdate(changed, options, user) {\n        if (changed.changes && changed.changes.length > 0) {\n            for (const change of changed.changes) {\n                if (\n                    change.priority === null ||\n                    change.priority === undefined ||\n                    change.priority === '' ||\n                    change.priority === '0'\n                ) {\n                    change.priority = (change.mode * 10).toString();\n                }\n            }\n        }\n        return super._preUpdate(changed, options, user);\n    }\n\n    get started() {\n        return this.duration?.startTime <= game.time.worldTime;\n    }\n\n    /** @override */\n    get isSuppressed() {\n        return !this.started;\n    }\n\n    get hidden() {\n        let hidden = !!this.flags?.hm3?.hidden;\n        if (this.parent instanceof Item) hidden ||= !!this.parent.system.hidden;\n        return hidden;\n    }\n\n    get selfDestroy() {\n        return !!this.flags?.hm3?.selfDestroy;\n    }\n\n    get unique() {\n        return !!this.flags?.hm3?.unique;\n    }\n\n    hasCreateMacro() {\n        return this.flags?.effectmacro?.onCreate?.script && this.flags?.effectmacro?.onCreate?.script?.trim() !== '';\n    }\n\n    hasDeleteMacro() {\n        return this.flags?.effectmacro?.onDelete?.script && this.flags?.effectmacro?.onDelete?.script?.trim() !== '';\n    }\n\n    hasDisableMacro() {\n        return this.flags?.effectmacro?.onDisable?.script && this.flags?.effectmacro?.onDisable?.script?.trim() !== '';\n    }\n\n    hasTurnStartMacro() {\n        return (\n            this.flags?.effectmacro?.onTurnStart?.script && this.flags?.effectmacro?.onTurnStart?.script?.trim() !== ''\n        );\n    }\n}\n","export class ChatMessageHM3 extends ChatMessage {\n    _highlighted = null;\n\n    static getSpeaker({scene, actor, token, alias, user} = {}) {\n        if (user) return this._getSpeakerFromUser({scene, user, alias});\n        else return super.getSpeaker({scene, actor, token, alias});\n    }\n\n    /** @inheritDoc */\n    async getHTML(options = {}) {\n        const html = await super.getHTML(options);\n        const element = html instanceof HTMLElement ? html : html[0];\n\n        if (foundry.utils.getType(this.system?.getHTML) === 'function') {\n            await this.system.getHTML(element, options);\n            return html;\n        }\n\n        // this._displayChatActionButtons(html);\n        // this._highlightCriticalSuccessFailure(html);\n        // if (game.settings.get('dnd5e', 'autoCollapseItemCards')) {\n        //     html.find('.description.collapsible').each((i, el) => el.classList.add('collapsed'));\n        // }\n\n        this._enrichChatCard(element);\n        // this._collapseTrays(element);\n        // this._activateActivityListeners(element);\n        // dnd5e.bastion._activateChatListeners(this, element);\n\n        /**\n         * A hook event that fires after hm3-specific chat message modifications have completed.\n         * @function hm3.renderChatMessage\n         * @memberof hookEvents\n         * @param {ChatMessageHM3} message  Chat message being rendered.\n         * @param {HTMLElement} html       HTML contents of the message.\n         */\n        Hooks.callAll('hm3.renderChatMessage', this, element);\n\n        return html;\n    }\n\n    _enrichChatCard(html) {\n        // Header matter\n        const actor = this.getAssociatedActor();\n\n        let img;\n        let nameText;\n        if (this.isContentVisible) {\n            img = actor?.img ?? this.author.avatar;\n            nameText = this.alias;\n        } else {\n            img = this.author.avatar;\n            nameText = this.author.name;\n        }\n\n        const avatar = document.createElement('a');\n        avatar.classList.add('avatar');\n        if (actor) avatar.dataset.uuid = actor.uuid;\n        const avatarImg = document.createElement('img');\n        Object.assign(avatarImg, {src: img, alt: nameText});\n        avatar.append(avatarImg);\n\n        const name = document.createElement('span');\n        name.classList.add('name-stacked');\n        const title = document.createElement('span');\n        title.classList.add('title');\n        title.append(nameText);\n        name.append(title);\n\n        const subtitle = document.createElement('span');\n        subtitle.classList.add('subtitle');\n        if (this.whisper.length) subtitle.innerText = html.querySelector('.whisper-to')?.innerText ?? '';\n        if (nameText !== this.author?.name && !subtitle.innerText.length) subtitle.innerText = this.author?.name ?? '';\n\n        name.appendChild(subtitle);\n\n        const sender = html.querySelector('.message-sender');\n        sender?.replaceChildren(avatar, name);\n        html.querySelector('.whisper-to')?.remove();\n\n        // Context menu\n        // const metadata = html.querySelector('.message-metadata');\n        // const deleteButton = metadata.querySelector('.message-delete');\n        // if (!game.user.isGM) deleteButton?.remove();\n        // else deleteButton?.querySelector('i').classList.add('fa-fw');\n        // const anchor = document.createElement('a');\n        // // anchor.setAttribute('aria-label', game.i18n.localize('DND5E.AdditionalControls'));\n        // anchor.classList.add('chat-control');\n        // anchor.dataset.contextMenu = '';\n        // anchor.innerHTML = '<i class=\"fas fa-ellipsis-vertical fa-fw\"></i>';\n        // metadata.appendChild(anchor);\n\n        // SVG icons\n        html.querySelectorAll('i.dnd5e-icon').forEach((el) => {\n            const icon = document.createElement('dnd5e-icon');\n            icon.src = el.dataset.src;\n            el.replaceWith(icon);\n        });\n\n        // Enriched roll flavor\n        //   const roll = this.getFlag('dnd5e', 'roll');\n        //   const item = this.getAssociatedItem();\n        //   const activity = this.getAssociatedActivity();\n        //   if (this.isContentVisible && item && roll) {\n        //       const isCritical = roll.type === 'damage' && this.rolls[0]?.isCritical;\n        //       const subtitle =\n        //           roll.type === 'damage'\n        //               ? isCritical\n        //                   ? game.i18n.localize('DND5E.CriticalHit')\n        //                   : activity?.damageFlavor ?? game.i18n.localize('DND5E.DamageRoll')\n        //               : roll.type === 'attack'\n        //               ? activity?.getActionLabel(roll.attackMode) ?? ''\n        //               : item.system.type?.label ?? game.i18n.localize(CONFIG.Item.typeLabels[item.type]);\n        //       const flavor = document.createElement('div');\n        //       flavor.classList.add('dnd5e2', 'chat-card');\n        //       flavor.innerHTML = `\n        //   <section class=\"card-header description ${isCritical ? 'critical' : ''}\">\n        //     <header class=\"summary\">\n        //       <div class=\"name-stacked\">\n        //         <span class=\"subtitle\">${subtitle}</span>\n        //       </div>\n        //     </header>\n        //   </section>\n        // `;\n        //       const icon = document.createElement('img');\n        //       Object.assign(icon, {className: 'gold-icon', src: item.img, alt: item.name});\n        //       flavor.querySelector('header').insertAdjacentElement('afterbegin', icon);\n        //       const title = document.createElement('span');\n        //       title.classList.add('title');\n        //       title.append(item.name);\n        //       flavor.querySelector('.name-stacked').insertAdjacentElement('afterbegin', title);\n        //       html.querySelector('.message-header .flavor-text').remove();\n        //       html.querySelector('.message-content').insertAdjacentElement('afterbegin', flavor);\n        //   }\n\n        //   // Attack targets\n        //   this._enrichAttackTargets(html);\n\n        //   // Dice rolls\n        //   if (this.isContentVisible) {\n        //       html.querySelectorAll('.dice-tooltip').forEach((el, i) => {\n        //           if (!(roll instanceof DamageRoll) && this.rolls[i]) this._enrichRollTooltip(this.rolls[i], el);\n        //       });\n        //       this._enrichDamageTooltip(\n        //           this.rolls.filter((r) => r instanceof DamageRoll),\n        //           html\n        //       );\n        //       this._enrichSaveTooltip(html);\n        //       this._enrichEnchantmentTooltip(html);\n        //       html.querySelectorAll('.dice-roll').forEach((el) =>\n        //           el.addEventListener('click', this._onClickDiceRoll.bind(this))\n        //       );\n        //   } else {\n        //       html.querySelectorAll('.dice-roll').forEach((el) => el.classList.add('secret-roll'));\n        //   }\n\n        //   // Effects tray\n        //   this._enrichUsageEffects(html);\n\n        avatar.addEventListener('click', this._onTargetMouseDown.bind(this));\n        avatar.addEventListener('pointerover', this._onTargetHoverIn.bind(this));\n        avatar.addEventListener('pointerout', this._onTargetHoverOut.bind(this));\n    }\n\n    getAssociatedActor() {\n        if (this.speaker.scene && this.speaker.token) {\n            const scene = game.scenes.get(this.speaker.scene);\n            const token = scene?.tokens.get(this.speaker.token);\n            if (token) return token.actor;\n        }\n        return game.actors.get(this.speaker.actor);\n    }\n\n    _activateActivityListeners(html) {\n        this.getAssociatedActivity()?.activateChatListeners(this, html);\n    }\n\n    /**\n     * Handle target selection and panning.\n     * @param {Event} event   The triggering event.\n     * @returns {Promise}     A promise that resolves once the canvas pan has completed.\n     * @protected\n     */\n    async _onTargetMouseDown(event) {\n        event.stopPropagation();\n        const uuid = event.currentTarget.dataset.uuid;\n        const actor = fromUuidSync(uuid);\n        const token = actor?.token?.object ?? actor?.getActiveTokens()[0];\n        if (!token || !actor.testUserPermission(game.user, 'LIMITED')) {\n            return;\n        }\n\n        const releaseOthers = !event.shiftKey;\n        if (token.controlled) token.release();\n        else {\n            token.control({releaseOthers});\n            return canvas.animatePan(token.center);\n        }\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Handle hovering over a target in an attack roll message.\n     * @param {Event} event     Initiating hover event.\n     * @protected\n     */\n    _onTargetHoverIn(event) {\n        const uuid = event.currentTarget.dataset.uuid;\n        const actor = fromUuidSync(uuid);\n        const token = actor?.token?.object ?? actor?.getActiveTokens()[0];\n        if (token && token.isVisible) {\n            if (!token.controlled) token._onHoverIn(event, {hoverOutOthers: true});\n            this._highlighted = token;\n        }\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Handle hovering out of a target in an attack roll message.\n     * @param {Event} event     Initiating hover event.\n     * @protected\n     */\n    _onTargetHoverOut(event) {\n        if (this._highlighted) this._highlighted._onHoverOut(event);\n        this._highlighted = null;\n    }\n}\n","import {Mutex} from './mutex';\n\nexport class CombatHM3 extends Combat {\n    _combatMutex = new Mutex();\n\n    /**\n     *\n     * @override\n     */\n    async startCombat() {\n        return (\n            await Promise.allSettled([\n                // Wait for the first outnumbered calculation\n                new Promise((resolve) => {\n                    let timer = setTimeout(() => resolve(), 3000);\n                    Hooks.once('hm3.onOutnumbered', () => {\n                        clearTimeout(timer);\n                        resolve();\n                    });\n                }),\n                // Remove the Tactical Advantage flag\n                game.hm3.socket.executeAsGM('unsetTAFlag'),\n                // Start the combat\n                super.startCombat()\n            ])\n        )[2].value;\n    }\n\n    /**\n     * HarnMaster requires that we re-determine initiative each round, since penalties affecting\n     * initiative may change during the course of combat.\n     *\n     * @override\n     */\n    async nextRound() {\n        // Berserk is a special state of battle frenzy. Any character who enters this mode must take the most\n        // aggressive action available for Attack or Defense, adding 20 to EML to Attack or Counterstrike.\n        // Further Initiative rolls are ignored until the battle ends. (COMBAT 16)\n        const combatantIds = this.combatants\n            .filter((c) => !c.token?.hasCondition(game.hm3.Condition.BERSERK))\n            .map((c) => c.id);\n        await this.rollInitiative(combatantIds);\n        return super.nextRound();\n    }\n\n    /** @override */\n    async nextTurn(tokenId = 'true') {\n        if (!game.combat?.started) return;\n        return this._combatMutex.runExclusive(async () => {\n            if (game.combat?.started && (tokenId === 'true' || tokenId === game.combat.combatant?.token?.id)) {\n                // Remove the Tactical Advantage flag\n                await game.hm3.socket.executeAsGM('unsetTAFlag');\n                return super.nextTurn();\n            }\n        });\n    }\n}\n","import {ItemType} from './hm3-types';\n\nexport class CombatantHM3 extends Combatant {\n    /**\n     *\n     * @override\n     */\n    getInitiativeRoll(formula) {\n        const mark = game.settings.get('hm3', 'autoMarkUsedSkills');\n        if (this.actor.system.mounted) {\n            // For mounted combat, initiative is equal to Riding EML (COMBAT 20)\n            const iniSkill = this.actor.items.find(\n                (item) => item.type === ItemType.SKILL && item.name.includes('Riding')\n            );\n            this.actor.system.initiative = iniSkill.system.effectiveMasteryLevel;\n            this.actor.system.initiative += iniSkill.system.skillBase.value / 10;\n            if (mark) iniSkill.update({'system.improveFlag': iniSkill.system.improveFlag + 1});\n        } else {\n            const iniSkill = this.actor.items.find(\n                (item) => item.type === ItemType.SKILL && item.name === 'Initiative'\n            );\n            this.actor.system.initiative = !this.token?.hasCondition(game.hm3.Condition.SHOCKED)\n                ? iniSkill.system.effectiveMasteryLevel\n                : 0;\n            this.actor.system.initiative += iniSkill.system.skillBase.value / 10;\n            if (mark) iniSkill.update({'system.improveFlag': iniSkill.system.improveFlag + 1});\n        }\n\n        return super.getInitiativeRoll(formula);\n    }\n}\n","/**\n * Extend the base Macro.\n * @extends {Macro}\n */\nexport class MacroHM3 extends Macro {\n    /**\n     * Overrides the original implementation by allowing\n     * to execute actor macros w/o limited ownership.\n     * @returns True, if the user can execute this macro.\n     * @override\n     */\n    get canExecute() {\n        return super.canExecute || !!this.getFlag('hm3', 'ownerId') || this.getFlag('hm3', 'trigger') === 'manual';\n    }\n}\n","import {HM3} from '../config.js';\n\n/**\n * A form designed for creating and editing an Active Effect on an Actor or Item.\n * @implements {FormApplication}\n *\n * @param {ActiveEffect} object     The target active effect being configured\n * @param {object} [options]        Additional options which modify this application instance\n */\nexport class ActiveEffectConfigHM3 extends ActiveEffectConfig {\n    /** @override */\n    static get defaultOptions() {\n        return foundry.utils.mergeObject(super.defaultOptions, {\n            template: 'systems/hm3/templates/effect/active-effect-config.hbs'\n        });\n    }\n\n    /* ----------------------------------------- */\n\n    /** @override */\n    async getData(options = {}) {\n        const context = await super.getData(options);\n        // context.keyChoices = HM3.activeEffectKey;\n        context.keyChoices = HM3.activeEffectKeyV2;\n        return context;\n    }\n}\n","export class AmbientLightHM3 extends AmbientLight {\n    /** @override */\n    _onClickLeft(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickLeft2(event);\n        else super._onClickLeft(event);\n    }\n\n    /** @override */\n    _onClickRight(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickRight2(event);\n        else super._onClickRight(event);\n    }\n}\n","export class AmbientSoundHM3 extends AmbientSound {\n    /** @override */\n    _onClickLeft(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickLeft2(event);\n        else super._onClickLeft(event);\n    }\n\n    /** @override */\n    _onClickRight(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickRight2(event);\n        else super._onClickRight(event);\n    }\n}\n","export class DrawingHM3 extends Drawing {\n    /** @override */\n    _onClickLeft(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickLeft2(event);\n        else super._onClickLeft(event);\n    }\n\n    /** @override */\n    _onClickRight(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickRight2(event);\n        else super._onClickRight(event);\n    }\n}\n","import {getActorFromMacro} from '../utility';\n\n/**\n * A form designed for creating and editing an Macro on an Actor or Item.\n * @implements {FormApplication}\n *\n * @param {Macro} object     The target macro being configured\n * @param {object} [options]        Additional options which modify this application instance\n */\nexport class MacroConfigHM3 extends MacroConfig {\n    /** @override */\n    static get defaultOptions() {\n        return foundry.utils.mergeObject(super.defaultOptions, {\n            height: 575,\n            jQuery: false\n        });\n    }\n\n    /** @override */\n    get template() {\n        if (this.object.limited) {\n            return 'systems/hm3/templates/dialog/macro-config-limited.hbs';\n        } else {\n            return 'systems/hm3/templates/dialog/macro-config.hbs';\n        }\n    }\n\n    /** @override */\n    async getData(options = {}) {\n        const data = super.getData();\n\n        data.macroTypes = game.documentTypes.Macro.map((t) => ({\n            value: t,\n            label: game.i18n.localize(CONFIG.Macro.typeLabels[t]),\n            disabled: t === 'script' && !game.user.can('MACRO_SCRIPT')\n        }));\n        data.macroScopes = CONST.MACRO_SCOPES.map((s) => ({value: s, label: s}));\n        data.triggerTypes = [\n            {value: 'manual', label: 'Manual'},\n            {value: 'hm3.onDamageRoll', label: 'HM3 On Damage Roll'},\n            {value: 'hm3.onFumbleRoll', label: 'HM3 On Fumble Roll'},\n            {value: 'hm3.onHealingRoll', label: 'HM3 On Healing Roll'},\n            {value: 'hm3.onInjuryRoll', label: 'HM3 On Injury Roll'},\n            {value: 'hm3.onInvocationRoll', label: 'HM3 On Invocation Roll'},\n            {value: 'hm3.onPsionicsRoll', label: 'HM3 On Psionics Roll'},\n            {value: 'hm3.onShockRoll', label: 'HM3 On Shock Roll'},\n            {value: 'hm3.onSpellRoll', label: 'HM3 On Spell Roll'},\n            {value: 'hm3.onStumbleRoll', label: 'HM3 On Stumble Roll'},\n            {value: 'hm3.preInjuryRoll', label: 'HM3 Pre Injury Roll'},\n            {value: 'applyTokenStatusEffect', label: 'Apply Token Status Effect'},\n            {value: 'combatRound', label: 'Combat Round'},\n            {value: 'combatStart', label: 'Combat Start'},\n            {value: 'combatTurn', label: 'Combat Turn'},\n            {value: 'combatTurnChange', label: 'Combat Turn Change'},\n            {value: 'createCombatant', label: 'Create Combatant'},\n            {value: 'createToken', label: 'Create Token'},\n            {value: 'deleteCombatant', label: 'Delete Combatant'},\n            {value: 'deleteToken', label: 'Delete Token'},\n            {value: 'pauseGame', label: 'Pause Game'},\n            {value: 'preUpdateCombat', label: 'Pre Update Combat'},\n            {value: 'preUpdateCombatant', label: 'Pre Update Combatant'},\n            {value: 'preUpdateToken', label: 'Pre Update Token'},\n            {value: 'targetToken', label: 'Target Token'},\n            {value: 'updateCombat', label: 'Update Combat'},\n            {value: 'updateCombatant', label: 'Update Combatant'},\n            {value: 'updateToken', label: 'Update Token'},\n            {value: 'updateWorldTime', label: 'Update World Time'}\n        ];\n\n        data.trigger = this.object.getFlag('hm3', 'trigger') || 'manual';\n\n        if (data.trigger === 'legacy') {\n            data.triggerTypes.push({value: 'legacy', label: 'Legacy'});\n            data.isLegacy = true;\n        }\n        if (this.object.limited) {\n            data.triggerTypes.push({value: 'confidential', label: 'Confidential'});\n        }\n\n        return data;\n    }\n\n    /** @override */\n    async _updateObject(event, formData) {\n        event.preventDefault();\n        if (event instanceof SubmitEvent) {\n            const ret = await super._updateObject(event, formData);\n            await this.object.setFlag('hm3', 'trigger', formData.trigger);\n            getActorFromMacro(this.object)?.sheet.render();\n            return ret;\n        } else {\n            return super._updateObject(event, formData);\n        }\n    }\n\n    /** @override */\n    async _activateCoreListeners(...args) {\n        const ret = await super._activateCoreListeners(...args);\n\n        if (this.object.limited) {\n            this.form[5].disabled = true;\n            this.form[6].disabled = true;\n        } else if (!['legacy', 'manual'].includes(this.object.getFlag('hm3', 'trigger'))) {\n            this.form[6].disabled = true;\n        }\n\n        return ret;\n    }\n}\n","export class NoteHM3 extends Note {\n    /** @override */\n    _onClickLeft(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickLeft2(event);\n        else super._onClickLeft(event);\n    }\n\n    /** @override */\n    _onClickRight(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickRight2(event);\n        else super._onClickRight(event);\n    }\n}\n","export class RegionHM3 extends Region {\n    /** @override */\n    _onClickLeft(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickLeft2(event);\n        else super._onClickLeft(event);\n    }\n\n    /** @override */\n    _onClickRight(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickRight2(event);\n        else super._onClickRight(event);\n    }\n}\n","export class TileHM3 extends Tile {\n    /** @override */\n    _onClickLeft(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickLeft2(event);\n        else super._onClickLeft(event);\n    }\n\n    /** @override */\n    _onClickRight(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickRight2(event);\n        else super._onClickRight(event);\n    }\n}\n","export class WallHM3 extends Wall {\n    /** @override */\n    _onClickLeft(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickLeft2(event);\n        else super._onClickLeft(event);\n    }\n\n    /** @override */\n    _onClickRight(event) {\n        if (event.shiftKey && event.ctrlKey) super._onClickRight2(event);\n        else super._onClickRight(event);\n    }\n}\n","import {onManageActiveEffect} from '../effect.js';\nimport {ItemType} from '../hm3-types.js';\nimport {aeChanges, aeDuration} from '../utility.js';\n\n/**\n * Extend the basic ItemSheet with some very simple modifications\n * @extends {ItemSheet}\n */\nexport class ItemSheetHM3v2 extends ItemSheet {\n    /** @override */\n    static get defaultOptions() {\n        return foundry.utils.mergeObject(super.defaultOptions, {\n            classes: ['hm3', 'sheet', 'item', 'item-v2'],\n            width: 650,\n            height: 740,\n            tabs: [{navSelector: '.sheet-tabs-v2', contentSelector: '.sheet-body-v2', initial: 'properties'}],\n            scrollY: ['.main-content'],\n            resizable: false\n        });\n    }\n\n    /** @override */\n    get template() {\n        const path = 'systems/hm3/templates/item-v2';\n        return `${path}/${this.item.type}-sheet.hbs`;\n    }\n\n    /**\n     * Is this PseudoDocument sheet editable by the current User?\n     * This is governed by the editPermission threshold configured for the class.\n     * @type {boolean}\n     */\n    // get isEditable() {\n    //     if (game.packs.get(this.item.pack)?.locked) return false;\n    //     return this.item.testUserPermission(game.user, this.options.editPermission);\n    // }\n\n    /** @inheritDoc */\n    async _prepareContext(options) {\n        return {\n            ...(await super._prepareContext(options)),\n            document: this.document,\n            editable: this.isEditable,\n            options: this.options\n        };\n    }\n\n    /* -------------------------------------------- */\n\n    /** @override */\n    async getData(options = {}) {\n        options.classes.push(this.item.type.toLowerCase().replace(' ', '-'));\n        if (this.item.system.type) options.classes.push(this.item.system.type.toLowerCase().replace(' ', '-'));\n        if (this.item.system.arcane?.isArtifact && (this.item.system.arcane.isOwnerAware || game.user.isGM))\n            options.classes.push('artifact');\n\n        const data = super.getData(options);\n        data.editable = this.isEditable && this._mode === this.constructor.MODES.EDIT;\n        data.cssClass = data.editable ? 'editable' : this.isEditable ? 'interactable' : 'locked';\n\n        data.hasDescription = 'description' in this.object.system;\n        if (data.hasDescription) {\n            data.descriptionHTML = await TextEditor.enrichHTML(this.object.system.description, {\n                secrets: game.user.isGM,\n                relativeTo: this.object.system\n            });\n        }\n\n        // Re-define the template data references (backwards compatible)\n        data.item = this.item;\n        data.idata = this.item.system;\n        data.config = CONFIG.HM3;\n        data.itemType = this.item.type;\n        data.hasActor = this.actor && true;\n        data.hasCombatSkills = false;\n        data.hasRitualSkills = false;\n        data.hasMagicSkills = false;\n        data.isGM = game.user.isGM;\n        data.strictMode = game.settings.get('hm3', 'strictGmMode');\n        data.hasRwPermission = data.isGM || !data.strictMode;\n        data.isGridDistanceUnits = game.settings.get('hm3', 'distanceUnits') === 'grid';\n        data.idata.wqModifier = data.idata.wqModifier || 0;\n\n        // if (data.itemType === ItemType.ARMORGEAR) {\n        //     if (!data.idata.baseValue) data.idata.baseValue = data.idata.value;\n        //     data.idata.value = Math.ceil(data.idata.baseValue * 2 ** data.idata.armorQuality * game.hm3.config.sizes[data.idata.size]);\n        // }\n\n        data.macroTypes = [\n            {key: 'chat', label: 'Chat'},\n            {key: 'script', label: 'Script'}\n        ];\n\n        data.containers = [{label: 'On Person', key: 'on-person'}];\n        // Containers are not allowed in other containers.  So if this item is a container,\n        // don't show any other containers.\n\n        if (this.actor && this.item.type !== ItemType.CONTAINERGEAR) {\n            this.actor.items.forEach((it) => {\n                if (it.type === 'containergear') {\n                    data.containers.push({label: it.name, key: it.id});\n                }\n            });\n        }\n\n        // Fill appropriate lists for individual item sheets\n        if (this.item.type === ItemType.SPELL) {\n            // Spells need a list of convocations\n            data.convocations = [];\n            if (this.actor) {\n                this.actor.itemTypes.skill.forEach((it) => {\n                    if (it.system.type === 'Magic') {\n                        data.convocations.push(it.name);\n                        data.hasMagicSkills = true;\n                    }\n                });\n            }\n        } else if (this.item.type === ItemType.INVOCATION) {\n            // Invocations need a list of dieties\n            data.dieties = [];\n            if (this.actor) {\n                this.actor.itemTypes.skill.forEach((it) => {\n                    if (it.system.type === 'Ritual') {\n                        data.dieties.push(it.name);\n                        data.hasRitualSkills = true;\n                    }\n                });\n            }\n        } else if (this.item.type === ItemType.WEAPONGEAR || this.item.type === ItemType.MISSILEGEAR) {\n            // Weapons need a list of combat skills\n            data.combatSkills = [];\n\n            if (this.actor) {\n                if (this.item.type === ItemType.WEAPONGEAR) {\n                    // For weapons, we add a \"None\" item to the front of the list\n                    // as a default (in case no other combat skill applies)\n                    data.combatSkills.push({key: 'None'});\n                } else {\n                    // For missiles, we add the \"Throwing\" skill to the front\n                    // of the list as a default (in case no other combat\n                    // skill applies)\n                    data.combatSkills.push({key: 'Throwing'});\n                }\n\n                this.actor.itemTypes.skill.forEach((it) => {\n                    if (it.system.type === 'Combat') {\n                        const lcName = it.name.toLowerCase();\n                        // Ignore the 'Dodge' and 'Initiative' skills,\n                        // since you never want a weapon based on those skills.\n                        if (!(lcName === 'initiative' || lcName === 'dodge')) {\n                            data.combatSkills.push({key: it.name});\n                            data.hasCombatSkills = true;\n                        }\n                    }\n                });\n            }\n        } else if (this.item.type === ItemType.TRAIT) {\n            if (data.idata.type === 'Psyche') {\n                data.isPsycheTrait = true;\n                if (isNaN(parseInt(data.idata.severity))) data.idata.severity = 5;\n            }\n        } else if (this.item.type === ItemType.CONTAINERGEAR) {\n            if (data.idata.type === undefined) data.idata.type = 'Container';\n        } else if (this.item.type === ItemType.SKILL) {\n            if (this.item.name.includes('Riding')) {\n                const ridingImg = new Map(game.hm3.config.combatSkillIcons).get('riding');\n                const steeds = this.actor.getSteeds();\n                data.steeds = [\n                    {key: '', label: `No Steed`},\n                    ...steeds.map((steed) => {\n                        if (steed) return {key: steed.uuid, label: steed.name};\n                    })\n                ];\n                data.isRiding = true;\n                data.mounted = this.actor.system.mounted;\n\n                // Steed linked to Riding skill according to COMBAT 20\n                if (!!this.item.system.actorUuid && this.item.img === ridingImg) {\n                    const steed = fromUuidSync(this.item.system.actorUuid);\n                    if (steed) {\n                        this.item.img = steed.img;\n                        this.item.name += '/' + steed.name;\n                        this.item.update({'img': this.item.img, 'name': this.item.name});\n                        await steed.update({'system.ownerUuid': this.item.actor.uuid});\n                    }\n                } else if (!this.item.system.actorUuid && this.item.img !== ridingImg) {\n                    this.item.img = ridingImg;\n                    this.item.name = 'Riding';\n                    this.item.update({'img': this.item.img, 'name': this.item.name});\n                    this.item.actor.update({'system.mounted': false});\n                }\n            }\n        }\n\n        if (data.isGridDistanceUnits && !!data.idata.range) {\n            data.rangeGrid = {\n                short: data.idata.range.short / canvas.dimensions.distance,\n                medium: data.idata.range.medium / canvas.dimensions.distance,\n                long: data.idata.range.long / canvas.dimensions.distance,\n                extreme: data.idata.range.extreme / canvas.dimensions.distance\n            };\n        }\n\n        data.effects = [];\n        this.item.effects.forEach((effect) => {\n            data.effects.push({\n                'changes': aeChanges(effect),\n                'disabled': effect.disabled,\n                'duration': aeDuration(effect),\n                'id': effect.id,\n                'img': effect.img,\n                'name': effect.name,\n                'sourceName': effect.sourceName\n            });\n        });\n\n        if (\n            game.hm3.config.esotericCombatItems.attack.includes(this.item.name) ||\n            game.hm3.config.esotericCombatItems.defense.includes(this.item.name)\n        ) {\n            data.isEsotericCombat = true;\n        }\n\n        if (data.idata.arcane && data.idata.arcane.isArtifact) {\n            const updateData = {};\n\n            if (!data.idata.arcane.type) {\n                data.idata.arcane.type = 'Minor';\n                updateData['system.arcane.type'] = data.idata.arcane.type;\n            }\n\n            if (data.idata.arcane.type === 'Minor' && !data.idata.arcane.minor) {\n                data.idata.arcane.minor = {power: 'None', duration: 'Permanent', isOwnerAware: false};\n                updateData['system.arcane.minor'] = data.idata.arcane.minor;\n            } else if (data.idata.arcane.type === 'Major' && !data.idata.arcane.major) {\n                data.idata.arcane.major = {\n                    power1: {power: 'None', duration: 'Permanent', isOwnerAware: false},\n                    power2: {power: 'None', duration: 'Permanent', isOwnerAware: false},\n                    power3: {power: 'None', duration: 'Permanent', isOwnerAware: false},\n                    power4: {power: 'None', duration: 'Permanent', isOwnerAware: false},\n                    power5: {power: 'None', duration: 'Permanent', isOwnerAware: false}\n                };\n                updateData['system.arcane.major'] = data.idata.arcane.major;\n            }\n\n            if (data.idata.arcane.type === 'Minor' && data.idata.arcane.major) {\n                // Reset data\n                updateData['system.arcane.-=major'] = null;\n                updateData['system.arcane.-=needsAttunement'] = null;\n                updateData['system.arcane.-=isAttuned'] = null;\n                updateData['system.arcane.charges'] = -1;\n                updateData['system.arcane.ego'] = 0;\n                updateData['system.arcane.morality'] = -1;\n            } else if (data.idata.arcane.type === 'Major' && data.idata.arcane.minor) {\n                // Reset data\n                updateData['system.arcane.-=minor'] = null;\n            }\n            if (data.idata.arcane.isAttuned && !data.idata.arcane.needsAttunement) {\n                // Reset data\n                data.idata.arcane.isAttuned = false;\n                updateData['system.arcane.isAttuned'] = false;\n            }\n\n            if (data.idata.arcane.minorPower) updateData['system.arcane.-=minorPower'] = null;\n            if (data.idata.arcane.majorPower) updateData['system.arcane.-=majorPower'] = null;\n            if (isNaN(parseInt(data.idata.arcane.morality))) {\n                // Initialize data\n                data.idata.arcane.morality = -1;\n                updateData['system.arcane.morality'] = -1;\n            }\n\n            if (!foundry.utils.isEmpty(updateData)) {\n                await this.object.update(updateData, {enforceTypes: false});\n            }\n\n            data.arcane = {\n                choices: [{key: 'Minor'}, {key: 'Major'}],\n                durations: [{key: 'Indefinite'}, {key: 'Permanent'}],\n                description:\n                    game.hm3.config.arcanePowers.find((p) => p.key === data.idata.arcane.minor?.power)?.description ||\n                    '',\n                powers: (data.idata.arcane.type === 'Minor'\n                    ? JSON.parse(JSON.stringify(game.hm3.config.arcanePowers)).filter(\n                          (p) => p.minor && p.validFor.includes(data.data.type)\n                      )\n                    : JSON.parse(JSON.stringify(game.hm3.config.arcanePowers)).filter(\n                          (p) => p.major >= 0 && p.validFor.includes(data.data.type)\n                      )\n                ).map((p) => {\n                    p.label = `${p.label}${p.legacy ? '*' : ''}${p.lvl > 0 ? ` (${p.lvl})` : ''} ${\n                        p.major > 0 && data.idata.arcane.type === 'Major' ? `Costs: ${p.major}` : ''\n                    }`;\n                    return p;\n                })\n            };\n        }\n\n        return data;\n    }\n\n    /* -------------------------------------------- */\n\n    /** @override */\n    setPosition(options = {}) {\n        const position = super.setPosition(options);\n        const sheetBody = this.element.find('.sheet-body');\n        const bodyHeight = position.height - 192;\n        sheetBody.css('height', bodyHeight);\n        return position;\n    }\n\n    /* -------------------------------------------- */\n\n    /** @override */\n    activateListeners(html) {\n        super.activateListeners(html);\n\n        html.find('.profile-img').on('click', this._onShowProfileImage.bind(this));\n\n        // Everything below here is only needed if the sheet is editable\n        if (!this.options.editable) return;\n\n        // Roll handlers, click handlers, etc. go here.\n\n        html.on('click', \"input[type='number']\", (ev) => {\n            ev.currentTarget.select();\n        });\n\n        html.on('click', \"input[type='text']\", (ev) => {\n            ev.currentTarget.select();\n        });\n\n        html.on('keypress', '.properties', (ev) => {\n            var keycode = ev.keyCode ? ev.keyCode : ev.which;\n            if (keycode == '13') {\n                super.close();\n            }\n        });\n\n        html.find('.effect-control').click((ev) => {\n            onManageActiveEffect(ev, this.item);\n        });\n\n        // Add Inventory Item\n        html.find('.armorgear-location-add').click(this._armorgearLocationAdd.bind(this));\n\n        // Delete Inventory Item\n        html.find('.armorgear-location-delete').click(this._armorgearLocationDelete.bind(this));\n    }\n\n    async _armorgearLocationAdd(event) {\n        const dataset = event.currentTarget.dataset;\n        const itemData = this.item.system;\n\n        await this._onSubmit(event); // Submit any unsaved changes\n\n        // Clone the existing locations list if it exists, otherwise set to empty array\n        let locations = [];\n        if (typeof itemData.locations != 'undefined') {\n            locations = [...itemData.locations];\n        }\n\n        // Only add location to list if it is unique\n        if (locations.indexOf(dataset.location) === -1) {\n            locations.push(dataset.location);\n        }\n\n        // Update the list on the server\n        return this.item.update({'system.locations': locations});\n    }\n\n    async _armorgearLocationDelete(event) {\n        const dataset = event.currentTarget.dataset;\n        const itemData = this.item.system;\n\n        await this._onSubmit(event); // Submit any unsaved changes\n\n        // Clone the location list (we don't want to touch the actual list)\n        let locations = [...itemData.locations];\n\n        // find the index of the item to remove, and if found remove it from list\n        let removeIndex = locations.indexOf(dataset.location);\n        if (removeIndex >= 0) {\n            locations.splice(removeIndex, 1);\n        }\n\n        // Update the list on the server\n        return this.item.update({'system.locations': locations});\n    }\n\n    static MODES = {\n        PLAY: 1,\n        EDIT: 2\n    };\n\n    _mode = null;\n\n    /** @inheritDoc */\n    async _render(force, {mode, ...options} = {}) {\n        if (mode === undefined && options.renderContext === 'createItem') mode = this.constructor.MODES.EDIT;\n        this._mode = mode ?? this._mode ?? this.constructor.MODES.PLAY;\n        if (this.rendered) {\n            const toggle = this.element[0].querySelector('.window-header .mode-slider');\n            toggle.checked = this._mode === this.constructor.MODES.EDIT;\n        }\n        return super._render(force, options);\n    }\n\n    /** @inheritDoc */\n    async _renderOuter() {\n        const html = await super._renderOuter();\n        const header = html[0].querySelector('.window-header');\n\n        // Adjust header buttons.\n        header.querySelectorAll('.header-button').forEach((btn) => {\n            const label = btn.querySelector(':scope > i').nextSibling;\n            btn.dataset.tooltip = label.textContent;\n            btn.dataset.tooltipDirection = 'UP';\n            btn.setAttribute('aria-label', label.textContent);\n            btn.addEventListener('dblclick', (event) => event.stopPropagation());\n            label.remove();\n        });\n\n        if (!game.user.isGM && this.document.limited) {\n            html[0].classList.add('limited');\n            return html;\n        }\n\n        // Add edit <-> play slide toggle.\n        if (this.isEditable) {\n            const toggle = document.createElement('slide-toggle');\n            toggle.checked = this._mode === this.constructor.MODES.EDIT;\n            toggle.classList.add('mode-slider');\n            toggle.dataset.tooltip = 'hm3.SheetModeEdit';\n            toggle.dataset.tooltipDirection = 'UP';\n            toggle.setAttribute('aria-label', game.i18n.localize('hm3.SheetModeEdit'));\n            toggle.addEventListener('change', this._onChangeSheetMode.bind(this));\n            toggle.addEventListener('dblclick', (event) => event.stopPropagation());\n            header.insertAdjacentElement('afterbegin', toggle);\n        }\n\n        // Document UUID link.\n        const firstButton = header.querySelector('.header-button');\n        const idLink = header.querySelector('.document-id-link');\n        if (idLink) {\n            firstButton?.insertAdjacentElement('beforebegin', idLink);\n            idLink.classList.add('pseudo-header-button');\n            idLink.dataset.tooltipDirection = 'UP';\n        }\n\n        return html;\n    }\n\n    async _onChangeSheetMode(event) {\n        const {MODES} = this.constructor;\n        const toggle = event.currentTarget;\n        const label = game.i18n.localize(`hm3.SheetMode${toggle.checked ? 'Play' : 'Edit'}`);\n        toggle.dataset.tooltip = label;\n        toggle.setAttribute('aria-label', label);\n        this._mode = toggle.checked ? MODES.EDIT : MODES.PLAY;\n        await this.submit();\n        this.render();\n    }\n\n    _onShowProfileImage() {\n        // Play mode only.\n        if (this._mode === this.constructor.MODES.PLAY || !game.user.isGM) {\n            const img = this.item.img;\n            if (game.release.generation < 13) {\n                new ImagePopout(img, {title: this.item.name, uuid: this.item.uuid}).render(true);\n            } else {\n                new foundry.applications.apps.ImagePopout({\n                    src: img,\n                    uuid: this.item.uuid,\n                    window: {title: this.item.name}\n                }).render({force: true});\n            }\n        }\n    }\n}\n","import {onManageActiveEffect} from '../effect.js';\nimport {ItemType} from '../hm3-types.js';\nimport {aeChanges, aeDuration} from '../utility.js';\n\n/**\n * Extend the basic ItemSheet with some very simple modifications\n * @extends {ItemSheet}\n */\nexport class ItemSheetHM3 extends ItemSheet {\n    /** @override */\n    static get defaultOptions() {\n        return foundry.utils.mergeObject(super.defaultOptions, {\n            classes: ['hm3', 'sheet', 'item'],\n            width: 605,\n            height: game.user.isGM ? 850 : 650,\n            tabs: [{navSelector: '.sheet-tabs', contentSelector: '.sheet-body', initial: 'properties'}],\n            resizable: true\n        });\n    }\n\n    /** @override */\n    get template() {\n        const path = 'systems/hm3/templates/item';\n        return `${path}/${this.item.type}-sheet.hbs`;\n    }\n\n    /* -------------------------------------------- */\n\n    /** @override */\n    async getData(options = {}) {\n        const data = super.getData(options);\n\n        data.hasDescription = 'description' in this.object.system;\n        if (data.hasDescription) {\n            data.descriptionHTML = await TextEditor.enrichHTML(this.object.system.description, {\n                secrets: game.user.isGM,\n                relativeTo: this.object.system\n            });\n        }\n\n        // Re-define the template data references (backwards compatible)\n        data.item = this.item;\n        data.idata = this.item.system;\n        data.config = CONFIG.HM3;\n        data.itemType = this.item.type;\n        data.hasActor = this.actor && true;\n        data.hasCombatSkills = false;\n        data.hasRitualSkills = false;\n        data.hasMagicSkills = false;\n        data.isGM = game.user.isGM;\n        data.strictMode = game.settings.get('hm3', 'strictGmMode');\n        data.hasRwPermission = data.isGM || !data.strictMode;\n        data.isGridDistanceUnits = game.settings.get('hm3', 'distanceUnits') === 'grid';\n        data.idata.wqModifier = data.idata.wqModifier || 0;\n\n        // if (data.itemType === ItemType.ARMORGEAR) {\n        //     if (!data.idata.baseValue) data.idata.baseValue = data.idata.value;\n        //     data.idata.value = Math.ceil(data.idata.baseValue * 2 ** data.idata.armorQuality * game.hm3.config.sizes[data.idata.size]);\n        // }\n\n        data.macroTypes = [\n            {key: 'chat', label: 'Chat'},\n            {key: 'script', label: 'Script'}\n        ];\n\n        data.containers = [{label: 'On Person', key: 'on-person'}];\n        // Containers are not allowed in other containers.  So if this item is a container,\n        // don't show any other containers.\n\n        if (this.actor && this.item.type !== ItemType.CONTAINERGEAR) {\n            this.actor.items.forEach((it) => {\n                if (it.type === 'containergear') {\n                    data.containers.push({label: it.name, key: it.id});\n                }\n            });\n        }\n\n        // Fill appropriate lists for individual item sheets\n        if (this.item.type === ItemType.SPELL) {\n            // Spells need a list of convocations\n            data.convocations = [];\n            if (this.actor) {\n                this.actor.itemTypes.skill.forEach((it) => {\n                    if (it.system.type === 'Magic') {\n                        data.convocations.push(it.name);\n                        data.hasMagicSkills = true;\n                    }\n                });\n            }\n        } else if (this.item.type === ItemType.INVOCATION) {\n            // Invocations need a list of dieties\n            data.dieties = [];\n            if (this.actor) {\n                this.actor.itemTypes.skill.forEach((it) => {\n                    if (it.system.type === 'Ritual') {\n                        data.dieties.push(it.name);\n                        data.hasRitualSkills = true;\n                    }\n                });\n            }\n        } else if (this.item.type === ItemType.WEAPONGEAR || this.item.type === ItemType.MISSILEGEAR) {\n            // Weapons need a list of combat skills\n            data.combatSkills = [];\n\n            if (this.actor) {\n                if (this.item.type === ItemType.WEAPONGEAR) {\n                    // For weapons, we add a \"None\" item to the front of the list\n                    // as a default (in case no other combat skill applies)\n                    data.combatSkills.push({key: 'None'});\n                } else {\n                    // For missiles, we add the \"Throwing\" skill to the front\n                    // of the list as a default (in case no other combat\n                    // skill applies)\n                    data.combatSkills.push({key: 'Throwing'});\n                }\n\n                this.actor.itemTypes.skill.forEach((it) => {\n                    if (it.system.type === 'Combat') {\n                        const lcName = it.name.toLowerCase();\n                        // Ignore the 'Dodge' and 'Initiative' skills,\n                        // since you never want a weapon based on those skills.\n                        if (!(lcName === 'initiative' || lcName === 'dodge')) {\n                            data.combatSkills.push({key: it.name});\n                            data.hasCombatSkills = true;\n                        }\n                    }\n                });\n            }\n        } else if (this.item.type === ItemType.TRAIT) {\n            if (data.idata.type === 'Psyche') {\n                data.isPsycheTrait = true;\n                if (isNaN(parseInt(data.idata.severity))) data.idata.severity = 5;\n            }\n        } else if (this.item.type === ItemType.CONTAINERGEAR) {\n            if (data.idata.type === undefined) data.idata.type = 'Container';\n        } else if (this.item.type === ItemType.SKILL) {\n            if (this.item.name.includes('Riding')) {\n                const ridingImg = new Map(game.hm3.config.combatSkillIcons).get('riding');\n                const steeds = this.actor.getSteeds();\n                data.steeds = [\n                    {key: '', label: `No Steed`},\n                    ...steeds.map((steed) => {\n                        if (steed) return {key: steed.uuid, label: steed.name};\n                    })\n                ];\n                data.isRiding = true;\n                data.mounted = this.actor.system.mounted;\n\n                // Steed linked to Riding skill according to COMBAT 20\n                if (!!this.item.system.actorUuid && this.item.img === ridingImg) {\n                    const steed = fromUuidSync(this.item.system.actorUuid);\n                    if (steed) {\n                        this.item.img = steed.img;\n                        this.item.name += '/' + steed.name;\n                        this.item.update({'img': this.item.img, 'name': this.item.name});\n                        await steed.update({'system.ownerUuid': this.item.actor.uuid});\n                    }\n                } else if (!this.item.system.actorUuid && this.item.img !== ridingImg) {\n                    this.item.img = ridingImg;\n                    this.item.name = 'Riding';\n                    this.item.update({'img': this.item.img, 'name': this.item.name});\n                    this.item.actor.update({'system.mounted': false});\n                }\n            }\n        }\n\n        if (data.isGridDistanceUnits && !!data.idata.range) {\n            data.rangeGrid = {\n                short: data.idata.range.short / canvas.dimensions.distance,\n                medium: data.idata.range.medium / canvas.dimensions.distance,\n                long: data.idata.range.long / canvas.dimensions.distance,\n                extreme: data.idata.range.extreme / canvas.dimensions.distance\n            };\n        }\n\n        data.effects = {};\n        this.item.effects.forEach((effect) => {\n            data.effects[effect.id] = {\n                'changes': aeChanges(effect),\n                'disabled': effect.disabled,\n                'duration': aeDuration(effect),\n                'id': effect.id,\n                'img': effect.img,\n                'name': effect.name,\n                'sourceName': effect.sourceName\n            };\n        });\n\n        if (\n            game.hm3.config.esotericCombatItems.attack.includes(this.item.name) ||\n            game.hm3.config.esotericCombatItems.defense.includes(this.item.name)\n        ) {\n            data.isEsotericCombat = true;\n        }\n\n        if (data.idata.arcane && data.idata.arcane.isArtifact) {\n            const updateData = {};\n\n            if (!data.idata.arcane.type) {\n                data.idata.arcane.type = 'Minor';\n                updateData['system.arcane.type'] = data.idata.arcane.type;\n            }\n\n            if (data.idata.arcane.type === 'Minor' && !data.idata.arcane.minor) {\n                data.idata.arcane.minor = {power: 'None', duration: 'Permanent', isOwnerAware: false};\n                updateData['system.arcane.minor'] = data.idata.arcane.minor;\n            } else if (data.idata.arcane.type === 'Major' && !data.idata.arcane.major) {\n                data.idata.arcane.major = {\n                    power1: {power: 'None', duration: 'Permanent', isOwnerAware: false},\n                    power2: {power: 'None', duration: 'Permanent', isOwnerAware: false},\n                    power3: {power: 'None', duration: 'Permanent', isOwnerAware: false},\n                    power4: {power: 'None', duration: 'Permanent', isOwnerAware: false},\n                    power5: {power: 'None', duration: 'Permanent', isOwnerAware: false}\n                };\n                updateData['system.arcane.major'] = data.idata.arcane.major;\n            }\n\n            if (data.idata.arcane.type === 'Minor' && data.idata.arcane.major) {\n                // Reset data\n                updateData['system.arcane.-=major'] = null;\n                updateData['system.arcane.-=needsAttunement'] = null;\n                updateData['system.arcane.-=isAttuned'] = null;\n                updateData['system.arcane.charges'] = -1;\n                updateData['system.arcane.ego'] = 0;\n                updateData['system.arcane.morality'] = -1;\n            } else if (data.idata.arcane.type === 'Major' && data.idata.arcane.minor) {\n                // Reset data\n                updateData['system.arcane.-=minor'] = null;\n            }\n            if (data.idata.arcane.isAttuned && !data.idata.arcane.needsAttunement) {\n                // Reset data\n                data.idata.arcane.isAttuned = false;\n                updateData['system.arcane.isAttuned'] = false;\n            }\n\n            if (data.idata.arcane.minorPower) updateData['system.arcane.-=minorPower'] = null;\n            if (data.idata.arcane.majorPower) updateData['system.arcane.-=majorPower'] = null;\n            if (isNaN(parseInt(data.idata.arcane.morality))) {\n                // Initialize data\n                data.idata.arcane.morality = -1;\n                updateData['system.arcane.morality'] = -1;\n            }\n\n            if (!foundry.utils.isEmpty(updateData)) {\n                await this.object.update(updateData, {enforceTypes: false});\n            }\n\n            data.arcane = {\n                choices: [{key: 'Minor'}, {key: 'Major'}],\n                durations: [{key: 'Indefinite'}, {key: 'Permanent'}],\n                description:\n                    game.hm3.config.arcanePowers.find((p) => p.key === data.idata.arcane.minor?.power)?.description ||\n                    '',\n                powers: (data.idata.arcane.type === 'Minor'\n                    ? JSON.parse(JSON.stringify(game.hm3.config.arcanePowers)).filter(\n                          (p) => p.minor && p.validFor.includes(data.data.type)\n                      )\n                    : JSON.parse(JSON.stringify(game.hm3.config.arcanePowers)).filter(\n                          (p) => p.major >= 0 && p.validFor.includes(data.data.type)\n                      )\n                ).map((p) => {\n                    p.label = `${p.label}${p.legacy ? '*' : ''}${p.lvl > 0 ? ` (${p.lvl})` : ''} ${\n                        p.major > 0 && data.idata.arcane.type === 'Major' ? `Costs: ${p.major}` : ''\n                    }`;\n                    return p;\n                })\n            };\n        }\n\n        return data;\n    }\n\n    /* -------------------------------------------- */\n\n    /** @override */\n    setPosition(options = {}) {\n        const position = super.setPosition(options);\n        const sheetBody = this.element.find('.sheet-body');\n        const bodyHeight = position.height - 192;\n        sheetBody.css('height', bodyHeight);\n        return position;\n    }\n\n    /* -------------------------------------------- */\n\n    /** @override */\n    activateListeners(html) {\n        super.activateListeners(html);\n\n        if (!game.user.isGM) {\n            html.find('.profile-img').click(async (ev) => {\n                new ImagePopout(this.item.img, {\n                    title: this.item.name,\n                    uuid: this.item.uuid\n                }).render(true);\n            });\n        }\n\n        // Everything below here is only needed if the sheet is editable\n        if (!this.options.editable) return;\n\n        // Roll handlers, click handlers, etc. go here.\n\n        html.on('click', \"input[type='number']\", (ev) => {\n            ev.currentTarget.select();\n        });\n\n        html.on('click', \"input[type='text']\", (ev) => {\n            ev.currentTarget.select();\n        });\n\n        html.on('keypress', '.properties', (ev) => {\n            var keycode = ev.keyCode ? ev.keyCode : ev.which;\n            if (keycode == '13') {\n                super.close();\n            }\n        });\n\n        html.find('.effect-control').click((ev) => {\n            onManageActiveEffect(ev, this.item);\n        });\n\n        // Add Inventory Item\n        html.find('.armorgear-location-add').click(this._armorgearLocationAdd.bind(this));\n\n        // Delete Inventory Item\n        html.find('.armorgear-location-delete').click(this._armorgearLocationDelete.bind(this));\n    }\n\n    async _armorgearLocationAdd(event) {\n        const dataset = event.currentTarget.dataset;\n        const itemData = this.item.system;\n\n        await this._onSubmit(event); // Submit any unsaved changes\n\n        // Clone the existing locations list if it exists, otherwise set to empty array\n        let locations = [];\n        if (typeof itemData.locations != 'undefined') {\n            locations = [...itemData.locations];\n        }\n\n        // Only add location to list if it is unique\n        if (locations.indexOf(dataset.location) === -1) {\n            locations.push(dataset.location);\n        }\n\n        // Update the list on the server\n        return this.item.update({'system.locations': locations});\n    }\n\n    async _armorgearLocationDelete(event) {\n        const dataset = event.currentTarget.dataset;\n        const itemData = this.item.system;\n\n        await this._onSubmit(event); // Submit any unsaved changes\n\n        // Clone the location list (we don't want to touch the actual list)\n        let locations = [...itemData.locations];\n\n        // find the index of the item to remove, and if found remove it from list\n        let removeIndex = locations.indexOf(dataset.location);\n        if (removeIndex >= 0) {\n            locations.splice(removeIndex, 1);\n        }\n\n        // Update the list on the server\n        return this.item.update({'system.locations': locations});\n    }\n}\n","import {ItemType} from '../../hm3-types';\r\n\r\nexport class ItemProxy {\r\n    constructor(item) {\r\n        this._item = item;\r\n    }\r\n\r\n    get cls() {\r\n        return 'itemv2';\r\n    }\r\n    get actor() {\r\n        return this._item.actor;\r\n    }\r\n    get actorProxy() {\r\n        return this._item.actor.proxy;\r\n    }\r\n    get id() {\r\n        return this._item.id;\r\n    }\r\n    get img() {\r\n        return this._item.img;\r\n    }\r\n    get item() {\r\n        return this._item;\r\n    }\r\n    get name() {\r\n        return this._item.name;\r\n    }\r\n    get type() {\r\n        return this._item.type;\r\n    }\r\n    get sort() {\r\n        return this._item.sort || 0;\r\n    }\r\n    get uuid() {\r\n        return this._item.uuid;\r\n    }\r\n    get visible() {\r\n        return true;\r\n    }\r\n\r\n    get description() {\r\n        return this._item.system.description;\r\n    }\r\n    get hasDescription() {\r\n        return this.description && this.description.length > 0;\r\n    }\r\n    get notes() {\r\n        return this._item.system.notes;\r\n    }\r\n    get source() {\r\n        return this._item.system.source;\r\n    }\r\n    get subtype() {\r\n        return this._item.system.type ?? this.type;\r\n    }\r\n\r\n    get canBeArtifact() {\r\n        return [\r\n            ItemType.ARMORGEAR,\r\n            ItemType.CONTAINERGEAR,\r\n            ItemType.MISCGEAR,\r\n            ItemType.MISSILEGEAR,\r\n            ItemType.WEAPONGEAR\r\n        ].includes(this.type);\r\n    }\r\n\r\n    get canBeEsotericCombat() {\r\n        return [ItemType.INVOCATION, ItemType.PSIONIC, ItemType.SKILL, ItemType.SPELL].includes(this.type);\r\n    }\r\n\r\n    Skill(name) {\r\n        return this.actor.proxies.find(\r\n            (item) => item.type === ItemType.SKILL && item.name.toLowerCase().includes(name.toLowerCase())\r\n        );\r\n    }\r\n\r\n    activateListeners(html) {}\r\n}\r\n","import {ItemType} from '../../hm3-types';\r\nimport {truncate} from '../../utility';\r\nimport {ItemProxy} from './item-proxy';\r\n\r\nexport class GearProxy extends ItemProxy {\r\n    get cls() {\r\n        return super.cls + '-gear';\r\n    }\r\n    get container() {\r\n        return this._item.system.container;\r\n    }\r\n    get hasValue() {\r\n        return true;\r\n    }\r\n    get isArtifact() {\r\n        return this._item.isArtifact;\r\n    }\r\n    get isCarried() {\r\n        return this._item.system.isCarried;\r\n    }\r\n    get isEquipped() {\r\n        return this._item.system.isEquipped;\r\n    }\r\n    get isMajorArtifact() {\r\n        return this._item.isMajorArtifact;\r\n    }\r\n    get isMinorArtifact() {\r\n        return this._item.isMinorArtifact;\r\n    }\r\n    get quantity() {\r\n        return this._item.system.quantity;\r\n    }\r\n    get value() {\r\n        return this._item.system.value;\r\n    }\r\n    get weight() {\r\n        return this._item.system.weight;\r\n    }\r\n    get weightT() {\r\n        return truncate(this.weight, 3);\r\n    }\r\n\r\n    get label() {\r\n        const gearTypes = {\r\n            'armorgear': 'Armour',\r\n            'containergear': 'Container',\r\n            'effectgear': 'Effect',\r\n            'miscgear': 'Misc. Gear',\r\n            'missilegear': 'Missile Wpn',\r\n            'weapongear': 'Melee Wpn'\r\n        };\r\n        const t = this._item.system.type || gearTypes[this.type];\r\n        return t === 'Misc' ? 'Misc. Gear' : t;\r\n    }\r\n\r\n    get ariaLabelEquip() {\r\n        if (this.type === ItemType.ARMORGEAR) return this.isEquipped ? `Doff ${this.name}` : `Don ${this.name}`;\r\n        return this.isEquipped ? `Unequip ${this.name}` : `Equip ${this.name}`;\r\n    }\r\n\r\n    get ariaLabelCarry() {\r\n        return this.isCarried ? `Drop ${this.name}` : `Carry ${this.name}`;\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n\r\n        html.off('keyup', '.gear-name-filter');\r\n        html.on('keyup', '.gear-name-filter', (ev) => {\r\n            this.gearNameFilter = $(ev.currentTarget).val();\r\n            const lcGearNameFilter = this.gearNameFilter.toLowerCase();\r\n            let gearItems = html.find('.gear-item');\r\n            for (let gear of gearItems) {\r\n                const gearName = gear.getAttribute('data-item-name');\r\n                if (lcGearNameFilter) {\r\n                    if (gearName.toLowerCase().includes(lcGearNameFilter)) {\r\n                        $(gear).show();\r\n                    } else {\r\n                        $(gear).hide();\r\n                    }\r\n                } else {\r\n                    $(gear).show();\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","import {GearProxy} from './gear-proxy';\r\n\r\nexport class ArmorProxy extends GearProxy {\r\n    get cls() {\r\n        return +super.cls + '-armor';\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n    }\r\n}\r\n","import {ItemType} from '../../hm3-types';\r\nimport {truncate} from '../../utility';\r\nimport {ItemProxy} from './item-proxy';\r\n\r\nexport class ArmorlocationProxy extends ItemProxy {\r\n    static TotalWeightHigh = 0;\r\n    static TotalWeightMid = 0;\r\n    static TotalWeightLow = 0;\r\n\r\n    get cls() {\r\n        return super.cls + '-armor-location';\r\n    }\r\n    get layers() {\r\n        return this._item.system.layers;\r\n    }\r\n    get blunt() {\r\n        return this._item.system.blunt;\r\n    }\r\n    get edged() {\r\n        return this._item.system.edged;\r\n    }\r\n    get piercing() {\r\n        return this._item.system.piercing;\r\n    }\r\n    get fire() {\r\n        return this._item.system.fire;\r\n    }\r\n\r\n    get probWeightHigh() {\r\n        return this._item.system.probWeight.high;\r\n    }\r\n\r\n    get probWeightMid() {\r\n        return this._item.system.probWeight.mid;\r\n    }\r\n\r\n    get probWeightLow() {\r\n        return this._item.system.probWeight.low;\r\n    }\r\n\r\n    get probHigh() {\r\n        return truncate(this.probWeightHigh / this.totalWeightHigh, 1);\r\n    }\r\n\r\n    get probMid() {\r\n        return truncate(this.probWeightMid / this.totalWeightMid, 1);\r\n    }\r\n\r\n    get probLow() {\r\n        return truncate(this.probWeightLow / this.totalWeightLow, 1);\r\n    }\r\n\r\n    get totalWeightHigh() {\r\n        this._calcProbWeights();\r\n        return ArmorlocationProxy.TotalWeightHigh;\r\n    }\r\n\r\n    get totalWeightMid() {\r\n        this._calcProbWeights();\r\n        return ArmorlocationProxy.TotalWeightMid;\r\n    }\r\n\r\n    get totalWeightLow() {\r\n        this._calcProbWeights();\r\n        return ArmorlocationProxy.TotalWeightLow;\r\n    }\r\n\r\n    _calcProbWeights() {\r\n        if (ArmorlocationProxy.TotalWeightHigh !== 0) return;\r\n\r\n        this.actor.proxies.forEach((item) => {\r\n            if (item.type === ItemType.ARMORLOCATION) {\r\n                ArmorlocationProxy.TotalWeightHigh += item.probWeightHigh;\r\n                ArmorlocationProxy.TotalWeightMid += item.probWeightMid;\r\n                ArmorlocationProxy.TotalWeightLow += item.probWeightLow;\r\n            }\r\n        });\r\n        ArmorlocationProxy.TotalWeightHigh /= 100;\r\n        ArmorlocationProxy.TotalWeightMid /= 100;\r\n        ArmorlocationProxy.TotalWeightLow /= 100;\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n    }\r\n}\r\n","import {ItemProxy} from './item-proxy';\r\n\r\nexport class CompanionProxy extends ItemProxy {\r\n    constructor(item) {\r\n        super(item);\r\n        this._companion = fromUuidSync(this._item.system.actorUuid);\r\n    }\r\n\r\n    get cls() {\r\n        return super.cls + '-companion';\r\n    }\r\n    get actorUuid() {\r\n        return this._item.system.actorUuid;\r\n    }\r\n    get companion() {\r\n        return this._companion;\r\n    }\r\n    get gender() {\r\n        return this.companion?.system.gender ?? 'Male';\r\n    }\r\n    get img() {\r\n        return this.companion?.img;\r\n    }\r\n    get linkToActor() {\r\n        return this.companion?.link;\r\n    }\r\n    get name() {\r\n        return this.companion?.name ?? 'Unknown';\r\n    }\r\n    get occupation() {\r\n        return this.companion?.system.occupation ?? 'Unknown';\r\n    }\r\n    get species() {\r\n        return this.companion?.system.species ?? 'Unknown';\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n\r\n        html.off('click', `.${this.cls}-open`);\r\n        html.on('click', `.${this.cls}-open`, (ev) => {\r\n            const el = ev.currentTarget.querySelector('#companion'); //.dataset; // .innerText;\r\n            if (!el) return;\r\n            const uuid = el.dataset.itemActorUuid;\r\n            const actor = fromUuidSync(uuid);\r\n            actor.sheet.render(true);\r\n        });\r\n    }\r\n}\r\n","import {GearProxy} from './gear-proxy';\r\n\r\nexport class ContainerProxy extends GearProxy {\r\n    get cls() {\r\n        return super.cls + '-container';\r\n    }\r\n    get capacity() {\r\n        return this._item.system.capacity ?? 1;\r\n    }\r\n    get collapsed() {\r\n        return (this._item.system.collapsed ?? false) || this.locked;\r\n    }\r\n    get locked() {\r\n        return this._item.system.locked ?? false;\r\n    }\r\n\r\n    activateListeners(html) {}\r\n}\r\n","import {GearProxy} from './gear-proxy';\r\n\r\nexport class EffectProxy extends GearProxy {\r\n    get cls() {\r\n        return super.cls + '-effect';\r\n    }\r\n    get visible() {\r\n        return game.user.isGM;\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n\r\n        html.off('keyup', '.effects-name-filter');\r\n        html.on('keyup', '.effects-name-filter', (ev) => {\r\n            this.effectsNameFilter = $(ev.currentTarget).val();\r\n            const lcEffectsNameFilter = this.effectsNameFilter.toLowerCase();\r\n            let effectItems = html.find('.effect');\r\n            for (let effect of effectItems) {\r\n                const effectName = effect.getAttribute('data-effect-name');\r\n                if (lcEffectsNameFilter) {\r\n                    if (effectName.toLowerCase().includes(lcEffectsNameFilter)) {\r\n                        $(effect).show();\r\n                    } else {\r\n                        $(effect).hide();\r\n                    }\r\n                } else {\r\n                    $(effect).show();\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","import {ItemProxy} from './item-proxy';\r\n\r\nexport class InjuryProxy extends ItemProxy {\r\n    get cls() {\r\n        return super.cls + '-injury';\r\n    }\r\n    get HR() {\r\n        return this._item.system.healRate;\r\n    }\r\n    get IL() {\r\n        return this._item.system.injuryLevel;\r\n    }\r\n    get label() {\r\n        return this.HR !== undefined ? (this.HR === 0 ? `Treatment Roll` : `Healing Roll`) : undefined;\r\n    }\r\n    get severity() {\r\n        return this._item.system.severity;\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n    }\r\n}\r\n","import {invokeRitualRoll} from '../../macros';\r\nimport {HM100Check} from '../../utility';\r\nimport {ItemProxy} from './item-proxy';\r\n\r\nexport class InvocationProxy extends ItemProxy {\r\n    get cls() {\r\n        return super.cls + '-invocation';\r\n    }\r\n    get circle() {\r\n        return this._item.system.circle;\r\n    }\r\n    get diety() {\r\n        return this._item.system.diety;\r\n    }\r\n    get EML() {\r\n        return HM100Check(this.Skill(this.diety)?.EML ?? 0 - 5 * this.circle);\r\n    }\r\n\r\n    activateListeners(html) {\r\n        html.find('.invocation-roll').click((ev) => {\r\n            const li = $(ev.currentTarget).parents('.item');\r\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\r\n            const item = this.actor.items.get(li.data('itemId'));\r\n            invokeRitualRoll(item?.uuid, fastforward, this.actor);\r\n        });\r\n    }\r\n}\r\n","import {GearProxy} from './gear-proxy';\r\n\r\nexport class MiscProxy extends GearProxy {\r\n    get cls() {\r\n        return super.cls + '-misc';\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n    }\r\n}\r\n","import {HM100Check} from '../../utility';\r\nimport {GearProxy} from './gear-proxy';\r\n\r\nexport class MissileProxy extends GearProxy {\r\n    get cls() {\r\n        return super.cls + '-missile';\r\n    }\r\n    get AML() {\r\n        return HM100Check(this.Skill(this.assocSkill)?.EML ?? 0);\r\n    }\r\n    get assocSkill() {\r\n        return this._item.system.assocSkill;\r\n    }\r\n    get isFeet() {\r\n        return game.settings.get('hm3', 'distanceUnits') !== 'grid';\r\n    }\r\n\r\n    get short() {\r\n        return {\r\n            range: this.isFeet\r\n                ? this._item.system.range.short\r\n                : this._item.system.range.short / canvas.dimensions.distance,\r\n            impact: this._item.system.impact.short\r\n        };\r\n    }\r\n\r\n    get medium() {\r\n        return {\r\n            range: this.isFeet\r\n                ? this._item.system.range.medium\r\n                : this._item.system.range.medium / canvas.dimensions.distance,\r\n            impact: this._item.system.impact.medium\r\n        };\r\n    }\r\n\r\n    get long() {\r\n        return {\r\n            range: this.isFeet\r\n                ? this._item.system.range.long\r\n                : this._item.system.range.long / canvas.dimensions.distance,\r\n            impact: this._item.system.impact.long\r\n        };\r\n    }\r\n\r\n    get extreme() {\r\n        return {\r\n            range: this.isFeet\r\n                ? this._item.system.range.extreme\r\n                : this._item.system.range.extreme / canvas.dimensions.distance,\r\n            impact: this._item.system.impact.extreme\r\n        };\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n    }\r\n}\r\n","import {ActorType, SkillType} from '../../hm3-types';\r\nimport {skillRoll} from '../../macros';\r\nimport {HM100Check} from '../../utility';\r\nimport {ItemProxy} from './item-proxy';\r\n\r\nexport class SkillProxy extends ItemProxy {\r\n    get cls() {\r\n        return super.cls + '-skill';\r\n    }\r\n    get EML() {\r\n        return HM100Check(this.ML - 5 * this.penalty);\r\n    }\r\n    get improveFlag() {\r\n        return this._item.system.improveFlag;\r\n    }\r\n    get ML() {\r\n        return this._item.system.masteryLevel;\r\n    }\r\n    get OP() {\r\n        return this._item.system.skillBase.OP;\r\n    }\r\n    get penalty() {\r\n        return [SkillType.COMBAT, SkillType.PHYSICAL].includes(this.subtype) ? this.actorProxy.PP : this.actorProxy.UP;\r\n    }\r\n    get SB() {\r\n        return this._item.system.skillBase.value;\r\n    }\r\n    get SBx() {\r\n        return this._item.system.skillBase.SBx;\r\n    }\r\n    get SI() {\r\n        return Math.floor(this.ML / 10);\r\n    }\r\n\r\n    get isSkillImprovement() {\r\n        // some special rules\r\n        if (this.actor.type === ActorType.CREATURE && this.actor.system.species.toLowerCase().includes('dog')) {\r\n            // With the exception of Awareness, dog skills may be improved by training and practice. (DOGS 2)\r\n            if (this.name === 'Awareness') {\r\n                return false;\r\n            }\r\n        }\r\n        return this.actor.skillImprovement;\r\n    }\r\n\r\n    /** @override */\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n\r\n        html.off('keyup', '.skill-name-filter');\r\n        html.on('keyup', '.skill-name-filter', (ev) => {\r\n            this.skillNameFilter = $(ev.currentTarget).val();\r\n            const lcSkillNameFilter = this.skillNameFilter.toLowerCase();\r\n            let skills = html.find('.skill-item');\r\n            for (let skill of skills) {\r\n                const skillName = skill.getAttribute('data-item-name');\r\n                if (lcSkillNameFilter) {\r\n                    if (skillName.toLowerCase().includes(lcSkillNameFilter)) {\r\n                        $(skill).show();\r\n                    } else {\r\n                        $(skill).hide();\r\n                    }\r\n                } else {\r\n                    $(skill).show();\r\n                }\r\n            }\r\n        });\r\n\r\n        html.off('click', `.${this.cls}-roll`);\r\n        html.on('click', `.${this.cls}-roll`, (ev) => {\r\n            const li = $(ev.currentTarget).parents('.item');\r\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\r\n            const item = this.actor.items.get(li.data('itemId'));\r\n            skillRoll(item?.uuid, fastforward, this.actor);\r\n        });\r\n    }\r\n}\r\n","import {usePsionicRoll} from '../../macros';\r\nimport {SkillProxy} from './skill-proxy';\r\n\r\nexport class PsionicProxy extends SkillProxy {\r\n    get cls() {\r\n        return super.cls + '-psionic';\r\n    }\r\n    get fatigue() {\r\n        return this._item.system.fatigue;\r\n    }\r\n    get visible() {\r\n        return !game.settings.get('hm3', 'dormantPsionicTalents') || this.ML > 20 || this.EML > 20 || game.user.isGM;\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n\r\n        html.off('click', '.psionic-roll');\r\n        html.on('click', '.psionic-roll', (ev) => {\r\n            const li = $(ev.currentTarget).parents('.item');\r\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\r\n            const item = this.actor.items.get(li.data('itemId'));\r\n            usePsionicRoll(item?.uuid, fastforward, this.actor);\r\n        });\r\n    }\r\n}\r\n","import {skillRoll} from '../../macros';\r\nimport {SkillProxy} from './skill-proxy';\r\n\r\nexport class RidingSkillProxy extends SkillProxy {\r\n    get cls() {\r\n        return super.cls + '-riding';\r\n    }\r\n    get actorUuid() {\r\n        return this._item.system.actorUuid;\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n\r\n        html.off('click', `.${this.cls}-roll`);\r\n        html.on('click', `.${this.cls}-roll`, (ev) => {\r\n            const li = $(ev.currentTarget).parents('.item');\r\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\r\n            const item = this.actor.items.get(li.data('itemId'));\r\n            skillRoll(item?.uuid, fastforward, this.actor);\r\n        });\r\n    }\r\n}\r\n","import {castSpellRoll} from '../../macros';\r\nimport {HM100Check} from '../../utility';\r\nimport {ItemProxy} from './item-proxy';\r\n\r\nexport class SpellProxy extends ItemProxy {\r\n    get cls() {\r\n        return super.cls + '-spell';\r\n    }\r\n    get convocation() {\r\n        return this._item.system.convocation;\r\n    }\r\n    get EML() {\r\n        return HM100Check(this.Skill(this.convocation)?.EML ?? 0 - 5 * this.level);\r\n    }\r\n    get level() {\r\n        return this._item.system.level;\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n\r\n        html.off('click', '.spell-roll');\r\n        html.on('click', '.spell-roll', (ev) => {\r\n            const li = $(ev.currentTarget).parents('.item');\r\n            const fastforward = ev.shiftKey || ev.altKey || ev.ctrlKey;\r\n            const item = this.actor.items.get(li.data('itemId'));\r\n            castSpellRoll(item?.uuid, fastforward, this.actor);\r\n        });\r\n    }\r\n}\r\n","import {ItemProxy} from './item-proxy';\r\n\r\nexport class TraitProxy extends ItemProxy {\r\n    get cls() {\r\n        return super.cls + '-trait';\r\n    }\r\n    get label() {\r\n        if (this.subtype === 'Psyche')\r\n            return `${game.hm3.config.psycheSeverity.find((v) => v.key === this.severity).label} ${this.name}`;\r\n        else return this.name;\r\n    }\r\n    get severity() {\r\n        return this.subtype === 'Psyche' ? this._item.system.severity ?? '5' : null;\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n    }\r\n}\r\n","import {HM100Check} from '../../utility';\r\nimport {GearProxy} from './gear-proxy';\r\n\r\nexport class WeaponProxy extends GearProxy {\r\n    get cls() {\r\n        return super.cls + '-weapon';\r\n    }\r\n    get AML() {\r\n        return HM100Check(this.Skill(this.assocSkill)?.EML ?? 0 + this.attack);\r\n    }\r\n    get assocSkill() {\r\n        return this._item.system.assocSkill;\r\n    }\r\n    get attack() {\r\n        return this._item.system.attack ?? 0;\r\n    }\r\n    get attackModifier() {\r\n        return this._item.system.attackModifier ?? 0;\r\n    }\r\n    get blunt() {\r\n        return this._item.system.blunt;\r\n    }\r\n    get defense() {\r\n        return this._item.system.defense ?? 0;\r\n    }\r\n    get DML() {\r\n        return HM100Check(this.Skill(this.assocSkill)?.EML ?? 0 + this.defense);\r\n    }\r\n    get edged() {\r\n        return this._item.system.edged;\r\n    }\r\n    get piercing() {\r\n        return this._item.system.piercing;\r\n    }\r\n    get WQ() {\r\n        return this._item.system.weaponQuality;\r\n    }\r\n    get wqModifier() {\r\n        return this._item.system.wqModifier ?? 0;\r\n    }\r\n    get wqTotal() {\r\n        return this.WQ + this.wqModifier;\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n    }\r\n}\r\n","import {ActorHM3} from '../actor/actor.js';\nimport {HM3} from '../config.js';\nimport {ItemType, SkillType} from '../hm3-types.js';\nimport * as utility from '../utility.js';\nimport {ArmorProxy} from './proxies/armor-proxy.js';\nimport {ArmorlocationProxy} from './proxies/armorlocation-proxy.js';\nimport {CompanionProxy} from './proxies/companion-proxy.js';\nimport {ContainerProxy} from './proxies/container-proxy.js';\nimport {EffectProxy} from './proxies/effect-proxy.js';\nimport {InjuryProxy} from './proxies/injury-proxy.js';\nimport {InvocationProxy} from './proxies/invocation-proxy.js';\nimport {MiscProxy} from './proxies/misc-proxy.js';\nimport {MissileProxy} from './proxies/missile-proxy.js';\nimport {PsionicProxy} from './proxies/psionic-proxy.js';\nimport {RidingSkillProxy} from './proxies/riding-skill-proxy.js';\nimport {SkillProxy} from './proxies/skill-proxy.js';\nimport {SpellProxy} from './proxies/spell-proxy.js';\nimport {TraitProxy} from './proxies/trait-proxy.js';\nimport {WeaponProxy} from './proxies/weapon-proxy.js';\n\n/**\n * Extend the basic Item with some very simple modifications.\n * @extends {Item}\n */\nexport class ItemHM3 extends Item {\n    _impactTypeChanged = false;\n    static _proxyMap = new Map();\n\n    get proxy() {\n        if (!ItemHM3._proxyMap.has(this.uuid)) {\n            let iproxy = null;\n            switch (this.type) {\n                case ItemType.ARMORGEAR:\n                    iproxy = new ArmorProxy(this);\n                    break;\n                case ItemType.ARMORLOCATION:\n                    iproxy = new ArmorlocationProxy(this);\n                    break;\n                case ItemType.COMPANION:\n                    iproxy = new CompanionProxy(this);\n                    break;\n                case ItemType.CONTAINERGEAR:\n                    iproxy = new ContainerProxy(this);\n                    break;\n                case ItemType.EFFECT:\n                    iproxy = new EffectProxy(this);\n                    break;\n                case ItemType.INJURY:\n                    iproxy = new InjuryProxy(this);\n                    break;\n                case ItemType.INVOCATION:\n                    iproxy = new InvocationProxy(this);\n                    break;\n                case ItemType.MISCGEAR:\n                    iproxy = new MiscProxy(this);\n                    break;\n                case ItemType.MISSILEGEAR:\n                    iproxy = new MissileProxy(this);\n                    break;\n                case ItemType.PSIONIC:\n                    iproxy = new PsionicProxy(this);\n                    break;\n                case ItemType.SKILL:\n                    if (this.name.includes('Riding')) iproxy = new RidingSkillProxy(this);\n                    else iproxy = new SkillProxy(this);\n                    break;\n                case ItemType.SPELL:\n                    iproxy = new SpellProxy(this);\n                    break;\n                case ItemType.TRAIT:\n                    iproxy = new TraitProxy(this);\n                    break;\n                case ItemType.WEAPONGEAR:\n                    iproxy = new WeaponProxy(this);\n                    break;\n            }\n            ItemHM3._proxyMap.set(this.uuid, iproxy);\n        }\n\n        return ItemHM3._proxyMap.get(this.uuid);\n    }\n\n    /**\n     * @override\n     */\n    async _preUpdate(changed, options, user) {\n        // Reset the impactTypeChanged flag\n        this._impactTypeChanged = false;\n        if (changed.type === ItemType.ARMORLOCATION && changed.system.impactType !== this.system.impactType) {\n            // If the impactType has changed, then we need to update the armor location data\n            this._impactTypeChanged = true;\n        }\n\n        return super._preUpdate(changed, options, user);\n    }\n\n    /**\n     * If the item is a weapon, return a WeaponItem object.\n     * @returns {WeaponItem|null} WeaponItem object or null if not a weapon.\n     * */\n    asWeapon() {\n        return this.type === ItemType.WEAPONGEAR ? new WeaponItem(this) : null;\n    }\n\n    get isArtifact() {\n        return this.system.arcane?.isArtifact || false;\n    }\n\n    get isMinorArtifact() {\n        return this.isArtifact && this.system.arcane?.type === 'Minor';\n    }\n\n    get isMajorArtifact() {\n        return this.isArtifact && this.system.arcane?.type === 'Major';\n    }\n\n    get powers() {\n        if (this.isMinorArtifact) return [this.system.arcane.minor];\n        else if (this.isMajorArtifact)\n            return [\n                this.system.arcane.major.power1,\n                this.system.arcane.major.power2,\n                this.system.arcane.major.power3,\n                this.system.arcane.major.power4,\n                this.system.arcane.major.power5\n            ];\n    }\n\n    /**\n     * Check if the item has an arcane power.\n     * @param {ArcanePower} power - The power to check for.\n     * @returns {boolean} True if the item has the specified arcane power, false otherwise.\n     * */\n    hasArcanePower(power) {\n        return !!this.getArcanePower(power);\n    }\n\n    /**\n     * Get the arcane power object for the specified power.\n     * @param {ArcanePower} power - The power to get.\n     * @returns {object|null} The arcane power object or null if not found.\n     * */\n    getArcanePower(power) {\n        if (this.isArtifact) {\n            const arcane = this.powers.find((p) => p.power.startsWith(power));\n            if (arcane)\n                return foundry.utils.mergeObject(\n                    arcane,\n                    game.hm3.config.arcanePowers.find((p) => p.key === arcane.power)\n                );\n        }\n        return null;\n    }\n\n    /**\n     * Augment the basic Item data model with additional dynamic data.\n     */\n    prepareData() {\n        super.prepareData();\n\n        // Get the Item's data\n        const itemData = this.system;\n\n        let img = null;\n\n        // Handle marking gear as equipped or carried\n        if (this.type.endsWith('gear')) {\n            // If you aren't carrying the gear, it can't be equipped\n            if (!itemData.isCarried) {\n                itemData.isEquipped = false;\n            }\n\n            // Check if the item is in a container\n            if (itemData.container && itemData.container !== 'on-person') {\n                // Anything in a container is unequipped automatically\n                itemData.isEquipped = false;\n            }\n        }\n\n        if (this.type === ItemType.ARMORLOCATION) {\n            this._prepareArmorLocationData(itemData);\n        }\n\n        if (img && img != this.img) {\n            this.img = img;\n        }\n\n        Hooks.call('hm3.onItemPrepareData', this);\n    }\n\n    postProcessItems() {\n        const itemData = this.system;\n\n        let pctUnivPen = ItemHM3.calcPenaltyPct(this.actor?.system?.universalPenalty);\n        let pctPhysPen = ItemHM3.calcPenaltyPct(this.actor?.system?.physicalPenalty);\n\n        if (this.type === ItemType.SKILL) {\n            if (!itemData.masteryLevel || itemData.masteryLevel < 0) itemData.masteryLevel = 0;\n\n            utility.calcSkillBase(this);\n\n            if (this.actor) {\n                if (itemData.masteryLevel === 0 && itemData.skillBase.SBx) {\n                    const OP = Math.round((Number(itemData.skillBase.OP) || 0) / 2);\n                    const val = (Number(itemData.skillBase.SBx) + OP) * itemData.skillBase.value;\n                    if (this.name.includes('Condition') && 5 * itemData.skillBase.value > 70) {\n                        // the regular endurance should not be punished\n                        const diff = 5 * itemData.skillBase.value - 70;\n                        itemData.masteryLevel = utility.truncatedOML(val - diff) + diff;\n                    } else itemData.masteryLevel = utility.truncatedOML(val);\n                }\n            }\n\n            // We modify the EML by 5 times the difference between the SB based on base\n            // abilities and the SB based on AE-modified abilities\n            const sbModifier = Math.round(itemData.skillBase.delta * 5);\n\n            // Set EML for skills based on UP/PP\n            switch (itemData.type) {\n                case SkillType.COMBAT:\n                case SkillType.PHYSICAL:\n                    if (this.name.includes('Riding') && itemData.actorUuid) {\n                        const steed = fromUuidSync(itemData.actorUuid);\n                        if (steed) {\n                            steed.prepareData();\n                            const ini = steed.items.find((x) => x.name === 'Initiative');\n                            const steedUP = ActorHM3.calcUniversalPenalty(steed);\n\n                            itemData.effectiveMasteryLevel =\n                                Math.round((itemData.masteryLevel + ini.system.masteryLevel) / 2) -\n                                pctPhysPen -\n                                steedUP * 5 +\n                                sbModifier;\n                        }\n                    } else {\n                        itemData.effectiveMasteryLevel = itemData.masteryLevel - pctPhysPen + sbModifier;\n                    }\n                    break;\n\n                default:\n                    itemData.effectiveMasteryLevel = itemData.masteryLevel - pctUnivPen + sbModifier;\n                    break;\n            }\n\n            // Set some actor properties from skills\n            const lcSkillName = this.name.toLowerCase();\n            if (lcSkillName === 'initiative') {\n                if (this.actor?.system) this.actor.system.initiative = itemData.effectiveMasteryLevel;\n            } else if (lcSkillName === 'dodge') {\n                if (this.actor?.system) this.actor.system.dodge = itemData.effectiveMasteryLevel;\n            }\n        } else if (this.type === ItemType.PSIONIC) {\n            if (!itemData.masteryLevel || itemData.masteryLevel < 0) itemData.masteryLevel = 0;\n            utility.calcSkillBase(this);\n            if (this.actor) {\n                if (itemData.masteryLevel === 0) itemData.masteryLevel = itemData.skillBase.value;\n            }\n            itemData.effectiveMasteryLevel = itemData.masteryLevel - pctUnivPen;\n        } else if (this.type === ItemType.INJURY) {\n            // Just make sure if injuryLevel is negative, we set it to zero\n            itemData.injuryLevel = Math.max(itemData.injuryLevel || 0, 0);\n            ItemHM3.calcInjurySeverity(this);\n        }\n\n        if (Object.hasOwn(itemData, 'improveFlag') && typeof itemData.improveFlag === 'boolean') {\n            // If the improveFlag is a boolean, then set it to 1 or 0\n            itemData.improveFlag = itemData.improveFlag ? 1 : 0;\n        }\n    }\n\n    _prepareArmorLocationData(itemData) {\n        // If impactType isn't custom, then set all properties from the selected impactType\n        if (itemData.impactType !== 'custom' && this._impactTypeChanged) {\n            Object.keys(HM3.injuryLocations).forEach((key) => {\n                if (HM3.injuryLocations[key].impactType === itemData.impactType) {\n                    foundry.utils.mergeObject(itemData, HM3.injuryLocations[key]);\n                }\n            });\n        }\n\n        itemData.probWeight.low = itemData.probWeight?.low || 0;\n        itemData.probWeight.mid = itemData.probWeight?.mid || 0;\n        itemData.probWeight.high = itemData.probWeight?.high || 0;\n        itemData.armorQuality = itemData.armorQuality || 0;\n        itemData.blunt = itemData.blunt || 0;\n        itemData.edged = itemData.edged || 0;\n        itemData.piercing = itemData.piercing || 0;\n        itemData.fire = itemData.fire || 0;\n    }\n\n    /** @override */\n    async _preCreate(data, options, user) {\n        super._preCreate(data, options, user);\n        const itemData = this.system;\n\n        const updateData = {};\n        if (data.img) updateData.img = data.img;\n\n        // If this item is associated with a specific actor, then we can determine\n        // some values directly from the actor.\n        if (this.actor) {\n            // If a weapon or a missile, get the associated skill\n            if ((this.type === ItemType.WEAPONGEAR || this.type === ItemType.MISSILEGEAR) && !itemData.assocSkill) {\n                updateData['system.assocSkill'] = utility.getAssocSkill(this.name, this.actor.itemTypes.skill, 'None');\n                itemData.assocSkill = updateData['system.assocSkill'];\n            }\n\n            // If it is a spell, initialize the convocation to the\n            // first magic skill found; it is really unimportant what the\n            // value is, so long as it is a valid skill for this character\n            if (this.type === ItemType.SPELL && !itemData.convocation) {\n                // Most spellcasters have two convocations: Neutral and another,\n                // maybe several others.  Most spells are going to be of the\n                // non-Neutral variety.  So, we want to prefer using the non-Neutral\n                // skill by default; if no non-Neutral skills exist, but Neutral does\n                // exist, then use that.\n\n                // In the case where the actor is adding a spell but they have no magic\n                // convocations, give up and don't make any changes.\n                let hasNeutral = false;\n                for (let skill of this.actor.itemTypes.skill.values()) {\n                    if (skill.system.type === SkillType.MAGIC) {\n                        if (skill.name === 'Neutral') {\n                            hasNeutral = true;\n                            continue;\n                        }\n                        updateData['system.convocation'] = skill.name;\n                        itemData.convocation = skill.name;\n                        break;\n                    }\n                }\n                if (!updateData['system.convocation'] && hasNeutral) {\n                    updateData['system.convocation'] = 'Neutral';\n                    itemData.convocation = 'Neutral';\n                }\n            }\n\n            // If it is a invocation, initialize the diety to the\n            // first ritual skill found; it is really unimportant what the\n            // value is, so long as it is a valid skill for this character\n            if (itemData.type === 'invocation' && !itemData.diety) {\n                for (let skill of this.actor.itemTypes.skill.values()) {\n                    if (skill.system.type === SkillType.RITUAL) {\n                        updateData['system.diety'] = skill.name;\n                        itemData.diety = skill.name;\n                        break;\n                    }\n                }\n            }\n        }\n\n        // If the image was not specified (or is default),\n        // then set it based on the item name\n        if (!updateData.img || updateData.img === Item.DEFAULT_ICON) updateData.img = utility.getImagePath(this.name);\n\n        // Setup Image Icon only if it is currently the default icon\n        if (!updateData.img) {\n            switch (this.type) {\n                case ItemType.SKILL:\n                    if (itemData.type === SkillType.RITUAL) {\n                        updateData.img = utility.getImagePath(HM3.defaultRitualIconName);\n                    } else if (itemData.type === SkillType.MAGIC) {\n                        updateData.img = utility.getImagePath(HM3.defaultMagicIconName);\n                    }\n                    break;\n\n                case ItemType.PSIONIC:\n                    updateData.img = utility.getImagePath(HM3.defaultPsionicsIconName);\n                    break;\n\n                case ItemType.SPELL:\n                    // Base image on convocation name\n                    updateData.img = utility.getImagePath(itemData.convocation);\n                    if (!updateData.img) {\n                        // If convocation image wasn't found, use default\n                        updateData.img = utility.getImagePath(HM3.defaultMagicIconName);\n                    }\n                    break;\n\n                case ItemType.INVOCATION:\n                    // Base image on diety name\n                    updateData.img = utility.getImagePath(itemData.diety);\n                    if (!updateData.img) {\n                        // If diety name wasn't found, use default\n                        updateData.img = utility.getImagePath(HM3.defaultRitualIconName);\n                    }\n                    break;\n\n                case ItemType.MISCGEAR:\n                    updateData.img = utility.getImagePath(HM3.defaultMiscItemIconName);\n                    break;\n\n                case ItemType.CONTAINERGEAR:\n                    updateData.img = utility.getImagePath(HM3.defaultContainerIconName);\n                    break;\n\n                case ItemType.ARMORGEAR:\n                    updateData.img = utility.getImagePath(HM3.defaultArmorGearIconName);\n                    break;\n\n                case ItemType.WEAPONGEAR:\n                case ItemType.MISSILEGEAR:\n                    updateData.img = utility.getImagePath(itemData.assocSkill);\n                    break;\n\n                case ItemType.EFFECT:\n                    updateData.img = 'icons/svg/aura.svg';\n                    break;\n            }\n\n            if (!updateData.img) delete updateData.img;\n        }\n\n        await this.updateSource(updateData);\n    }\n\n    /**\n     * Run a custom macro assigned to this item.\n     *\n     * Returns an object with the following fields:\n     *\n     * type: Type of roll\n     * title: Chat label for Roll,\n     * origTarget: Unmodified target value,\n     * modifier: Modifier added to origTarget value,\n     * modifiedTarget: Final modified target value,\n     * rollValue: roll number,\n     * isSuccess: is roll successful,\n     * isCritical: is roll critical,\n     * result: 'MS', 'CS', 'MF', 'CF',\n     * description: textual description of roll success or failure,\n     * notes: rendered notes,\n     */\n    async runCustomMacro(rollInput) {\n        if (!rollInput) return null;\n\n        if (!this.parent) return null;\n\n        const actor = this.parent;\n\n        const rollResult = {\n            type: rollInput.type,\n            title: rollInput.title,\n            origTarget: rollInput.origTarget,\n            modifier: (rollInput.plusMinus === '-' ? -1 : 1) * rollInput.modifier,\n            modifiedTarget: rollInput.modifiedTarget,\n            rollValue: rollInput.rollValue,\n            isSuccess: rollInput.isSuccess,\n            isCritical: rollInput.isCritical,\n            result: rollInput.isSuccess ? (rollInput.isCritical ? 'CS' : 'MS') : rollInput.isCritical ? 'CF' : 'MF',\n            description: rollInput.description,\n            notes: rollInput.notes\n        };\n\n        if (!this.system.macros.command) return null;\n\n        const macro = await Macro.create(\n            {\n                name: `${this.name} ${this.type} macro`,\n                type: this.system.macros.type,\n                scope: 'global',\n                command: this.system.macros.command\n            },\n            {temporary: true}\n        );\n        if (!macro) {\n            console.error(\n                `HM3 | Failure initializing macro '${this.name} ${this.type} macro', type=${this.system.macros.type}, command='${this.system.macros.command}'`\n            );\n            return null;\n        }\n\n        const token = actor.isToken ? actor.token : null;\n\n        return utility.executeMacroScript(macro, {\n            actor: actor,\n            token: token,\n            rollResult: rollResult,\n            item: this\n        });\n    }\n\n    static calcInjurySeverity(injury) {\n        const data = injury.system;\n\n        if (data.injuryLevel === 0) {\n            data.severity = '';\n        } else if (data.injuryLevel == 1) {\n            data.severity = 'M1';\n        } else if (data.injuryLevel <= 3) {\n            data.severity = `S${data.injuryLevel}`;\n        } else {\n            data.severity = `G${data.injuryLevel}`;\n        }\n    }\n\n    /**\n     * In HM3, PP and UP are low integer values, so we must multiply them by 5 in order to use them for\n     * EML calculations.  This function does that.\n     *\n     * @param {*} value\n     * @returns\n     */\n    static calcPenaltyPct(value) {\n        return (value || 0) * 5;\n    }\n}\n","/**\n * Perform a system migration for the entire World, applying migrations for Actors, Items, and Compendium packs\n * @return {Promise}      A Promise which resolves once the migration is completed\n */\nexport async function migrateWorld() {\n    ui.notifications.info(\n        `Applying HM3 System Migration for version ${game.system.version}. Please be patient and do not close your game or shut down your server.`,\n        {permanent: true}\n    );\n    console.info(`HM3 | Starting Migration`);\n\n    // Migrate World Actors\n    for (let a of game.actors.contents) {\n        try {\n            const updateData = await migrateActorData(a);\n            if (!foundry.utils.isEmpty(updateData)) {\n                console.info(`HM3 | Migrating Actor ${a.name}`);\n                await a.update(updateData, {enforceTypes: false});\n                console.info(`HM3 | Actor ${a.name} was successfully migrated`);\n            }\n        } catch (err) {\n            err.message = `Failed HM3 system migration for Actor ${a.name}: ${err.message}`;\n            ui.notifications.error(err.message, {permanent: true});\n            console.error(err);\n        }\n    }\n\n    // Migrate World Items\n    for (let i of game.items.contents) {\n        try {\n            const updateData = migrateItemData(i);\n            if (!foundry.utils.isEmpty(updateData)) {\n                console.info(`HM3 | Migrating Item ${i.name}`);\n                await i.update(updateData, {enforceTypes: false});\n                console.info(`HM3 | Item ${i.name} was successfully migrated`);\n            }\n        } catch (err) {\n            err.message = `Failed HM3 system migration for Item ${i.name}: ${err.message}`;\n            ui.notifications.error(err.message, {permanent: true});\n            console.error(err);\n        }\n    }\n\n    // Migrate Actor Override Tokens\n    for (let s of game.scenes.contents) {\n        try {\n            const updateData = await migrateSceneData(s);\n            if (!foundry.utils.isEmpty(updateData)) {\n                console.info(`HM3 | Migrating Scene ${s.name}`);\n                await s.update(updateData, {enforceTypes: false});\n                console.info(`HM3 | Scene ${s.name} was successfully migrated`);\n            }\n        } catch (err) {\n            err.message = `Failed HM3 system migration for Scene ${s.name}: ${err.message}`;\n            ui.notifications.error(err.message, {permanent: true});\n            console.error(err);\n        }\n    }\n\n    // Migrate World Compendium Packs\n    console.info(`HM3 | Migrating Compendium Packs`);\n    for (let p of game.packs) {\n        if (p.metadata.package !== 'world') continue;\n        if (!['Actor', 'Item', 'Scene'].includes(p.documentName)) continue;\n        console.info(`HM3 | Starting Migration for Pack ${p.metadata.label}`);\n        await migrateCompendium(p);\n    }\n\n    // Set the migration as complete\n    game.settings.set('hm3', 'systemMigrationVersion', game.system.version);\n    console.info(`HM3 | Migration Complete`);\n    ui.notifications.info(`HM3 System Migration to version ${game.system.version} completed!`, {permanent: true});\n}\n\n/* -------------------------------------------- */\n\n/**\n * Apply migration rules to all Entities within a single Compendium pack\n * @param pack\n * @return {Promise}\n */\nexport async function migrateCompendium(pack) {\n    const doc = pack.documentName;\n    if (!['Actor', 'Item', 'Scene'].includes(doc)) return;\n\n    // Unlock the pack for editing\n    const wasLocked = pack.locked;\n    await pack.configure({locked: false});\n\n    // Begin by requesting server-side data model migration and get the migrated content\n    await pack.migrate();\n    const documents = await pack.getDocuments();\n\n    // Iterate over compendium entries - applying fine-tuned migration functions\n    for (let doc of documents) {\n        let updateData = {};\n        try {\n            switch (doc) {\n                case 'Actor':\n                    updateData = await migrateActorData(doc.data);\n                    break;\n                case 'Item':\n                    updateData = migrateItemData(doc.toObject());\n                    break;\n                case 'Scene':\n                    updateData = await migrateSceneData(doc.data);\n                    break;\n            }\n\n            // Save the entry, if data was changed\n            if (foundry.utils.isEmpty(updateData)) continue;\n            await doc.update(updateData);\n            console.info(`Migrated ${doc} ${doc.name} in Compendium ${pack.collection}`);\n        } catch (err) {\n            // Handle migration failures\n            err.message = `Failed dnd5e system migration for ${doc.name} in pack ${pack.collection}: ${err.message}`;\n            console.error(err);\n        }\n    }\n\n    // Apply the original locked status for the pack\n    await pack.configure({locked: wasLocked});\n    console.info(`Migrated all ${doc} entities from Compendium ${pack.collection}`);\n}\n\n/* -------------------------------------------- */\n/*  Document Type Migration Helpers               */\n/* -------------------------------------------- */\n\n/**\n * Migrate a single Actor to incorporate latest data model changes\n * Return an Object of updateData to be applied\n * @param {ActorHM3} actor   The actor to Update\n * @return {Object}       The updateData to apply\n */\nexport async function migrateActorData(actor) {\n    const updateData = {};\n    const actorData = actor.system;\n\n    // Actor Data Updates\n    /*\n     * -------- ACTOR UPDATES GO HERE -------------\n     */\n\n    if (actorData.abilities?.hasOwnProperty('comliness')) {\n        // Rename 'comliness' to 'comeliness'\n        updateData['system.abilities.comeliness.base'] = actorData.abilities.comliness.base;\n        updateData['system.abilities.-=comliness'] = null;\n    }\n\n    if (actorData.abilities?.hasOwnProperty('endurance')) {\n        if (actorData.abilities.endurance.base) {\n            updateData['flags.hm-gold.ability-endurance'] = actorData.abilities.endurance.base;\n        }\n        updateData['system.abilities.-=endurance'] = null;\n    }\n\n    if (actorData.abilities?.hasOwnProperty('speed')) {\n        if (actorData.abilities.speed.base) {\n            updateData['flags.hm-gold.ability-speed'] = actorData.abilities.speed.base;\n        }\n        updateData['system.abilities.-=speed'] = null;\n    }\n\n    if (actorData.abilities?.hasOwnProperty('touch')) {\n        if (actorData.abilities.touch.base) {\n            updateData['flags.hm-gold.ability-touch'] = actorData.abilities.touch.base;\n        }\n        updateData['system.abilities.-=touch'] = null;\n    }\n\n    if (actorData.abilities?.hasOwnProperty('frame')) {\n        if (actorData.abilities.frame.base) {\n            updateData['flags.hm-gold.ability-frame'] = actorData.abilities.frame.base;\n        }\n        updateData['system.abilities.-=frame'] = null;\n    }\n\n    if (actorData.hasOwnProperty('hasCondition')) {\n        updateData['system.-=hasCondition'] = null;\n    }\n\n    if (!actorData.hasOwnProperty('macros') || !actorData.macros?.hasOwnProperty('type')) {\n        updateData['system.macros.command'] = '';\n        updateData['system.macros.type'] = 'script';\n    }\n\n    if (!actorData.hasOwnProperty('shockIndex')) {\n        updateData['system.shockIndex.value'] = 100;\n        updateData['system.shockIndex.max'] = 100;\n    }\n\n    if (!actorData.hasOwnProperty('injuryLevels')) {\n        updateData['system.injuryLevels.value'] = 0;\n        updateData['system.injuryLevels.max'] = 6;\n    }\n\n    // Remove deprecated fields\n    _migrateRemoveDeprecated(actor, updateData);\n\n    // Migrate Owned Items\n    if (!actor.items) return updateData;\n\n    const items = actor.items.reduce((arr, i) => {\n        // Migrate the Owned Item\n        const itemData = i instanceof CONFIG.Item.documentClass ? i.toObject() : i;\n        let itemUpdate = migrateItemData(itemData);\n\n        // Update the Owned Item\n        if (!foundry.utils.isEmpty(itemUpdate)) {\n            itemUpdate._id = itemData._id;\n            arr.push(foundry.utils.expandObject(itemUpdate));\n        }\n\n        return arr;\n    }, []);\n    if (items.length > 0) updateData.items = items;\n\n    return updateData;\n}\n\n/* -------------------------------------------- */\n\n/**\n * Scrub an Actor's system data, removing all keys which are not explicitly defined in the system template\n * @param {Object} actorData    The data object for an Actor\n * @return {Object}             The scrubbed Actor data\n */\nfunction cleanActorData(actorData) {\n    // Scrub system data\n    const model = game.model.Actor[actorData.type];\n    actorData.data = filterObject(actorData.data, model);\n\n    // Scrub system flags\n    const allowedFlags = CONFIG.HM3.allowedActorFlags.reduce((obj, f) => {\n        obj[f] = null;\n        return obj;\n    }, {});\n    if (actorData.flags.hm3) {\n        actorData.flags.hm3 = filterObject(actorData.flags.hm3, allowedFlags);\n    }\n\n    // Return the scrubbed data\n    return actorData;\n}\n\n/* -------------------------------------------- */\n\n/**\n * Migrate a single Item to incorporate latest data model changes\n * @param itemData\n */\nexport function migrateItemData(item) {\n    const updateData = {};\n\n    /*\n     * -------- ITEM UPDATES GO HERE -------------\n     */\n    if (!item.system.macros?.hasOwnProperty('type')) {\n        updateData['system.macros.command'] = '';\n        updateData['system.macros.type'] = 'script';\n    }\n\n    if (Object.hasOwn(item.system, 'improveFlag') && typeof item.system.improveFlag === 'boolean') {\n        // If the improveFlag is a boolean, then set it to 1 or 0\n        updateData['system.improveFlag'] = item.system.improveFlag ? 1 : 0;\n    }\n\n    if (item.type === 'weapongear') {\n        if (item.system.hasOwnProperty('squeeze')) {\n            if (item.system.squeeze) {\n                updateData['flags.hm-gold.squeeze-impact'] = item.system.squeeze;\n            }\n            updateData['system.-=squeeze'] = null;\n        }\n\n        if (item.system.hasOwnProperty('tear')) {\n            if (item.system.squeeze) {\n                updateData['flags.hm-gold.tear-impact'] = item.system.tear;\n            }\n            updateData['system.-=tear'] = null;\n        }\n    }\n\n    if (item.type === 'missilegear') {\n        if (item.system.range.hasOwnProperty('extreme64')) {\n            updateData['system.range.-=extreme64'] = null;\n        }\n\n        if (item.system.range.hasOwnProperty('extreme128')) {\n            updateData['system.range.-=extreme128'] = null;\n        }\n\n        if (item.system.range.hasOwnProperty('extreme256')) {\n            updateData['system.range.-=extreme256'] = null;\n        }\n\n        if (item.system.impact.hasOwnProperty('extreme64')) {\n            if (item.system.impact.extreme64) {\n                updateData['flags.hm-gold.range4-impact'] = item.system.impact.short;\n                updateData['flags.hm-gold.range8-impact'] = item.system.impact.medium;\n                updateData['flags.hm-gold.range16-impact'] = item.system.impact.long;\n                updateData['flags.hm-gold.range32-impact'] = item.system.impact.extreme;\n                updateData['flags.hm-gold.range64-impact'] = item.system.impact.extreme64;\n            }\n            updateData['system.impact.-=extreme64'] = null;\n        }\n\n        if (item.system.impact.hasOwnProperty('extreme128')) {\n            if (item.system.impact.extreme128) {\n                updateData['flags.hm-gold.range128-impact'] = item.system.impact.extreme128;\n            }\n            updateData['system.impact.-=extreme128'] = null;\n        }\n\n        if (item.system.impact.hasOwnProperty('extreme256')) {\n            if (item.system.impact.extreme256) {\n                updateData['flags.hm-gold.range256-impact'] = item.system.impact.extreme256;\n            }\n            updateData['system.impact.-=extreme256'] = null;\n        }\n    }\n\n    if (item.type === 'armorgear') {\n        if (item.system.protection.hasOwnProperty('squeeze')) {\n            if (item.system.protection.squeeze) {\n                updateData['flags.hm-gold.squeeze'] = item.system.protection.squeeze;\n            }\n            updateData['system.protection.-=squeeze'] = null;\n        }\n\n        if (item.system.protection.hasOwnProperty('tear')) {\n            if (item.system.protection.tear) {\n                updateData['flags.hm-gold.tear'] = item.system.protection.tear;\n            }\n            updateData['system.protection.-=tear'] = null;\n        }\n    }\n\n    if (item.type === 'armorlocation') {\n        if (item.system.hasOwnProperty('squeeze')) {\n            if (item.system.squeeze) {\n                updateData['flags.hm-gold.squeeze'] = item.system.squeeze;\n            }\n            updateData['system.-=squeeze'] = null;\n        }\n\n        if (item.system.hasOwnProperty('tear')) {\n            if (item.system.tear) {\n                updateData['flags.hm-gold.tear'] = item.system.tear;\n            }\n            updateData['system.-=tear'] = null;\n        }\n\n        if (item.system.probWeight.hasOwnProperty('arms')) {\n            if (item.system.probWeight.arms) {\n                updateData['flags.hm-gold.probweight-arms'] = item.system.probWeight.arms;\n            }\n            updateData['system.probWeight.-=arms'] = null;\n        }\n    }\n\n    // Remove deprecated fields\n    _migrateRemoveDeprecated(item, updateData);\n\n    // Return the migrated update data\n    return updateData;\n}\n\n/* -------------------------------------------- */\n\n/**\n * Migrate a single Scene to incorporate changes to the data model of it's actor data overrides\n * Return an Object of updateData to be applied\n * @param {Object} scene  The Scene data to Update\n * @return {Object}       The updateData to apply\n */\nexport async function migrateSceneData(scene) {\n    const tokens = await Promise.all(\n        scene.tokens.map(async (token) => {\n            const t = token.toJSON();\n            if (!t.actorId || t.actorLink) {\n                t.actorData = {};\n            } else if (!game.actors.has(t.actorId)) {\n                t.actorId = null;\n                t.actorData = {};\n            } else if (!t.actorLink) {\n                const actorData = foundry.utils.duplicate(t.delta);\n                actorData.type = token.actor?.type;\n                const update = await migrateActorData(actorData);\n                ['items', 'effects'].forEach((embeddedName) => {\n                    if (!update[embeddedName]?.length) return;\n                    const updates = new Map(update[embeddedName].map((u) => [u._id, u]));\n                    t.delta[embeddedName].forEach((original) => {\n                        const update = updates.get(original._id);\n                        if (update) foundry.utils.mergeObject(original, update);\n                    });\n                    delete update[embeddedName];\n                });\n\n                foundry.utils.mergeObject(t.delta, update);\n            }\n            return t;\n        })\n    );\n\n    return tokens.length ? {tokens} : {};\n}\n\n/* -------------------------------------------- */\n/*  Low level migration utilities\n/* -------------------------------------------- */\n\n/**\n * Migrate the actor bonuses object\n * @private\n */\n//   function _migrateActorBonuses(actor, updateData) {\n//     const b = game.model.Actor.character.bonuses;\n//     for ( let k of Object.keys(actor.data.bonuses || {}) ) {\n//       if ( k in b ) updateData[`data.bonuses.${k}`] = b[k];\n//       else updateData[`data.bonuses.-=${k}`] = null;\n//     }\n//   }\n\n/* -------------------------------------------- */\n\n/**\n * A general migration to remove all fields from the data model which are flagged with a _deprecated tag\n * @private\n */\nfunction _migrateRemoveDeprecated(ent, updateData) {\n    const flat = foundry.utils.flattenObject(ent.system);\n\n    const toPreDep = Object.entries(updateData).filter((e) => e[0]);\n    // Identify objects to deprecate\n    const toDeprecate = Object.entries(flat)\n        .filter((e) => e[0].endsWith('_deprecated') && e[1] === true)\n        .map((e) => {\n            let parent = e[0].split('.');\n            parent.pop();\n            return parent.join('.');\n        });\n\n    // Remove them\n    for (let k of toDeprecate) {\n        let parts = k.split('.');\n        parts[parts.length - 1] = '-=' + parts[parts.length - 1];\n        updateData[`data.${parts.join('.')}`] = null;\n    }\n}\n\n/* -------------------------------------------- */\n\n/**\n * A general tool to purge flags from all entities in a Compendium pack.\n * @param {Compendium} pack   The compendium pack to clean\n * @private\n */\nasync function purgeFlags(pack) {\n    const cleanFlags = (flags) => {\n        const flagshm3 = flags.hm3 || null;\n        return flagshm3 ? {hm3: flagshm3} : {};\n    };\n    await pack.configure({locked: false});\n    const content = await pack.getDocuments();\n    for (let doc of content) {\n        const update = {flags: cleanFlags(doc.data.flags)};\n        if (pack.documentName === 'Actor') {\n            update.items = doc.data.items.map((i) => {\n                i.flags = cleanFlags(i.flags);\n                return i;\n            });\n        }\n        await doc.update(update, {recursive: false});\n        console.info(`HM3 | Purged flags from ${doc.name}`);\n    }\n    await pack.configure({locked: true});\n}\n","/**\r\n * Adds functionality to a custom HTML element for caching its stylesheet and adopting it into its Shadow DOM, rather\r\n * than having each stylesheet duplicated per element.\r\n * @param {typeof HTMLElement} Base  The base class being mixed.\r\n * @returns {typeof AdoptedStyleSheetElement}\r\n */\r\nfunction AdoptedStyleSheetMixin(Base) {\r\n    return class AdoptedStyleSheetElement extends Base {\r\n        /**\r\n         * A map of cached stylesheets per Document root.\r\n         * @type {WeakMap<WeakKey<Document>, CSSStyleSheet>}\r\n         * @protected\r\n         */\r\n        static _stylesheets = new WeakMap();\r\n\r\n        /**\r\n         * The CSS content for this element.\r\n         * @type {string}\r\n         */\r\n        static CSS = '';\r\n\r\n        /* -------------------------------------------- */\r\n\r\n        /** @inheritDoc */\r\n        adoptedCallback() {\r\n            const sheet = this._getStyleSheet();\r\n            if (sheet) this._adoptStyleSheet(this._getStyleSheet());\r\n        }\r\n\r\n        /* -------------------------------------------- */\r\n\r\n        /**\r\n         * Retrieves the cached stylesheet, or generates a new one.\r\n         * @returns {CSSStyleSheet}\r\n         * @protected\r\n         */\r\n        _getStyleSheet() {\r\n            let sheet = this.constructor._stylesheets.get(this.ownerDocument);\r\n            if (!sheet && this.ownerDocument.defaultView) {\r\n                sheet = new this.ownerDocument.defaultView.CSSStyleSheet();\r\n                sheet.replaceSync(this.constructor.CSS);\r\n                this.constructor._stylesheets.set(this.ownerDocument, sheet);\r\n            }\r\n            return sheet;\r\n        }\r\n\r\n        /* -------------------------------------------- */\r\n\r\n        /**\r\n         * Adopt the stylesheet into the Shadow DOM.\r\n         * @param {CSSStyleSheet} sheet  The sheet to adopt.\r\n         * @abstract\r\n         */\r\n        _adoptStyleSheet(sheet) {}\r\n    };\r\n}\r\n\r\n/**\r\n * A custom checkbox implementation with more styling options.\r\n * @mixes AdoptedStyleSheetMixin\r\n * @extends {AbstractFormInputElement}\r\n */\r\nclass CheckboxElement extends AdoptedStyleSheetMixin(foundry.applications.elements.AbstractFormInputElement) {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this._internals.role = 'checkbox';\r\n        this._value = this.getAttribute('value');\r\n        this.#defaultValue = this._value;\r\n        if (this.constructor.useShadowRoot) this.#shadowRoot = this.attachShadow({mode: 'closed'});\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    static tagName = 'dnd5e-checkbox';\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Should a show root be created for this element?\r\n     */\r\n    static useShadowRoot = true;\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    static CSS = `\r\n    :host {\r\n      cursor: pointer;\r\n      display: inline-block;\r\n      width: var(--checkbox-size, 18px);\r\n      height: var(--checkbox-size, 18px);\r\n      aspect-ratio: 1;\r\n    }\r\n\r\n    :host(:disabled) { cursor: default; }\r\n\r\n    :host > div {\r\n      width: 100%;\r\n      height: 100%;\r\n      border-radius: var(--checkbox-border-radius, 3px);\r\n      border: var(--checkbox-border-width, 2px) solid var(--checkbox-border-color, var(--dnd5e-color-gold));\r\n      background: var(--checkbox-empty-color, transparent);\r\n      box-sizing: border-box;\r\n      position: relative;\r\n    }\r\n\r\n    :host :is(.checked, .disabled, .indeterminate) {\r\n      display: none;\r\n      height: 100%;\r\n      width: 100%;\r\n      align-items: center;\r\n      justify-content: center;\r\n      position: absolute;\r\n      inset: 0;\r\n    }\r\n\r\n    :host([checked]) :is(.checked, .disabled, .indeterminate) {\r\n      background: var(--checkbox-fill-color, var(--dnd5e-color-gold));\r\n    }\r\n\r\n    :host([checked]) .checked { display: flex; }\r\n    :host([indeterminate]) .indeterminate { display: flex; }\r\n    :host([indeterminate]) .checked { display: none; }\r\n    :host(:disabled) .disabled { display: flex; }\r\n    :host(:disabled) .checked { display: none; }\r\n    :host(:disabled) .indeterminate { display: none; }\r\n  `;\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Controller for removing listeners automatically.\r\n     * @type {AbortController}\r\n     */\r\n    _controller;\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * The shadow root that contains the checkbox elements.\r\n     * @type {ShadowRoot}\r\n     */\r\n    #shadowRoot;\r\n\r\n    /* -------------------------------------------- */\r\n    /*  Element Properties                          */\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * The default value as originally specified in the HTML that created this object.\r\n     * @type {string}\r\n     */\r\n    get defaultValue() {\r\n        return this.#defaultValue;\r\n    }\r\n\r\n    #defaultValue;\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * The indeterminate state of the checkbox.\r\n     * @type {boolean}\r\n     */\r\n    get indeterminate() {\r\n        return this.hasAttribute('indeterminate');\r\n    }\r\n\r\n    set indeterminate(indeterminate) {\r\n        this.toggleAttribute('indeterminate', indeterminate);\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * The checked state of the checkbox.\r\n     * @type {boolean}\r\n     */\r\n    get checked() {\r\n        return this.hasAttribute('checked');\r\n    }\r\n\r\n    set checked(checked) {\r\n        this.toggleAttribute('checked', checked);\r\n        this._refresh();\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    get value() {\r\n        return super.value;\r\n    }\r\n\r\n    /**\r\n     * Override AbstractFormInputElement#value setter because we want to emit input/change events when the checked state\r\n     * changes, and not when the value changes.\r\n     * @override\r\n     */\r\n    set value(value) {\r\n        this._setValue(value);\r\n    }\r\n\r\n    /** @override */\r\n    _getValue() {\r\n        // Workaround for FormElementExtended only checking the value property and not the checked property.\r\n        if (typeof this._value === 'string') return this._value;\r\n        return this.checked;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n    /*  Element Lifecycle                           */\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    connectedCallback() {\r\n        this._adoptStyleSheet(this._getStyleSheet());\r\n        const elements = this._buildElements();\r\n        this.#shadowRoot.replaceChildren(...elements);\r\n        this._refresh();\r\n        this._activateListeners();\r\n        if (!this.hasAttribute('tabindex')) this.tabIndex = 0;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    disconnectedCallback() {\r\n        this._controller.abort();\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    _adoptStyleSheet(sheet) {\r\n        this.#shadowRoot.adoptedStyleSheets = [sheet];\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    _buildElements() {\r\n        const container = document.createElement('div');\r\n        container.innerHTML = `\r\n      <div class=\"checked\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"\r\n             style=\"fill: var(--checkbox-icon-color, #000); width: var(--checkbox-icon-size, 68%);\">\r\n          <!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->\r\n          <path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/>\r\n        </svg>\r\n      </div>\r\n      <div class=\"disabled\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"\r\n             style=\"fill: var(--checkbox-icon-color, #000); width: var(--checkbox-icon-size, 68%);\">\r\n          <!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->\r\n          <path d=\"M144 144v48H304V144c0-44.2-35.8-80-80-80s-80 35.8-80 80zM80 192V144C80 64.5 144.5 0 224 0s144 64.5 144 144v48h16c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V256c0-35.3 28.7-64 64-64H80z\"/>\r\n        </svg>\r\n      </div>\r\n      <div class=\"indeterminate\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"\r\n             style=\"fill: var(--checkbox-icon-color, #000); width: var(--checkbox-icon-size, 68%);\">\r\n          <!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->\r\n          <path d=\"M432 256c0 17.7-14.3 32-32 32L48 288c-17.7 0-32-14.3-32-32s14.3-32 32-32l352 0c17.7 0 32 14.3 32 32z\"/>\r\n        </svg>\r\n      </div>\r\n    `;\r\n        return [container];\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    _activateListeners() {\r\n        const {signal} = (this._controller = new AbortController());\r\n        this.addEventListener('click', this._onClick.bind(this), {signal});\r\n        this.addEventListener('keydown', (event) => (event.key === ' ' ? this._onClick(event) : null), {signal});\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    _refresh() {\r\n        super._refresh();\r\n        this._internals.ariaChecked = `${this.hasAttribute('checked')}`;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    _onClick(event) {\r\n        event.preventDefault();\r\n        this.checked = !this.checked;\r\n        this.dispatchEvent(new Event('input', {bubbles: true, cancelable: true}));\r\n        this.dispatchEvent(new Event('change', {bubbles: true, cancelable: true}));\r\n    }\r\n}\r\n\r\n/**\r\n * A custom HTML element that represents a checkbox-like input that is displayed as a slide toggle.\r\n * @fires change\r\n */\r\nexport class SlideToggleElement extends CheckboxElement {\r\n    /** @inheritDoc */\r\n    constructor() {\r\n        super();\r\n        this._internals.role = 'switch';\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    static tagName = 'slide-toggle';\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    static useShadowRoot = false;\r\n\r\n    /* -------------------------------------------- */\r\n    /*  Element Lifecycle                           */\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Activate the element when it is attached to the DOM.\r\n     * @inheritDoc\r\n     */\r\n    connectedCallback() {\r\n        this.replaceChildren(...this._buildElements());\r\n        this._refresh();\r\n        this._activateListeners();\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Create the constituent components of this element.\r\n     * @returns {HTMLElement[]}\r\n     * @protected\r\n     */\r\n    _buildElements() {\r\n        const track = document.createElement('div');\r\n        track.classList.add('slide-toggle-track');\r\n        const thumb = document.createElement('div');\r\n        thumb.classList.add('slide-toggle-thumb');\r\n        track.append(thumb);\r\n        return [track];\r\n    }\r\n}\r\n","const WATCHES_PER_DAY = 6;\r\nconst WATCHES_PER_MONTH = 30 * WATCHES_PER_DAY;\r\n\r\n// Hârnic Weather\r\nexport class Weather {\r\n    static climate = 'cooltemperate';\r\n    static dateTimeApi;\r\n    static season = 'Spring';\r\n    static start = 0;\r\n    static lastWatch = 0;\r\n    static weather = [];\r\n\r\n    static async Render() {\r\n        if (!game.settings.get('hm3', 'showWeather')) return;\r\n        if (!game.user.isGM) return;\r\n        if (!this.dateTimeApi) return;\r\n        if (this.lastWatch === this.Watch()) return;\r\n\r\n        this.season = this.dateTimeApi.getCurrentSeason().name;\r\n        this.lastWatch = this.Watch();\r\n\r\n        await this.InitializeNextMonth();\r\n\r\n        const data = game.settings.get('hm3', 'weather');\r\n        const frc = data.weather[this.lastWatch].force;\r\n        const weather = this.Data(data.weather[this.lastWatch].idx);\r\n        const preArray = data.weather[this.lastWatch].precipitation || weather.precipitation;\r\n        const DT = this.dateTimeApi.currentDateTimeDisplay();\r\n        const datetime = DT.date + DT.yearPostfix + ' ' + DT.time.substring(0, DT.time.length - 3);\r\n        const chatTemplate = 'systems/hm3/templates/chat/weather-card.hbs';\r\n        const chatData = {\r\n            climate: 'Climate: Cool Temperate',\r\n            cover: cover(weather.cover),\r\n            coverIcon: unicode[weather.cover],\r\n            datetime,\r\n            dir: weather.dir,\r\n            force: force(frc),\r\n            hasPrecipitation: preArray.length > 0,\r\n            precipitation: precipitation(preArray),\r\n            precipitationIcon: precipitationIcon(preArray),\r\n            season: this.season,\r\n            temp: this.Temp(weather),\r\n            title: 'Current Weather',\r\n            watch: (this.lastWatch % 6) + 1 // watch of the day\r\n        };\r\n\r\n        const html = await renderTemplate(chatTemplate, chatData);\r\n        const messageData = {\r\n            content: html.trim(),\r\n            user: game.user.id\r\n        };\r\n\r\n        return ChatMessage.create(messageData, {});\r\n    }\r\n\r\n    static async Initialize() {\r\n        this.dateTimeApi = SimpleCalendar?.api;\r\n\r\n        if (!game.settings.get('hm3', 'showWeather')) return false;\r\n        if (!this.dateTimeApi) return false;\r\n\r\n        const data = game.settings.get('hm3', 'weather');\r\n        if (data.weather.length === 1) {\r\n            // 1st initialization\r\n            this.start = this.dateTimeApi.dateToTimestamp({\r\n                year: 720,\r\n                month: 0,\r\n                day: 0,\r\n                hour: 0,\r\n                minute: 0,\r\n                seconds: 0\r\n            });\r\n            let idx = 0;\r\n            const weather = [];\r\n            for (let i = 0; i < WATCHES_PER_MONTH; i++) {\r\n                const force = d3() - 1 + this.Data(idx).force;\r\n                const pre = this.Data(idx).precipitation;\r\n                if (modifyPrecipitation(pre, force)) weather.push({idx, force, precipitation: pre});\r\n                else weather.push({idx, force});\r\n                idx = next(idx);\r\n            }\r\n            await game.settings.set('hm3', 'weather', {start: this.start, weather});\r\n        } else {\r\n            // load data\r\n            this.start = data.start;\r\n            this.weather = data.weather;\r\n\r\n            await this.InitializeNextMonth();\r\n\r\n            // await game.settings.set('hm3', 'weather', undefined);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static async InitializeNextMonth() {\r\n        const data = game.settings.get('hm3', 'weather');\r\n        let weather = data.weather;\r\n        // if (data.weather.length - this.Watch() > WATCHES_PER_MONTH) return;\r\n\r\n        while (weather.length - this.Watch() <= WATCHES_PER_MONTH) {\r\n            let idx = weather[weather.length - 1].idx;\r\n            const newWeather = [];\r\n            for (let i = 0; i < WATCHES_PER_MONTH; i++) {\r\n                idx = next(idx);\r\n                const force = d3() - 1 + this.Data(idx).force;\r\n                const pre = this.Data(idx).precipitation;\r\n                if (modifyPrecipitation(pre, force)) newWeather.push({idx, force, precipitation: pre});\r\n                else newWeather.push({idx, force});\r\n            }\r\n            weather = [...weather, ...newWeather];\r\n            await game.settings.set('hm3', 'weather', {start: this.start, weather});\r\n        }\r\n    }\r\n\r\n    static Data(idx) {\r\n        return weatherData[this.climate][this.season][idx];\r\n    }\r\n\r\n    static Watch() {\r\n        const current = this.dateTimeApi.dateToTimestamp({});\r\n        return Math.floor((current - this.start) / game.hm3.CONST.TIME.WATCH);\r\n    }\r\n\r\n    static Temp(weather) {\r\n        const watch = (this.Watch() % 6) + 1;\r\n        const isWinter = this.dateTimeApi.getCurrentSeason().name === 'Winter';\r\n        if (watch <= 2 || watch >= 6) return weather.night; // night\r\n        else if (isWinter && watch === 5) return weather.night; // night\r\n        else return weather.temp; // day\r\n    }\r\n}\r\n\r\nfunction next(idx) {\r\n    const roll = d10();\r\n    let change = 0;\r\n    if (roll === 1) change = -1;\r\n    else if (roll === 8 || roll === 9) change = 1;\r\n    else if (roll === 10) change = 2;\r\n    return (idx + 20 + change) % 20;\r\n}\r\n\r\nfunction d3() {\r\n    return Math.floor(3 * foundry.dice.MersenneTwister.random()) + 1;\r\n}\r\n\r\nfunction d10() {\r\n    return Math.floor(10 * foundry.dice.MersenneTwister.random()) + 1;\r\n}\r\n\r\nfunction force(force) {\r\n    return windForce[force];\r\n}\r\n\r\nfunction cover(cover) {\r\n    return cloudCover[cover];\r\n}\r\n\r\nfunction modifyPrecipitation(pre, force) {\r\n    let mod = false;\r\n    if (force > 0) {\r\n        // Remove Fog if too windy\r\n        const index = pre.indexOf('Fog');\r\n        if (index !== -1) {\r\n            pre.splice(index, 1);\r\n            mod = true;\r\n        }\r\n    }\r\n\r\n    const index = pre.indexOf('Thunder');\r\n    const index2 = pre.indexOf('Hail');\r\n    if (index !== -1 && index2 !== -1 && d10() === 1) {\r\n        pre.push('Hail');\r\n        mod = true;\r\n    }\r\n\r\n    return mod;\r\n}\r\n\r\nfunction precipitation(pre) {\r\n    if (pre.length === 0) return '';\r\n    else if (pre.length === 1) return _precipitation[pre[0]];\r\n    else if (pre.length === 2) return _precipitation[pre[0]] + ' & ' + _precipitation[pre[1]];\r\n}\r\n\r\nfunction precipitationIcon(pre) {\r\n    if (pre.length === 0) return '';\r\n    else if (pre.length === 1) return unicode[pre[0]];\r\n    else if (pre.length === 2) return unicode[pre[0]] + ' ' + unicode[pre[1]];\r\n}\r\n\r\nconst _precipitation = {\r\n    Fog: 'Fog or Mist',\r\n    Hail: 'Hail',\r\n    Rain: 'Rain Showers or Light Rain',\r\n    Snow: 'Snow/Sleet Flurries',\r\n    SteadyRain: 'Steady or Heavy Rain',\r\n    SteadySnow: 'Steady Snow/Sleet',\r\n    Thunder: 'Thunderstorms'\r\n};\r\n\r\nconst unicode = {\r\n    Fog: '#10860;',\r\n    Full: '#9679;',\r\n    Half: '#9680;',\r\n    No: '#9675;',\r\n    Rain: '',\r\n    Snow: '#8258;',\r\n    SteadyRain: '',\r\n    SteadySnow: '#10033;',\r\n    Thunder: '#9928;'\r\n};\r\n\r\nconst windForce = ['Calm', 'Breeze', 'Windy', 'Gale', 'Storm'];\r\n\r\nconst cloudCover = {No: 'Clear', Half: 'Cloudy', Full: 'Overcast'};\r\n\r\nconst weatherData = {\r\n    cooltemperate: {\r\n        Spring: [\r\n            /* 01 */ {idx: 1, temp: 'Cold', night: 'Cold', force: 1, dir: 'N', cover: 'Full', precipitation: ['Snow']},\r\n            /* 02 */ {idx: 2, temp: 'Cool', night: 'Cool', force: 1, dir: 'NE', cover: 'Half', precipitation: []},\r\n            /* 03 */ {idx: 3, temp: 'Warm', night: 'Cool', force: 0, dir: 'SE', cover: 'No', precipitation: ['Fog']},\r\n            /* 04 */ {idx: 4, temp: 'Warm', night: 'Warm', force: 1, dir: 'SW', cover: 'Half', precipitation: ['Rain']},\r\n            /* 05 */ {idx: 5, temp: 'Cool', night: 'Cool', force: 2, dir: 'NW', cover: 'Full', precipitation: ['Rain']},\r\n            /* 06 */ {idx: 6, temp: 'Cold', night: 'Cold', force: 2, dir: 'NW', cover: 'Full', precipitation: []},\r\n            /* 07 */ {idx: 7, temp: 'Cold', night: 'Frzg', force: 1, dir: 'SW', cover: 'Half', precipitation: []},\r\n            /* 08 */ {idx: 8, temp: 'Cool', night: 'Cool', force: 1, dir: 'SW', cover: 'Half', precipitation: []},\r\n            /* 09 */ {idx: 9, temp: 'Cold', night: 'Cold', force: 1, dir: 'NW', cover: 'Half', precipitation: []},\r\n            /* 10 */ {idx: 10, temp: 'Frzg', night: 'Frzg', force: 0, dir: 'N', cover: 'Half', precipitation: ['Fog']},\r\n            /* 11 */ {idx: 11, temp: 'Cold', night: 'Frzg', force: 1, dir: 'N', cover: 'No', precipitation: []},\r\n            /* 12 */ {idx: 12, temp: 'Cool', night: 'Frzg', force: 1, dir: 'NE', cover: 'Half', precipitation: []},\r\n            /* 13 */ {idx: 13, temp: 'Warm', night: 'Cool', force: 0, dir: 'SE', cover: 'No', precipitation: ['Fog']},\r\n            /* 14 */ {idx: 14, temp: 'Hot', night: 'Warm', force: 0, dir: 'S', cover: 'No', precipitation: ['Fog']},\r\n            /* 15 */ {\r\n                idx: 15,\r\n                temp: 'Warm',\r\n                night: 'Warm',\r\n                force: 0,\r\n                dir: 'SW',\r\n                cover: 'Half',\r\n                precipitation: ['Thunder']\r\n            },\r\n            /* 16 */ {idx: 16, temp: 'Cool', night: 'Cold', force: 1, dir: 'NW', cover: 'No', precipitation: []},\r\n            /* 17 */ {\r\n                idx: 17,\r\n                temp: 'Cool',\r\n                night: 'Cool',\r\n                force: 2,\r\n                dir: 'SW',\r\n                cover: 'Half',\r\n                precipitation: ['Rain']\r\n            },\r\n            /* 18 */ {\r\n                idx: 18,\r\n                temp: 'Cool',\r\n                night: 'Cool',\r\n                force: 2,\r\n                dir: 'SW',\r\n                cover: 'Full',\r\n                precipitation: ['SteadyRain']\r\n            },\r\n            /* 19 */ {\r\n                idx: 19,\r\n                temp: 'Cold',\r\n                night: 'Cold',\r\n                force: 2,\r\n                dir: 'NW',\r\n                cover: 'Half',\r\n                precipitation: ['Snow']\r\n            },\r\n            /* 20 */ {idx: 20, temp: 'Cold', night: 'Cold', force: 1, dir: 'NW', cover: 'Full', precipitation: []}\r\n        ],\r\n        Summer: [\r\n            /* 01 */ {idx: 1, temp: 'Cool', night: 'Cool', force: 0, dir: 'N', cover: 'Half', precipitation: []},\r\n            /* 02 */ {idx: 2, temp: 'Warm', night: 'Warm', force: 0, dir: 'NE', cover: 'Half', precipitation: ['Rain']},\r\n            /* 03 */ {idx: 3, temp: 'Hot', night: 'Cool', force: 0, dir: 'SE', cover: 'No', precipitation: []},\r\n            /* 04 */ {idx: 4, temp: 'Hot', night: 'Warm', force: 0, dir: 'S', cover: 'No', precipitation: []},\r\n            /* 05 */ {\r\n                idx: 5,\r\n                temp: 'Warm',\r\n                night: 'Warm',\r\n                force: 0,\r\n                dir: 'SW',\r\n                cover: 'Half',\r\n                precipitation: ['Thunder']\r\n            },\r\n            /* 06 */ {idx: 6, temp: 'Warm', night: 'Cool', force: 0, dir: 'S', cover: 'Half', precipitation: []},\r\n            /* 07 */ {\r\n                idx: 7,\r\n                temp: 'Cool',\r\n                night: 'Cool',\r\n                force: 1,\r\n                dir: 'SW',\r\n                cover: 'Full',\r\n                precipitation: ['SteadyRain']\r\n            },\r\n            /* 08 */ {idx: 8, temp: 'Cool', night: 'Cool', force: 2, dir: 'NW', cover: 'Full', precipitation: ['Rain']},\r\n            /* 09 */ {idx: 9, temp: 'Warm', night: 'Cool', force: 1, dir: 'SW', cover: 'Half', precipitation: []},\r\n            /* 10 */ {idx: 10, temp: 'Warm', night: 'Cool', force: 1, dir: 'NW', cover: 'No', precipitation: []},\r\n            /* 11 */ {idx: 11, temp: 'Warm', night: 'Cool', force: 1, dir: 'N', cover: 'No', precipitation: []},\r\n            /* 12 */ {idx: 12, temp: 'Hot', night: 'Cool', force: 0, dir: 'NE', cover: 'No', precipitation: ['Fog']},\r\n            /* 13 */ {\r\n                idx: 13,\r\n                temp: 'Hot',\r\n                night: 'Warm',\r\n                force: 0,\r\n                dir: 'SE',\r\n                cover: 'Half',\r\n                precipitation: ['Thunder']\r\n            },\r\n            /* 14 */ {idx: 14, temp: 'Warm', night: 'Cool', force: 0, dir: 'S', cover: 'Half', precipitation: []},\r\n            /* 15 */ {idx: 15, temp: 'Warm', night: 'Warm', force: 0, dir: 'SW', cover: 'Half', precipitation: []},\r\n            /* 16 */ {idx: 16, temp: 'Warm', night: 'Cool', force: 1, dir: 'SW', cover: 'Half', precipitation: []},\r\n            /* 17 */ {idx: 17, temp: 'Cool', night: 'Cool', force: 2, dir: 'SW', cover: 'Full', precipitation: []},\r\n            /* 18 */ {\r\n                idx: 18,\r\n                temp: 'Cool',\r\n                night: 'Cool',\r\n                force: 1,\r\n                dir: 'SW',\r\n                cover: 'Full',\r\n                precipitation: ['Rain']\r\n            },\r\n            /* 19 */ {\r\n                idx: 19,\r\n                temp: 'Cool',\r\n                night: 'Cool',\r\n                force: 1,\r\n                dir: 'SW',\r\n                cover: 'Full',\r\n                precipitation: ['SteadyRain']\r\n            },\r\n            /* 20 */ {\r\n                idx: 20,\r\n                temp: 'Cold',\r\n                night: 'Cold',\r\n                force: 0,\r\n                dir: 'NW',\r\n                cover: 'Full',\r\n                precipitation: ['SteadyRain']\r\n            }\r\n        ],\r\n        Autumn: [\r\n            /* 01 */ {idx: 1, temp: 'Cool', night: 'Cold', force: 0, dir: 'N', cover: 'No', precipitation: ['Fog']},\r\n            /* 02 */ {idx: 2, temp: 'Warm', night: 'Cool', force: 0, dir: 'N', cover: 'Half', precipitation: []},\r\n            /* 03 */ {idx: 3, temp: 'Warm', night: 'Cool', force: 0, dir: 'NE', cover: 'No', precipitation: ['Fog']},\r\n            /* 04 */ {idx: 4, temp: 'Hot', night: 'Warm', force: 0, dir: 'SE', cover: 'No', precipitation: ['Fog']},\r\n            /* 05 */ {\r\n                idx: 5,\r\n                temp: 'Hot',\r\n                night: 'Warm',\r\n                force: 0,\r\n                dir: 'S',\r\n                cover: 'Half',\r\n                precipitation: ['Thunder']\r\n            },\r\n            /* 06 */ {idx: 6, temp: 'Warm', night: 'Warm', force: 0, dir: 'SW', cover: 'Full', precipitation: ['Rain']},\r\n            /* 07 */ {\r\n                idx: 7,\r\n                temp: 'Cool',\r\n                night: 'Cool',\r\n                force: 1,\r\n                dir: 'NW',\r\n                cover: 'Full',\r\n                precipitation: ['SteadyRain']\r\n            },\r\n            /* 08 */ {\r\n                idx: 8,\r\n                temp: 'Cold',\r\n                night: 'Cold',\r\n                force: 1,\r\n                dir: 'SW',\r\n                cover: 'Full',\r\n                precipitation: ['SteadyRain']\r\n            },\r\n            /* 09 */ {\r\n                idx: 9,\r\n                temp: 'Cold',\r\n                night: 'Cold',\r\n                force: 2,\r\n                dir: 'NW',\r\n                cover: 'Full',\r\n                precipitation: ['SteadyRain']\r\n            },\r\n            /* 10 */ {idx: 10, temp: 'Cold', night: 'Cold', force: 1, dir: 'N', cover: 'Full', precipitation: []},\r\n            /* 11 */ {idx: 11, temp: 'Cold', night: 'Cold', force: 2, dir: 'N', cover: 'Full', precipitation: []},\r\n            /* 12 */ {\r\n                idx: 12,\r\n                temp: 'Cool',\r\n                night: 'Cool',\r\n                force: 1,\r\n                dir: 'NE',\r\n                cover: 'Full',\r\n                precipitation: ['Rain']\r\n            },\r\n            /* 13 */ {idx: 13, temp: 'Warm', night: 'Cool', force: 0, dir: 'SE', cover: 'Half', precipitation: ['Fog']},\r\n            /* 14 */ {\r\n                idx: 14,\r\n                temp: 'Cool',\r\n                night: 'Cool',\r\n                force: 1,\r\n                dir: 'S',\r\n                cover: 'Full',\r\n                precipitation: ['SteadyRain']\r\n            },\r\n            /* 15 */ {idx: 15, temp: 'Cool', night: 'Cool', force: 2, dir: 'SW', cover: 'Full', precipitation: []},\r\n            /* 16 */ {idx: 16, temp: 'Warm', night: 'Cool', force: 1, dir: 'S', cover: 'Half', precipitation: ['Rain']},\r\n            /* 17 */ {idx: 17, temp: 'Warm', night: 'Cool', force: 1, dir: 'SW', cover: 'No', precipitation: []},\r\n            /* 18 */ {idx: 18, temp: 'Cool', night: 'Cold', force: 2, dir: 'NW', cover: 'Half', precipitation: []},\r\n            /* 19 */ {\r\n                idx: 19,\r\n                temp: 'Cold',\r\n                night: 'Frzg',\r\n                force: 2,\r\n                dir: 'SW',\r\n                cover: 'Full',\r\n                precipitation: ['Snow']\r\n            },\r\n            /* 20 */ {idx: 20, temp: 'Frzg', night: 'Frzg', force: 1, dir: 'NW', cover: 'Half', precipitation: []}\r\n        ],\r\n        Winter: [\r\n            /* 01 */ {\r\n                idx: 1,\r\n                temp: 'Cold',\r\n                night: 'Frzg',\r\n                force: 0,\r\n                dir: 'N',\r\n                cover: 'Full',\r\n                precipitation: ['SteadySnow']\r\n            },\r\n            /* 02 */ {idx: 2, temp: 'Frzg', night: 'Frzg', force: 1, dir: 'NW', cover: 'Full', precipitation: ['Snow']},\r\n            /* 03 */ {idx: 3, temp: 'Cold', night: 'Cold', force: 2, dir: 'N', cover: 'Full', precipitation: []},\r\n            /* 04 */ {idx: 4, temp: 'Cool', night: 'Cold', force: 1, dir: 'NE', cover: 'Half', precipitation: []},\r\n            /* 05 */ {idx: 5, temp: 'Warm', night: 'Cold', force: 0, dir: 'SE', cover: 'No', precipitation: ['Fog']},\r\n            /* 06 */ {idx: 6, temp: 'Cool', night: 'Frzg', force: 0, dir: 'S', cover: 'Half', precipitation: ['Rain']},\r\n            /* 07 */ {\r\n                idx: 7,\r\n                temp: 'Cold',\r\n                night: 'Cold',\r\n                force: 1,\r\n                dir: 'SW',\r\n                cover: 'Full',\r\n                precipitation: ['SteadyRain']\r\n            },\r\n            /* 08 */ {idx: 8, temp: 'Cold', night: 'Cold', force: 0, dir: 'NW', cover: 'Full', precipitation: ['Snow']},\r\n            /* 09 */ {idx: 9, temp: 'Cool', night: 'Cool', force: 1, dir: 'SW', cover: 'Full', precipitation: ['Rain']},\r\n            /* 10 */ {\r\n                idx: 10,\r\n                temp: 'Cold',\r\n                night: 'Cold',\r\n                force: 1,\r\n                dir: 'NW',\r\n                cover: 'Full',\r\n                precipitation: ['Snow']\r\n            },\r\n            /* 11 */ {\r\n                idx: 11,\r\n                temp: 'Cold',\r\n                night: 'Cold',\r\n                force: 2,\r\n                dir: 'N',\r\n                cover: 'Full',\r\n                precipitation: ['SteadySnow']\r\n            },\r\n            /* 12 */ {idx: 12, temp: 'Frzg', night: 'Frzg', force: 1, dir: 'N', cover: 'Full', precipitation: []},\r\n            /* 13 */ {idx: 13, temp: 'Cool', night: 'Frzg', force: 2, dir: 'NE', cover: 'No', precipitation: []},\r\n            /* 14 */ {idx: 14, temp: 'Cool', night: 'Cold', force: 1, dir: 'SE', cover: 'Half', precipitation: []},\r\n            /* 15 */ {idx: 15, temp: 'Cool', night: 'Frzg', force: 1, dir: 'S', cover: 'No', precipitation: []},\r\n            /* 16 */ {\r\n                idx: 16,\r\n                temp: 'Cool',\r\n                night: 'Cold',\r\n                force: 2,\r\n                dir: 'SW',\r\n                cover: 'Half',\r\n                precipitation: ['Rain']\r\n            },\r\n            /* 17 */ {\r\n                idx: 17,\r\n                temp: 'Cold',\r\n                night: 'Frzg',\r\n                force: 1,\r\n                dir: 'NW',\r\n                cover: 'Full',\r\n                precipitation: ['SteadySnow']\r\n            },\r\n            /* 18 */ {\r\n                idx: 18,\r\n                temp: 'Cold',\r\n                night: 'Cold',\r\n                force: 2,\r\n                dir: 'SW',\r\n                cover: 'Full',\r\n                precipitation: ['Snow']\r\n            },\r\n            /* 19 */ {idx: 19, temp: 'Cold', night: 'Cold', force: 1, dir: 'SW', cover: 'Half', precipitation: []},\r\n            /* 20 */ {idx: 20, temp: 'Cold', night: 'Cold', force: 1, dir: 'NW', cover: 'Full', precipitation: []}\r\n        ]\r\n    },\r\n\r\n    subartic: {spring: [], summer: [], autumn: [], winter: []}\r\n};\r\n","const MIN_MS = 50; // minimum wait time in milliseconds\r\nconst SLOWMO = 1; // 1 = normal speed, 2 = half speed, etc.\r\n\r\nexport class BaseTestHM3 {\r\n    NORTH = {dx: 0, dy: -1};\r\n    NORTH_EAST = {dx: 1, dy: -1};\r\n    NORTH_WEST = {dx: -1, dy: -1};\r\n    SOUTH = {dx: 0, dy: 1};\r\n    SOUTH_EAST = {dx: 1, dy: 1};\r\n    SOUTH_WEST = {dx: -1, dy: 1};\r\n\r\n    GM_USER_ID = 'uWIcxMD0zdnOha1B';\r\n    ALICE_USER_ID = 'tzYR3eEvJND21kVc';\r\n    INEN_USER_ID = 'ok0UravePcb5JK70';\r\n\r\n    actors = new Map();\r\n    tokens = new Map();\r\n\r\n    async _prerequisites() {\r\n        return true;\r\n    }\r\n\r\n    async _preSetup() {}\r\n    async _postSetup() {}\r\n\r\n    async _preTest() {}\r\n    async _test() {}\r\n    async _postTest() {}\r\n\r\n    async _preTeardown() {}\r\n    async _postTeardown() {}\r\n\r\n    /**\r\n     * Sets up the test environment, including deleting existing messages and combat, creating default actors, and preparing the console.\r\n     * @private\r\n     * @returns {Promise<boolean>} Returns true if setup was successful, false otherwise.\r\n     */\r\n    async #setup() {\r\n        try {\r\n            await this._preSetup();\r\n        } catch (error) {\r\n            console.error('Error in pre-setup:', error);\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            console.log = () => {};\r\n            console.debug = () => {};\r\n            console.trace = () => {};\r\n\r\n            await ChatMessage.deleteDocuments(game.messages.contents.map((m) => m.id));\r\n            await game.combat?.delete();\r\n\r\n            game.togglePause(false, true);\r\n\r\n            // some default actors\r\n            this.actors.set('Alice', await this._createActor('Actor.JTK0gIOv6PfxeE1P', 'Alice'));\r\n            this.actors.set('Bob', await this._createActor('Actor.6WYZs3HBnOOg3YXQ', 'Bob'));\r\n            this.actors.set('Inen', await this._createActor('Actor.xbdJx9yLoAAC6xUb', 'Inen'));\r\n        } catch (error) {\r\n            console.error('Error during setup:', error);\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            await this._postSetup();\r\n        } catch (error) {\r\n            console.error('Error in post-setup:', error);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Starts the test by setting up the environment, running pre-test and post-test hooks, and tearing down the environment after the test.\r\n     * @returns {Promise<boolean>} Returns true if the test was successful, false otherwise.\r\n     */\r\n    async start() {\r\n        const pre = await this._prerequisites();\r\n        if (pre !== true) {\r\n            ui.notifications.error('Prerequisites not met, skipping test: ' + pre);\r\n            return false;\r\n        }\r\n\r\n        let success = await this.#setup();\r\n\r\n        if (success) {\r\n            try {\r\n                await this._preTest();\r\n            } catch (error) {\r\n                success = false;\r\n                console.error('Error in pre-test:', error);\r\n            }\r\n            try {\r\n                await this._wait();\r\n                if (success) await this._test();\r\n                await this._wait();\r\n            } catch (error) {\r\n                success = false;\r\n                console.error('Error during test execution:', error);\r\n            }\r\n            try {\r\n                if (success) await this._postTest();\r\n            } catch (error) {\r\n                console.error('Error in post-test:', error);\r\n            }\r\n        }\r\n\r\n        await this._wait();\r\n        success = (await this.#teardown()) && success;\r\n\r\n        return success;\r\n    }\r\n\r\n    /**\r\n     * Cleans up the test environment, deleting actors and tokens, and resetting combat.\r\n     * @private\r\n     * @returns {Promise<boolean>} Returns true if teardown was successful, false otherwise.\r\n     */\r\n    async #teardown() {\r\n        let success = true;\r\n        try {\r\n            await this._preTeardown();\r\n        } catch (error) {\r\n            success = false;\r\n            console.error('Error in pre-teardown:', error);\r\n        }\r\n\r\n        try {\r\n            await game.combat?.delete();\r\n\r\n            for (const token of this.tokens.values()) await token.delete();\r\n            for (const actor of this.actors.values()) await actor.delete();\r\n\r\n            this.actors.clear();\r\n            this.tokens.clear();\r\n\r\n            game.togglePause(true, true);\r\n        } catch (error) {\r\n            success = false;\r\n            console.error('Error during teardown:', error);\r\n        }\r\n\r\n        try {\r\n            await this._postTeardown();\r\n        } catch (error) {\r\n            success = false;\r\n            console.error('Error in post-teardown:', error);\r\n        }\r\n\r\n        return success;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the defend buttons from a chat message by its number.\r\n     * @param {number} messageNr - The index of the chat message to retrieve buttons from.\r\n     * @returns {Array<Array<string, Object>>} An array of defend buttons with their associated data.\r\n     */\r\n    static DefButtonsFromChatMsgProxy(messageNr) {\r\n        const html = document.createElement('div');\r\n        html.innerHTML = game.messages.contents[messageNr].content;\r\n        const htmlDefButtons = html.getElementsByClassName('card-buttons')[0].firstElementChild;\r\n\r\n        return Array.from(htmlDefButtons.children)\r\n            .filter((button) => {\r\n                const actor = button.dataset.visibleActorId ? game.actors.get(button.dataset.visibleActorId) : null;\r\n                if (!actor || !actor.isOwner) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            })\r\n            .map((button) => {\r\n                return [\r\n                    button.innerHTML,\r\n                    {\r\n                        action: button.dataset.action,\r\n                        aim: button.dataset.aim,\r\n                        aspect: button.dataset.aspect,\r\n                        atkTokenId: button.dataset.atkTokenId,\r\n                        button,\r\n                        defTokenId: button.dataset.defTokenId,\r\n                        effAml: button.dataset.effAml,\r\n                        grappleAtk: button.dataset.grappleAtk,\r\n                        impactMod: button.dataset.impactMod,\r\n                        messageNr,\r\n                        visibleActorId: button.dataset.visibleActorId,\r\n                        weapon: button.dataset.weapon,\r\n                        weaponType: button.dataset.weaponType\r\n                    }\r\n                ];\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Retrieves the defend buttons from the latest chat message for a specific user.\r\n     * @param {string} userId - The ID of the user to retrieve defend buttons for.\r\n     * @param {number} messageNr - The index of the chat message to retrieve buttons from (default is the last message).\r\n     * @returns {Promise<Map<string, Object>>} A map of defend buttons with their associated data.\r\n     */\r\n    async _defButtonsFromChatMsg(userId = game.user.id, messageNr = game.messages.contents.length - 1) {\r\n        return game.hm3.socket.executeAsUser('defButtonsFromChatMsg', userId, messageNr);\r\n    }\r\n\r\n    static async DefActionProxy(def, {messageNr, roll}) {\r\n        if (!['Block', 'Counterstrike', 'Dodge', 'Ignore'].includes(def)) return null;\r\n        const defButtons = BaseTestHM3.DefButtonsFromChatMsgProxy(messageNr);\r\n        const button = new Map(defButtons).get(def)?.button;\r\n        if (!button) return null;\r\n\r\n        game.hm3.Roll.D100_RESULTS.push(...roll);\r\n\r\n        button.onclick = async (event) => {\r\n            return CONFIG.Actor.documentClass._onChatCardAction({\r\n                altKey: true,\r\n                currentTarget: button,\r\n                preventDefault: () => event.preventDefault()\r\n            });\r\n        };\r\n\r\n        return Promise.all([\r\n            new Promise((resolve) => {\r\n                Hooks.once(`hm3.on${def}Resume`, (result) => {\r\n                    resolve(result);\r\n                });\r\n            }),\r\n            button.click()\r\n        ]);\r\n    }\r\n\r\n    async _defAction(\r\n        def,\r\n        {messageNr = game.messages.contents.length - 1, unsetTAFlag = false, userId = game.user.id, roll = []} = {}\r\n    ) {\r\n        if (unsetTAFlag) await game.hm3.socket.executeAsGM('unsetTAFlag');\r\n        return game.hm3.socket.executeAsUser('defAction', userId, def, {messageNr, roll});\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} actorUuid\r\n     * @param {string} name\r\n     * @param {Object} options\r\n     * @returns {TokenHM3}\r\n     */\r\n    async _createActor(actorUuid, name, options = {}) {\r\n        const actor = fromUuidSync(actorUuid);\r\n        const actorObject = actor.toObject();\r\n\r\n        actorObject.name = name;\r\n        actorObject.prototypeToken.name = name;\r\n        actorObject.folder = null;\r\n        delete actorObject.flags['scene-packer'];\r\n\r\n        this.actors.set(name, await Actor.create(actorObject));\r\n        return this.actors.get(name);\r\n    }\r\n\r\n    async _dropActor(actor, data, dir = {dx: 0, dy: 0}) {\r\n        data.uuid = actor.uuid;\r\n        data.type = 'Actor';\r\n\r\n        const tokenDoc = await canvas.tokens._onDropActorData({altKey: false, shiftKey: false}, data);\r\n        this.tokens.set(tokenDoc.name, tokenDoc);\r\n\r\n        await this._move(tokenDoc.object, dir);\r\n\r\n        return tokenDoc.object;\r\n    }\r\n\r\n    async _move(token, dir = {dx: 0, dy: 0}) {\r\n        token.control({releaseOthers: true});\r\n        await Promise.allSettled([\r\n            game.canvas.activeLayer.moveMany(dir),\r\n            this._wait(Math.max(SLOWMO * MIN_MS, 300) / SLOWMO)\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Resets all conditions on the token, including combatant status and visibility.\r\n     * @param {TokenHM3} token - The token to reset conditions for.\r\n     * @returns {Promise<void>}\r\n     */\r\n    async _resetAllConditions(token) {\r\n        await Promise.all(\r\n            Object.values(game.hm3.Condition).map(async (condition) => {\r\n                await token.deleteCondition(condition);\r\n            })\r\n        );\r\n\r\n        await token.combatant?.update({defeated: false});\r\n    }\r\n\r\n    async _startCombat() {\r\n        await TokenDocument.createCombatants(this.tokens.values());\r\n        await game.combat.startCombat();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} ms\r\n     * @returns\r\n     */\r\n    async _wait(ms = MIN_MS) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, SLOWMO * ms);\r\n        });\r\n    }\r\n}\r\n","import {MoraleTestCase} from './infrastructure/morale';\r\n\r\nconst tests = new Map([\r\n    // ['(i01) - condition', new ConditionTestCase()],\r\n    ['(i02) - morale', new MoraleTestCase()]\r\n    // ['(c01) - defeated', new DefeatedTestCase()],\r\n    // ['(c02) - shock', new ShockTestCase()],\r\n    // ['(c03) - zones', new ZonesTestCase()],\r\n    // ['(c04) - Melee Block', new MeleeBlockTestCase()],\r\n    // ['(c05) - Melee Counterstrike', new MeleeCSTestCase()],\r\n    // ['(c06) - Melee Dodge', new MeleeDodgeTestCase()],\r\n    // ['(c07) - Melee Ignore', new MeleeIgnoreTestCase()],\r\n    // ['(c08) - Outnumbered', new OutnumberedTestCase()]\r\n]);\r\n\r\nlet isRunning = false;\r\n\r\nexport async function runner() {\r\n    if (isRunning) {\r\n        ui.notifications.warn('Test runner is already running. Please wait for it to finish.');\r\n        return;\r\n    }\r\n    isRunning = true;\r\n    console.clear();\r\n    console.info('%cRunning tests...', 'color: #b6b4a5');\r\n    for (const test of tests.keys()) {\r\n        console.info('%c\\n----------------------------------------', 'color: #b6b4a5');\r\n        console.info(`%cRunning test: ${test}`, 'color: #b6b4a5');\r\n\r\n        var t = tests.get(test);\r\n        const success = await t.start();\r\n        if (success) {\r\n            console.info(`%cTest \"${test}\" completed successfully.`, 'color: #00990d');\r\n        } else {\r\n            console.error(`%cTest \"${test}\" failed.`, 'color: #b30000');\r\n        }\r\n    }\r\n    isRunning = false;\r\n}\r\n","import {BaseTestHM3} from '../hm3-basetest';\r\n\r\nexport class MoraleTestCase extends BaseTestHM3 {\r\n    async _test() {\r\n        const Center = {x: 7870, y: 14258};\r\n        const Condition = game.hm3.Condition;\r\n        const token = await this._dropActor(this.actors.get('Alice'), Center);\r\n\r\n        const berserk = await token.addCondition(Condition.BERSERK);\r\n        console.info('Adding condition: %s to token: %s', Condition.BERSERK, token.name);\r\n        console.assert(berserk && berserk instanceof ActiveEffect, 'Condition is NOT an ActiveEffect: %O', berserk);\r\n\r\n        const broken = await token.addCondition(Condition.BROKEN);\r\n        console.info('Adding condition: %s to token: %s', Condition.BROKEN, token.name);\r\n        console.assert(broken && broken instanceof ActiveEffect, 'Condition is NOT an ActiveEffect: %O', broken);\r\n        console.assert(!token.hasCondition(Condition.BERSERK), 'Token DOES have condition: %s', Condition.BERSERK);\r\n\r\n        const cautious = await token.addCondition(Condition.CAUTIOUS);\r\n        console.info('Adding condition: %s to token: %s', Condition.CAUTIOUS, token.name);\r\n        console.assert(cautious && cautious instanceof ActiveEffect, 'Condition is NOT an ActiveEffect: %O', cautious);\r\n        console.assert(!token.hasCondition(Condition.BROKEN), 'Token DOES have condition: %s', Condition.BROKEN);\r\n\r\n        const desperate = await token.addCondition(Condition.DESPERATE);\r\n        console.info('Adding condition: %s to token: %s', Condition.DESPERATE, token.name);\r\n        console.assert(\r\n            desperate && desperate instanceof ActiveEffect,\r\n            'Condition is NOT an ActiveEffect: %O',\r\n            desperate\r\n        );\r\n        console.assert(!token.hasCondition(Condition.CAUTIOUS), 'Token DOES have condition: %s', Condition.CAUTIOUS);\r\n\r\n        const empowered = await token.addCondition(Condition.EMPOWERED);\r\n        console.info('Adding condition: %s to token: %s', Condition.EMPOWERED, token.name);\r\n        console.assert(\r\n            empowered && empowered instanceof ActiveEffect,\r\n            'Condition is NOT an ActiveEffect: %O',\r\n            empowered\r\n        );\r\n        console.assert(!token.hasCondition(Condition.DESPERATE), 'Token DOES have condition: %s', Condition.DESPERATE);\r\n\r\n        const weakened = await token.addCondition(Condition.WEAKENED);\r\n        console.info('Adding condition: %s to token: %s', Condition.WEAKENED, token.name);\r\n        console.assert(weakened && weakened instanceof ActiveEffect, 'Condition is NOT an ActiveEffect: %O', weakened);\r\n        console.assert(!token.hasCondition(Condition.EMPOWERED), 'Token DOES have condition: %s', Condition.EMPOWERED);\r\n    }\r\n}\r\n","// Import Modules\nimport {ActorHM3} from './module/actor/actor.js';\nimport {CharacterSheetHM3v2} from './module/actor/character-sheet-v2.js';\nimport {CharacterSheetHM3} from './module/actor/character-sheet.js';\nimport {ContainerSheetHM3v2} from './module/actor/container-sheet-v2.js';\nimport {ContainerSheetHM3} from './module/actor/container-sheet.js';\nimport {CreatureSheetHM3v2} from './module/actor/creature-sheet-v2.js';\nimport {CreatureSheetHM3} from './module/actor/creature-sheet.js';\nimport * as combat from './module/combat.js';\nimport {HM3} from './module/config.js';\nimport * as effect from './module/effect.js';\nimport {ActiveEffectHM3} from './module/hm3-active-effect.js';\nimport {ChatMessageHM3} from './module/hm3-chatmessage.js';\nimport {CombatHM3} from './module/hm3-combat.js';\nimport {CombatantHM3} from './module/hm3-combatant.js';\nimport {MacroHM3} from './module/hm3-macro.js';\nimport {RollHM3} from './module/hm3-roll.js';\nimport {TokenDocumentHM3, TokenHM3} from './module/hm3-token.js';\nimport {\n    ActorType,\n    ArcanePower,\n    Aspect,\n    Condition,\n    Hook,\n    InjuryType,\n    ItemType,\n    Location,\n    MiscItemType,\n    Range,\n    SkillType\n} from './module/hm3-types.js';\nimport {ActiveEffectConfigHM3} from './module/hm3/hm3-active-effect-config.js';\nimport {AmbientLightHM3} from './module/hm3/hm3-ambient-light.js';\nimport {AmbientSoundHM3} from './module/hm3/hm3-ambient-sound.js';\nimport {DrawingHM3} from './module/hm3/hm3-drawing.js';\nimport {MacroConfigHM3} from './module/hm3/hm3-macro-config.js';\nimport {NoteHM3} from './module/hm3/hm3-note.js';\nimport {RegionHM3} from './module/hm3/hm3-region.js';\nimport {TileHM3} from './module/hm3/hm3-tile.js';\nimport {WallHM3} from './module/hm3/hm3-wall.js';\nimport {ItemSheetHM3v2} from './module/item/item-sheet-v2.js';\nimport {ItemSheetHM3} from './module/item/item-sheet.js';\nimport {ItemHM3} from './module/item/item.js';\nimport {registerHooks} from './module/macro.js';\nimport * as macros from './module/macros.js';\nimport * as migrations from './module/migrations.js';\nimport {Mutex} from './module/mutex.js';\nimport {registerSystemSettings} from './module/settings.js';\nimport {SlideToggleElement} from './module/toggle.js';\nimport * as utility from './module/utility.js';\nimport {Weather} from './module/weather.js';\nimport {runner} from './tests/runner.js';\n\n// import './scss/hm3.scss';\n\nHooks.once('init', async function () {\n    console.info(`HM3 | Initializing the HM3 Game System\\n${HM3.ASCII}`);\n\n    CONFIG.ActiveEffect.legacyTransferral = false;\n\n    window.customElements.define('slide-toggle', SlideToggleElement);\n\n    game.hm3 = {\n        config: HM3,\n        macros,\n        migrations,\n\n        ActorHM3,\n\n        ActorType,\n        ArcanePower,\n        Aspect,\n        Condition,\n        Hook,\n        InjuryType,\n        ItemType,\n        Location,\n        MiscItemType,\n        Range,\n        SkillType,\n\n        CONST: {\n            COMBAT: {SHOCK_INDEX_THRESHOLD: 20},\n            TIME: {\n                SECOND: 1,\n                MINUTE: 60,\n                HOUR: 60 * 60, // 3600 sec\n                WATCH: 4 * 60 * 60,\n                DAY: 24 * 60 * 60,\n                TENDAY: 10 * 24 * 60 * 60,\n                MONTH: 30 * 24 * 60 * 60,\n                YEAR: 12 * 30 * 24 * 60 * 60,\n                PERMANENT: Number.MAX_SAFE_INTEGER - 1,\n                INDEFINITE: Number.MAX_SAFE_INTEGER\n            }\n        },\n\n        gmconsole: async (level, msg, error) => {\n            return game.hm3.socket.executeAsGM('gmConsole', game.user.name, level, msg, error);\n        },\n        Gm2GmSays: async (text, source, token = null) => {\n            return game.hm3.socket.executeAsGM('GmSays', {\n                gmonly: true,\n                sendingUserId: game.user.id,\n                source,\n                text,\n                tokenId: token ? token.id : null\n            });\n        },\n        GmSays: async ({gmonly = false, sendingUser = null, source = null, text = null, token = null}) => {\n            console.assert(text, 'Parameter text not set');\n            console.assert(game.user.isGM ? true : token, 'Parameter token not set');\n            if (!text) return;\n\n            const gmUsers = game.users.filter((user) => user.isGM).map((user) => user.id);\n            const content = !!source\n                ? `<div class=\"chat-card gmsays\"><blockquote lang=\"en\"><p>${text}</p><cite>&ndash; ${source}</cite></blockquote></div>`\n                : `<div class=\"chat-card gmsays\"><blockquote lang=\"en\"><p>${text}</p></blockquote></div>`;\n            const speaker = game.user.isGM\n                ? ChatMessageHM3.getSpeaker({alias: 'Simon says...', user: game.user})\n                : ChatMessageHM3.getSpeaker({token});\n            const msg = {\n                content,\n                speaker,\n                type: CONST.CHAT_MESSAGE_STYLES.OTHER\n            };\n\n            // If the message is GM only, send it to the GM users\n            if (gmonly && game.user.isGM) {\n                msg['whisper'] = gmUsers;\n                console.info(\n                    `HM3 [GmSays] | GM only: ${text\n                        .replaceAll('<b>', '')\n                        .replaceAll('</b>', '')\n                        .replaceAll('<h4>', '')\n                        .replaceAll('</h4>', '')\n                        .replaceAll('<p>', '')\n                        .replaceAll('</p>', '')}`\n                );\n                return await ChatMessage.create(msg);\n            }\n\n            // If the message is not GM only, send it to all users\n            else if (!gmonly) {\n                console.info(\n                    `HM3 [GmSays] | ${text\n                        .replaceAll('<b>', '')\n                        .replaceAll('</b>', '')\n                        .replaceAll('<h4>', '')\n                        .replaceAll('</h4>', '')\n                        .replaceAll('<p>', '')\n                        .replaceAll('</p>', '')}`\n                );\n                return await ChatMessage.create(msg);\n            }\n        }\n    };\n\n    /**\n     * Set an initiative formula for the system\n     * @type {String}\n     */\n    CONFIG.Combat.initiative = {\n        formula: '@initiative',\n        decimals: 1\n    };\n\n    // Set Combat Time Length\n    CONFIG.time.roundTime = 10;\n    CONFIG.time.turnTime = 0;\n\n    // Set System Globals\n    CONFIG.HM3 = HM3;\n\n    CONFIG.canvasTextStyle = new PIXI.TextStyle({\n        fontFamily: 'Amasis MT Medium',\n        fontSize: 36,\n        fill: '#FFFFFF',\n        stroke: '#111111',\n        strokeThickness: 1,\n        dropShadow: true,\n        dropShadowColor: '#000000',\n        dropShadowBlur: 2,\n        dropShadowAngle: 0,\n        dropShadowDistance: 0,\n        align: 'center',\n        wordWrap: false,\n        padding: 1\n    });\n\n    // Register system settings\n    registerSystemSettings();\n\n    // Define custom ActiveEffect class\n    //CONFIG.ActiveEffect.sheetClass = HM3ActiveEffectConfig;\n\n    // Define custom Document classes\n    CONFIG.Actor.documentClass = ActorHM3;\n    CONFIG.Actor.typeLabels = {\n        base: 'Base',\n        character: 'Character',\n        creature: 'Creature',\n        container: 'Container'\n    };\n    CONFIG.Item.documentClass = ItemHM3;\n    CONFIG.Item.typeLabels = {\n        base: 'Base',\n        armorgear: 'Armor',\n        armorlocation: 'Armor Location',\n        companion: 'Companion',\n        containergear: 'Container',\n        effectgear: 'Effect',\n        injury: 'Injury',\n        invocation: 'Invocation',\n        miscgear: 'Misc. Gear',\n        missilegear: 'Missile Weapon',\n        psionic: 'Psionic',\n        skill: 'Skill',\n        spell: 'Spell',\n        trait: 'Trait',\n        weapongear: 'Melee Weapon'\n    };\n    CONFIG.Combat.documentClass = CombatHM3;\n    CONFIG.TinyMCE.style_formats[0].items.push({\n        title: 'Highlight',\n        block: 'section',\n        classes: 'highlight',\n        wrapper: true\n    });\n\n    CONFIG.ActiveEffect.documentClass = ActiveEffectHM3;\n    CONFIG.AmbientLight.objectClass = AmbientLightHM3;\n    CONFIG.AmbientSound.objectClass = AmbientSoundHM3;\n    CONFIG.ChatMessage.documentClass = ChatMessageHM3;\n    CONFIG.Combatant.documentClass = CombatantHM3;\n    CONFIG.Dice.rolls[0] = RollHM3;\n    CONFIG.Drawing.objectClass = DrawingHM3;\n    CONFIG.Macro.documentClass = MacroHM3;\n    CONFIG.Note.objectClass = NoteHM3;\n    CONFIG.Region.objectClass = RegionHM3;\n    CONFIG.Tile.objectClass = TileHM3;\n    CONFIG.Token.documentClass = TokenDocumentHM3;\n    CONFIG.Token.objectClass = TokenHM3;\n    CONFIG.Wall.objectClass = WallHM3;\n\n    // Register sheet application classes\n    Actors.unregisterSheet('core', ActorSheet);\n    Actors.registerSheet('hm3', CharacterSheetHM3, {\n        types: ['character'],\n        label: 'HM3 Character Sheet'\n    });\n    Actors.registerSheet('hm3', CharacterSheetHM3v2, {\n        types: ['character'],\n        makeDefault: true,\n        label: 'HM3 Character Sheet v2'\n    });\n    Actors.registerSheet('hm3', CreatureSheetHM3, {\n        types: ['creature'],\n        label: 'HM3 Creature Sheet'\n    });\n    Actors.registerSheet('hm3', CreatureSheetHM3v2, {\n        types: ['creature'],\n        makeDefault: true,\n        label: 'HM3 Creature Sheet v2'\n    });\n    Actors.registerSheet('hm3', ContainerSheetHM3, {\n        types: ['container'],\n        label: 'HM3 Container Sheet'\n    });\n    Actors.registerSheet('hm3', ContainerSheetHM3v2, {\n        types: ['container'],\n        makeDefault: true,\n        label: 'HM3 Container Sheet v2'\n    });\n\n    DocumentSheetConfig.unregisterSheet(ActiveEffect, 'core', ActiveEffectConfig);\n    DocumentSheetConfig.registerSheet(ActiveEffect, 'hm3', ActiveEffectConfigHM3, {\n        makeDefault: true,\n        label: 'Default HarnMaster Active Effect Sheet'\n    });\n\n    DocumentSheetConfig.unregisterSheet(Macro, 'core', MacroConfig);\n    DocumentSheetConfig.registerSheet(Macro, 'hm3', MacroConfigHM3, {\n        makeDefault: true,\n        label: 'Default HarnMaster Macro Sheet'\n    });\n\n    Items.unregisterSheet('core', ItemSheet);\n    Items.registerSheet('hm3', ItemSheetHM3, {label: 'HM3 Item Sheet'});\n    Items.registerSheet('hm3', ItemSheetHM3v2, {label: 'HM3 Item Sheet v2', makeDefault: true});\n\n    // If you need to add Handlebars helpers, here are a few useful examples:\n    Handlebars.registerHelper('concat', function () {\n        var outStr = '';\n        for (var arg in arguments) {\n            if (typeof arguments[arg] != 'object') {\n                outStr += arguments[arg];\n            }\n        }\n        return outStr;\n    });\n\n    Handlebars.registerHelper('toLowerCase', function (str) {\n        return str.toLowerCase();\n    });\n\n    Handlebars.registerHelper('capitalizeFirstLetter', function (str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    });\n\n    Handlebars.registerHelper('not', function (obj) {\n        return !obj;\n    });\n\n    Handlebars.registerHelper('getLabel', function (data, key) {\n        var val = data.find((d) => d.key === key);\n        return val.label;\n    });\n\n    const root = 'systems/hm3/templates/';\n    const root_item_v2 = `${root}item-v2/partials/`;\n    const root_actor_v2 = `${root}actor-v2/partials/`;\n    Handlebars.registerPartial({\n        //character\n        char_esoteric_list_partial: await (await fetch(`${root}actor/partials/esoteric_list_partial.hbs`)).text(),\n        char_fff_list_partial: await (await fetch(`${root}actor/partials/fff_list_partial.hbs`)).text(),\n        char_layout_partial: await (await fetch(`${root}actor/partials/structure_partial.hbs`)).text(),\n        char_skill_list_partial: await (await fetch(`${root}actor/partials/skill_list_partial.hbs`)).text(),\n        //character v2\n        char_v2_ability_partial: await (await fetch(`${root_actor_v2}ability_partial.hbs`)).text(),\n        char_v2_esoteric_list_partial: await (await fetch(`${root_actor_v2}esoteric_list_partial.hbs`)).text(),\n        char_v2_fff_list_partial: await (await fetch(`${root_actor_v2}fff_list_partial.hbs`)).text(),\n        char_v2_img_partial: await (await fetch(`${root_actor_v2}img_partial.hbs`)).text(),\n        char_v2_layout_partial: await (await fetch(`${root_actor_v2}structure_partial.hbs`)).text(),\n        char_v2_skill_list_partial: await (await fetch(`${root_actor_v2}skill_list_partial.hbs`)).text(),\n        // item\n        item_artifact_partial: await (await fetch(`${root}item/partials/artifact_partial.hbs`)).text(),\n        item_artifact_power_partial: await (await fetch(`${root}item/partials/artifact_power_partial.hbs`)).text(),\n        item_esoteric_combat_partial: await (await fetch(`${root}item/partials/esoteric_combat_partial.hbs`)).text(),\n        item_layout_partial: await (await fetch(`${root}item/partials/structure_partial.hbs`)).text(),\n        item_standard_partial: await (await fetch(`${root}item/partials/standard_partial.hbs`)).text(),\n        item_unknown_value_partial: await (await fetch(`${root}item/partials/unknown_value_partial.hbs`)).text(),\n        // item v2\n        item_v2_artifact_partial: await (await fetch(`${root_item_v2}artifact_partial.hbs`)).text(),\n        item_v2_artifact_power_partial: await (await fetch(`${root_item_v2}artifact_power_partial.hbs`)).text(),\n        item_v2_esoteric_combat_partial: await (await fetch(`${root_item_v2}esoteric_combat_partial.hbs`)).text(),\n        item_v2_layout_partial: await (await fetch(`${root_item_v2}structure_partial.hbs`)).text(),\n        item_v2_quantity_partial: await (await fetch(`${root_item_v2}quantity_partial.hbs`)).text(),\n        item_v2_sb_partial: await (await fetch(`${root_item_v2}sb_partial.hbs`)).text(),\n        item_v2_standard_partial: await (await fetch(`${root_item_v2}standard_partial.hbs`)).text(),\n        item_v2_unknown_value_partial: await (await fetch(`${root_item_v2}unknown_value_partial.hbs`)).text(),\n        item_v2_value_partial: await (await fetch(`${root_item_v2}value_partial.hbs`)).text(),\n        item_v2_weight_partial: await (await fetch(`${root_item_v2}weight_partial.hbs`)).text(),\n        // global\n        effects_partial: await (await fetch(`${root}partials/effects_partial.hbs`)).text(),\n        legacy_macro_partial: await (await fetch(`${root}partials/legacy_macro_partial.hbs`)).text(),\n        macros_partial: await (await fetch(`${root}partials/macros_partial.hbs`)).text()\n    });\n\n    // Add a font selector dropdown to the TineMCE editor\n    //CONFIG.TinyMCE.toolbar = \"styleselect forecolor backcolor bullist numlist image table hr link removeformat code fontselect fontsizeselect save\";\n    //CONFIG.TinyMCE.toolbar = \"styles bullist numlist image table hr link removeformat code fontselect save\";\n    // Register the Hârnic fonts with Foundry and TinyMCE\n    // These are the default fonts for browsers\n    let defaultFonts =\n        'Andale Mono=andale mono,times; Arial=arial,helvetica,sans-serif; Arial Black=arial black,avant garde; Book Antiqua=book antiqua,palatino; Comic Sans MS=comic sans ms,sans-serif; Courier New=courier new,courier; Georgia=georgia,palatino; Helvetica=helvetica; Impact=impact,chicago; Signika=Signika,sans-serif;Symbol=symbol; Tahoma=tahoma,arial,helvetica,sans-serif; Terminal=terminal,monaco; Times New Roman=times new roman,times; Trebuchet MS=trebuchet ms,geneva; Verdana=verdana,geneva; Webdings=webdings; Wingdings=wingdings,zapf dingbats';\n    // These are the fonts we add\n    let extraFonts =\n        'Martel=Martel;Roboto=Roboto;Lakise=Lakise;Runic=Runic;Lankorian Blackhand=Lankorian Blackhand;Amasis MT Medium=Amasis MT Medium';\n    // Configure the TinyMCE font drop-down (note: Monk's Enhanced Journal will overwrite this)\n    CONFIG.TinyMCE.font_formats =\n        (CONFIG.TinyMCE.font_formats ? CONFIG.TinyMCE.font_formats : defaultFonts) + ';' + extraFonts;\n    // Register the extra fonts within Foundry itsel (e.g. Text drawing tool)\n    //    let fontFamilies = extraFonts.split(\";\").map(f => f.split(\"=\")[0]).filter(f => f.length);\n    //    fontFamilies.forEach(f => CONFIG.fontFamilies.push(f));\n    Object.assign(CONFIG.fontDefinitions, {\n        'Lakise': {editor: true, fonts: [{urls: ['./systems/hm3/fonts/Harn-Lakise-Normal.otf']}]},\n        'Runic': {editor: true, fonts: [{urls: ['./systems/hm3/fonts/Harn-Runic-Normal.otf']}]},\n        'Lankorian Blackhand': {editor: true, fonts: [{urls: ['./systems/hm3/fonts/Lankorian-Blackhand.otf']}]},\n        'Amasis MT Medium': {\n            editor: true,\n            fonts: [\n                {urls: ['./systems/hm3/fonts/amasis-mt-medium.ttf', './systems/hm3/fonts/amasis-mt-medium-italic.ttf']}\n            ]\n        }\n    });\n\n    // Actors also have a Bio image\n    Hooks.on('getActorDirectoryEntryContext', (html, menuItems) => {\n        menuItems.unshift({\n            name: 'View Bio Artwork',\n            icon: `<i class=\"fas fa-image\"></i>`,\n            callback: async (html) => {\n                const actor = game.actors.get(html.data('documentId'));\n                new ImagePopout(actor.system.bioImage, {\n                    title: actor.name,\n                    uuid: actor.uuid\n                }).render(true);\n            },\n            condition: (html) => {\n                const actor = game.actors.get(html.data('documentId'));\n                return game.user.isGM && actor?.system?.bioImage;\n            }\n        });\n    });\n});\n\nHooks.on('renderChatMessage', (app, html, data) => {\n    // Display action buttons\n    combat.displayChatActionButtons(app, html, data);\n});\n\nHooks.on('renderChatLog', (app, html, data) => ActorHM3.chatListeners(html));\n\nHooks.on('renderChatPopout', (app, html, data) => ActorHM3.chatListeners(html));\n\n/**\n * Active Effects need to expire at certain times, so keep track of that here\n */\nHooks.on('updateWorldTime', async (currentTime, change) => {\n    await effect.checkStartedActiveEffects();\n    // Disable any expired active effects (WorldTime-based durations).\n    await effect.checkExpiredActiveEffects();\n});\n\nHooks.on('updateCombat', async (combat, updateData) => {\n    await effect.checkStartedActiveEffects();\n    // Called when the combat object is updated.  Possibly because of a change in round\n    // or turn. updateData will have specifics of what changed.\n    await effect.checkExpiredActiveEffects();\n});\n\nHooks.on('hm3.onShockIndexReduced', async (actor, old, current) => {\n    if (game.combat?.started && actor.parent instanceof TokenDocumentHM3 && !actor.parent.player) {\n        if (actor.parent.hasCondition(game.hm3.Condition.UNCONSCIOUS) && actor.testUserPermission(game.user, 'OWNER')) {\n            await actor.parent.deleteCondition(game.hm3.Condition.UNCONSCIOUS);\n            await actor.parent.addCondition(game.hm3.Condition.UNCONSCIOUS);\n            Hooks.call('hm3.onShockIndexReduced2', actor, old, current);\n        }\n    }\n});\n\nHooks.on('hm3.onTotalInjuryLevelsChanged', async (actor, oldValue, newValue) => {\n    const inanimate = actor.hasCondition(Condition.INANIMATE);\n    if (inanimate) {\n        actor.system.injuryLevels.max = actor.system.endurance;\n    }\n\n    actor.system.injuryLevels.value = newValue;\n    if (actor.testUserPermission(game.user, 'OWNER')) {\n        await actor.update({'system.injuryLevels': actor.system.injuryLevels});\n        if (inanimate && newValue >= actor.system.injuryLevels.max) {\n            await actor.token.addCondition(Condition.DYING);\n        }\n    }\n});\n\nHooks.on('updateCombat', async (combat, updateData) => {\n    return updateOutnumbered({hook: 'updateCombat'});\n});\n\nHooks.on('updateCombatant', async (combatant, info, updateData, userId) => {\n    return updateOutnumbered({hook: 'updateCombatant'});\n});\n\nHooks.on('createActiveEffect', async (activeEffect, info, userId) => {\n    return updateOutnumbered({aeName: activeEffect.name, hook: 'createActiveEffect'});\n});\n\n// Hooks.on('updateActiveEffect', async (activeEffect, info, userId) => {\n//     return updateOutnumbered({aeName: activeEffect.name, hook: 'updateActiveEffect'});\n// });\n\nHooks.on('deleteActiveEffect', async (activeEffect, info, userId) => {\n    return updateOutnumbered({aeName: activeEffect.name, hook: 'deleteActiveEffect'});\n});\n\nHooks.on('createItem', async (item, info, userId) => {\n    if (item.type === ItemType.EFFECT) {\n        if (item.system.selfDestroy && item.parent instanceof Actor) {\n            item.effects.forEach((effect) => {\n                if (!effect.getFlag('effectmacro', 'onDisable.script'))\n                    effect.setFlag(\n                        'effectmacro',\n                        'onDisable.script',\n                        utility.beautify(`\n                  const item = fromUuidSync('${item.uuid}');\n                  if (item) {\n                    if (item.effects.contents.filter((e)=>e.disabled).length === item.effects.size) {\n                      item.delete();\n                    }\n                  }`)\n                    );\n            });\n        }\n    }\n});\n\nHooks.on('preUpdateMacro', async (macro, updateData, options, userId) => {\n    if (updateData.command) updateData.command = utility.beautify(updateData.command);\n});\n\nHooks.on('hm3.onMount', async (actor, steed) => {\n    if (!actor.testUserPermission(game.user, 'OWNER') || !steed.testUserPermission(game.user, 'OWNER')) return;\n\n    await actor.update({'system.mounted': true});\n    actor.prepareData();\n    const riding = actor.items.find((item) => item.type === ItemType.SKILL && item.name.includes('Riding'));\n    riding.sheet.render();\n\n    const rider = steed.items.find((item) => item.type === ItemType.MISCGEAR && item.name.includes('Rider'));\n    await rider?.delete();\n    await Item.create(\n        {\n            img: actor.img,\n            name: 'Rider/' + actor.name,\n            system: {actorUuid: actor.uuid, type: 'Rider', weight: actor.system.weight + actor.system.totalWeight},\n            type: ItemType.MISCGEAR\n        },\n        {parent: steed}\n    );\n});\n\nHooks.on('hm3.onUnmount', async (actor, steed) => {\n    if (!actor.testUserPermission(game.user, 'OWNER') || !steed.testUserPermission(game.user, 'OWNER')) return;\n\n    await actor.update({'system.mounted': false});\n    actor.prepareData();\n    const riding = actor.items.find((item) => item.type === ItemType.SKILL && item.name.includes('Riding'));\n    riding.sheet.render();\n\n    const rider = steed.items.find((item) => item.type === ItemType.MISCGEAR && item.name.includes('Rider'));\n    await rider?.delete();\n});\n\nHooks.on('dropCanvasData', async (canvas, data) => {\n    if (data.type === 'Item') {\n        const targetToken = canvas.tokens.placeables.find((t) => t.bounds.contains(data.x, data.y));\n        if (!targetToken) return;\n\n        const actor = targetToken.actor;\n        if (!actor) return;\n\n        const item = await Item.fromDropData(data);\n        if (!item) return;\n\n        await actor.createEmbeddedDocuments('Item', [item.toObject()]);\n\n        ui.notifications.info(`\"${item.name}\" was added to ${targetToken.name}.`);\n    }\n});\n\n/**\n * Once the entire VTT framework is initialized, check to see if\n * we should perform a data migration.\n */\nHooks.once('ready', async function () {\n    game.hm3['socket'] = socketlib.registerSystem('hm3');\n\n    if (game.settings.get('hm3', 'debugMode')) {\n        CONFIG.debug.hm3 = true;\n        // CONFIG.debug.hooks = true;\n        game.hm3.runner = runner;\n        game.hm3.socket.register('defButtonsFromChatMsg', game.hm3.BaseTest.DefButtonsFromChatMsgProxy);\n        game.hm3.socket.register('defAction', game.hm3.BaseTest.DefActionProxy);\n        console.clear();\n    } else {\n        CONFIG.debug.hm3 = false;\n        CONFIG.debug.hooks = false;\n        console.log = () => {};\n        console.debug = () => {};\n        console.trace = () => {};\n        game.hm3.runner = () => ui.notifications.info('Please turn on Debug Mode.');\n        console.clear();\n    }\n\n    // Determine whether a system migration is required\n    const currentMigrationVersion = game.settings.get('hm3', 'systemMigrationVersion');\n    const NEEDS_MIGRATION_VERSION = '12.0.99'; // Anything older than this must be migrated\n\n    if (currentMigrationVersion) {\n        let needMigration = foundry.utils.isNewerVersion(NEEDS_MIGRATION_VERSION, currentMigrationVersion);\n        if (needMigration && game.user.isGM) {\n            await migrations.migrateWorld();\n        }\n    } else {\n        game.settings.set('hm3', 'systemMigrationVersion', game.system.version);\n    }\n\n    Hooks.on('hotbarDrop', (bar, data, slot) => macros.createHM3Macro(data, slot));\n\n    // if not exists, create and set\n    if (\n        !game.settings.get('hm3', 'actorMacrosFolderId') ||\n        (game.actors.contents.length > 0 && !game.actors.contents[0].macrofolder)\n    ) {\n        const folder = await Folder.create({\n            name: 'Actor Macros (DO NOT DELETE)',\n            type: 'Macro',\n            color: 0x999999\n        });\n        await game.settings.set('hm3', 'actorMacrosFolderId', folder.id);\n    }\n\n    await registerHooks();\n\n    if (await Weather.Initialize()) {\n        Weather.Render();\n        Hooks.on('updateWorldTime', () => {\n            Weather.Render();\n        });\n    }\n\n    const addEvent = (element, eventName, callback) => {\n        if (element.addEventListener) {\n            element.addEventListener(eventName, callback, false);\n        } else if (element.attachEvent) {\n            element.attachEvent('on' + eventName, callback);\n        } else {\n            element['on' + eventName] = callback;\n        }\n    };\n\n    addEvent(document, 'keypress', function (e) {\n        e = e || window.event;\n        // use e.keyCode\n        // var doubleClickEvent = new MouseEvent('dblclick', {\n        //     'view': window,\n        //     'bubbles': true\n        //     // 'cancelable': true\n        // });\n        if (e.key === 'Enter' && !e.shiftKey) {\n            var doubleClickEvent = document.createEvent('MouseEvents');\n            doubleClickEvent.initEvent('dblclick', true, true);\n            e.currentTarget.dispatchEvent(doubleClickEvent);\n        }\n    });\n\n    HM3.ready = true;\n\n    if (game.settings.get('hm3', 'showWelcomeDialog')) {\n        welcomeDialog().then((showAgain) => {\n            game.settings.set('hm3', 'showWelcomeDialog', showAgain);\n        });\n    }\n\n    if (!game.user.can('MACRO_SCRIPT')) {\n        ui.notifications.warn(\n            'You do not have permission to run JavaScript macros, so all skill and esoterics macros have been disabled.'\n        );\n    }\n});\n\nHooks.on('renderPause', (_app, html) => html.find('img').attr('src', 'systems/hm3/images/png/HMLogo.png'));\n\n// Since HM3 does not have the concept of rolling for initiative,\n// this hook simply prepopulates the initiative value. This ensures\n// that no die roll is needed.\nHooks.on('preCreateCombatant', (combat, combatant, options, id) => {\n    if (!combatant.initiative) {\n        let token = canvas.tokens.get(combatant.tokenId);\n        combatant.initiative = token.actor.system.initiative;\n    }\n});\n\n// If the combatant is not already in combat, roll initiative\nHooks.on('createCombatant', (combatant, options, id) => {\n    if (combatant.testUserPermission(game.user, 'OWNER')) combatant.rollInitiative();\n});\n\nHooks.once('dragRuler.ready', (SpeedProvider) => {\n    class HarnMaster3SpeedProvider extends SpeedProvider {\n        get colors() {\n            return [\n                {\n                    id: 'creep',\n                    default: 0x000098, // dark blue\n                    name: 'hm3.speed-provider.creep'\n                },\n                {\n                    id: 'walk',\n                    default: 0x1e88e5, // blue\n                    name: 'hm3.speed-provider.walk'\n                },\n                {\n                    id: 'jog',\n                    default: 0x6aa84f, // green\n                    name: 'hm3.speed-provider.jog'\n                },\n                {\n                    id: 'run',\n                    default: 0xffc107, // yellow\n                    name: 'hm3.speed-provider.run'\n                },\n                {\n                    id: 'sprint',\n                    default: 0xf24d11, // orange\n                    // default: 0xd81b60, // red\n                    name: 'hm3.speed-provider.sprint'\n                }\n            ];\n        }\n\n        get defaultUnreachableColor() {\n            return 0x000000;\n        }\n\n        /**\n         * @param {TokenHM3} token - The token to check movement\n         * */\n        getRanges(token) {\n            const move = Math.max(token.actor.system.move.effective, 1);\n            const creep = {range: 5 * Math.max(Math.round(move / 3 + Number.EPSILON), 1), color: 'creep'};\n            const walk = {range: 5 * Math.max(Math.round(move / 2 + Number.EPSILON), 2), color: 'walk'};\n            const jog = {range: 5 * Math.max(Math.round(move + Number.EPSILON), 4), color: 'jog'};\n            const run = {range: 5 * Math.max(Math.round(2 * move + Number.EPSILON), 8), color: 'run'};\n            const sprint = {range: 5 * Math.max(Math.round(3 * move + Number.EPSILON), 12), color: 'sprint'};\n\n            // Conditions\n            const grappled = token.hasCondition(game.hm3.Condition.GRAPPLED);\n            const inanimate = token.hasCondition(game.hm3.Condition.INANIMATE);\n            const prone = token.hasCondition(game.hm3.Condition.PRONE);\n            const shocked = token.hasCondition(game.hm3.Condition.SHOCKED);\n            const stunned = token.hasCondition(game.hm3.Condition.STUNNED);\n            const unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\n\n            if (inanimate) {\n                return [creep, walk, jog, run, sprint];\n            }\n\n            // No movement at all\n            if (grappled || stunned || unconscious) {\n                return [{range: -1, color: 'creep'}];\n            }\n\n            if (prone || shocked || token.actor.system.shockIndex.value < 20) {\n                return [creep, walk];\n            }\n\n            if (token.hasGreviousLegInjuries()) {\n                return [creep, walk, jog, run];\n            }\n\n            return [creep, walk, jog, run, sprint];\n        }\n    }\n\n    dragRuler.registerSystem('hm3', HarnMaster3SpeedProvider);\n});\n\nasync function welcomeDialog() {\n    const dlgTemplate = 'systems/hm3/templates/dialog/welcome.html';\n    const html = await renderTemplate(dlgTemplate, {});\n\n    // Create the dialog window\n    return Dialog.prompt({\n        title: 'Welcome!',\n        content: html,\n        label: 'OK',\n        callback: (html) => {\n            const form = html.querySelector('#welcome');\n            const fd = new FormDataExtended(form);\n            const data = fd.object;\n            return data.showOnStartup;\n        },\n        options: {jQuery: false}\n    });\n}\n\n/*-------------------------------------------------------*/\n/*            Handlebars FUNCTIONS                       */\n/*-------------------------------------------------------*/\nHandlebars.registerHelper('multiply', function (op1, op2) {\n    return op1 * op2;\n});\n\nHandlebars.registerHelper('endswith', function (op1, op2) {\n    return op1.endsWith(op2);\n});\n\nHooks.once('ready', () => {\n    Hooks.callAllUsers = (hook, ...args) => {\n        game.hm3.socket.executeForEveryone('callAllUsers', hook, ...args);\n    };\n\n    const socket = game.hm3.socket;\n    socket.register('isFirstTA', isFirstTA);\n    socket.register('setTAFlag', setTAFlag);\n    socket.register('unsetTAFlag', unsetTAFlag);\n    socket.register('weaponBroke', weaponBroke);\n    socket.register('improveFlag', improveFlag);\n    socket.register('fatigueReceived', fatigueReceived);\n    socket.register('GmSays', gmSays);\n    socket.register('gmConsole', gmConsole);\n    socket.register('callAllUsers', callAllUsers);\n    socket.register('cheating', cheating);\n});\n\nfunction isFirstTA() {\n    return !game.combats?.active?.getFlag('hm3', 'TA');\n}\n\n/**\n * Set the TA flag for the active combat proxy for socketlib\n * @returns {Promise<void>}\n */\nasync function setTAFlag() {\n    return game.combats?.active?.setFlag('hm3', 'TA', true);\n}\n\n/**\n * Unset the TA flag for the active combat proxy for socketlib\n * @returns {Promise<void>}\n */\nasync function unsetTAFlag() {\n    return game.combats?.active?.unsetFlag('hm3', 'TA');\n}\n\n/**\n * Mark a weapon as broken proxy for socketlib\n * @param {string} itemUuid - The ID of the weapon\n * @param {number} diff - The difference in weapon quality\n * @returns {Promise<void>}\n */\nasync function weaponBroke(itemUuid, diff) {\n    const item = fromUuidSync(itemUuid);\n    if (item) {\n        await item.update({\n            'system.isEquipped': false,\n            'system.notes': ('Weapon is damaged! ' + item.system.notes).trim(),\n            'system.wqModifier': (item.system.wqModifier || 0) - diff\n        });\n        console.info(`HM3 | Weapon '${item.name}' from actor '${item.actor.name}' broke by -${diff}.`);\n    }\n}\n\nasync function improveFlag(itemUuid, success) {\n    const item = fromUuidSync(itemUuid);\n    if (item) {\n        const old = item.system.improveFlag;\n        await item.update({'system.improveFlag': item.system.improveFlag + (success ? 1 : 2)});\n        console.info(\n            `HM3 | Skill '${item.name}' from actor '${item.actor.name}' improvement flag increased by ${\n                success ? 1 : 2\n            } from ${old} to ${item.system.improveFlag}.`\n        );\n    }\n}\n\nasync function fatigueReceived(actorUuid, fatigue) {\n    const actor = fromUuidSync(actorUuid);\n    if (actor) {\n        await actor.update({\n            'system.fatigue': (actor.system.fatigue || 0) + fatigue\n        });\n        console.info(`HM3 | Actor '${actor.name}' received ${fatigue} Fatigue Level(s).`);\n    }\n}\n\n/**\n * Send a message to the GM as GM proxy for socketlib\n * @param {string} content - The message content\n * @param {string} source - The source of the message\n * @param {boolean} gmonly - If true, send the message only to the GM\n * @returns {Promise<ChatMessage>} - The created chat message\n */\nasync function gmSays({gmonly, sendingUserId, source, text, tokenId}) {\n    return game.hm3.GmSays({\n        gmonly,\n        sendingUser: game.users.get(sendingUserId),\n        source,\n        text,\n        token: canvas.tokens.get(tokenId)\n    });\n}\n\n/**\n * Log a message to the console as GM proxy for socketlib\n * @param {string} user - The name of the user\n * @param {string} level - The log level (trace, debug, info, warn, error)\n * @param {string} msg - The message to log\n * @param {Error} error - The error object (if any)\n * @returns {void}\n */\nfunction gmConsole(user, level, msg, error) {\n    const message = `\\n\\nUSER ERROR\\nMsg....: ${msg}\\nUser...: ${user}\\nError..: ${error.message}\\n\\n%O`;\n\n    switch (level) {\n        case 'trace':\n            if (game.settings.get('hm3', 'debugMode')) {\n                console.trace(message, error);\n            }\n            break;\n        case 'debug':\n            if (game.settings.get('hm3', 'debugMode')) {\n                console.debug(message, error);\n            }\n            break;\n        case 'info':\n        case 'log':\n            console.info(message, error);\n            ui.notifications.info(`${user} logged a GM message: ${msg}`, {permanent: true});\n            break;\n        case 'warn':\n            console.warn(message, error);\n            ui.notifications.warn(`${user} logged a GM message: ${msg}`, {permanent: true});\n            break;\n        case 'error':\n            console.error(message, error);\n            ui.notifications.error(`${user} logged a GM message: ${msg}`, {permanent: true});\n            break;\n        default:\n            console.warn(`Unknown log level: ${level}.`, error);\n            break;\n    }\n}\n\nfunction callAllUsers(hook, ...args) {\n    Hooks.callAll(hook, ...args);\n}\n\nasync function cheating(check, name, type, formula, minimum, maximum, target) {\n    let dlgTemplate = 'systems/hm3/templates/dialog/cheat-dialog.hbs';\n    let dialogData = {check, name, type, formula, minimum, maximum, target};\n\n    const html = await renderTemplate(dlgTemplate, dialogData);\n\n    if (check !== 'roll')\n        return new Promise((resolve) =>\n            new Dialog({\n                content: html.trim(),\n                title: `${check} Cheat Roll`,\n                buttons:\n                    check === 'd100'\n                        ? {\n                              cs: {\n                                  label: 'CS',\n                                  callback: async (html) => {\n                                      resolve({targetSuccess: true, targetCritical: true});\n                                  }\n                              },\n                              ss: {\n                                  label: 'SS',\n                                  callback: async (html) => {\n                                      resolve({targetSuccess: true, targetCritical: false, targetSubstantial: true});\n                                  }\n                              },\n                              ms: {\n                                  label: 'MS',\n                                  callback: async (html) => {\n                                      resolve({targetSuccess: true, targetCritical: false, targetSubstantial: false});\n                                  }\n                              },\n                              mf: {\n                                  label: 'MF',\n                                  callback: async (html) => {\n                                      resolve({targetSuccess: false, targetCritical: false, targetSubstantial: false});\n                                  }\n                              },\n                              sf: {\n                                  label: 'SF',\n                                  callback: async (html) => {\n                                      resolve({targetSuccess: false, targetCritical: false, targetSubstantial: true});\n                                  }\n                              },\n                              cf: {\n                                  label: 'CF',\n                                  callback: async (html) => {\n                                      resolve({targetSuccess: false, targetCritical: true});\n                                  }\n                              },\n                              success: {\n                                  label: 'Success',\n                                  callback: async (html) => {\n                                      resolve({targetSuccess: true});\n                                  }\n                              },\n                              failure: {\n                                  label: 'Failure',\n                                  callback: async (html) => {\n                                      resolve({targetSuccess: false});\n                                  }\n                              }\n                          }\n                        : {\n                              success: {\n                                  label: 'Success',\n                                  callback: async (html) => {\n                                      resolve({targetSuccess: true});\n                                  }\n                              },\n                              failure: {\n                                  label: 'Failure',\n                                  callback: async (html) => {\n                                      resolve({targetSuccess: false});\n                                  }\n                              }\n                          }\n            }).render(true)\n        );\n    else\n        return new Promise((resolve) =>\n            new Dialog(\n                {\n                    content: html.trim(),\n                    title: `${check} Cheat Roll`,\n                    buttons: {\n                        minimum: {\n                            label: `Minimum (${minimum})`,\n                            callback: async (html) => {\n                                resolve({targetValue: minimum});\n                            }\n                        },\n                        average: {\n                            label: `Average (${Math.round((minimum + maximum) / 2)})`,\n                            callback: async (html) => {\n                                resolve({targetValue: Math.round((minimum + maximum) / 2)});\n                            }\n                        },\n                        maximum: {\n                            label: `Maximum (${maximum})`,\n                            callback: async (html) => {\n                                resolve({targetValue: maximum});\n                            }\n                        },\n                        random: {\n                            label: `Random`,\n                            callback: async (html) => {\n                                resolve({targetValue: null});\n                            }\n                        }\n                    }\n                },\n                {width: 500}\n            ).render(true)\n        );\n}\n\nlet outMutex = new Mutex();\n/**\n * Update outnumbered status for combatants\n * @param {string} aeName - The name of the active effect\n * @returns {Promise<void>}\n */\nasync function updateOutnumbered({aeName = 'true', hook = 'nohook'} = {}) {\n    if (game.combat?.started && game.user.isGM) {\n        if (aeName === 'true' || combat.outnumberedConditions().includes(aeName)) {\n            return outMutex.runExclusive(async () => {\n                console.info(`HM3 | Run updateOutnumbered (aeName = ${aeName}, hook = ${hook})`);\n                const {changed, tokens} = await combat.updateOutnumbered();\n                if (changed) Hooks.call('hm3.onOutnumberedChanged', tokens, aeName, hook);\n                Hooks.call('hm3.onOutnumbered', aeName, hook);\n                return true;\n            });\n        }\n        Hooks.call('hm3.onOutnumbered', aeName, hook);\n    }\n\n    return true;\n}\n","export const registerSystemSettings = function () {\n    // Track the system version which a migration was last applied\n    game.settings.register('hm3', 'systemMigrationVersion', {\n        name: 'System Migration Version',\n        scope: 'world',\n        config: false,\n        type: String,\n        default: 0\n    });\n\n    game.settings.register('hm3', 'actorMacrosFolderId', {\n        name: 'ID of Actor Folder',\n        scope: 'world',\n        config: false,\n        type: String,\n        default: null\n    });\n\n    game.settings.register('hm3', 'weather', {\n        name: 'Current Weather',\n        scope: 'world',\n        config: false,\n        type: Object,\n        default: {start: 0, weather: [{idx: undefined, force: undefined, precipitation: undefined}]}\n    });\n\n    game.settings.register('hm3', 'showWelcomeDialog', {\n        name: 'Show Welcome Dialog On Start',\n        hint: 'Display the welcome dialog box when the user logs in.',\n        scope: 'client',\n        config: true,\n        type: Boolean,\n        default: true\n    });\n\n    game.settings.register('hm3', 'customSunSign', {\n        name: 'Custom SunSigns',\n        hint: 'Enable custom SunSigns (no dropdown)',\n        scope: 'world',\n        config: true,\n        default: false,\n        type: Boolean\n    });\n\n    game.settings.register('hm3', 'weaponDamage', {\n        name: 'Weapon Damage',\n        hint: 'Enable optional combat rule that allows weapons to be damaged or destroyed on successful block (Combat 12)',\n        scope: 'world',\n        config: true,\n        default: false,\n        type: Boolean\n    });\n\n    game.settings.register('hm3', 'bloodloss', {\n        name: 'Bloodloss',\n        hint: 'Enable optional combat rule that tracks bloodloss as an injury (Combat 14) (partially implemented)',\n        scope: 'world',\n        config: true,\n        default: false,\n        type: Boolean\n    });\n\n    game.settings.register('hm3', 'amputation', {\n        name: 'Amputation',\n        hint: 'Enable optional combat rule that supports limb amputations (Combat 14)',\n        scope: 'world',\n        config: true,\n        default: false,\n        type: Boolean\n    });\n\n    game.settings.register('hm3', 'limbInjuries', {\n        name: 'Limb Injuries',\n        hint: 'Enable optional combat rule to handle stumble/fumble on limb injury (Combat 14)',\n        scope: 'world',\n        config: true,\n        default: false,\n        type: Boolean\n    });\n\n    game.settings.register('hm3', 'addInjuryToActorSheet', {\n        name: 'Add Injuries',\n        hint: 'Automatically add injuries to actor sheet',\n        scope: 'world',\n        config: true,\n        default: 'enable',\n        type: String,\n        choices: {\n            'enable': 'Add Injuries Automatically',\n            'disable': \"Don't Add Injuries Automatically\",\n            'ask': 'Prompt User On Each Injury'\n        }\n    });\n\n    game.settings.register('hm3', 'missileTracking', {\n        name: 'Track Missile Quantity',\n        hint: 'Enable tracking of missile quantity, reduce missile quantity by 1 when used, and disallow missile attack when quantity is zero.',\n        scope: 'world',\n        config: true,\n        default: false,\n        type: Boolean\n    });\n\n    game.settings.register('hm3', 'combatAudio', {\n        name: 'Combat Sounds',\n        hint: 'Enable combat flavor sounds',\n        scope: 'world',\n        config: true,\n        default: true,\n        type: Boolean\n    });\n\n    game.settings.register('hm3', 'distanceUnits', {\n        name: 'Distance Units',\n        hint: \"What units should be used for a missile weapon's short/medium/long/extreme range attributes?\",\n        scope: 'client',\n        config: true,\n        default: 'scene',\n        type: String,\n        choices: {\n            'scene': 'Scene Units (e.g. feet)',\n            'grid': 'Grid Units (e.g. hexes or squares)'\n        }\n    });\n\n    game.settings.register('hm3', 'dormantPsionicTalents', {\n        name: 'NEW Dormant Psionic Talents',\n        hint: 'Activate to make dormant psionic talents (ML20 or less) invisible to the players. GM still sees the dormant talents. (Psionics 3)',\n        scope: 'world',\n        config: true,\n        default: false,\n        type: Boolean\n    });\n\n    game.settings.register('hm3', 'strictGmMode', {\n        name: 'NEW Strict GM Mode',\n        hint: 'If selected, players will no longer be able to change various data, such as weight, value and other aspects of the gear items. The GM can still change everything. In addition, the GM can hide the value of individual items from the players.',\n        scope: 'world',\n        config: true,\n        default: false,\n        type: Boolean\n    });\n\n    game.settings.register('hm3', 'blindGmMode', {\n        name: 'NEW Blind GM Mode',\n        hint: 'If selected, some skill rolls (such as Awareness, Hearing, Weatherlore, etc. (in cases where success or failure may not be obvious)) are handled as Blind GM Roll regardless of the Roll Mode setting. (Skills 5)',\n        scope: 'world',\n        config: true,\n        default: false,\n        type: Boolean\n    });\n\n    game.settings.register('hm3', 'activeEffectPermissions', {\n        name: 'NEW Active Effect Permissions',\n        hint: 'If selected, the active effect permissions are taken into account for the visibility of the effects for the players.',\n        scope: 'world',\n        config: true,\n        default: false,\n        type: Boolean\n    });\n\n    game.settings.register('hm3', 'showWeather', {\n        name: 'NEW Weather',\n        hint: 'If selected, weather is randomly generated according to HM rules for each watch.',\n        scope: 'world',\n        config: true,\n        default: false,\n        type: Boolean\n    });\n\n    game.settings.register('hm3', 'autoMarkUsedSkills', {\n        name: 'NEW Auto Mark Used Skills',\n        hint: 'If selected, the skills used are automatically marked for an SDR.',\n        scope: 'world',\n        config: true,\n        default: false,\n        type: Boolean\n    });\n\n    game.settings.register('hm3', 'truncateHighValueSkills', {\n        name: 'NEW Truncate High Value Skills',\n        hint: 'If selected, the skills are truncated according to HMA_Rulebook_v1.4.pdf.',\n        scope: 'world',\n        config: true,\n        default: false,\n        type: Boolean\n    });\n\n    game.settings.register('hm3', 'debugMode', {\n        name: 'NEW Debug Mode',\n        hint: 'If selected, Debug Mode is active.',\n        scope: 'world',\n        config: true,\n        default: false,\n        type: Boolean\n    });\n\n    game.settings.register('hm3', 'cheatMode', {\n        name: 'NEW Cheat Mode',\n        hint: 'If selected, Cheat Mode is active.',\n        scope: 'world',\n        config: true,\n        default: false,\n        type: Boolean\n    });\n};\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","HM3","label","lb","singular","plural","oz","dr","ct","skill","spell","weapongear","missilegear","armorgear","miscgear","containergear","injury","armorlocation","trait","psionic","incantation","impactType","probWeight","isStumble","isFumble","isAmputate","effectiveImpact","ei1","ei5","ei9","ei13","ei17","defaultItemIcons","Map","physicalSkillIcons","concat","commSkillIcons","combatSkillIcons","weaponSkillIcons","craftSkillIcons","miscGearIcons","armorGearIcons","ritualIcons","magicIcons","psionicTalentIcons","mentalConflictCombatTable","atkFatigue","defFatigue","meleeCombatTable","atkFumble","defFumble","atkStumble","defStumble","dta","block","miss","atkDice","defDice","defHold","grappleCombatTable","atkHold","missileCombatTable","wild","treatmentTable","Blunt","desc","treatment","eml","nt","cf","mf","ms","cs","Edged","Fire","Frost","Piercing","actorLabels","character","creature","container","itemLabels","invocation","blindRolls","esotericCombatItems","attack","defense","arcanePowers","major","minor","validFor","lvl","legacy","description","freeze","CHARGE","DISENGAGE","ENGAGE","ESOTERIC_ATTACK","FREE_MOVE","GRAPPLE_ATTACK","GROPE","HALF_MOVE","MELEE_ATTACK","MISSILE_ATTACK","PASS","REST","RISE","ActorType","CHARACTER","CREATURE","CONTAINER","ArcanePower","ANVIL_PYTAMA","FOCUS","FOUNT_POWER","JORUM","POWER_DARAS","RESURGE","STORE","SWORDBREAKER","TALIN_BANE","TALIN_EYE","TEMPERING_PYTAMA","THARASIN_WARD","THERIS_CHARM","THERIS_CHARM_GREATER","VESSEL_ILADAN","WARD_AKANA","Aspect","BLUNT","EDGED","FIRE","FROST","PIERCING","CompanionType","ANIMAL","CONNECTION","FOE","FOLLOWER","FRIEND","PARTY","STEED","Condition","BERSERK","BLINDED","BROKEN","CAUTIOUS","CLOSE_MODE","DEAFENED","DESPERATE","DISTRACTED","DYING","EMPOWERED","GRAPPLED","INANIMATE","INCAPACITATED","NO_FUMBLE","NO_OUTNUMBERED","NO_STUMBLE","OUTNUMBERED","PRONE","SECONDARY_HAND","SHOCKED","STUNNED","UNCONSCIOUS","WEAKENED","Hook","ON_ABILITY_ROLL_D100","ON_ABILITY_ROLL_D6","ON_ACTOR_PREPARE_BASE_DATA","ON_ACTOR_PREPARE_DERIVED_DATA","ON_BLOCK_RESUME","ON_DAMAGE_ROLL","ON_DODGE_RESUME","ON_DODGE_ROLL","ON_FUMBLE_ROLL","ON_HEALING_ROLL","ON_IGNORE_RESUME","ON_INJURY_ROLL","ON_INVOCATION_ROLL","ON_item_PREPARE_DATA","ON_MELEE_ATTACK","ON_MELEE_COUNTERSTRIKE_RESUME","ON_MISSILE_ATTACK_ROLL","ON_MISSILE_ATTACK","ON_MISSILE_DAMAGE_ROLL","ON_PSIONICS_ROLL","ON_SHOCK_ROLL","ON_SKILL_ROLL","ON_SPELL_ROLL","ON_STUMBLE_ROLL","ON_WEAPON_ATTACK_ROLL","ON_WEAPON_DEFEND_ROLL","PRE_ABILITY_ROLL_D100","PRE_ABILITY_ROLL_D6","PRE_BLOCK_RESUME","PRE_DAMAGE_ROLL","PRE_DODGE_RESUME","PRE_DODGE_ROLL","PRE_FUMBLE_ROLL","PRE_HEALING_ROLL","PRE_IGNORE_RESUME","PRE_INJURY_ROLL","PRE_INVOCATION_ROLL","PRE_MELEE_ATTACK","PRE_MELEE_COUNTERSTRIKE_RESUME","PRE_MISSILE_ATTACK_ROLL","PRE_MISSILE_ATTACK","PRE_MISSILE_DAMAGE_ROLL","PRE_PSIONICS_ROLL","PRE_SHOCK_ROLL","PRE_SKILL_ROLL","PRE_SPELL_ROLL","PRE_STUMBLE_ROLL","PRE_WEAPON_ATTACK_ROLL","PRE_WEAPON_DEFEND_ROLL","InjuryType","BLOODLOSS","DISEASE","HEALING","INFECTION","POISON","SHOCK","TOXIN","ItemType","ARMORGEAR","ARMORLOCATION","COMPANION","CONTAINERGEAR","EFFECT","INJURY","INVOCATION","MISCGEAR","MISSILEGEAR","PSIONIC","SKILL","SPELL","TRAIT","WEAPONGEAR","Location","ABDOMEN","CALF","CUSTOM","ELBOW","FACE","FOOT","FOREARM","GROIN","HAND","HIP","KNEE","NECK","SHOULDER","SKULL","TAIL","TENTACLE","THIGH","THORAX","UPPER_ARM","WING","MiscItemType","COIN","GEM","HERB","JEWELRY","MISC","POTION","RIDER","WRITTEN","Range","EXTREME","LONG","MEDIUM","SHORT","SkillType","COMBAT","COMMUNICATION","CRAFT","MAGIC","PHYSICAL","RITUAL","calcSkillBase","item","sb","system","skillBase","delta","isFormulaValid","formula","actorData","actor","numAbilities","sumBaseAbilities","sumModifiedAbilities","ssBonus","Number","MIN_SAFE_INTEGER","modifier","sbParts","toLowerCase","split","length","param","trim","startsWith","slice","abilities","strength","base","modified","stamina","dexterity","agility","intelligence","aura","will","eyesight","hearing","smell","voice","comeliness","morality","endurance","speed","match","ssParts","actorSS","sunsign","map","Function","String","includes","Math","max","round","EPSILON","createUniqueName","prefix","itemTypes","incr","forEach","it","name","newIncr","getImagePath","lcName","re","keys","exec","stringReplacer","template","values","func","k","romanize","num","isNaN","NaN","digits","roman","i","pop","Array","join","aeDuration","effect","d","duration","isNumeric","seconds","isIndefinite","start","startTime","game","time","worldTime","elapsed","remaining","normRemaining","toNormTime","startLabel","status","type","rounds","turns","cbt","combat","c","turn","nTurns","elapsedRounds","startRound","elapsedTurns","startTurn","remainingRounds","remainingTurns","floor","filterJoin","aeChanges","changes","ch","modes","CONST","ACTIVE_EFFECT_MODES","val","parts","parseAEValue","parseFloat","itemName","activeEffectKeyV2","mode","ADD","abs","MULTIPLY","OVERRIDE","UPGRADE","DOWNGRADE","replace","MAX_SAFE_INTEGER","remSeconds","toString","padStart","executeMacroScript","macro","token","rollResult","rollData","speaker","ChatMessage","getSpeaker","document","actors","isToken","context","canvas","ready","tokens","user","scene","asyncFunction","command","itemParam","rollDataParam","result","err","ui","notifications","error","console","string","lastColon","lastIndexOf","getActorFromMacro","contents","find","a","getFlag","id","truncatedOML","settings","beautify","text","js_beautify","async","improveFlag","success","types","items","Item","parent","Actor","skillImprovement","hm3","socket","executeAsGM","uuid","weapon","diff","fatigueReceived","fatigue","getRelevantActors","filter","player","active","prototypeToken","actorLink","isOwner","ownedTokens","HM100Check","min","DiceHM3","d100StdRoll","dialogOptions","effSkillBase","fluff","isAbility","isCraftOrLore","isTreatment","alias","physicianSkills","subType","target","roll","fastforward","rollTest","diceNum","diceSides","d100ClimbingDialog","d100JumpingDialog","d100StdDialog","addlInfo","addlInfoCallback","preData","undefined","notesData","foundry","utils","mergeObject","isCF","isSuccess","isCritical","isCS","isMF","isMS","isSubstantial","rollObj","total","rollText","renderedNotes","notes","multiplier","title","isAppraisal","fluffResult","CS","CF","MS","MF","noTreatment","chatTemplateData","falling","modifiedTarget","origTarget","plusMinus","rollValue","showResult","tokenId","visibleActorId","html","renderTemplate","rollMode","this","getRollMode","blind","private","messageData","content","sound","CONFIG","sounds","dice","style","CHAT_MESSAGE_STYLES","OTHER","messageOptions","toMessage","dialogData","Dialog","prompt","options","width","callback","form","querySelector","formModifier","formDifficulty","difficulties","formGear","gears","progress","data","formJump","jumps","formStart","starts","formLabel","selectedIndex","height","jump","truncate","dlgTemplate","isMorale","multipliers","moraleModification","moraleModifications","isPhysician","p","effectiveMasteryLevel","push","physicianEml","physicianMod","masteryLevel","treatmentModifier","physician","fromUuidSync","formPhysicianEml","noSubstantial","formTarget","formTreatmentModifier","appraisal","checked","isHealingRoll","phyBonus","d6Roll","numdice","d6Dialog","isTAPossible","noTA","macros","atkTokenId","opponentToken","ota","sdrRoll","showChatMsg","rollObjectEvaluatedAsync","specMatch","RegExp","sdrIncr","applyRollMode","create","injuryRoll","impact","hitLocations","_getHitLocations","injuryDialog","_calcInjury","location","aspect","aim","atkToken","addToCharSheet","createInjury","opponentTokenId","isShockRoll","injuryLevel","hasCondition","notify","audio","AudioHelper","play","src","autoplay","loop","injuryDesc","sev","locationName","from","dateTime","SimpleCalendar","api","currentDateTimeDisplay","scenes","current","date","yearPostfix","healRate","severity","indexOf","recordInjury","askRecordInjury","formAim","formAspect","formDice","formImpact","rollResultAsync","formLocation","formAddToCharSheet","enableAmputate","enableBloodloss","enableLimbInjuries","armorType","armorValue","injuryLevelText","isBleeder","isFumbleRoll","isInjured","isKillShot","isRandom","isStumbleRoll","noArmor","armorLocationItem","_calcLocation","armorLocationData","layers","blunt","edged","piercing","fire","lcAim","totalWeight","numArmorLocations","isGM","warn","permanent","rollWeight","MersenneTwister","random","done","damageRoll","calcWeaponAspect","weaponAspect","defaultAspect","weaponAspects","aspects","damageDialog","totalImpact","chosenAspect","addlWeaponImpact","damageDice","addlImpact","weaponImpact","impactRoll","itemData","maxImpact","formAddlWeaponImpact","formDamageDice","formWeaponAspect","missileAttackRoll","missileAttackDialog","range","rangeModifier","addlModifier","amPlusMinus","debug","rmPlusMinus","rollFormula","aimLocations","defaultAim","shortDesc","rangeShort","mediumDesc","rangeMedium","longDesc","rangeLong","extremeDesc","rangeExtreme","ranges","rangeExceedsExtreme","defaultRange","formAddlModifier","formRange","missileDamageRoll","impactShort","impactMedium","impactLong","impactExtreme","missileDamageDialog","rangeImpact","formAddlImpact","testData","diceType","diceSpec","baseTargetNum","targetNum","targetCritical","targetSuccess","isCrit","levelDesc","DICE_ROLL_MODES","BLIND","PRIVATE","Mutex","_queue","_isLocked","acquire","Promise","resolve","_dispatch","runExclusive","release","nextEntry","shift","_buildRelease","tokenMutex","TokenHM3","Token","constructor","args","super","_onClickLeft","event","shiftKey","ctrlKey","_onClickLeft2","_onClickRight","_onClickRight2","addCondition","condition","getCondition","getConditions","getConditionsWithMacro","ae","flags","effectMacro","effectmacro","script","disableCondition","postpone","setTimeout","update","disabled","deleteCondition","deleteAllMoraleConditions","except","users","u","testUserPermission","getInjuries","hasInjury","hasSeriousInjuries","hasGreviousInjuries","hasSeriousLegInjuries","test","hasGreviousLegInjuries","hasEngagementZone","started","cautious","distracted","grappled","incapacitated","prone","shocked","unconscious","dying","getEngagedTokens","exclusively","all","opponents","disposition","TOKEN_DISPOSITIONS","FRIENDLY","HOSTILE","NEUTRAL","SECRET","engaged","tokenDoc","rangeToTarget","object","isEngaged","hasReactionZone","turnEnds","info","nextTurn","hasStatusEffect","pronoun","capital","gender","toggleVisibility","isHidden","hidden","updates","controlled","t","_id","updateEmbeddedDocuments","TokenDocumentHM3","TokenDocument","_onCreate","userId","setFlag","selectWeaponDialog","weapons","w","defaultWeapon","defaultModifier","modifierType","dlghtml","noDialog","parseInt","attackDialog","equippedWeapons","isEquipped","attackerName","unarmed","assocSkill","weaponData","isGridDistanceUnits","dist","dimensions","distance","short","medium","long","extreme","distanceGrid","defenderName","evaluate","isGrappleAtk","impactMod","rangeMod","r","isValidToken","defaultMeleeWeapon","sortMode","sort","b","aMax","attackMasteryLevel","defenseMasteryLevel","isWpnUnarmed","checkWeaponBreak","atkWeapon","defToken","defWeapon","attackWeaponBroke","defendWeaponBroke","atkWeaponBroke","defWeaponBroke","atkBreakCheckNotNeeded","defBreakCheckNotNeeded","atkWeaponDiff","defWeaponDiff","atkBreakTotal","defBreakTotal","atkSwordbreaker","getArcanePower","atkWardAkana","atkWarded","isArtifact","defSwordbreaker","defWardAkana","defWarded","atkWeaponQuality","weaponQuality","wqModifier","defWeaponQuality","atkBreakRoll","rollObject","check","defBreakRoll","atkSwordbreakerRoll","defSwordbreakerRoll","isOwnerAware","chatTemplate","chatData","actorId","tokenName","weaponBroke","weaponName","meleeCombatResult","atkAddlImpact","atkDie","atkResult","defAddlImpact","defDie","defResult","isGrappleDef","outcome","index","defenseTable","csDesc","diceFormula","missileCombatResult","numDice","die","getItem","lcItemName","sourceToken","targetToken","gridUnits","grid","distanceBtwnTwoTokens","isFirstTA","setTA","autoend","GmSays","source","combatant","CONDITION_ICON","GRAPPLED_ICON","RollHM3","Roll","_target","_check","_effTarget","_maximum","_minimum","_name","_targetCode","targetCode","_targetCritical","_targetSubstantial","targetSubstantial","_targetSuccess","_targetValue","_type","cheating","autocheating","minimum","maximum","code","minimize","maximize","allowStrings","allowInteractive","isDeterministic","_cheatRoll","_minMax","_formula","targetValue","cnt","_reset","_dice","terms","element","_evaluated","results","_resolver","_root","_total","createHM3Macro","slot","cmdSuffix","weaponUuid","img","actorName","buttons","enhAttackButton","applyMacro","attackButton","defendButton","damageButton","default","close","render","askWeaponMacro","askMissileMacro","handleItemMacro","m","Macro","assignHotbarMacro","getItemAndActor","myActor","ITEM_TYPE_LABEL","getActor","skillRoll","stdRollData","up","universalPenalty","pp","physicalPenalty","il","eph","totalInjuryLevels","ml","si","skillIndex","Hooks","runCustomMacro","callOnHooks","castSpellRoll","spellName","convocation","level","invokeRitualRoll","invocationName","diety","circle","usePsionicRoll","psionicName","fatigueCost","testAbilityD6Roll","ability","testAbilityD6RollAlt","actorInfo","model","toUpperCase","effective","testAbilityD100Roll","testAbilityD100RollAlt","weaponDamageRoll","allowedAspects","allowedRanges","missileName","weaponAttackRoll","atkMod","attackModifier","aml","weaponDefendRoll","outnumberedMod","outnumbered","dml","healingRoll","getPartySkills","injuryName","hr","treatmentRoll","delete","heal","dodgeRoll","dodge","killRoll","hooksOk","shockRoll","willShockRoll","stumbleRoll","stumbleTarget","fumbleRoll","fumbleTarget","throwDownRoll","defTokenId","goProne","ata","resultDesc","attacker","attackRoll","defender","defenseRoll","hasAttackHit","visibleAtkActorId","visibleDefActorId","fallingRoll","clear","grabbing","dodgeSkill","acrobaticsSkill","skills","surface","surfaces","formClear","formGrabbing","formHeight","formSkill","formSurface","ceil","dex","genericDamageRoll","moraleRoll","ini","x","encumbrance","oneTurn","oneRound","steedCommandRoll","mounted","riding","hasPlayerOwner","unhorsingRoll","autofail","unhorsing","changeFatigue","newValue","updateData","changeValue","changeMissileQuanity","missile","actorParam","quantity","setSkillDevelopmentFlag","skillName","weaponAttack","myToken","forceAllow","getTokenInCombat","getUserTargetedToken","weaponItem","assert","targetRange","msg","defWpns","meleeAMLMod","defProne","dialogResult","atkCloseMode","effAML","defBerserk","defBroken","defCautious","defDesperate","defGrappled","defIncapacitated","defShocked","defStunned","defUnconscious","addlModifierAbs","addlModifierSign","atkBerserk","atkProne","hasBlock","hasCounterstrike","hasDodge","hasEsoteric","hasIgnore","origAML","weaponType","oneButton","Boolean","missileItem","missileAMLMod","stunned","atkIsHighVelocityMissile","defHasShields","noHighVelocityBlockAvailable","rangeDist","rangeModifierAbs","rangeModSign","rangeText","esoteric","esotericItem","maxDistance","isMentalConflict","mentalConflictType","mentalConflictTypes","isMentalBolt","formMentalConflict","innerHTML","isEsotericCombat","esotericAttackDialog","atkWeaponName","atkEffAML","atkAim","atkAspect","atkImpactMod","csDialogResult","defCloseMode","atkRoll","csEffEML","csRoll","dice3d","aRoll","colorset","showForRoll","cRoll","size","csDie","combatResult","ex","atkImpactRoll","csImpactRoll","atkChatData","atkIsCritical","atkIsSuccess","atkRollResult","attackWeapon","defendWeapon","defRollResult","effDML","isAtkFumbleRoll","isAtkStumbleRoll","isDefFumbleRoll","isDefStumbleRoll","mlType","csChatData","effEML","origEML","atk","defRoll","dRoll","defIsCritical","defIsSuccess","isAtkHold","isDefHold","isGrappleAtkSuccessful","defAvailWeapons","shields","some","s","esotericWpns","mc","defaultEsotericWeapon","esotericCombatResult","isAtkWillShockRoll","isDefWillShockRoll","combatants","targets","hook","foundMacro","getName","sourceTokenId","targetTokenId","sourceElevation","elevation","targetElevation","measurePath","center","sqrt","getAllTokens","friendly","neutral","secret","hostile","getSpecificTokens","pathIntersectsCircle","line","centerToCenter","radius","ixs","PIXI","Circle","y","segmentIntersections","p1","p2","hasActiveEffect","actorOrToken","aeName","strict","getActiveEffect","ActorHM3","allApplicableEffects","createMutex","createActiveEffect","effectData","icon","selfDestroy","unique","change","priority","getObjectKeys","v","aeData","origin","combats","ActiveEffect","deleteMutex","deleteActiveEffect","effectId","e","conditionOptions","condData","numTurns","oneRoll","overlay","CONDITION","randomID","ON_CREATE_MACRO","ON_TURN_START_MACRO","TIME","INDEFINITE","onCreate","onTurnStart","ON_DELETE_MACRO","onDelete","ON_DISABLE_MACRO","statusEffects","MINUTE","onDisable","core","condMacro","onCreateScript","callbackPromise","reject","timer","once","clearTimeout","allSettled","hasDeleteMacro","ret","injuryData","injuryId","createInjuryHelper","timestamp","scDate","timestampPlusInterval","day","timestampToDate","minute","second","hour","dateToTimestamp","year","month","reduce","drawDebugPoint","updateOverlay","ActorProxy","_actor","link","macrolist","trigger","ownerId","proxies","subtype","bioImage","hasDescription","totalArmorWeight","isCarried","partialSum","weight","totalMiscGearWeight","totalMissileWeight","totalWeaponWeight","totalGearWeight","Skill","activateListeners","visited","cls","off","on","ev","currentTarget","dataset","altKey","applySpecificActiveEffect","property","overrides","setProperty","chgs","chgList","chg","duplicate","apply","roundChange","getProperty","getType","isInteger","LivingProxy","biography","damageDie","v2","EML","initiative","load","loadRating","move","_calcAbility","shockIndex","isInanimate","IP","normProb","UP","species","STR","STA","DEX","AGL","INT","AUR","WIL","EYE","HRG","SML","VOI","CML","MOR","END","MOV","capacity","ML","EP","encumbrancePenalty","FP","fatiguePenalty","injuryPenalty","IL","PP","hasSteed","actorUuid","steed","containers","isPhysical","ctx","v2Ability","HM6Check","CharacterProxy","culture","frame","heigth","occupation","socialClass","ContainerProxy","pct","CreatureProxy","static","proxy","_proxyMap","has","aproxy","set","macrofolder","folders","hasLinkedSteed","getSteeds","getParty","party","override","effects","DOCUMENT_OWNERSHIP_LEVELS","LIMITED","defaultName","pack","documentName","metadata","collection","getEmbeddedCollection","packs","collections","takenNames","Set","add","baseName","typeLabels","createDialog","hasTypeData","Error","BASE_DOCUMENT_TYPE","TYPES","documentTypes","_formatFolderSelectOptions","i18n","localize","format","defaultType","implementation","folder","hasFolders","fromEntries","localeCompare","lang","hasTypes","addEventListener","placeholder","fd","FormDataExtended","inplace","createOptions","renderSheet","rejectClose","_preCreate","createData","initDefaults","fetch","addItemsFromPack","defaultCharacterSkills","locations","_createSimpleHumanoidLocations","_createHorseLocations","_createDogLocations","_createDefaultHumanoidLocations","defaultCreatureSkills","updateSource","totalWeightHigh","totalWeightMid","totalWeightLow","itemNames","packNames","itNames","deepClone","itemAry","packName","getDocuments","then","chain","clone","toObject","createdTime","_setupLocation","locName","templateName","injuryLocations","high","mid","low","face","_createDefaultHumanoidFaceLocations","prepareBaseData","actorItems","config","calcTotalGearWeight","injuryLevels","meleeDMLMod","commSkillsMod","physicalSkillsMod","combatSkillsMod","craftSkillsMod","ritualSkillsMod","magicSkillsMod","psionicTalentsMod","itemAMLMod","itemDMLMod","itemEMLMod","itemCustomMod","oldTotalInjuryLevels","prepareData","postProcessItems","effectiveWeight","prepareDerivedData","_calcGearWeightTotals","calcUniversalPenalty","calcPhysicalPenalty","calcShockIndex","_setupEffectiveAbilities","applySkillTypeActiveEffect","_applySkillActiveEffects","_refreshSpellsAndInvocations","combatSkills","_setupWeaponData","_generateArmorLocationMap","_setMinMaxEML_AML_DML","containerCarried","endsWith","tempWeight","cid","weaponAMLMod","weaponDMLMod","skillEml","_applyWeaponActiveEffects","_setMinEML_AML_DML","_resetAllSpellsAndInvocations","_setConvocationSpells","_setRitualInvocations","lcConvocation","lcDiety","armorMap","ilMap","ilName","squeeze","tear","l","AQ","armorQuality","protection","material","AQBonus","armorArray","armorProt","skillDevRoll","rider","ownerUuid","chatListeners","_onChatCardAction","bind","preventDefault","button","action","attackerId","effAml","grappleAtk","applyActiveEffects","statuses","statusId","assign","expandObject","ownedItems","emlChanges","magnitude","amlChanges","dmlChanges","allChanges","skillData","skillChanges","rollInput","scope","temporary","_normalcdf","prob","exp","z","mean","sd","old","onManageActiveEffect","owner","li","closest","gameTime","combatId","combatRound","combatTurn","startType","jQuery","sheet","yes","no","checkStartedActiveEffects","aeStarted","setAEStatus","conditionalRender","checkExpiredActiveEffects","aeDisabled","disableExpiredAE","changed","supportedHMHooks","supportedFoundryHooks","onManageMacro","firstElementChild","className","macroId","BaseActorSheetHM3v2","ActorSheet","_prepareContext","editable","isEditable","getData","performance","now","customSunSign","dtypes","_mode","MODES","EDIT","sourceName","filters","_filters","hasRwPermission","isCharacter","isCharacterMancer","isContainer","isCreature","isSkillImprovement","visible","labels","macroTypes","strictMode","cssClass","_itemLists","descriptionHTML","TextEditor","enrichHTML","secrets","relativeTo","physicalSkills","communicationSkills","craftSkills","magicSkills","ritualSkills","companions","injuries","invocations","missiles","psionics","spells","esoterics","companionParty","companionAnimal","companionSteed","companionFollower","companionConnection","companionFriend","companionFoe","esotericAtkOptions","esotericDefOptions","_onSortItem","siblings","dropTarget","targetId","itemId","SortingHelpers","performIntegerSort","_onDropActor","companion","fromDropData","createEmbeddedDocuments","_onDropItem","droppedItem","closestContainer","destContainer","containerId","_moveContainer","_moveQtyDialog","_moveItems","newItem","itData","containerResult","failure","deleteDocuments","targetName","maxItems","formdata","formQtyToMove","itemstomove","moveQuantity","sourceType","sourceQuantity","newTargetQuantity","newSourceQuantity","_onDropItemCreate","mergeItem","click","ImagePopout","unsetFlag","_onItemCreate","$","parents","_onItemDelete","_onDumpEsotericDescription","_onContainerCollapse","innerText","convocations","charCodeAt","select","_handleQtyInput","_handleSbxInput","_handleOpInput","macrosNameFilter","lcMacrosNameFilter","macroItems","macroName","getAttribute","show","hide","getActiveTokens","_onToggleMount","_onToggleCarry","_onToggleEquip","_onToggleImprove","_onMoreInfo","_onShowBioImage","_onShowProfileImage","header","agree","confirm","deleteItems","systemn","slideUp","el","cuuid","other","otherData","extraList","extraLabel","skilltype","traittype","extraValue","extra_value","attr","_improveToggleDialog","journalEntry","article","performSDR","performTrainingSDR","disableFlag","getElementById","firstChar","isPlus","isMinus","SBx","OP","force","_tabs","PLAY","_render","renderContext","rendered","_renderOuter","querySelectorAll","btn","nextSibling","tooltip","textContent","tooltipDirection","setAttribute","stopPropagation","remove","limited","classList","toggle","createElement","_onChangeSheetMode","insertAdjacentElement","firstButton","idLink","submit","generation","applications","apps","window","CharacterSheetHM3v2","defaultOptions","classes","tabs","navSelector","contentSelector","initial","scrollY","resizable","HarnMasterBaseActorSheet","weightT","probHigh","probMid","probLow","psycheSeverity","psycheName","linkToActor","rangeGrid","wq","adata","capacityMax","capacityVal","gearTypes","itemActorUuid","skillNameFilter","lcSkillNameFilter","gearNameFilter","lcGearNameFilter","gearItems","gear","gearName","effectsNameFilter","lcEffectsNameFilter","effectItems","effectName","CharacterSheetHM3","ContainerSheetHM3v2","ContainerSheetHM3","CreatureSheetHM3v2","CreatureSheetHM3","ActiveEffectHM3","_prepareDuration","PERMANENT","_preUpdate","isSuppressed","hasCreateMacro","hasDisableMacro","hasTurnStartMacro","ChatMessageHM3","_highlighted","_getSpeakerFromUser","getHTML","HTMLElement","_enrichChatCard","callAll","getAssociatedActor","nameText","isContentVisible","author","avatar","avatarImg","alt","append","subtitle","whisper","appendChild","sender","replaceChildren","replaceWith","_onTargetMouseDown","_onTargetHoverIn","_onTargetHoverOut","_activateActivityListeners","getAssociatedActivity","activateChatListeners","releaseOthers","control","animatePan","isVisible","_onHoverIn","hoverOutOthers","_onHoverOut","CombatHM3","Combat","_combatMutex","startCombat","nextRound","combatantIds","rollInitiative","CombatantHM3","Combatant","getInitiativeRoll","mark","iniSkill","MacroHM3","canExecute","ActiveEffectConfigHM3","ActiveEffectConfig","keyChoices","AmbientLightHM3","AmbientLight","AmbientSoundHM3","AmbientSound","DrawingHM3","Drawing","MacroConfigHM3","MacroConfig","can","macroScopes","MACRO_SCOPES","triggerTypes","isLegacy","_updateObject","formData","SubmitEvent","_activateCoreListeners","NoteHM3","Note","RegionHM3","Region","TileHM3","Tile","WallHM3","Wall","ItemSheetHM3v2","ItemSheet","arcane","idata","itemType","hasActor","hasCombatSkills","hasRitualSkills","hasMagicSkills","dieties","isPsycheTrait","ridingImg","steeds","isRiding","power1","power","power2","power3","power4","power5","isAttuned","needsAttunement","minorPower","majorPower","isEmpty","enforceTypes","choices","durations","powers","JSON","parse","stringify","setPosition","position","sheetBody","bodyHeight","css","keyCode","which","_armorgearLocationAdd","_armorgearLocationDelete","_onSubmit","removeIndex","splice","ItemSheetHM3","ItemProxy","_item","actorProxy","canBeArtifact","canBeEsotericCombat","GearProxy","hasValue","isMajorArtifact","isMinorArtifact","ariaLabelEquip","ariaLabelCarry","ArmorProxy","ArmorlocationProxy","probWeightHigh","probWeightMid","probWeightLow","_calcProbWeights","TotalWeightHigh","TotalWeightMid","TotalWeightLow","CompanionProxy","_companion","collapsed","locked","EffectProxy","InjuryProxy","HR","InvocationProxy","MiscProxy","MissileProxy","AML","isFeet","SkillProxy","penalty","SB","SI","PsionicProxy","RidingSkillProxy","SpellProxy","TraitProxy","WeaponProxy","DML","WQ","wqTotal","ItemHM3","_impactTypeChanged","iproxy","asWeapon","WeaponItem","hasArcanePower","_prepareArmorLocationData","pctUnivPen","calcPenaltyPct","pctPhysPen","sbModifier","steedUP","lcSkillName","calcInjurySeverity","hasOwn","skillsItemArray","defaultSkill","skillMatch","subSkillMatch","lcSubSkill","hasNeutral","DEFAULT_ICON","defaultRitualIconName","defaultMagicIconName","defaultPsionicsIconName","defaultMiscItemIconName","defaultContainerIconName","defaultArmorGearIconName","migrateWorld","version","migrateActorData","message","migrateItemData","migrateSceneData","package","migrateCompendium","doc","wasLocked","configure","migrate","documents","comliness","touch","_migrateRemoveDeprecated","arr","documentClass","itemUpdate","extreme64","extreme128","extreme256","arms","toJSON","embeddedName","original","ent","flat","flattenObject","toDeprecate","entries","CheckboxElement","Base","WeakMap","adoptedCallback","_getStyleSheet","_adoptStyleSheet","_stylesheets","ownerDocument","defaultView","CSSStyleSheet","replaceSync","CSS","AdoptedStyleSheetMixin","elements","AbstractFormInputElement","_internals","role","_value","useShadowRoot","attachShadow","_controller","defaultValue","indeterminate","hasAttribute","toggleAttribute","_refresh","_setValue","_getValue","connectedCallback","_buildElements","_activateListeners","tabIndex","disconnectedCallback","abort","adoptedStyleSheets","signal","AbortController","_onClick","ariaChecked","dispatchEvent","Event","bubbles","cancelable","SlideToggleElement","track","thumb","Weather","Render","dateTimeApi","lastWatch","Watch","season","getCurrentSeason","InitializeNextMonth","frc","weather","Data","idx","preArray","precipitation","DT","datetime","substring","climate","cover","coverIcon","unicode","dir","hasPrecipitation","pre","_precipitation","precipitationIcon","temp","Temp","watch","Initialize","d3","modifyPrecipitation","next","newWeather","weatherData","WATCH","isWinter","night","d10","windForce","cloudCover","mod","index2","Fog","Hail","Rain","Snow","SteadyRain","SteadySnow","Thunder","Full","Half","No","cooltemperate","Spring","Summer","Autumn","Winter","subartic","spring","summer","autumn","winter","BaseTestHM3","NORTH","dx","dy","NORTH_EAST","NORTH_WEST","SOUTH","SOUTH_EAST","SOUTH_WEST","GM_USER_ID","ALICE_USER_ID","INEN_USER_ID","_prerequisites","_preSetup","_postSetup","_preTest","_test","_postTest","_preTeardown","_postTeardown","log","trace","messages","togglePause","_createActor","_wait","DefButtonsFromChatMsgProxy","messageNr","htmlDefButtons","getElementsByClassName","children","_defButtonsFromChatMsg","executeAsUser","DefActionProxy","def","defButtons","D100_RESULTS","onclick","_defAction","unsetTAFlag","actorObject","_dropActor","_onDropActorData","_move","activeLayer","moveMany","SLOWMO","_resetAllConditions","defeated","_startCombat","createCombatants","tests","berserk","broken","desperate","empowered","weakened","isRunning","runner","setTAFlag","itemUuid","gmSays","gmonly","sendingUserId","sendingUser","gmConsole","callAllUsers","ss","sf","average","ASCII","legacyTransferral","customElements","define","migrations","SHOCK_INDEX_THRESHOLD","SECOND","HOUR","DAY","TENDAY","MONTH","YEAR","gmconsole","Gm2GmSays","gmUsers","replaceAll","decimals","roundTime","turnTime","canvasTextStyle","TextStyle","fontFamily","fontSize","fill","stroke","strokeThickness","dropShadow","dropShadowColor","dropShadowBlur","dropShadowAngle","dropShadowDistance","align","wordWrap","padding","register","hint","effectgear","TinyMCE","style_formats","wrapper","objectClass","Dice","rolls","Actors","unregisterSheet","registerSheet","makeDefault","DocumentSheetConfig","Items","Handlebars","registerHelper","outStr","arg","arguments","str","charAt","root","root_item_v2","root_actor_v2","registerPartial","char_esoteric_list_partial","char_fff_list_partial","char_layout_partial","char_skill_list_partial","char_v2_ability_partial","char_v2_esoteric_list_partial","char_v2_fff_list_partial","char_v2_img_partial","char_v2_layout_partial","char_v2_skill_list_partial","item_artifact_partial","item_artifact_power_partial","item_esoteric_combat_partial","item_layout_partial","item_standard_partial","item_unknown_value_partial","item_v2_artifact_partial","item_v2_artifact_power_partial","item_v2_esoteric_combat_partial","item_v2_layout_partial","item_v2_quantity_partial","item_v2_sb_partial","item_v2_standard_partial","item_v2_unknown_value_partial","item_v2_value_partial","item_v2_weight_partial","effects_partial","legacy_macro_partial","macros_partial","font_formats","fontDefinitions","editor","fonts","urls","menuItems","unshift","app","chatCard","each","display","currentTime","oldValue","inanimate","activeEffect","placeables","bounds","contains","socketlib","registerSystem","BaseTest","hooks","currentMigrationVersion","isNewerVersion","bar","Folder","color","eventName","execute","macroActor","macroTokens","allOtherTokens","triggerArgs","executeHook","registerHooks","doubleClickEvent","createEvent","initEvent","attachEvent","showOnStartup","welcomeDialog","showAgain","_app","SpeedProvider","dragRuler","colors","defaultUnreachableColor","getRanges","creep","walk","jog","run","sprint","op1","op2","executeForEveryone","outMutex","fDoc","hDoc","exclusivelyEngaged"],"sourceRoot":""}