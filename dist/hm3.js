var HM;!function(){"use strict";var e={d:function(t,a){for(var i in a)e.o(a,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:a[i]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r:function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{HM100Check:function(){return Et},blockResume:function(){return at},callOnHooks:function(){return lt},castSpellRoll:function(){return we},changeFatigue:function(){return Ye},changeMissileQuanity:function(){return Ve},createActiveEffect:function(){return ft},createCondition:function(){return bt},createHM3Macro:function(){return ke},createInjury:function(){return vt},createInjuryHelper:function(){return wt},deleteActiveEffect:function(){return kt},deleteCondition:function(){return St},distanceBtwnTwoTokens:function(){return ct},dodgeResume:function(){return tt},dodgeRoll:function(){return Fe},drawDebugPoint:function(){return At},esotericAttack:function(){return Ze},esotericResume:function(){return it},fallingRoll:function(){return We},fumbleRoll:function(){return je},genericDamageRoll:function(){return Ue},getActiveEffect:function(){return gt},getAllTokens:function(){return mt},getObjectKeys:function(){return Ct},getSpecificTokens:function(){return dt},hasActiveEffect:function(){return ht},healingRoll:function(){return xe},ignoreResume:function(){return st},injuryRoll:function(){return _e},invokeRitualRoll:function(){return Ce},isTAPossible:function(){return Nt},killRoll:function(){return He},meleeCounterstrikeResume:function(){return et},missileAttack:function(){return Xe},missileAttackRoll:function(){return Oe},missileDamageRoll:function(){return De},moraleRoll:function(){return Ke},pathIntersectsCircle:function(){return ut},rollObject:function(){return Mt},rollObjectEvaluatedAsync:function(){return Tt},rollResultAsync:function(){return It},setSkillDevelopmentFlag:function(){return Je},shockRoll:function(){return Pe},skillRoll:function(){return ve},steedCommandRoll:function(){return qe},stumbleRoll:function(){return Ge},testAbilityD100Roll:function(){return Ee},testAbilityD100RollAlt:function(){return Ae},testAbilityD6Roll:function(){return Te},testAbilityD6RollAlt:function(){return Ie},throwDownRoll:function(){return Be},unhorsingRoll:function(){return ze},updateOverlay:function(){return Dt},usePsionicRoll:function(){return Me},weaponAttack:function(){return Qe},weaponAttackRoll:function(){return Le},weaponDamageRoll:function(){return Ne},weaponDefendRoll:function(){return Re},willShockRoll:function(){return $e}});var a={};e.r(a),e.d(a,{migrateActorData:function(){return xa},migrateCompendium:function(){return _a},migrateItemData:function(){return Fa},migrateSceneData:function(){return Ha},migrateWorld:function(){return Oa}});const i={ASCII:"_   _ ___  ___ _____ \n| | | ||  \\/  ||____ |\n| |_| || .  . |    / /\n|  _  || |\\/| |    \\ \\\n| | | || |  | |.___/ /\n\\_| |_/\\_|  |_/\\____/",ready:!1,allowedActorFlags:[],allowedAspects:["Edged","Piercing","Blunt"],allowedRanges:["Short","Medium","Long","Extreme"],itemTypes:[{key:"armorgear",label:"Armor Gear"},{key:"armorlocation",label:"Armor Location"},{key:"companion",label:"Companion"},{key:"containergear",label:"Container Gear"},{key:"effectgear",label:"Effect"},{key:"injury",label:"Injury"},{key:"invocation",label:"Invocation"},{key:"miscgear",label:"Misc Gear"},{key:"missilegear",label:"Missile Gear"},{key:"psionic",label:"Psionic"},{key:"skill",label:"Skill"},{key:"spell",label:"Spell"},{key:"trait",label:"Trait"},{key:"weapongear",label:"Weapon Gear"}],skillTypes:[{key:"Craft"},{key:"Physical"},{key:"Communication"},{key:"Combat"},{key:"Magic"},{key:"Ritual"}],miscItemTypes:[{key:"Coin"},{key:"Gem"},{key:"Herb"},{key:"Jewelry"},{key:"Misc"},{key:"Potion"},{key:"Rider"},{key:"Written"}],traitTypes:[{key:"Physical"},{key:"Psyche"}],containerTypes:[{key:"Container"},{key:"Group"}],companionTypes:[{key:"Animal"},{key:"Connection"},{key:"Foe"},{key:"Follower"},{key:"Friend"},{key:"Party"},{key:"Steed"}],frames:[{key:"Scant"},{key:"Light"},{key:"Medium"},{key:"Heavy"},{key:"Massive"}],cultures:[{key:"Feudal"},{key:"Imperial"},{key:"Khuzdul"},{key:"Sindarin"},{key:"Tribal"},{key:"Viking"}],socialClasses:[{key:"Slave"},{key:"Serf"},{key:"Unguilded"},{key:"Guilded"},{key:"Noble"}],gender:[{key:"Male"},{key:"Female"}],psycheSeverity:[{key:"5",label:"Mild"},{key:"3",label:"Moderate"},{key:"1",label:"Severe"}],months:[{key:"Nuzyael"},{key:"Peonu"},{key:"Kelen"},{key:"Nolus"},{key:"Larane"},{key:"Agrazhar"},{key:"Azura"},{key:"Halane"},{key:"Savor"},{key:"Ilvin"},{key:"Navek"},{key:"Morgat"}],sizes:[0,.5,.6,.7,.8,.9,1,1.1,1.2,1.3,1.4],creatureSizes:[{key:0,label:"Insectile"},{key:2,label:"Tiny"},{key:3,label:"Very Small"},{key:4,label:"Small"},{key:6,label:"Medium"},{key:8,label:"Large"},{key:10,label:"Very Large"},{key:12,label:"Huge"},{key:20,label:"Gargantuan"}],weightCoversions:[{key:1,label:"lb"},{key:16,label:"oz"},{key:256,label:"dr"},{key:2272,label:"ct"}],weightTableLabel:{lb:{singular:"pound",plural:"pounds"},oz:{singular:"ounce",plural:"ounces"},dr:{singular:"dram",plural:"drams"},ct:{singular:"carat",plural:"carats"}},ITEM_TYPE_LABEL:{skill:{singular:"Skill",plural:"Skills"},spell:{singular:"Spell",plural:"Spells"},weapongear:{singular:"Melee Weapon",plural:"Melee Weapons"},missilegear:{singular:"Missile",plural:"Missiles"},armorgear:{singular:"Armor",plural:"Armor"},miscgear:{singular:"Misc Item",plural:"Misc Items"},containergear:{singular:"Container",plural:"Containers"},injury:{singular:"Injury",plural:"Injuries"},armorlocation:{singular:"Armor Location",plural:"Armor Locations"},trait:{singular:"Trait",plural:"Traits"},psionic:{singular:"Psionic",plural:"Psionics"},incantation:{singular:"Ritual Incantation",plural:"Ritual Incantations"}},sunsigns:[{key:"None"},{key:"Ulandus"},{key:"Ulandus-Aralius"},{key:"Aralius"},{key:"Aralius-Feniri"},{key:"Feniri"},{key:"Feniri-Ahnu"},{key:"Ahnu"},{key:"Ahnu-Angberelius"},{key:"Angberelius"},{key:"Angberelius-Nadai"},{key:"Nadai"},{key:"Nadai-Hirin"},{key:"Hirin"},{key:"Hirin-Tarael"},{key:"Tarael"},{key:"Tarael-Tai"},{key:"Tai"},{key:"Tai-Skorus"},{key:"Skorus"},{key:"Skorus-Masara"},{key:"Masara"},{key:"Masara-Lado"},{key:"Lado"},{key:"Lado-Ulandus"}],defaultCharacterSkills:["Climbing","Condition","Jumping","Stealth","Throwing","Awareness","Intrigue","Oratory","Rhetoric","Singing","Initiative","Unarmed","Dodge"],defaultCreatureSkills:["Awareness","Condition","Initiative","Unarmed","Dodge"],injuryLocations:{Custom:{impactType:"custom",probWeight:{high:1,mid:1,low:1},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"G5"}},Skull:{impactType:"skull",probWeight:{high:150,mid:50,low:0},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"K4",ei17:"K5"}},Face:{impactType:"face",probWeight:{high:150,mid:50,low:0},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K5"}},Neck:{impactType:"neck",probWeight:{high:150,mid:50,low:0},isStumble:!1,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"K4",ei17:"K5"}},Shoulder:{impactType:"shoulder",probWeight:{high:60,mid:60,low:0},isStumble:!1,isFumble:!0,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K4"}},"Upper Arm":{impactType:"upperarm",probWeight:{high:60,mid:30,low:0},isStumble:!1,isFumble:!0,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"M1",ei9:"S2",ei13:"S3",ei17:"G4"}},Elbow:{impactType:"elbow",probWeight:{high:20,mid:10,low:0},isStumble:!1,isFumble:!0,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"G5"}},Forearm:{impactType:"forearm",probWeight:{high:40,mid:20,low:30},isStumble:!1,isFumble:!0,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"M1",ei9:"S2",ei13:"S3",ei17:"G4"}},Hand:{impactType:"hand",probWeight:{high:20,mid:20,low:30},isStumble:!1,isFumble:!0,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"G5"}},Thorax:{impactType:"thorax",probWeight:{high:100,mid:170,low:70},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K5"}},Abdomen:{impactType:"abdomen",probWeight:{high:50,mid:100,low:100},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"K4",ei17:"K5"}},Groin:{impactType:"groin",probWeight:{high:0,mid:40,low:60},isStumble:!1,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"G5"}},Hip:{impactType:"hip",probWeight:{high:0,mid:30,low:70},isStumble:!0,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K4"}},Thigh:{impactType:"thigh",probWeight:{high:0,mid:40,low:105},isStumble:!0,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K4"}},Knee:{impactType:"knee",probWeight:{high:0,mid:10,low:40},isStumble:!0,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"G5"}},Calf:{impactType:"calf",probWeight:{high:0,mid:30,low:70},isStumble:!0,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"M1",ei9:"S2",ei13:"S3",ei17:"G4"}},Foot:{impactType:"foot",probWeight:{high:0,mid:20,low:40},isStumble:!0,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"G5"}},Wing:{impactType:"wing",probWeight:{high:150,mid:50,low:0},isStumble:!1,isFumble:!0,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"G5"}},Tentacle:{impactType:"tentacle",probWeight:{high:50,mid:150,low:0},isStumble:!1,isFumble:!0,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"M1",ei9:"S2",ei13:"S3",ei17:"G4"}},Tail:{impactType:"tail",probWeight:{high:0,mid:50,low:100},isStumble:!0,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"M1",ei9:"S2",ei13:"S3",ei17:"G4"}},Jaw:{impactType:"face, jaw",probWeight:{high:22.5,mid:7.5,low:0},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K5"}},Eye:{impactType:"face, eye",probWeight:{high:11.25,mid:3.75,low:0},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K5"}},Cheek:{impactType:"face, cheek",probWeight:{high:26.25,mid:8.75,low:0},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K5"}},Nose:{impactType:"face, nose",probWeight:{high:22.5,mid:7.5,low:0},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K5"}},Ear:{impactType:"face, ear",probWeight:{high:7.5,mid:2.5,low:0},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K5"}},Mouth:{impactType:"face, mouth",probWeight:{high:15,mid:5,low:0},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K5"}},"Head, humanoid simple":{impactType:"head, humanoid simple",probWeight:{high:300,mid:100,low:0},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"K4",ei17:"K5"}},"Neck, humanoid simple":{impactType:"neck, humanoid simple",probWeight:{high:150,mid:50,low:0},isStumble:!1,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"K4",ei17:"K5"}},"Arm, humanoid simple":{impactType:"arm, humanoid simple",probWeight:{high:200,mid:140,low:60},isStumble:!1,isFumble:!0,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K4"}},"Thorax, humanoid simple":{impactType:"thorax, humanoid simple",probWeight:{high:100,mid:170,low:70},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K5"}},"Abdomen, humanoid simple":{impactType:"abdomen, humanoid simple",probWeight:{high:50,mid:140,low:170},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"K4",ei17:"K5"}},"Leg, humanoid simple":{impactType:"leg, humanoid simple",probWeight:{high:0,mid:130,low:320},isStumble:!0,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K4"}},"Head, horse":{impactType:"head, horse",probWeight:{high:120,mid:120,low:120},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"K4",ei17:"K5"}},"Neck, horse":{impactType:"neck, horse",probWeight:{high:80,mid:80,low:80},isStumble:!1,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"K4",ei17:"K5"}},"Fore Leg, horse":{impactType:"fore leg, horse",probWeight:{high:50,mid:50,low:50},isStumble:!0,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"M1",ei9:"S2",ei13:"S3",ei17:"G4"}},"Flank, horse":{impactType:"flank, horse",probWeight:{high:150,mid:150,low:150},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"G5"}},"Abdomen, horse":{impactType:"abdomen, horse",probWeight:{high:150,mid:150,low:150},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"K4",ei17:"K5"}},"Quarter, horse":{impactType:"quarter, horse",probWeight:{high:75,mid:75,low:75},isStumble:!0,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K4"}},"Hind Leg, horse":{impactType:"hind leg, horse",probWeight:{high:40,mid:40,low:40},isStumble:!0,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K4"}},"Tail, horse":{impactType:"tail, horse",probWeight:{high:20,mid:20,low:20},isStumble:!1,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"M1",ei9:"S2",ei13:"S3",ei17:"G4"}},"Head, dog":{impactType:"head, dog",probWeight:{high:150,mid:150,low:150},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"K4",ei17:"K5"}},"Neck, dog":{impactType:"neck, dog",probWeight:{high:100,mid:100,low:100},isStumble:!1,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"K4",ei17:"K5"}},"Fore Leg, dog":{impactType:"fore leg, dog",probWeight:{high:25,mid:25,low:25},isStumble:!0,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"M1",ei9:"S2",ei13:"S3",ei17:"G4"}},"Thorax, dog":{impactType:"thorax, dog",probWeight:{high:200,mid:200,low:200},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"G5"}},"Abdomen, dog":{impactType:"abdomen, dog",probWeight:{high:350,mid:350,low:350},isStumble:!1,isFumble:!1,isAmputate:!1,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"K4",ei17:"K5"}},"Hind Leg, dog":{impactType:"hind leg, dog",probWeight:{high:50,mid:50,low:50},isStumble:!0,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"S2",ei9:"S3",ei13:"G4",ei17:"K4"}},"Tail, dog":{impactType:"tail, dog",probWeight:{high:50,mid:50,low:50},isStumble:!1,isFumble:!1,isAmputate:!0,effectiveImpact:{ei1:"M1",ei5:"M1",ei9:"S2",ei13:"S3",ei17:"G4"}}},stdSkills:{Axe:{source:"HM3 Skills 19",skillBase:{formula:"@str, @str, @dex, Ahnu, Feniri, Angberelius",SBx:3},type:"Combat"},Blowgun:{source:"HM3 Skills 19",skillBase:{formula:"@sta, @dex, @eye, Hirin:2, Tarael, Nadai",SBx:4},type:"Combat"},Bow:{source:"HM3 Skills 19",skillBase:{formula:"@str, @dex, @eye, Hirin, Tarael, Nadai",SBx:2},type:"Combat"},Club:{source:"HM3 Skills 19",skillBase:{formula:"@str, @str, @dex, Ulandus, Aralius",SBx:4},type:"Combat"},Dagger:{source:"HM3 Skills 19",skillBase:{formula:"@dex, @dex, @eye, Angberelius:2, Nadai:2",SBx:3},type:"Combat"},Dodge:{source:"HM3 Skills 21",skillBase:{formula:"@agl, @agl, @agl",SBx:5},type:"Combat"},Flail:{source:"HM3 Skills 19",skillBase:{formula:"@dex, @dex, @dex, Hirin, Tarael, Nadai",SBx:1},type:"Combat"},Initiative:{source:"HM3 Skills 18",skillBase:{formula:"@agl, @wil, @wil",SBx:4},type:"Combat"},Net:{source:"HM3 Skills 19",skillBase:{formula:"@dex, @dex, @eye, Masara, Skorus, Lado",SBx:1},type:"Combat"},Polearm:{source:"HM3 Skills 19",skillBase:{formula:"@str, @str, @dex, Angberelius, Aralius",SBx:2},type:"Combat"},Riding:{source:"HM3 Skills 18",skillBase:{formula:"@dex, @agl, @wil, Ulandus, Aralius",SBx:1},type:"Combat"},Shield:{source:"HM3 Skills 19",skillBase:{formula:"@str, @dex, @dex, Ulandus, Lado, Masara",SBx:3},type:"Combat"},Sling:{source:"HM3 Skills 19",skillBase:{formula:"@dex, @dex, @eye, Hirin, Tarael, Nadai",SBx:1},type:"Combat"},Spear:{source:"HM3 Skills 19",skillBase:{formula:"@str, @str, @dex, Aralius, Feniri, Ulandus",SBx:3},type:"Combat"},Sword:{source:"HM3 Skills 19",skillBase:{formula:"@str, @dex, @dex, Angberelius:3, Ahnu, Nadai",SBx:3},type:"Combat"},Unarmed:{source:"HM3 Skills 18",skillBase:{formula:"@str, @dex, @agl, Madada:2, Lado:2, Ulandus:2",SBx:4},type:"Combat"},Whip:{source:"HM3 Skills 19",skillBase:{formula:"@dex, @dex, @eye, Hirin, Nadai",SBx:1},type:"Combat"},Acting:{source:"HM3 Skills 11",skillBase:{formula:"@agl, @voi, @int, Tarael, Tai",SBx:2},type:"Communication"},Awareness:{source:"HM3 Skills 11",skillBase:{formula:"@eye, @hrg, @sml, Hirin:2, Tarael:2",SBx:4},type:"Communication"},Intrigue:{source:"HM3 Skills 11",skillBase:{formula:"@int, @aur, @wil, Tai, Tarael, Skorus",SBx:3},type:"Communication"},Language:{source:"HM3 Skills 10",skillBase:{formula:"@voi, @int, @wil, Tai"},type:"Communication"},Lovecraft:{source:"HM3 Skills 11",skillBase:{formula:"@cml, @agl, @voi, Masara, Angberelius",SBx:3},type:"Communication"},"Mental Conflict":{source:"HM3 Skills 12",skillBase:{formula:"@aur, @wil, @wil",SBx:3},type:"Communication"},Musician:{source:"HM3 Skills 12",skillBase:{formula:"@dex, @hrg, @hrg, Masara, Angberelius",SBx:1},type:"Communication"},Oratory:{source:"HM3 Skills 12",skillBase:{formula:"@cml, @voi, @int, Tarael"},type:"Communication",SBx:2},Rhetoric:{source:"HM3 Skills 12",skillBase:{formula:"@voi, @int, @wil, Tai, Tarael, Skorus",SBx:3},type:"Communication"},Script:{source:"HM3 Skills 11",skillBase:{formula:"@dex, @eye, @int, Tarael, Tai"},type:"Communication"},Singing:{source:"HM3 Skills 12",skillBase:{formula:"@hrg, @voi, @voi, Masara",SBx:3},type:"Communication"},Agriculture:{source:"HM3 Skills 13",skillBase:{formula:"@str, @sta, @wil, Ulandus:2, Aralius:2",SBx:2},type:"Craft"},Alchemy:{source:"HM3 Skills 13",skillBase:{formula:"@sml, @int, @aur, Skorus:3, Tai:2, Masara:2",SBx:1},type:"Craft"},Animalcraft:{source:"HM3 Skills 13",skillBase:{formula:"@agl, @voi, @wil, Ulandus, Aralius",SBx:1},type:"Craft"},Astrology:{source:"HM3 Skills 13",skillBase:{formula:"@eye, @int, @aur, Tarael",SBx:1},type:"Craft"},Brewing:{source:"HM3 Skills 13",skillBase:{formula:"@dex, @sml, @sml, Skorus:3, Tai:2, Masara:2",SBx:2},type:"Craft"},Ceramics:{source:"HM3 Skills 13",skillBase:{formula:"@dex, @dex, @eye, Ulandus:2, Aralius:2",SBx:2},type:"Craft"},Cookery:{source:"HM3 Skills 13",skillBase:{formula:"@dex, @sml, @sml, Skorus",SBx:3},type:"Craft"},Drawing:{source:"HM3 Skills 13",skillBase:{formula:"@dex, @eye, @eye, Skorus, Tai",SBx:2},type:"Craft"},Embalming:{source:"HM3 Skills 14",skillBase:{formula:"@dex, @eye, @sml, Skorus, Ulandus",SBx:1},type:"Craft"},Engineering:{source:"HM3 Skills 14",skillBase:{formula:"@dex, @int, @int, Ulandus:2, Aralius:2, Feniri",SBx:1},type:"Craft"},Fishing:{source:"HM3 Skills 14",skillBase:{formula:"@dex, @eye, @wil, Masara:2, Lado:2",SBx:3},type:"Craft"},Fletching:{source:"HM3 Skills 15",skillBase:{formula:"@dex, @dex, @eye, Hirin:2, Tarael, Nadai",SBx:1},type:"Craft"},Folklore:{source:"HM3 Skills 15",skillBase:{formula:"@voi, @int, @int, Tai:2",SBx:3},type:"Craft"},Foraging:{source:"HM3 Skills 15",skillBase:{formula:"@dex, @sml, @int, Ulandus:2, Aralius:2",SBx:3},type:"Craft"},Glassworking:{source:"HM3 Skills 15",skillBase:{formula:"@dex, @eye, @wil, Feniri:2",SBx:1},type:"Craft"},Heraldry:{source:"HM3 Skills 15",skillBase:{formula:"@dex, @eye, @wil, Skorus, Tai",SBx:1},type:"Craft"},Herblore:{source:"HM3 Skills 15",skillBase:{formula:"@eye, @sml, @int, Ulandus:3, Aralius:2",SBx:1},type:"Craft"},Hidework:{source:"HM3 Skills 15",skillBase:{formula:"@dex, @sml, @wil, Ulandis, Aralius",SBx:2},type:"Craft"},Hunting:{source:"HM3 Skills 16",skillBase:{formula:"@agl, @sml, @int, Ulandus:2, Aralius:2",SBx:1},type:"Craft"},Inkcraft:{source:"HM3 Skills 16",skillBase:{formula:"@eye, @sml, @int, Skorus:2, Tai",SBx:1},type:"Craft"},Jewelcraft:{source:"HM3 Skills 16",skillBase:{formula:"@dex, @eye, @wil, Feniri:3, Tarael, Aralius",SBx:1},type:"Craft"},Law:{source:"HM3 Skills 16",skillBase:{formula:"@voi, @int, @wil, Tarael, Tai",SBx:1},type:"Craft"},Lockcraft:{source:"HM3 Skills 16",skillBase:{formula:"@dex, @eye, @wil, Feniri",SBx:1},type:"Craft"},Lore:{source:"HM3 Skills 16",skillBase:{formula:"@eye, @int, @int, Tai:2",SBx:1},type:"Craft"},Masonry:{source:"HM3 Skills 16",skillBase:{formula:"@str, @dex, @int, Ulandus:2, Aralius:2",SBx:1},type:"Craft"},Mathematics:{source:"HM3 Skills 16",skillBase:{formula:"@int, @int, @wil, Tai:3, Tarael, Skorus",SBx:1},type:"Craft"},Metalcraft:{source:"HM3 Skills 16",skillBase:{formula:"@str, @dex, @wil, Feniri:3, Ahnu, Angberelius",SBx:1},type:"Craft"},Milling:{source:"HM3 Skills 16",skillBase:{formula:"@str, @dex, @sml, Ulandus",SBx:2},type:"Craft"},Mining:{source:"HM3 Skills 16",skillBase:{formula:"@str, @eye, @int, Ulandus:2, Aralius:2, Feniri",SBx:1},type:"Craft"},Perfumery:{source:"HM3 Skills 16",skillBase:{formula:"@sml, @sml, @int, Hirin, Skorus, Tarael",SBx:1},type:"Craft"},Physician:{source:"HM3 Skills 17",skillBase:{formula:"@dex, @eye, @int, Masara:2, Skorus, Tai",SBx:1},type:"Craft"},Piloting:{source:"HM3 Skills 17",skillBase:{formula:"@dex, @eye, @int, Lado:3, Masara",SBx:1},type:"Craft"},Runecraft:{source:"HM3 Skills 17",skillBase:{formula:"@int, @aur, @aur, Tai:2, Skorus",SBx:1},type:"Craft"},Seamanship:{source:"HM3 Skills 17",skillBase:{formula:"@str, @dex, @agl, Lado:3, Masara, Skorus",SBx:2},type:"Craft"},Shipwright:{source:"HM3 Skills 17",skillBase:{formula:"@str, @dex, @int, Lado:3, Masara",SBx:1},type:"Craft"},Survival:{source:"HM3 Skills 17",skillBase:{formula:"@str, @dex, @int, Ulandus:2, Aralius",SBx:3},type:"Craft"},Tarotry:{source:"HM3 Skills 17",skillBase:{formula:"@int, @aur, @wil, Tarael:2, Tai:2, Skorus, Hirin",SBx:1},type:"Craft"},Textilecraft:{source:"HM3 Skills 17",skillBase:{formula:"@dex, @dex, @eye, Ulandus, Aralius",SBx:2},type:"Craft"},Timbercraft:{source:"HM3 Skills 17",skillBase:{formula:"@str, @dex, @agl, Ulandus:3, Aralius",SBx:2},type:"Craft"},Tracking:{source:"HM3 Skills 17",skillBase:{formula:"@eye, @sml, @wil, Ulandus:3, Aralius:3",SBx:2},type:"Craft"},Trapping:{source:"Barbarians 6",skillBase:{formula:"@agl, @dex, @eye, Ulandus:2, Aralius:2",SBx:2},type:"Craft"},Weaponcraft:{source:"HM3 Skills 17",skillBase:{formula:"@str, @dex, @wil, Feniri:3, Ahnu, Angberelius",SBx:1},type:"Craft"},Weatherlore:{source:"HM3 Skills 17",skillBase:{formula:"@int, @eye, @sml, Hirin, Tarael, Masada, Lado",SBx:3},type:"Craft"},Woodcraft:{source:"HM3 Skills 17",skillBase:{formula:"@dex, @dex, @wil, Ulandus:2, Aralius, Lado",SBx:2},type:"Craft"},Fyvria:{source:"HM Magic, Shek-pvar 6",skillBase:{formula:"@aur, @aur, @sml, Ulandus:3, Aralius:2, Feneri:1, Angberelius:-1, Nadai:-2, Hirin:-3, Tarael:-2, Tai:-1, Masara, Lado:2",SBx:3},type:"Magic"},Jmorvi:{source:"HM Magic, Shek-pvar 6",skillBase:{formula:"@aur, @aur, @str, Ulandus, Aralius:2, Feneri:3, Ahnu:2, Angberelius:1, Hirin:-1, Tarael:-2, Tai:-3, Skorus:-2, Masara:-1",SBx:3},type:"Magic"},Lyahvi:{source:"HM Magic, Shek-Pvar 6",skillBase:{formula:"@aur, @aur, @eye, Ulandus:-3, Aralius:-2,Feneri:-1, Angberelius, Nadai:2, Hirin:3, Tarael:2, Tai,Masara:-1, Lado:-2",SBx:3},type:"Magic"},Odivshe:{source:"HM Magic, Shek-pvar 6",skillBase:{formula:"@aur, @aur, @dex, Ulandus, Feneri:-1, Ahnu:-2, Angberelius:-3, Nadai:-2, Hirin:-1, Tai:1, Skorus:2, Masara:3, Lado:2",SBx:3},type:"Magic"},Peleahn:{source:"HM Magic, Shek-pvar 6",skillBase:{formula:"@aur, @aur, @agl, Ulandus:-1, Feneri, Ahnu:2, Angberelius:3, Nadai:2, Hirin, Tai:-1, Skorus:-2, Masara:-3, Lado:-2",SBx:3},type:"Magic"},Savorya:{source:"HM Magic, Shek-pvar 6",skillBase:{formula:"@aur, @aur, @int, Ulandus:-1, Aralius:-2, Feneri:-3, Ahnu:-2, Angberelius:-1, Hirin:1, Tarael:2, Tai:3, Skorus:2, Masara",SBx:3},type:"Magic"},Neutral:{source:"HM Magic, Shek-pvar 6",skillBase:{formula:"@aur, @aur, @wil",SBx:1},type:"Magic"},Acrobatics:{source:"HM3 Skills 8",skillBase:{formula:"@str, @agl, @agl, Nadai:2, Hirin",SBx:2},type:"Physical"},Climbing:{source:"HM3 Skills 8",skillBase:{formula:"@str, @dex, @agl, Ulandus:2, Aralius:2",SBx:4},type:"Physical"},Condition:{source:"HM3 Skills 9",skillBase:{formula:"@str, @sta, @wil, Ulandus, Lado",SBx:5},type:"Physical"},Dancing:{source:"HM3 Skills 9",skillBase:{formula:"@Dex, @agl, @agl, Tarael:2, Hirin, Tai",SBx:2},type:"Physical"},Jumping:{source:"HM3 Skills 9",skillBase:{formula:"@str, @agl, @agl, Nadai:2, Hirin:2",SBx:4},type:"Physical"},Legerdemain:{source:"HM3 Skills 9",skillBase:{formula:"@dex, @dex, @wil, Skorus:2, Tai:2, Tarael:2",SBx:1},type:"Physical"},Skiing:{source:"HM3 Skills 9",skillBase:{formula:"@str, @dex, @agl, Masara:2, Skorus, Lado",SBx:1},type:"Physical"},Stealth:{source:"HM3 Skills 9",skillBase:{formula:"@agl, @hrg, @wil, Hirin:2, Tarael:2, Tai:2",SBx:3},type:"Physical"},Swimming:{source:"HM3 Skills 9",skillBase:{formula:"@sta, @dex, @agl, Skorus, Masara:3, Lado:3",SBx:1},type:"Physical"},Throwing:{source:"HM3 Skills 10",skillBase:{formula:"@str, @dex, @eye, Hirin:2, Tarael, Nadai",SBx:4},type:"Physical"},Agrik:{source:"HM Religion, Agrik 1",skillBase:{formula:"@voi, @int, @str, Nadai:2, Angberelius, Ahnu",SBx:1},type:"Ritual"},Halea:{source:"HM Religion, Halea 1",skillBase:{formula:"@voi, @int, @cml, Tarael:2, Hirin, Masara",SBx:1},type:"Ritual"},Ilvir:{source:"HM Religion, Ilvir 1",skillBase:{formula:"@voi, @int, @aur, Skorus:2, Tai, Ulandus",SBx:1},type:"Ritual"},Larani:{source:"HM Religion, Larani 1",skillBase:{formula:"@voi, @int, @wil, Angberelius:2, Ahnu, Feniri",SBx:1},type:"Ritual"},Morgath:{source:"HM Religion, Morgath 1",skillBase:{formula:"@voi, @int, @aur, Lado:2, Ahnu, Masara",SBx:1},type:"Ritual"},Naveh:{source:"HM Religion, Naveh 1",skillBase:{formula:"@voi, @int, @wil, Masara:2, Skorus, Tarael",SBx:1},type:"Ritual"},Peoni:{source:"HM Religion, Peoni 1",skillBase:{formula:"@voi, @int, @dex, Aralius:2, Angberelius, Ulandus",SBx:1},type:"Ritual"},Sarajin:{source:"HM Religion, Sarajin 1",skillBase:{formula:"@voi, @int, @str, Feniri:2, Aralius, Lado",SBx:1},type:"Ritual"},Siem:{source:"HM Religion, Siem 1",skillBase:{formula:"@voi, @int, @aur, Hirin:2, Feniri, Ulandus",SBx:1},type:"Ritual"},"Save K'nor":{source:"HM Religion, Save K'nor 1",skillBase:{formula:"@voi, @int, @int, Tai:2, Tarael, Skorus",SBx:1},type:"Craft"}},injuryLevels:["NA","M1","S2","S3","G4","G5","K4","K5"],activeEffectKey:{"system.eph.meleeAMLMod":"Melee Attacks","system.eph.meleeDMLMod":"Melee Defenses","system.eph.missileAMLMod":"Missile Attacks","system.eph.outnumbered":"Outnumbered","system.eph.itemAMLMod":"Weapon Attack ML","system.eph.itemDMLMod":"Weapon Defense ML","system.eph.itemEMLMod":"Skill EML","system.eph.commSkillsMod":"Communication Skills EML","system.eph.physicalSkillsMod":"Physical Skills EML","system.eph.combatSkillsMod":"Combat Skills EML","system.eph.craftSkillsMod":"Craft Skills EML","system.eph.ritualSkillsMod":"Ritual Skills EML","system.eph.magicSkillsMod":"Magic Skills EML","system.eph.psionicTalentsMod":"Psionic Talents EML","system.eph.fatigue":"Fatigue","system.physicalPenalty":"Physical Penalty","system.universalPenalty":"Universal Penalty","system.encumbrance":"Encumbrance","system.endurance":"Endurance","system.eph.totalInjuryLevels":"Injury Level","system.eph.move":"Move","system.eph.strength":"Strength","system.eph.stamina":"Stamina","system.eph.dexterity":"Dexterity","system.eph.agility":"Agility","system.eph.eyesight":"Eyesight","system.eph.hearing":"Hearing","system.eph.smell":"Smell","system.eph.voice":"Voice","system.eph.intelligence":"Intelligence","system.eph.will":"Will","system.eph.aura":"Aura","system.eph.morality":"Morality","system.eph.comeliness":"Comeliness","system.eph.unhorsing":"Unhorsing"},defaultMagicIconName:"pentacle",defaultRitualIconName:"circle",defaultMiscItemIconName:"miscgear",defaultPsionicsIconName:"psionics",defaultArmorGearIconName:"armor",defaultContainerIconName:"sack",magicIcons:[["pentacle","systems/hm3/images/icons/svg/pentacle.svg"],["lyahvi","systems/hm3/images/icons/png/lyahvi.png"],["peleahn","systems/hm3/images/icons/png/peleahn.png"],["jmorvi","systems/hm3/images/icons/png/jmorvi.png"],["fyvria","systems/hm3/images/icons/png/fyvria.png"],["odivshe","systems/hm3/images/icons/png/odivshe.png"],["savorya","systems/hm3/images/icons/png/savorya.png"],["neutral","systems/hm3/images/icons/png/neutral.png"]],ritualIcons:[["circle","systems/hm3/images/icons/svg/circle.svg"],["agrik","systems/hm3/images/icons/png/agrik.png"],["halea","systems/hm3/images/icons/png/halea.png"],["ilvir","systems/hm3/images/icons/png/ilvir.png"],["larani","systems/hm3/images/icons/png/larani.png"],["morgath","systems/hm3/images/icons/png/morgath.png"],["naveh","systems/hm3/images/icons/png/naveh.png"],["peoni","systems/hm3/images/icons/png/peoni.png"],["sarajin","systems/hm3/images/icons/png/sarajin.png"],["save k'nor","systems/hm3/images/icons/png/saveknor.png"],["save k’nor","systems/hm3/images/icons/png/saveknor.png"],["save knor","systems/hm3/images/icons/png/saveknor.png"],["siem","systems/hm3/images/icons/png/siem.png"]],psionicTalentIcons:[["psionics","systems/hm3/images/icons/svg/psionics.svg"]],physicalSkillIcons:[["acrobatics","systems/hm3/images/icons/svg/acrobatics.svg"],["climbing","systems/hm3/images/icons/svg/climbing.svg"],["condition","systems/hm3/images/icons/svg/muscle.svg"],["dancing","systems/hm3/images/icons/svg/dance.svg"],["jumping","systems/hm3/images/icons/svg/jump.svg"],["legerdemain","systems/hm3/images/icons/svg/juggler.svg"],["skiing","systems/hm3/images/icons/svg/ski.svg"],["stealth","systems/hm3/images/icons/svg/stealth.svg"],["swimming","systems/hm3/images/icons/svg/swimming.svg"],["throwing","systems/hm3/images/icons/svg/throw.svg"]],commSkillIcons:[["acting","systems/hm3/images/icons/svg/acting.svg"],["awareness","systems/hm3/images/icons/svg/awareness.svg"],["intrigue","systems/hm3/images/icons/svg/cloak-dagger.svg"],["lovecraft","systems/hm3/images/icons/svg/love.svg"],["mental conflict","systems/hm3/images/icons/svg/mental.svg"],["musician","systems/hm3/images/icons/svg/harp.svg"],["oratory","systems/hm3/images/icons/svg/oratory.svg"],["rhetoric","systems/hm3/images/icons/svg/rhetoric.svg"],["command","systems/hm3/images/icons/svg/rhetoric.svg"],["diplomacy","systems/hm3/images/icons/svg/rhetoric.svg"],["intimidation","systems/hm3/images/icons/svg/rhetoric.svg"],["singing","systems/hm3/images/icons/svg/musician-singing.svg"],["language","systems/hm3/images/icons/svg/speaking.svg"],["script","systems/hm3/images/icons/svg/scroll.svg"]],combatSkillIcons:[["unarmed","systems/hm3/images/icons/svg/punch.svg"],["brawling","systems/hm3/images/icons/svg/punch.svg"],["wrestling","systems/hm3/images/icons/svg/punch.svg"],["martial arts","systems/hm3/images/icons/svg/punch.svg"],["dodge","systems/hm3/images/icons/svg/dodge.svg"],["initiative","systems/hm3/images/icons/svg/initiative.svg"],["riding","systems/hm3/images/icons/svg/horse-riding.svg"]],weaponSkillIcons:[["axe","systems/hm3/images/icons/svg/axe.svg"],["battleaxe","systems/hm3/images/icons/svg/axe.svg"],["handaxe","systems/hm3/images/icons/svg/axe.svg"],["shorkana","systems/hm3/images/icons/svg/axe.svg"],["pickaxe","systems/hm3/images/icons/svg/axe.svg"],["sickle","systems/hm3/images/icons/svg/axe.svg"],["hatchet","systems/hm3/images/icons/svg/axe.svg"],["warhammer","systems/hm3/images/icons/svg/warhammer.svg"],["war hammer","systems/hm3/images/icons/svg/warhammer.svg"],["bow","systems/hm3/images/icons/svg/longbow.svg"],["longbow","systems/hm3/images/icons/svg/longbow.svg"],["long bow","systems/hm3/images/icons/svg/longbow.svg"],["shortbow","systems/hm3/images/icons/svg/longbow.svg"],["short bow","systems/hm3/images/icons/svg/longbow.svg"],["hart bow","systems/hm3/images/icons/svg/longbow.svg"],["hartbow","systems/hm3/images/icons/svg/longbow.svg"],["crossbow","systems/hm3/images/icons/svg/crossbow.svg"],["club","systems/hm3/images/icons/svg/club.svg"],["stick","systems/hm3/images/icons/svg/club.svg"],["mace","systems/hm3/images/icons/svg/mace.svg"],["maul","systems/hm3/images/icons/svg/hammer.svg"],["morningstar","systems/hm3/images/icons/svg/mace.svg"],["dagger","systems/hm3/images/icons/svg/dagger.svg"],["taburi","systems/hm3/images/icons/svg/dagger.svg"],["keltan","systems/hm3/images/icons/svg/dagger.svg"],["knife","systems/hm3/images/icons/svg/dagger.svg"],["toburi","systems/hm3/images/icons/svg/dagger.svg"],["flail","systems/hm3/images/icons/svg/flail.svg"],["warflail","systems/hm3/images/icons/svg/flail.svg"],["nachakas","systems/hm3/images/icons/svg/flail.svg"],["grainflail","systems/hm3/images/icons/svg/flail.svg"],["net","systems/hm3/images/icons/svg/net.svg"],["polearm","systems/hm3/images/icons/svg/polearm.svg"],["trident","systems/hm3/images/icons/svg/trident.svg"],["lance","systems/hm3/images/icons/svg/lance.svg"],["glaive","systems/hm3/images/icons/svg/polearm.svg"],["pike","systems/hm3/images/icons/svg/polearm.svg"],["poleaxe","systems/hm3/images/icons/svg/polearm.svg"],["jousting pole","systems/hm3/images/icons/svg/lance.svg"],["bill","systems/hm3/images/icons/svg/polearm.svg"],["shield","systems/hm3/images/icons/svg/shield.svg"],["round shield","systems/hm3/images/icons/svg/round-shield.svg"],["buckler","systems/hm3/images/icons/svg/round-shield.svg"],["knight shield","systems/hm3/images/icons/svg/shield.svg"],["kite shield","systems/hm3/images/icons/svg/shield.svg"],["tower shield","systems/hm3/images/icons/svg/shield.svg"],["spear","systems/hm3/images/icons/svg/spear.svg"],["javelin","systems/hm3/images/icons/svg/spear.svg"],["staff","systems/hm3/images/icons/svg/staff.svg"],["sword","systems/hm3/images/icons/svg/sword.svg"],["falchion","systems/hm3/images/icons/svg/sword.svg"],["broadsword","systems/hm3/images/icons/svg/sword.svg"],["battlesword","systems/hm3/images/icons/svg/sword.svg"],["estoc","systems/hm3/images/icons/svg/sword.svg"],["mang","systems/hm3/images/icons/svg/sword.svg"],["mankar","systems/hm3/images/icons/svg/sword.svg"],["longknife","systems/hm3/images/icons/svg/sword.svg"],["battle sword","systems/hm3/images/icons/svg/sword.svg"],["longsword","systems/hm3/images/icons/svg/sword.svg"],["shortsword","systems/hm3/images/icons/svg/sword.svg"],["long sword","systems/hm3/images/icons/svg/sword.svg"],["short sword","systems/hm3/images/icons/svg/sword.svg"],["bastard sword","systems/hm3/images/icons/svg/sword.svg"],["long knife","systems/hm3/images/icons/svg/sword.svg"],["whip","systems/hm3/images/icons/svg/whip.svg"],["hammer","systems/hm3/images/icons/svg/hammer.svg"],["arrow","systems/hm3/images/icons/svg/arrow.svg"],["sling","systems/hm3/images/icons/svg/sling.svg"],["bolt","systems/hm3/images/icons/svg/arrow.svg"],["stone","systems/hm3/images/icons/svg/stones.svg"],["bullet","systems/hm3/images/icons/svg/stones.svg"],["fangs","systems/hm3/images/icons/svg/fangs.svg"],["claw","systems/hm3/images/icons/svg/claw.svg"],["hoof","systems/hm3/images/icons/svg/hoof.svg"],["horns","systems/hm3/images/icons/svg/horns.svg"]],craftSkillIcons:[["agriculture","systems/hm3/images/icons/svg/agriculture.svg"],["alchemy","systems/hm3/images/icons/svg/caduceus.svg"],["animalcraft","systems/hm3/images/icons/svg/animalcraft.svg"],["astrology","systems/hm3/images/icons/svg/astrology.svg"],["brewing","systems/hm3/images/icons/svg/brewing.svg"],["ceramics","systems/hm3/images/icons/svg/ceramics.svg"],["cookery","systems/hm3/images/icons/svg/cookery.svg"],["cooking","systems/hm3/images/icons/svg/cookery.svg"],["drawing","systems/hm3/images/icons/svg/drawing.svg"],["embalming","systems/hm3/images/icons/svg/embalming.svg"],["engineering","systems/hm3/images/icons/svg/engineering.svg"],["fishing","systems/hm3/images/icons/svg/fishing.svg"],["fletching","systems/hm3/images/icons/svg/arrow.svg"],["folklore","systems/hm3/images/icons/svg/unicorn.svg"],["foraging","systems/hm3/images/icons/svg/foraging.svg"],["glassworking","systems/hm3/images/icons/svg/glassworking.svg"],["glasscraft","systems/hm3/images/icons/svg/glassworking.svg"],["heraldry","systems/hm3/images/icons/svg/heraldry.svg"],["herblore","systems/hm3/images/icons/svg/herblore.svg"],["hunting","systems/hm3/images/icons/svg/hunting.svg"],["hidework","systems/hm3/images/icons/svg/hidework.svg"],["inkcraft","systems/hm3/images/icons/svg/ink.svg"],["jewelcraft","systems/hm3/images/icons/svg/jewel.svg"],["law","systems/hm3/images/icons/svg/law.svg"],["lockcraft","systems/hm3/images/icons/svg/lock.svg"],["lore","systems/hm3/images/icons/svg/lore.svg"],["masonry","systems/hm3/images/icons/svg/masonry.svg"],["mathematics","systems/hm3/images/icons/svg/mathematics.svg"],["metalcraft","systems/hm3/images/icons/svg/anvil.svg"],["milling","systems/hm3/images/icons/svg/water-mill.svg"],["mining","systems/hm3/images/icons/svg/mining.svg"],["perfumery","systems/hm3/images/icons/svg/perfume.svg"],["physician","systems/hm3/images/icons/svg/caduceus.svg"],["piloting","systems/hm3/images/icons/svg/piloting.svg"],["pilot","systems/hm3/images/icons/svg/piloting.svg"],["runecraft","systems/hm3/images/icons/svg/runecraft.svg"],["seamanship","systems/hm3/images/icons/svg/anchor.svg"],["shipwright","systems/hm3/images/icons/svg/ship.svg"],["survival","systems/hm3/images/icons/svg/survival.svg"],["tarotry","systems/hm3/images/icons/svg/tarotry.svg"],["textilecraft","systems/hm3/images/icons/svg/textilecraft.svg"],["timbercraft","systems/hm3/images/icons/svg/timber.svg"],["tracking","systems/hm3/images/icons/svg/tracking.svg"],["weaponcraft","systems/hm3/images/icons/svg/sword.svg"],["weatherlore","systems/hm3/images/icons/svg/weather.svg"],["woodcraft","systems/hm3/images/icons/svg/woodcraft.svg"]],armorGearIcons:[["armorgear","systems/hm3/images/icons/svg/armor.svg"],["abdominal armor","systems/hm3/images/icons/svg/abdominal-armor.svg"],["armor vest","systems/hm3/images/icons/svg/armor-vest.svg"],["barbute","systems/hm3/images/icons/svg/barbute.svg"],["black knight helm","systems/hm3/images/icons/svg/black-knight-helm.svg"],["bracer","systems/hm3/images/icons/svg/bracer.svg"],["breastplate","systems/hm3/images/icons/svg/breastplate.svg"],["cap","systems/hm3/images/icons/svg/cap.svg"],["chainmail","systems/hm3/images/icons/svg/chain-mail.svg"],["chest armor","systems/hm3/images/icons/svg/chest-armor.svg"],["closed barbute","systems/hm3/images/icons/svg/closed-barbute.svg"],["crested helm","systems/hm3/images/icons/svg/crested-helm.svg"],["dorsal scales","systems/hm3/images/icons/svg/dorsal-scales.svg"],["elbow pad","systems/hm3/images/icons/svg/elbow-pad.svg"],["fish scales","systems/hm3/images/icons/svg/fish-scales.svg"],["gloves","systems/hm3/images/icons/svg/gloves.svg"],["greaves","systems/hm3/images/icons/svg/greaves.svg"],["guantlet","systems/hm3/images/icons/svg/gauntlet.svg"],["heavy helm","systems/hm3/images/icons/svg/heavy-helm.svg"],["helm","systems/hm3/images/icons/svg/helm.svg"],["hood","systems/hm3/images/icons/svg/hood.svg"],["knee pad","systems/hm3/images/icons/svg/knee-pad.svg"],["lamellar","systems/hm3/images/icons/svg/lamellar.svg"],["leather armor","systems/hm3/images/icons/svg/leather-armor.svg"],["leather boot","systems/hm3/images/icons/svg/leather-boot.svg"],["leather vest","systems/hm3/images/icons/svg/leather-vest.svg"],["leg armor","systems/hm3/images/icons/svg/leg-armor.svg"],["leggings","systems/hm3/images/icons/svg/leggings.svg"],["light helm","systems/hm3/images/icons/svg/light-helm.svg"],["mail shirt","systems/hm3/images/icons/svg/mail-shirt.svg"],["mailed fist","systems/hm3/images/icons/svg/mailed-fist.svg"],["metal skirt","systems/hm3/images/icons/svg/metal-skirt.svg"],["pauldrons","systems/hm3/images/icons/svg/pauldrons.svg"],["robe","systems/hm3/images/icons/svg/robe.svg"],["scale mail","systems/hm3/images/icons/svg/scale-mail.svg"],["scales","systems/hm3/images/icons/svg/scales.svg"],["shirt","systems/hm3/images/icons/svg/shirt.svg"],["shoe","systems/hm3/images/icons/svg/shoe.svg"],["shoulder scales","systems/hm3/images/icons/svg/shoulder-scales.svg"],["steeltoe boots","systems/hm3/images/icons/svg/steeltoe-boots.svg"],["trousers","systems/hm3/images/icons/svg/trousers.svg"],["tunic","systems/hm3/images/icons/svg/tunic.svg"],["visored helm","systems/hm3/images/icons/svg/visored-helm.svg"]],miscGearIcons:[["miscgear","systems/hm3/images/icons/svg/miscgear.svg"],["coin","systems/hm3/images/icons/svg/coins.svg"],["farthing","systems/hm3/images/icons/svg/coins.svg"],["pence","systems/hm3/images/icons/svg/coins.svg"],["pennies","systems/hm3/images/icons/svg/coins.svg"],["penny","systems/hm3/images/icons/svg/coins.svg"],["silver coins","systems/hm3/images/icons/svg/coins.svg"],["silver pieces","systems/hm3/images/icons/svg/coins.svg"],["silver pennies","systems/hm3/images/icons/svg/coins.svg"],["silver penny","systems/hm3/images/icons/svg/coins.svg"],["shilling","systems/hm3/images/icons/svg/coins.svg"],["gold crown","systems/hm3/images/icons/svg/coins.svg"],["gold piece","systems/hm3/images/icons/svg/coins.svg"],["khuzan gold crown","systems/hm3/images/icons/svg/coins.svg"],["khuzan crown","systems/hm3/images/icons/svg/coins.svg"],["sack","systems/hm3/images/icons/svg/sack.svg"],["backpack","systems/hm3/images/icons/svg/sack.svg"],["pouch","systems/hm3/images/icons/svg/sack.svg"],["belt pouch","systems/hm3/images/icons/svg/sack.svg"],["torch","systems/hm3/images/icons/svg/torch.svg"],["candle","systems/hm3/images/icons/svg/candle.svg"],["pence","systems/hm3/images/icons/svg/coins.svg"],["pence","systems/hm3/images/icons/svg/coins.svg"],["pence","systems/hm3/images/icons/svg/coins.svg"],["helm","systems/hm3/images/icons/svg/helm.svg"],["steel helm","systems/hm3/images/icons/svg/helm.svg"]]};i.defaultItemIcons=new Map(i.physicalSkillIcons.concat(i.commSkillIcons).concat(i.combatSkillIcons).concat(i.weaponSkillIcons).concat(i.craftSkillIcons).concat(i.miscGearIcons).concat(i.armorGearIcons).concat(i.ritualIcons).concat(i.magicIcons).concat(i.psionicTalentIcons)),i.mentalConflictCombatTable={mentalConflict:{"cf:cf":{atkFatigue:4,defFatigue:4},"mf:cf":{atkFatigue:0,defFatigue:1},"ms:cf":{atkFatigue:0,defFatigue:3},"cs:cf":{atkFatigue:0,defFatigue:4},"cf:mf":{atkFatigue:1,defFatigue:0},"mf:mf":{atkFatigue:3,defFatigue:3},"ms:mf":{atkFatigue:0,defFatigue:2},"cs:mf":{atkFatigue:0,defFatigue:3},"cf:ms":{atkFatigue:3,defFatigue:0},"mf:ms":{atkFatigue:2,defFatigue:0},"ms:ms":{atkFatigue:2,defFatigue:2},"cs:ms":{atkFatigue:0,defFatigue:1},"cf:cs":{atkFatigue:4,defFatigue:0},"mf:cs":{atkFatigue:3,defFatigue:0},"ms:cs":{atkFatigue:1,defFatigue:0},"cs:cs":{atkFatigue:1,defFatigue:1}}},i.meleeCombatTable={block:{"cf:cf":{atkFumble:!0,defFumble:!0,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"mf:cf":{atkFumble:!1,defFumble:!0,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"ms:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:2,defDice:0},"cs:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:3,defDice:0},"cf:mf":{atkFumble:!0,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"mf:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!0,miss:!1,atkDice:0,defDice:0},"ms:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cs:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:2,defDice:0},"cf:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"mf:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"ms:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!0,miss:!1,atkDice:0,defDice:0},"cs:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cf:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"mf:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"ms:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"cs:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!0,miss:!1,atkDice:0,defDice:0}},counterstrike:{"cf:cf":{atkFumble:!0,defFumble:!0,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"mf:cf":{atkFumble:!1,defFumble:!0,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"ms:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:3,defDice:0},"cs:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:4,defDice:0},"cf:mf":{atkFumble:!0,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"mf:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!0,miss:!1,atkDice:0,defDice:0},"ms:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:2,defDice:0},"cs:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:3,defDice:0},"cf:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:2},"mf:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:1},"ms:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:1,defDice:1},"cs:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cf:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:3},"mf:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:2},"ms:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:1},"cs:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:2,defDice:2}},dodge:{"cf:cf":{atkFumble:!1,defFumble:!1,atkStumble:!0,defStumble:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"mf:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"ms:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:2,defDice:0},"cs:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:3,defDice:0},"cf:mf":{atkFumble:!1,defFumble:!1,atkStumble:!0,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"mf:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0},"ms:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cs:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:2,defDice:0},"cf:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"mf:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0},"ms:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0},"cs:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cf:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"mf:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"ms:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0},"cs:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0}},grapple:{"cf:cf":{atkFumble:!1,defFumble:!1,atkStumble:!0,defStumble:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"mf:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"ms:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:2,defDice:0},"cs:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:3,defDice:0},"cf:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"mf:mf":{atkFumble:!1,defFumble:!1,atkStumble:!0,defStumble:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"ms:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cs:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:2,defDice:0},"cf:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,defHold:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:2},"mf:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"ms:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cs:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cf:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,defHold:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:3},"mf:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,defHold:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:2},"ms:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"cs:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0}},ignore:{cf:{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},mf:{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},ms:{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:3,defDice:0},cs:{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:4,defDice:0}}},i.grappleCombatTable={counterstrike:{"cf:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0},"mf:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0},"ms:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:2,defDice:0},"cs:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:3,defDice:0},"cf:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:1},"mf:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0},"ms:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cs:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:2,defDice:0},"cf:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:2},"mf:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:1},"ms:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0},"cs:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cf:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:3},"mf:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:2},"ms:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:1},"cs:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0}},dodge:{"cf:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0},"mf:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"ms:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cs:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:2,defDice:0},"cf:mf":{atkFumble:!1,defFumble:!1,atkStumble:!0,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"mf:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0},"ms:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cs:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:2,defDice:0},"cf:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"mf:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"ms:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0},"cs:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cf:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"mf:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"ms:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},"cs:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0}},grapple:{"cf:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0},"mf:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"ms:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cs:cf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:2,defDice:0},"cf:mf":{atkFumble:!1,defFumble:!1,atkStumble:!0,defStumble:!1,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"mf:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!1,block:!1,miss:!0,atkDice:0,defDice:0},"ms:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cs:mf":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:2,defDice:0},"cf:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,defHold:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:2},"mf:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,defHold:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:1},"ms:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,defHold:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0},"cs:ms":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},"cf:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,defHold:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:3},"mf:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,defHold:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:2},"ms:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,defHold:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:1},"cs:cs":{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,defHold:!0,dta:!1,block:!1,miss:!1,atkDice:0,defDice:0}},ignore:{cf:{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,dta:!0,block:!1,miss:!1,atkDice:0,defDice:0},mf:{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:1,defDice:0},ms:{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:2,defDice:0},cs:{atkFumble:!1,defFumble:!1,atkStumble:!1,defStumble:!1,atkHold:!0,dta:!1,block:!1,miss:!1,atkDice:3,defDice:0}}},i.missileCombatTable={block:{"cf:cf":{wild:!0,block:!1,miss:!1,atkDice:0},"mf:cf":{wild:!1,block:!1,miss:!0,atkDice:0},"ms:cf":{wild:!1,block:!1,miss:!1,atkDice:2},"cs:cf":{wild:!1,block:!1,miss:!1,atkDice:3},"cf:mf":{wild:!0,block:!1,miss:!1,atkDice:0},"mf:mf":{wild:!1,block:!1,miss:!0,atkDice:0},"ms:mf":{wild:!1,block:!1,miss:!1,atkDice:1},"cs:mf":{wild:!1,block:!1,miss:!1,atkDice:2},"cf:ms":{wild:!0,block:!1,miss:!1,atkDice:0},"mf:ms":{wild:!1,block:!1,miss:!0,atkDice:0},"ms:ms":{wild:!1,block:!0,miss:!1,atkDice:0},"cs:ms":{wild:!1,block:!1,miss:!1,atkDice:1},"cf:cs":{wild:!0,block:!1,miss:!1,atkDice:0},"mf:cs":{wild:!1,block:!1,miss:!0,atkDice:0},"ms:cs":{wild:!1,block:!0,miss:!1,atkDice:0},"cs:cs":{wild:!1,block:!0,miss:!1,atkDice:0}},dodge:{"cf:cf":{wild:!0,block:!1,miss:!1,atkDice:0},"mf:cf":{wild:!1,block:!1,miss:!0,atkDice:0},"ms:cf":{wild:!1,block:!1,miss:!1,atkDice:2},"cs:cf":{wild:!1,block:!1,miss:!1,atkDice:3},"cf:mf":{wild:!0,block:!1,miss:!1,atkDice:0},"mf:mf":{wild:!1,block:!1,miss:!0,atkDice:0},"ms:mf":{wild:!1,block:!1,miss:!1,atkDice:1},"cs:mf":{wild:!1,block:!1,miss:!1,atkDice:2},"cf:ms":{wild:!0,block:!1,miss:!1,atkDice:0},"mf:ms":{wild:!1,block:!1,miss:!0,atkDice:0},"ms:ms":{wild:!1,block:!1,miss:!0,atkDice:0},"cs:ms":{wild:!1,block:!1,miss:!1,atkDice:1},"cf:cs":{wild:!0,block:!1,miss:!1,atkDice:0},"mf:cs":{wild:!1,block:!1,miss:!0,atkDice:0},"ms:cs":{wild:!1,block:!1,miss:!0,atkDice:0},"cs:cs":{wild:!1,block:!1,miss:!0,atkDice:0}},ignore:{cf:{wild:!0,block:!1,miss:!1,atkDice:0},mf:{wild:!1,block:!1,miss:!0,atkDice:0},ms:{wild:!1,block:!1,miss:!1,atkDice:2},cs:{wild:!1,block:!1,miss:!1,atkDice:3}}},i.treatmentTable={Blunt:[{injury:"Bruise",desc:"Welts/Swelling",treatment:"Compress",eml:30,nt:5,cf:4,mf:5,ms:6,cs:7},{injury:"Fracture",desc:"Simple Fracture",treatment:"Splint",eml:20,nt:4,cf:3,mf:4,ms:5,cs:6},{injury:"Crush",desc:"Compound Fracture/Bleeder",treatment:"Surgery/Splint",eml:10,nt:3,cf:2,mf:3,ms:4,cs:5}],Edged:[{injury:"Minor Cut/Tear",desc:'Cut/Gash 1-2" long',treatment:"Clean & Dress",eml:30,nt:5,cf:4,mf:5,ms:6,cs:7},{injury:"Serious Cut/Tear",desc:'Cut/Gash 2-6" long',treatment:"Surgery",eml:20,nt:4,cf:3,mf:4,ms:5,cs:6},{injury:"Grievous Cut/Tear",desc:'Cut/Gash over 6" long/Bleeder',treatment:"Surgery",eml:10,nt:3,cf:2,mf:3,ms:4,cs:5}],Fire:[{injury:"Minor Burn",desc:"1st Degree Burn/Blisters",treatment:"Compress",eml:30,nt:5,cf:4,mf:5,ms:6,cs:7},{injury:"Serious Burn",desc:"2nd Degree Burn/Open Wound",treatment:"Clean & Dress",eml:15,nt:3,cf:2,mf:3,ms:4,cs:5},{injury:"Grievous Burn",desc:"3rd Degree Burn/Charred Skin",treatment:"Clean & Dress",eml:5,nt:2,cf:1,mf:2,ms:3,cs:4}],Frost:[{injury:"Minor Frost",desc:"Chilled Flesh/Shivering",treatment:"Warming",eml:50,nt:5,cf:4,mf:5,ms:7,cs:7},{injury:"Serious Frost",desc:"2nd Degree Frostbite",treatment:"Warming",eml:25,nt:4,cf:3,mf:4,ms:5,cs:7},{injury:"Grievous Frost",desc:"3rd Degree Frostbite",treatment:"Amputate",eml:10,nt:0,cf:0,mf:0,ms:0,cs:0}],Piercing:[{injury:"Minor Stab/Bite",desc:'Puncture 1" deep',treatment:"Clean & Dress",eml:25,nt:5,cf:4,mf:5,ms:6,cs:7},{injury:"Serious Stab/Bite",desc:'Puncture 3" deep',treatment:"Clean & Dress",eml:15,nt:4,cf:3,mf:4,ms:5,cs:6},{injury:"Grievous Stab/Bite",desc:"Deep Puncture/Bleeder",treatment:"Surgery",eml:5,nt:3,cf:2,mf:3,ms:4,cs:5}]},i.actorLabels={character:"Character",creature:"Creature",container:"Container"},i.itemLabels={skill:"Skill",spell:"Spell",invocation:"Invocation",psionic:"Psionic",weapongear:"Melee Weapon",containergear:"Container",missilegear:"Missile Weapon",armorgear:"Armor",miscgear:"Misc. Gear",injury:"Injury",armorlocation:"Armor Location",trait:"Trait"},i.blindRolls=["Aura","Awareness","Eyesight","Hearing","Intrigue","Lockcraft","Mental Conflict","Runecraft","Smell","Stealth","Tarotry","Weatherlore"],i.esotericCombatItems={attack:["Charm","Mental Bolt","Mental Conflict","Hex"],defense:["Mental Conflict","Negation"]},i.arcanePowers=[{key:"none",label:"None",major:0,minor:!0,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"anvil-pytama-1",label:"Anvil of Pytama",lvl:1,major:-1,minor:!0,validFor:["armorgear"]},{key:"anvil-pytama-2",label:"Anvil of Pytama",lvl:2,major:-1,minor:!0,validFor:["armorgear"]},{key:"focus-5",label:"Focus",lvl:5,major:3,minor:!0,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"focus-6",label:"Focus",lvl:6,major:3,minor:!0,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"focus-7",label:"Focus",lvl:7,major:3,minor:!0,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"focus-8",label:"Focus",lvl:8,major:3,minor:!0,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"fount-power-1",label:"Fount of Power",legacy:!0,lvl:1,major:3,minor:!0,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"fount-power-2",label:"Fount of Power",legacy:!0,lvl:2,major:3,minor:!0,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"jorum",label:"Jorum",lvl:-1,major:3,minor:!0,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"power-daras",label:"Power of Daras",legacy:!0,lvl:-1,major:3,minor:!1,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"resurge",label:"Resurge",legacy:!0,lvl:-1,major:2,minor:!1,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"store-1",label:"Store I",lvl:1,major:1,minor:!1,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"store-2",label:"Store II",lvl:2,major:2,minor:!1,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"store-3",label:"Store III",lvl:3,major:3,minor:!1,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"store-4",label:"Store IV",lvl:4,major:4,minor:!1,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"swordbreaker-3",label:"Swordbreaker",legacy:!0,lvl:3,major:3,minor:!0,validFor:["weapongear"],description:"An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d3 is added to the roll. "},{key:"swordbreaker-4",label:"Swordbreaker",legacy:!0,lvl:4,major:3,minor:!0,validFor:["weapongear"],description:"An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d4 is added to the roll. "},{key:"swordbreaker-5",label:"Swordbreaker",legacy:!0,lvl:5,major:3,minor:!0,validFor:["weapongear"],description:"An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d5 is added to the roll. "},{key:"swordbreaker-6",label:"Swordbreaker",legacy:!0,lvl:6,major:3,minor:!0,validFor:["weapongear"],description:"An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d6 is added to the roll. "},{key:"swordbreaker-7",label:"Swordbreaker",legacy:!0,lvl:7,major:3,minor:!0,validFor:["weapongear"],description:"An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d7 is added to the roll. "},{key:"swordbreaker-8",label:"Swordbreaker",legacy:!0,lvl:8,major:3,minor:!0,validFor:["weapongear"],description:"An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d8 is added to the roll. "},{key:"swordbreaker-9",label:"Swordbreaker",legacy:!0,lvl:9,major:3,minor:!0,validFor:["weapongear"],description:"An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d9 is added to the roll. "},{key:"swordbreaker-10",label:"Swordbreaker",legacy:!0,lvl:10,major:3,minor:!0,validFor:["weapongear"],description:"An enchantment which increases the damage to opposing weapons it blocks or is blocked by. When an opposing weapon makes a damage check as a result of blocking or being blocked by the Swordbreaker, 1d10 is added to the roll. "},{key:"talin-bane",label:"Talin's Bane",description:"",legacy:!0,lvl:-1,major:1,minor:!1,validFor:["weapongear"]},{key:"talin-eye",label:"Talin's Eye",minor:!0,validFor:["weapongear"],major:1,lvl:-1,description:""},{key:"tempering-pytama-1",label:"Tempering of Pytama",description:"<p>An enchantment to increase the Weapon Quality of a wholly metallic weapon. With success, WQ is increased by one (1). Tempering of Pytama cannot be combined with any other WQ-increasing spell, and cannot be laid more than once on the same weapon.</p>",lvl:1,major:-1,minor:!0,validFor:["weapongear"]},{key:"tempering-pytama-2",label:"Tempering of Pytama",lvl:2,major:-1,minor:!0,validFor:["weapongear"],description:"<p>An enchantment to increase the Weapon Quality of a wholly metallic weapon. With success, WQ is increased by two (2). Tempering of Pytama cannot be combined with any other WQ-increasing spell, and cannot be laid more than once on the same weapon.</p>"},{key:"tharasin-ward-1",label:"Tharasin's Ward",legacy:!0,lvl:1,major:-1,minor:!0,validFor:["armorgear"]},{key:"tharasin-ward-2",label:"Tharasin's Ward",legacy:!0,lvl:2,major:-1,minor:!0,validFor:["armorgear"]},{key:"tharasin-ward-3",label:"Tharasin's Ward",legacy:!0,lvl:3,major:-1,minor:!0,validFor:["armorgear"]},{key:"tharasin-ward-4",label:"Tharasin's Ward",legacy:!0,lvl:4,major:-1,minor:!0,validFor:["armorgear"]},{key:"tharasin-ward-5",label:"Tharasin's Ward",legacy:!0,lvl:5,major:-1,minor:!0,validFor:["armorgear"]},{key:"tharasin-ward-6",label:"Tharasin's Ward",legacy:!0,lvl:6,major:-1,minor:!0,validFor:["armorgear"]},{key:"theris-charm-5",label:"Theris' Charm",legacy:!0,lvl:5,major:3,minor:!1,validFor:["weapongear"],description:"The Charmed weapon gives its wielder a bonus in attack/defence equal to 5."},{key:"theris-charm-6",label:"Theris' Charm",legacy:!0,lvl:6,major:3,minor:!1,validFor:["weapongear"],description:"The Charmed weapon gives its wielder a bonus in attack/defence equal to 6."},{key:"theris-charm-7",label:"Theris' Charm",legacy:!0,lvl:7,major:3,minor:!1,validFor:["weapongear"],description:"The Charmed weapon gives its wielder a bonus in attack/defence equal to 7."},{key:"theris-charm-8",label:"Theris' Charm",description:"The Charmed weapon gives its wielder a bonus in attack/defence equal to 8.",legacy:!0,lvl:8,major:3,minor:!1,validFor:["weapongear"]},{key:"theris-charm-9",label:"Theris' Charm",description:"The Charmed weapon gives its wielder a bonus in attack/defence equal to 9.",legacy:!0,lvl:9,major:3,minor:!1,validFor:["weapongear"]},{key:"theris-charm-10",label:"Theris' Charm",description:"The Charmed weapon gives its wielder a bonus in attack/defence equal to 10.",legacy:!0,lvl:10,major:3,minor:!1,validFor:["weapongear"]},{key:"theris-charm-greater-5",label:"Theris' Charm, Greater",legacy:!0,lvl:10,major:4,minor:!1,validFor:["weapongear"],description:"The Charmed weapon gives its wielder a bonus in attack/defence equal to 10."},{key:"theris-charm-greater-6",label:"Theris' Charm, Greater",legacy:!0,lvl:12,major:4,minor:!1,validFor:["weapongear"],description:"The Charmed weapon gives its wielder a bonus in attack/defence equal to 12."},{key:"theris-charm-greater-7",label:"Theris' Charm, Greater",legacy:!0,lvl:14,major:4,minor:!1,validFor:["weapongear"],description:"The Charmed weapon gives its wielder a bonus in attack/defence equal to 14."},{key:"theris-charm-greater-8",label:"Theris' Charm, Greater",legacy:!0,lvl:16,major:4,minor:!1,validFor:["weapongear"],description:"The Charmed weapon gives its wielder a bonus in attack/defence equal to 16."},{key:"theris-charm-greater-9",label:"Theris' Charm, Greater",legacy:!0,lvl:18,major:4,minor:!1,validFor:["weapongear"],description:"The Charmed weapon gives its wielder a bonus in attack/defence equal to 18."},{key:"theris-charm-greater-10",label:"Theris' Charm, Greater",description:"The Charmed weapon gives its wielder a bonus in attack/defence equal to 20.",legacy:!0,lvl:20,major:4,minor:!1,validFor:["weapongear"]},{key:"vessel-iladan-5",label:"Vessel of Iladan",description:"",legacy:!0,lvl:15,major:4,minor:!1,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"vessel-iladan-6",label:"Vessel of Iladan",description:"",legacy:!0,lvl:18,major:4,minor:!1,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"vessel-iladan-7",label:"Vessel of Iladan",description:"",legacy:!0,lvl:21,major:4,minor:!1,validFor:["weapongear","missilegear","armorgear","containergear","miscgear"]},{key:"ward-akana",label:"Ward of Akana",description:"A Warded weapon never has to make a weapon damage check except as a result of conflict with an enchanted weapon. (Whenever a weapon with Ward of Akana is forced make a Weapon Damage check, it rolls one less die than would an unwarded weapon.)",legacy:!0,lvl:-1,major:2,minor:!0,validFor:["weapongear"]}],Object.freeze({CHARGE:"Charge",DISENGAGE:"Disengage",ENGAGE:"Engage",ESOTERIC_ATTACK:"Esoteric Attack",FREE_MOVE:"Free Move",GRAPPLE_ATTACK:"Grapple Attack",GROPE:"Grope",HALF_MOVE:"Half Move",MELEE_ATTACK:"Melee Attack",MISSILE_ATTACK:"Missile Attack",PASS:"Pass",REST:"Rest",RISE:"Rise"});const s=Object.freeze({CHARACTER:"character",CREATURE:"creature",CONTAINER:"container"}),n=Object.freeze({ANVIL_PYTAMA:"anvil-pytama",FOCUS:"focus",FOUNT_POWER:"fount-power",JORUM:"jorum",POWER_DARAS:"power-daras",RESURGE:"resurge",STORE:"store",SWORDBREAKER:"swordbreaker",TALIN_BANE:"talin-bane",TALIN_EYE:"talin-eye",TEMPERING_PYTAMA:"tempering-pytama",THARASIN_WARD:"tharasin-ward",THERIS_CHARM:"theris-charm",THERIS_CHARM_GREATER:"theris-charm-greater",VESSEL_ILADAN:"vessel-iladan",WARD_AKANA:"ward-akana"}),o=Object.freeze({BLUNT:"Blunt",EDGED:"Edged",FIRE:"Fire",FROST:"Frost",PIERCING:"Piercing"}),r=Object.freeze({ANIMAL:"Animal",CONNECTION:"Connection",FOE:"Foe",FOLLOWER:"Follower",FRIEND:"Friend",PARTY:"Party",STEED:"Steed"}),l=Object.freeze({BERSERK:"Berserk",BLINDED:"Blinded",BROKEN:"Broken",CAUTIOUS:"Cautious",CLOSE_MODE:"Close Mode",DEAFENED:"Deafened",DESPERATE:"Desperate",DISTRACTED:"Distracted",DYING:"Dying",EMPOWERED:"Empowered",GRAPPLED:"Grappled",INANIMATE:"Inanimate",INCAPACITATED:"Incapacitated",NO_FUMBLE:"No Fumble",NO_OUTNUMBERED:"No Outnumbered",NO_STUMBLE:"No Stumble",OUTNUMBERED:"Outnumbered",PRONE:"Prone",SECONDARY_HAND:"Secondary Hand",SHOCKED:"Shocked",STUNNED:"Stunned",UNCONSCIOUS:"Unconscious",WEAKENED:"Weakened"}),c=Object.freeze({ON_ABILITY_ROLL_D100:"hm3.onAbilityRollD100",ON_ABILITY_ROLL_D6:"hm3.onAbilityRollD6",ON_ACTOR_PREPARE_BASE_DATA:"hm3.onActorPrepareBaseData",ON_ACTOR_PREPARE_DERIVED_DATA:"hm3.onActorPrepareDerivedData",ON_BLOCK_RESUME:"hm3.onBlockResume",ON_DAMAGE_ROLL:"hm3.onDamageRoll",ON_DODGE_RESUME:"hm3.onDodgeResume",ON_DODGE_ROLL:"hm3.onDodgeRoll",ON_FUMBLE_ROLL:"hm3.onFumbleRoll",ON_HEALING_ROLL:"hm3.onHealingRoll",ON_IGNORE_RESUME:"hm3.onIgnoreResume",ON_INJURY_ROLL:"hm3.onInjuryRoll",ON_INVOCATION_ROLL:"hm3.onInvocationRoll",ON_item_PREPARE_DATA:"hm3.onItemPrepareData",ON_MELEE_ATTACK:"hm3.onMeleeAttack",ON_MELEE_COUNTERSTRIKE_RESUME:"hm3.onMeleeCounterstrikeResume",ON_MISSILE_ATTACK_ROLL:"hm3.onMissileAttackRoll",ON_MISSILE_ATTACK:"hm3.onMissileAttack",ON_MISSILE_DAMAGE_ROLL:"hm3.onMissileDamageRoll",ON_PSIONICS_ROLL:"hm3.onPsionicsRoll",ON_SHOCK_ROLL:"hm3.onShockRoll",ON_SKILL_ROLL:"hm3.onSkillRoll",ON_SPELL_ROLL:"hm3.onSpellRoll",ON_STUMBLE_ROLL:"hm3.onStumbleRoll",ON_WEAPON_ATTACK_ROLL:"hm3.onWeaponAttackRoll",ON_WEAPON_DEFEND_ROLL:"hm3.onWeaponDefendRoll",PRE_ABILITY_ROLL_D100:"hm3.preAbilityRollD100",PRE_ABILITY_ROLL_D6:"hm3.preAbilityRollD6",PRE_BLOCK_RESUME:"hm3.preBlockResume",PRE_DAMAGE_ROLL:"hm3.preDamageRoll",PRE_DODGE_RESUME:"hm3.preDodgeResume",PRE_DODGE_ROLL:"hm3.preDodgeRoll",PRE_FUMBLE_ROLL:"hm3.preFumbleRoll",PRE_HEALING_ROLL:"hm3.preHealingRoll",PRE_IGNORE_RESUME:"hm3.preIgnoreResume",PRE_INJURY_ROLL:"hm3.preInjuryRoll",PRE_INVOCATION_ROLL:"hm3.preInvocationRoll",PRE_MELEE_ATTACK:"hm3.preMeleeAttack",PRE_MELEE_COUNTERSTRIKE_RESUME:"hm3.preMeleeCounterstrikeResume",PRE_MISSILE_ATTACK_ROLL:"hm3.preMissileAttackRoll",PRE_MISSILE_ATTACK:"hm3.preMissileAttack",PRE_MISSILE_DAMAGE_ROLL:"hm3.preMissileDamageRoll",PRE_PSIONICS_ROLL:"hm3.prePsionicsRoll",PRE_SHOCK_ROLL:"hm3.preShockRoll",PRE_SKILL_ROLL:"hm3.preSkillRoll",PRE_SPELL_ROLL:"hm3.preSpellRoll",PRE_STUMBLE_ROLL:"hm3.preStumbleRoll",PRE_WEAPON_ATTACK_ROLL:"hm3.preWeaponAttackRoll",PRE_WEAPON_DEFEND_ROLL:"hm3.preWeaponDefendRoll"}),m=Object.freeze({BLOODLOSS:"bloodloss",DISEASE:"disease",HEALING:"healing",INFECTION:"infection",POISON:"poison",SHOCK:"shock",TOXIN:"toxin"}),d=Object.freeze({ARMORGEAR:"armorgear",ARMORLOCATION:"armorlocation",COMPANION:"companion",CONTAINERGEAR:"containergear",EFFECT:"effectgear",INJURY:"injury",INVOCATION:"invocation",MISCGEAR:"miscgear",MISSILEGEAR:"missilegear",PSIONIC:"psionic",SKILL:"skill",SPELL:"spell",TRAIT:"trait",WEAPONGEAR:"weapongear"}),u=Object.freeze({ABDOMEN:"Abdomen",CALF:"Calf",CUSTOM:"Custom",ELBOW:"Elbow",FACE:"Face",FOOT:"Foot",FOREARM:"Forearm",GROIN:"Groin",HAND:"Hand",HIP:"Hip",KNEE:"Knee",NECK:"Neck",SHOULDER:"Shoulder",SKULL:"Skull",TAIL:"Tail",TENTACLE:"Tentacle",THIGH:"Thigh",THORAX:"Thorax",UPPER_ARM:"Upper Arm",WING:"Wing"}),h=Object.freeze({COIN:"Coin",GEM:"Gem",HERB:"Herb",JEWELRY:"Jewelry",MISC:"Misc",POTION:"Potion",RIDER:"Rider",WRITTEN:"Written"}),g=Object.freeze({EXTREME:"Extreme",LONG:"Long",MEDIUM:"Medium",SHORT:"Short"}),p=Object.freeze({COMBAT:"Combat",COMMUNICATION:"Communication",CRAFT:"Craft",MAGIC:"Magic",PHYSICAL:"Physical",RITUAL:"Ritual"});function f(e){const t=e.system.skillBase;if(t.delta=0,t.isFormulaValid=!0,""===t.formula)return;let a=null;e.actor?.system&&(a=e.actor.system);let i=0,s=0,n=0,o=Number.MIN_SAFE_INTEGER,r=0;const l=t.formula.toLowerCase().split(",");if(l.length<3)t.isFormulaValid=!1;else for(let e of l){if(!t.isFormulaValid)break;if(e=e.trim(),""!=e){if(e.startsWith("@")){if(1===e.length){t.isFormulaValid=!1;break}if(i>=3){t.isFormulaValid=!1;break}if(a)switch(e.slice(1)){case"str":s+=a.abilities.strength.base,n+=a.abilities.strength.modified;break;case"sta":s+=a.abilities.stamina.base,n+=a.abilities.stamina.modified;break;case"dex":s+=a.abilities.dexterity.base,n+=a.abilities.dexterity.modified;break;case"agl":s+=a.abilities.agility.base,n+=a.abilities.agility.modified;break;case"int":s+=a.abilities.intelligence.base,n+=a.abilities.intelligence.modified;break;case"aur":s+=a.abilities.aura.base,n+=a.abilities.aura.modified;break;case"wil":s+=a.abilities.will.base,n+=a.abilities.will.modified;break;case"eye":s+=a.abilities.eyesight.base,n+=a.abilities.eyesight.modified;break;case"hrg":s+=a.abilities.hearing.base,n+=a.abilities.hearing.modified;break;case"sml":s+=a.abilities.smell.base,n+=a.abilities.smell.modified;break;case"voi":s+=a.abilities.voice.base,n+=a.abilities.voice.modified;break;case"cml":s+=a.abilities.comeliness.base,n+=a.abilities.comeliness.modified;break;case"mor":s+=a.abilities.morality.base,n+=a.abilities.morality.modified;break;case"end":s+=a.abilities.endurance.base,n+=a.abilities.endurance.modified;break;case"spd":s+=a.abilities.speed.base,n+=a.abilities.speed.modified;break;default:return void(t.isFormulaValid=!1)}i++;continue}if(e.match(/^[a-z]/)){let i=e.split(":");if(i.length>2){t.isFormulaValid=!1;break}if(2===i.length&&!i[1].trim().match(/[-+]?\d+/)){t.isFormulaValid=!1;break}if(a){let e=a.sunsign.trim().toLowerCase().split(/[-\/]/);e.map(Function.prototype.call,String.prototype.trim),e.includes(i[0])&&(o=Math.max(2===i.length?Number(i[1].trim()):1,o))}continue}if(!e.match(/^[-+]?\d+$/)){t.isFormulaValid=!1;break}r+=Number(e)}}3!=i&&(t.isFormulaValid=!1),a&&t.isFormulaValid&&(o=o>Number.MIN_SAFE_INTEGER?o:0,t.value=Math.round(n/3+Number.EPSILON)+o+r,s!==n&&(t.delta=n-s))}function y(e,t){let a=0;return t.forEach(t=>{if(e===t.name)a=Math.max(1,a);else{const i=t.name.match(`${e}-(\\d+)`);if(i){const e=Number(i[1])+1;a=Math.max(e,a)}}}),a?`${e}-${a}`:e}function k(e){if(!e)return null;const t=e.toLowerCase(),a=/\(([^\)]+)\)/;for(let e of i.defaultItemIcons.keys()){if(t===e)return i.defaultItemIcons.get(e);const s=a.exec(t);if(s&&e===s[1])return i.defaultItemIcons.get(e);if(t.startsWith(e))return i.defaultItemIcons.get(e)}return null}function b(e,t){var a=Object.keys(t);return Function(...a,"return `"+e+"`;")(...a.map(e=>t[e]))}function S(e){if(isNaN(e))return NaN;for(var t=String(+e).split(""),a=["","C","CC","CCC","CD","D","DC","DCC","DCCC","CM","","X","XX","XXX","XL","L","LX","LXX","LXXX","XC","","I","II","III","IV","V","VI","VII","VIII","IX"],i="",s=3;s--;)i=(a[+t.pop()+10*s]||"")+i;return Array(+t.join("")+1).join("M")+i}function v(e){const t=e.duration;if(Number.isNumeric(t.seconds)){const a="Indefinite"===t.label,i=(t.label,t.startTime||game.time.worldTime),s=game.time.worldTime-i,n=s<0?t.seconds:Math.max(t.seconds-s,0),o=a?"Indefinite":C(n);let r=C(-s);return"Pending"!==e.system.status&&(r=e.system.status),{duration:t.seconds,label:o,remaining:n,start:i,startLabel:r,type:"seconds"}}if(t.rounds||t.turns){const e=game.combat,a={round:e?.round??0,turn:e?.turn??0,nTurns:e?.turns.length??1};let i=Math.max(a.round-(t.startRound||0),0),s=a.turn-(t.startTurn||0);s<0&&(i-=1,s+=a.nTurns);let n=(t.rounds||0)-i,o=(t.turns||0)-s;o<0?(n-=1,o+=a.nTurns):o>a.nTurns&&(n+=Math.floor(o/a.nTurns),o%=a.nTurns),n<0&&(n=0,o=0);const r=n+o/100;return{duration:(a.rounds||0)+(a.turns||0)/100,label:[n>0?`${n} Rounds`:null,o>0?`${o} Turns`:null,n+o===0?"None":null].filterJoin(", "),remaining:r,startLabel:"Running",type:"turns"}}return{type:"none",duration:null,remaining:null,label:"None"}}function w(e){return e.changes&&e.changes.length?e.changes.map(e=>{const t=CONST.ACTIVE_EFFECT_MODES,a=e.key;let s=0,n="";const o=T(e.value);if(2===o.length){s=I(Number.parseFloat(o[1]))||0;const e=o[0];switch(a){case"system.eph.itemEMLMod":n=`${e} EML`;break;case"system.eph.itemAMLMod":n=`${e} AML`;break;case"system.eph.itemDMLMod":n=`${e} DML`}}else s=e.value,n=i.activeEffectKey[a];switch(e.mode){case t.ADD:return`${n} ${s<0?"-":"+"} ${Math.abs(s)}`;case t.MULTIPLY:return`${n} x ${s}`;case t.OVERRIDE:return`${n} = ${s}`;case t.UPGRADE:return`${n} >= ${s}`;case t.DOWNGRADE:return`${n} <= ${s}`;default:return`${n} custom`}}).join(", ").replace("Endurance","END").replace("Strength","STR").replace("Stamina","STA"):"No Changes"}function C(e){if(e===Number.MAX_SAFE_INTEGER)return"None";const t=e%3600;return`${Math.floor(e/3600)}:${Number(Math.floor(t/60)).toString().padStart(2,"0")}:${Number(t%60).toString().padStart(2,"0")}`}function M(e,{actor:t,token:a,rollResult:i,rollData:s,item:n}={}){let o=null;t||(a?(t=a.actor,o=ChatMessage.getSpeaker({token:a.document})):(o=ChatMessage.getSpeaker(),a=(t=game.actors.get(o.actor)).isToken?t.token:null)),o=o||ChatMessage.getSpeaker({actor:t});const r={speaker:o,actor:t,token:a=(a=t.isToken&&!a?t.token:a)||(canvas.ready?canvas.tokens.get(o.token):null),character:game.user.character,rollResult:i,scene:canvas.scene};s&&(r.rollData=s),n&&(r.item=n);const l=e.command.includes("await")?"async":"",c=n?", item":"",m=s?", rollData":"";let d=null;try{d=new Function(`"use strict";\n            return (${l} function ({speaker, actor, token, character, rollResult ${c} ${m}}={}) {\n                ${e.command}\n                });`)().call(e,r)}catch(e){ui.notifications.error("There was an error in your macro syntax. See the console (F12) for details"),console.error(e)}return d}function T(e){const t=e.lastIndexOf(":");return-1===t?[e]:[e.slice(0,t).trim(),e.slice(t+1).trim()]}function I(e,t=2){return Math.round((e+Number.EPSILON)*10**t)/10**t}function E(e){return game.actors.contents.find(t=>e.getFlag("hm3","ownerId")===t.id)}function A(e){return game.settings.get("hm3","truncateHighValueSkills")?e<=70?e:e<=72?71:e<=74?72:e<=76?73:e<=78?74:e<=80?75:e<=82?76:e<=84?77:e<=86?78:e<=88?79:e<=90?80:e<=94?81:e<=98?82:e<=102?83:e<=106?84:e<=110?85:e<=114?86:e<=118?87:88:e}function N(e){return"function"==typeof js_beautify?js_beautify(e,{indent_size:4,indent_char:" ",indent_with_tabs:!1,editorconfig:!1,eol:"\n",end_with_newline:!1,indent_level:0,preserve_newlines:!0,max_preserve_newlines:10,space_in_paren:!1,space_in_empty_paren:!1,jslint_happy:!1,space_after_anon_function:!1,space_after_named_function:!1,brace_style:"collapse",unindent_chained_methods:!1,break_chained_methods:!1,keep_array_indentation:!1,unescape_strings:!1,wrap_line_length:0,e4x:!1,comma_first:!1,operator_position:"before-newline",indent_empty_lines:!1,templating:["auto"]}):e.trim()}async function D(e,{actor:t=null,success:a=!0}={}){if(game.settings.get("hm3","autoMarkUsedSkills")){const i=[d.SKILL,d.PSIONIC,d.WEAPONGEAR,d.MISSILEGEAR];("string"==typeof e||e instanceof String)&&t&&(e=t.items.find(t=>t.name===e&&i.includes(t.type))),e instanceof Item&&i.includes(e.type)&&e.parent instanceof Actor&&e.parent.skillImprovement&&await game.hm3.socket.executeAsGM("improveFlag",e.uuid,a)}}async function L(e,t){await game.hm3.socket.executeAsGM("weaponBroke",e.uuid,t)}async function R(e,t){await game.hm3.socket.executeAsGM("fatigueReceived",e.uuid,t)}function O(){return[...game.actors.values().filter(e=>(!e.player||e.player.active)&&e.prototypeToken.actorLink&&e.isOwner),...canvas.tokens.ownedTokens.values().filter(e=>!e.document.actorLink&&e.actor.isOwner).map(e=>e.actor)]}class _{static async d100StdRoll(e){const t=e.speaker||ChatMessage.getSpeaker(),a={effSkillBase:e.effSkillBase,fluff:e.fluff||null,isAbility:e.isAbility||!1,isCraftOrLore:e.isCraftOrLore||!1,isTreatment:"treatment"===e.type||!1,label:e.label,modifier:e.modifier||0,name:t.alias,physicianSkills:e.physicianSkills||[],skill:e.skill,subType:e.subType||m.HEALING,target:e.target,treatmentTable:e.treatmentTable,type:e.type};let i;if(i=e.fastforward?await _.rollTest({diceNum:1,diceSides:100,modifier:e.modifier||0,target:e.target,type:e.type}):e.skill?.includes("Climbing")?await _.d100ClimbingDialog(a):e.skill?.includes("Jumping")?await _.d100JumpingDialog(a):await _.d100StdDialog(a),!i)return null;const s=e.addlInfoCallback?e.addlInfoCallback(i):i.preData.addlInfoCallback?i.preData.addlInfoCallback(i):void 0,n=foundry.utils.mergeObject(e.notesData,{actor:t.alias,isCF:!i.isSuccess&&i.isCritical,isCritical:i.isCritical,isCS:i.isSuccess&&i.isCritical,isMF:!i.isSuccess&&!i.isCritical,isMS:i.isSuccess&&!i.isCritical,isSubstantial:i.isSubstantial,isSuccess:i.isSuccess,modifier:e.modifier,roll:i.rollObj.total,rollText:i.description,target:e.target||i.target-i.modifier});let o=e.notes?b(e.notes,n):"";const r=i.preData.multiplier||e.multiplier||5;let l=e.label;e.isAbility&&(l=e.label.replace(`${e.skill} Roll`,`${e.skill} x${r} Roll`)),i.preData.isAppraisal&&(l=e.label.replace("Skill Test","Appraisal Test"));let c=null;e.fluffResult&&(c=i.isCritical?i.isSuccess?e.fluffResult.CS:e.fluffResult.CF:i.isSuccess?e.fluffResult.MS:e.fluffResult.MF,i.preData.isTreatment&&i.preData.noTreatment&&(e.fluff=null,c="No Treatment"));const d={addlInfo:s,description:i.description,falling:a.falling,fluff:e.fluff?e.fluff.startsWith("<p>")?e.fluff:"<p>"+e.fluff+"</p>":void 0,fluffResult:c?c.startsWith("<p>")?c:"<p>"+c+"</p>":void 0,isCritical:i.isCritical,isSubstantial:i.isSubstantial,isSuccess:i.isSuccess,modifiedTarget:i.target,modifier:Math.abs(i.modifier),name:e.name||"",notes:o,origTarget:e.target||i.target-i.modifier,plusMinus:i.modifier<0?"-":"+",roll:i,rollResult:i.rollObj.total,rollValue:i.rollObj.total,showResult:!1,title:l,tokenId:t.token,type:i.type,visibleActorId:t.actor},u=await renderTemplate("systems/hm3/templates/chat/standard-test-card.hbs",d),h=this.getRollMode({blind:e.blind,isAppraisal:i.preData.isAppraisal,private:e.private,skill:e.skill}),g={content:u.trim(),roll:i.rollObj,sound:CONFIG.sounds.dice,speaker:t,style:CONST.CHAT_MESSAGE_STYLES.OTHER,user:game.user.id},p={rollMode:h};return await i.rollObj.toMessage(g,p),d}static async d100ClimbingDialog(e){let t={effSkillBase:e.effSkillBase,modifier:e.modifier,target:e.target,difficulty:"Easy",difficulties:[{key:"Easy"},{key:"Hard"},{key:"Very Hard"}],gear:"0",gears:[{key:"0",label:"No climbing gear (+0 EML)"},{key:"10",label:"Ordinary climbing gear (+10 EML)"},{key:"20",label:"Good climbing gear (+20 EML)"}]};const a=await renderTemplate("systems/hm3/templates/dialog/climbing-test-dialog.hbs",t);return Dialog.prompt({content:a.trim(),label:"Roll",options:{width:470},title:e.label,callback:t=>{const a=t[0].querySelector("form"),i=a.modifier.value,s=a.difficulties.value,n=a.gears.value;let o=e.target;return _.rollTest({addlInfoCallback:t=>{const a=`Vertical progress (${s}):`,i={Easy:30,Hard:20,"Very Hard":10},n={Easy:15,Hard:10,"Very Hard":5},o={Easy:0,Hard:-5,"Very Hard":-10};return t.isSuccess?t.isCritical?`<p>${a} +${i[s]} ft</p>`:`<p>${a} +${I(t.isSubstantial?1.25*n[s]:n[s],0)} ft</p>`:t.isCritical?(e.falling=!0,`${e.name} loses grip and falls.`):`<p>${a} ${I(t.isSubstantial?1.25*o[s]:o[s],0)} ft</p><p>Negative progress indicates the character has encountered an obstacle and been forced to backtrack.</p>`},data:null,diceNum:1,diceSides:100,modifier:Number(i)+Number(n),name:e.name,target:o,type:e.type})}})}static async d100JumpingDialog(e){let t={effSkillBase:e.effSkillBase,modifier:e.modifier,target:e.target,jump:"Long",jumps:[{key:"Long"},{key:"High"}],start:"1",starts:[{key:"1",label:"Running start"},{key:"2",label:"Standing jump"}]};const a=await renderTemplate("systems/hm3/templates/dialog/jumping-test-dialog.hbs",t);return Dialog.prompt({content:a.trim(),label:"Roll",title:e.label,callback:a=>{const i=a[0].querySelector("form"),s=i.modifier.value,n=i.jumps.value,o=i.starts.value,r=t.starts[i.starts.selectedIndex].label,l=5/Number(o);let c=e.target;return _.rollTest({addlInfoCallback:t=>{const a=`${n} jump (${r}):`,i={High:1,Long:3},s={High:.75,Long:2},o={High:.5,Long:1};return t.isSuccess?t.isCritical?`<p>${a} ${truncate(l*i[n],0)} ft</p>`:`<p>${a} ${truncate(l*(t.isSubstantial?1.25*s[n]:s[n]),0)} ft</p>`:t.isCritical?`${e.name} stumbles.`:`<p>${a} ${truncate(l*(t.isSubstantial?.75*o[n]:o[n]),0)} ft</p>`},data:null,diceNum:1,diceSides:100,modifier:Number(s),name:e.name,target:c,type:e.type})}})}static async d100StdDialog(e){let t=e.template||"systems/hm3/templates/dialog/standard-test-dialog.hbs",a={effSkillBase:e.effSkillBase,fluff:e.fluff||null,isAbility:e.isAbility||!1,isCraftOrLore:e.isCraftOrLore||!1,isTreatment:e.isTreatment||!1,isMorale:"Morale-d100"===e.type,modifier:e.modifier,target:e.target};a.isAbility&&(a.multiplier=5,a.multipliers=[{key:1,label:`${e.skill} x1 (EML ${1*e.effSkillBase})`},{key:2,label:`${e.skill} x2 (EML ${2*e.effSkillBase})`},{key:3,label:`${e.skill} x3 (EML ${3*e.effSkillBase})`},{key:4,label:`${e.skill} x4 (EML ${4*e.effSkillBase})`},{key:5,label:`${e.skill} x5 (EML ${5*e.effSkillBase})`},{key:6,label:`${e.skill} x6 (EML ${6*e.effSkillBase})`},{key:7,label:`${e.skill} x7 (EML ${7*e.effSkillBase})`}]),a.isMorale&&(a.moraleModification=0,a.moraleModifications=[{key:-20,label:"Desperate Situation (EML -20)"},{key:-10,label:"Bad Situation (EML -10)"},{key:0,label:"Normal Situation (EML +0)"},{key:10,label:"Good Situation (EML +10)"},{key:20,label:"Excellent Situation (EML +20)"}]),e.type===m.HEALING&&(e.subType===m.HEALING||e.subType===m.SHOCK?(a.isPhysician=!0,a.physicianSkills=e.physicianSkills.map(e=>({key:e.uuid,label:`${e.actor.name} (EML/2 ${Math.round(e.system.effectiveMasteryLevel/2)})`,value:Math.round(e.system.effectiveMasteryLevel/2)})),a.physicianSkills.push({key:0,label:"3rd Party Physician skill"}),a.physicianEml=a.physicianSkills[0].key,a.physicianMod="EML/2"):e.subType===m.INFECTION&&(a.isPhysician=!0,a.physicianSkills=e.physicianSkills.map(e=>({key:e.uuid,label:`${e.actor.name} (SI ${Math.floor(e.system.masteryLevel/10)})`,value:Math.floor(e.system.masteryLevel/10)})),a.physicianSkills.push({key:0,label:"3rd Party Physician skill"}),a.physicianEml=a.physicianSkills[0].key,a.physicianMod="SI")),a.isTreatment&&(a.treatmentModifier=e.treatmentTable.eml,a.physicianSkills=e.physicianSkills.map(e=>({key:e.uuid,label:`${e.actor.name} (EML ${e.system.effectiveMasteryLevel})`,value:e.system.effectiveMasteryLevel})),a.physicianSkills.push({key:"Other",label:"3rd Party Physician skill",value:0},{key:"NT",label:"No Treatment",value:-1}),a.physicianEml=a.physicianSkills[0].value,a.physicianMod="EML");const i=await renderTemplate(t,a);return Dialog.prompt({title:e.label,content:i.trim(),label:"Roll",options:{width:520},callback:t=>{const i=t[0].querySelector("form"),s=i.modifier.value,n=fromUuidSync(i.physicianEml?.value);let o=0,r=!1,l=!1;n?"EML"===a.physicianMod?o=n.system.effectiveMasteryLevel:"EML/2"===a.physicianMod?o=Math.round(n.system.effectiveMasteryLevel/2):"SI"===a.physicianMod&&(o=Math.floor(n.system.effectiveMasteryLevel/10)):"NT"===i.physicianEml?.value&&(r=!0);const c=i.target.value;let m=i.treatmentModifier?.value||"0";const d=i.appraisal?.checked||!1,u=i.moraleModifications?.value||"0",h=i.multipliers?.selectedIndex+1||-1;let g=isNaN(Number(c))?e.target:Number(c);e.isAbility&&(g=e.effSkillBase*h),d&&(g=Math.max(e.target+e.effSkillBase,5*e.effSkillBase)),e.isHealingRoll&&(l=!0),e.isTreatment&&(g=isNaN(Number(o))?e.target:Number(o),l=!0,r&&(m="0"));const p=!isNaN(Number(o))&&a.isPhysician?Number(o):0;return _.rollTest({data:null,diceNum:1,diceSides:100,isAbility:e.isAbility,isAppraisal:d,isTreatment:e.isTreatment,modifier:Number(s)+Number(m)+Number(u)+p,multiplier:h,name:e.name,noSubstantial:l,noTreatment:r,physician:n,target:g,type:e.type})}})}static async d6Roll(e){const t=e.speaker||ChatMessage.getSpeaker(),a=this.getRollMode({skill:e.skill}),i={items:e.items,label:e.label,modifier:e.modifier||0,numdice:Number(e.numdice),target:Number(e.target),type:e.type},s=e.fastforward?await _.rollTest({diceNum:Number(e.numdice),diceSides:6,modifier:e.modifier||0,target:e.target,type:e.type}):await _.d6Dialog(i);if(!s)return null;const n=foundry.utils.mergeObject(e.notesData,{actor:t.alias,isSuccess:s.isSuccess,roll:s.rollObj.total,rollText:s.description,target:e.target}),o=e.notes?b(e.notes,n):"",r=!e.noTA&&["fumble","kill","shock","stumble"].includes(e.type)&&await game.hm3.macros.isTAPossible(canvas.tokens.get(e.token)),l={addlInfo:!s.isSuccess&&r?"<p>Opponent gains a Tactical Advantage.</p>":"",atkTokenId:e.opponentToken?.id,description:s.description,isSuccess:s.isSuccess,modifiedTarget:s.target,modifier:Math.abs(s.modifier),notes:o,origTarget:e.target,ota:!s.isSuccess&&r,plusMinus:s.modifier<0?"-":"+",roll:s,rollResult:s.rollObj.dice[0].values.join(" + "),rollValue:s.rollObj.total,showResult:s.rollObj.dice[0].values.length>1,title:e.label,type:e.type,visibleActorId:e.opponentToken?.actor?.id},c={content:(await renderTemplate("systems/hm3/templates/chat/standard-test-card.hbs",l)).trim(),roll:s.rollObj,sound:CONFIG.sounds.dice,speaker:t,style:CONST.CHAT_MESSAGE_STYLES.OTHER,user:game.user.id},m={rollMode:a};return await s.rollObj.toMessage(c,m),l}static async d6Dialog(e){let t=e.template||"systems/hm3/templates/dialog/standard-test-dialog.hbs",a={target:e.target,modifier:e.modifier};const i=await renderTemplate(t,a);return Dialog.prompt({title:e.label,content:i.trim(),label:"Roll",callback:t=>{const a=t[0].querySelector("form").modifier.value;return _.rollTest({type:e.type,target:e.target,data:null,diceSides:6,diceNum:e.numdice,modifier:a})}})}static async sdrRoll(e,t=!0){const a=ChatMessage.getSpeaker({actor:e.actor});let i=await game.hm3.macros.rollObjectEvaluatedAsync(`1d100 + ${e.system.skillBase.value}`,{name:e.actor.name,type:"sdrRoll"});const s=i.total>e.system.masteryLevel,n=(RegExp("(([^)]+))"),e.name.match(/\(([^\)]+)\)/)),o={description:s?"Success":"Failure",isSuccess:s,modifiedTarget:e.system.masteryLevel,modifier:0,notes:"",origTarget:e.system.masteryLevel,rollResult:i.result,rollValue:i.total,sdrIncr:s?n?2:1:0,showResult:!0,title:`${e.name} Skill Development Roll`};if(n&&s&&(o.notes=`Since this is a specialized skill of ${n[1]}, ML will be increased by 2`),!t)return o;const r={content:(await renderTemplate("systems/hm3/templates/chat/standard-test-card.hbs",o)).trim(),roll:i,sound:CONFIG.sounds.dice,speaker:a,style:CONST.CHAT_MESSAGE_STYLES.OTHER,user:game.user.id};return ChatMessage.applyRollMode(r,game.settings.get("core","rollMode")),await ChatMessage.create(r),o}static async injuryRoll(e){const t=e.speaker||ChatMessage.getSpeaker({actor:e.actor});let a=null;if(void 0===e.impact){let t=_._getHitLocations(e.actor.items);const i={actor:e.actor,data:e.actor.system,hitLocations:t,items:e.actor.items};a=await _.injuryDialog(i)}else a=_._calcInjury(e.location?e.location:"Random",e.impact,e.aspect,"disable"!==game.settings.get("hm3","addInjuryToActorSheet"),e.aim,e);if(!a)return null;a&&e.tokenId&&(a.tokenId=e.tokenId),a&&e.atkToken&&(a.atkToken=e.atkToken),a.addToCharSheet&&_.createInjury(e.actor,a);const i=foundry.utils.mergeObject({opponentTokenId:e.atkToken?.id,isShockRoll:a.injuryLevel>0&&!e.actor.hasCondition(l.INANIMATE),title:`${e.actor.token?e.actor.token.name:e.actor.name} Injury`,visibleActorId:e.actor.id},a),s={speaker:t,content:(await renderTemplate("systems/hm3/templates/chat/injury-card.hbs",i)).trim(),user:game.user.id,type:CONST.CHAT_MESSAGE_STYLES.OTHER,sound:CONFIG.sounds.notify},n={rollMode:game.settings.get("core","rollMode")};return await ChatMessage.create(s,n),game.settings.get("hm3","combatAudio")&&foundry.audio.AudioHelper.play({src:"systems/hm3/audio/grunt1.ogg",autoplay:!0,loop:!1},!0),a}static createInjury(e,t){const a={Blunt:{M:"Bruise",S:"Fracture",G:"Crush"},Edged:{M:"Cut",S:"Slash",G:"Gash"},Fire:{M:"Singe",S:"Burn",G:"Scorch"},Frost:{M:"Chilled Flesh",S:"Frostbite",G:"Frostbite"},Piercing:{M:"Poke",S:"Stab",G:"Impale"}};if(0===t.injuryLevel)return;let i;i=1===t.injuryLevel?"M":t.injuryLevel<=3?"S":"G";let s=t.location;a[t.aspect]&&(s=`${t.location} ${a[t.aspect][i]}`);const n=t.atkToken?.name,o=SimpleCalendar?.api?.currentDateTimeDisplay();let r="";return r+=n?`From '${n}' in '${game.scenes.current.name}' `:`In '${game.scenes.current.name}' `,r+=o?`${o.date} ${o.yearPostfix} (Aspect: ${t.aspect})`:`(Aspect: ${t.aspect})`,Item.create({name:s,type:"injury",system:{aspect:t.aspect,healRate:0,injuryLevel:t.injuryLevel,notes:r,severity:i,subType:m.HEALING}},{parent:e})}static _getHitLocations(e){let t=["Random"];return e.forEach(e=>{e.type===d.ARMORLOCATION&&-1===t.indexOf(e.name)&&t.push(e.name)}),t}static async injuryDialog(e){const t=game.settings.get("hm3","addInjuryToActorSheet");let a=e.template||"systems/hm3/templates/dialog/injury-dialog.hbs",i={aim:"mid",location:"Random",impact:0,aspect:o.BLUNT,askRecordInjury:"ask"===t,hitLocations:e.hitLocations};const s=await renderTemplate(a,i);return Dialog.prompt({title:e.label,content:s.trim(),label:"Determine Injury",callback:async a=>{const s=a[0].querySelector("form"),n=s.aim.value,o=s.aspect.value,r=s.dice.value,l=await game.hm3.macros.rollResultAsync(r+"+"+s.impact.value,{name:e.actor.name,type:"injuryRoll"}),c=s.location.value,m=i.askRecordInjury?s.addToCharSheet.checked:"enable"===t;return _._calcInjury(c,l,o,m,n,e)}})}static _calcInjury(e,t,a,i,s,n){const r=game.settings.get("hm3","amputation"),c=game.settings.get("hm3","bloodloss"),m=game.settings.get("hm3","limbInjuries"),d={addToCharSheet:i,aim:s,armorType:"None",armorValue:0,aspect:a,effectiveImpact:t,impact:t,injuryLevel:0,injuryLevelText:"NA",isAmputate:!1,isBleeder:!1,isFumble:!1,isFumbleRoll:!1,isInjured:!1,isKillShot:!1,isRandom:"Random"===e,isStumble:!1,isStumbleRoll:!1,location:e,name:n.name,noArmor:n.noArmor||!1,type:"injury"},u=_._calcLocation(e,s,n.items);if(!u)return;const h=u.system;switch(d.location=u.name,d.armorType=""===h.layers||n.noArmor?"None":h.layers,n.noArmor||(a===o.BLUNT?d.armorValue=h.blunt:a===o.EDGED?d.armorValue=h.edged:a===o.PIERCING?d.armorValue=h.piercing:d.armorValue=h.fire),d.effectiveImpact=Math.max(t-d.armorValue,0),0===d.effectiveImpact?d.injuryLevelText="NA":d.effectiveImpact>=17?d.injuryLevelText=h.effectiveImpact.ei17:d.effectiveImpact>=13?d.injuryLevelText=h.effectiveImpact.ei13:d.effectiveImpact>=9?d.injuryLevelText=h.effectiveImpact.ei9:d.effectiveImpact>=5?d.injuryLevelText=h.effectiveImpact.ei5:d.injuryLevelText=h.effectiveImpact.ei1,n.actor.hasCondition(l.INANIMATE)&&"K"===d.injuryLevelText[0]&&(d.injuryLevelText=d.injuryLevelText.replace("K","G")),d.injuryLevelText){case"M1":d.injuryLevel=1;break;case"S2":d.injuryLevel=2;break;case"S3":d.injuryLevel=3;break;case"G4":d.injuryLevel=4,d.isAmputate=r&&h.isAmputate&&a===o.EDGED;break;case"K4":d.injuryLevel=4,d.isKillShot=!0,d.isAmputate=r&&h.isAmputate&&a===o.EDGED;break;case"G5":d.injuryLevel=5,d.isAmputate=r&&h.isAmputate&&a===o.EDGED;break;case"K5":d.injuryLevel=5,d.isKillShot=!0,d.isAmputate=r&&h.isAmputate&&a===o.EDGED;break;case"NA":d.injuryLevel=0}return d.injuryLevel>0?(d.isInjured=!0,d.isBleeder=c&&d.injuryLevel>=4&&d.aspect!=o.FIRE,h.isFumble&&!n.actor.hasCondition(l.NO_FUMBLE)&&(d.isFumble=m&&d.injuryLevel>=4,d.isFumbleRoll=m||!d.isFumble&&d.injuryLevel>=2),h.isStumble&&!n.actor.hasCondition(l.NO_STUMBLE)&&(d.isStumble=m&&d.injuryLevel>=4,d.isStumbleRoll=m||!d.isStumble&&d.injuryLevel>=2),d):d}static _calcLocation(e,t,a){const i=t.toLowerCase();let s=null;if("random"===e.toLowerCase()){let n=0,o=0;if(a.forEach(e=>{e.type===d.ARMORLOCATION&&(n+=e.system.probWeight[i],o++)}),0===o)return null;n%100&&game.user.isGM&&ui.notifications.warn(`Armor prob weight is NOT equal to 100, 1000 or 10000. ${e} ${t} ${a.contents.length?a.contents[0].parent.name:"Unknown"} ${n}`,{permanent:!0});let r=0;n>0&&(r=Math.floor(foundry.dice.MersenneTwister.random()*n)+1);let l=!1;a.forEach(e=>{l||e.type!==d.ARMORLOCATION||(r-=e.system.probWeight[i],r<=0&&(s=e,l=!0))})}else a.forEach(t=>{null===s&&t.type===d.ARMORLOCATION&&t.name===e&&(s=t)});return s}static async damageRoll(e){const t=e.speaker||ChatMessage.getSpeaker();let a=_.calcWeaponAspect(e.weapon,e.data.items);const i={type:"damage",weapon:e.weapon,weaponAspect:e.aspect?e.aspect:a.defaultAspect,weaponAspects:a.aspects,data:e.actorData},s=await _.damageDialog(i);if(!s)return null;let n="Other Weapon Damage";""!=e.weapon&&(n=`${e.weapon} Damage`);const o=a.aspects[s.chosenAspect]+s.addlWeaponImpact+s.rollObj.total,r=foundry.utils.mergeObject(e.notesData,{actor:t.alias,aspect:s.chosenAspect,dice:Number(s.damageDice),impact:a.aspects[s.chosenAspect],addlImpact:s.addlWeaponImpact,totalImpact:o,roll:s.rollObj.total}),l=e.notes?b(e.notes,r):"",c={title:n,weaponAspect:s.chosenAspect,damageDice:Number(s.damageDice),weaponImpact:a.aspects[s.chosenAspect],addlWeaponImpact:s.addlWeaponImpact,totalImpact:o,impactRoll:s.rollObj.dice[0].values.join(" + "),rollValue:s.rollObj.total,notes:l,roll:s},m={content:(await renderTemplate("systems/hm3/templates/chat/damage-card.hbs",c)).trim(),roll:s.rollObj,sound:CONFIG.sounds.dice,speaker:t,style:CONST.CHAT_MESSAGE_STYLES.OTHER,user:game.user.id};return ChatMessage.applyRollMode(m,game.settings.get("core","rollMode")),await ChatMessage.create(m,{}),c}static calcWeaponAspect(e,t){const a={defaultAspect:"Other",aspects:{Blunt:0,Edged:0,Fire:0,Frost:0,Piercing:0,Other:0}};return t.forEach(t=>{const i=t.system;if("weapongear"===t.type&&t.name===e){let e=Math.max(i.blunt,i.piercing,i.edged,0);a.aspects[o.BLUNT]=i.blunt,a.aspects[o.EDGED]=i.edged,a.aspects[o.PIERCING]=i.piercing,e===i.piercing?a.defaultAspect=o.PIERCING:e===i.edged?a.defaultAspect=o.EDGED:e===i.blunt?a.defaultAspect=o.BLUNT:a.defaultAspect="Other"}}),a}static async damageDialog(e){let t=e.template||"systems/hm3/templates/dialog/damage-dialog.hbs",a={weapon:e.weapon,damageDice:1,weaponAspect:e.weaponAspect,weaponAspects:e.weaponAspects,addlWeaponImpact:0};const i=await renderTemplate(t,a);return Dialog.prompt({title:e.label,content:i.trim(),label:"Roll",callback:async t=>{const a=t[0].querySelector("form"),i=Number(a.addlWeaponImpact.value),s=Number(a.damageDice.value),n=a.weaponAspect.value;let o=await _.rollTest({type:e.type,target:0,data:e.data,diceSides:6,diceNum:s,modifier:0});return{type:o.type,chosenAspect:n,damageDice:s,addlWeaponImpact:i,rollObj:o.rollObj}}})}static async missileAttackRoll(e){const t=e.speaker||ChatMessage.getSpeaker(),a=await _.missileAttackDialog(e);if(!a)return null;const i=foundry.utils.mergeObject(e.notesData,{actor:t.alias,aspect:e.aspect,range:a.range,rangeModifier:a.rangeModifier,addlModifier:a.addlModifier,target:a.modifiedTarget,isSuccess:a.isSuccess,isCritical:a.isCritical,isCS:a.isSuccess&&a.isCritical,isMS:a.isSuccess&&!a.isCritical,isMF:!a.isSuccess&&!a.isCritical,isCF:!a.isSuccess&&a.isCritical,roll:a.rollObj.total}),s=e.notes?b(e.notes,i):"",n={title:`${e.name} Attack`,addlModifier:Math.abs(a.addlModifier),amPlusMinus:a.addlModifier<0?"-":"+",aspect:e.aspect,debug:CONFIG.debug.hm3&&game.user.isGM,description:a.description,isCritical:a.isCritical,isSuccess:a.isSuccess,modifiedTarget:a.modifiedTarget,notes:s,origTarget:e.target,range:a.range,rangeModifier:Math.abs(a.rangeModifier),rmPlusMinus:a.rangeModifier<0?"-":"+",roll:a,rollFormula:a.rollObj.formula,rollResult:a.rollObj.result,rollValue:a.rollObj.total},o={content:(await renderTemplate("systems/hm3/templates/chat/missile-attack-card.hbs",n)).trim(),roll:a.rollObj,sound:CONFIG.sounds.dice,speaker:t,style:CONST.CHAT_MESSAGE_STYLES.OTHER,user:game.user.id};return ChatMessage.applyRollMode(o,game.settings.get("core","rollMode")),await ChatMessage.create(o,{}),n}static async missileAttackDialog(e){let t=e.template||"systems/hm3/templates/dialog/attack-dialog.hbs",a={aimLocations:["High","Mid","Low"],defaultAim:"Mid",target:e.target};const i=`Short (${e.rangeShort})`,s=`Medium (${e.rangeMedium})`,n=`Long (${e.rangeLong})`,o=`Extreme (${e.rangeExtreme})`;a.ranges={},a.ranges[i]="Short",a.ranges[s]="Medium",a.ranges[n]="Long",a.ranges[o]="Extreme",a.rangeExceedsExtreme=!1,a.defaultRange=o;const r=await renderTemplate(t,a);return e.name,Dialog.prompt({title:e.label,content:r.trim(),label:"Roll",callback:async t=>{const a=t[0].querySelector("form"),o=Number(a.addlModifier.value);let r,l=a.range.value;l===i?(r=0,l="Short"):l===s?(r=-20,l="Medium"):l===n?(r=-40,l="Long"):(r=-80,l="Extreme");let c=await _.rollTest({type:e.type,target:e.target,data:e.data,diceSides:100,diceNum:1,modifier:o+r});return{type:c.type,origTarget:e.target,range:l,rangeModifier:r,addlModifier:o,modifiedTarget:Number(e.target)+r+o,isSuccess:c.isSuccess,isCritical:c.isCritical,description:c.description,rollObj:c.rollObj}}})}static async missileDamageRoll(e){const t=e.speaker||ChatMessage.getSpeaker(),a={name:e.name,ranges:{Short:e.impactShort,Medium:e.impactMedium,Long:e.impactLong,Extreme:e.impactExtreme},defaultRange:e.defaultRange?e.defaultRange:"Extreme",data:e.data},i=await _.missileDamageDialog(a);if(!i)return null;let s="Missile Damage";""!=e.name&&(s=`${e.name} Damage`);let n=0;"Short"===i.range?n=e.impactShort:"Medium"===i.range?n=e.impactMedium:"Long"===i.range?n=e.impactLong:"Extreme"===i.range&&(n=e.impactExtreme);const o=Number(n)+Number(i.addlImpact)+Number(i.rollObj.total),r=foundry.utils.mergeObject(e.notesData,{actor:t.alias,aspect:e.aspect,range:i.range,dice:Number(i.damageDice),impact:n,addlImpact:i.addlImpact,totalImpact:o,roll:i.rollObj.total}),l=e.notes?b(e.notes,r):"",c={title:s,aspect:e.aspect,range:i.range,damageDice:Number(i.damageDice),rangeImpact:n,addlImpact:i.addlImpact,totalImpact:o,rollValue:i.rollObj.total,notes:l,roll:i},m={content:(await renderTemplate("systems/hm3/templates/chat/missile-damage-card.hbs",c)).trim(),roll:i.rollObj,sound:CONFIG.sounds.dice,speaker:t,style:CONST.CHAT_MESSAGE_STYLES.OTHER,user:game.user.id};return ChatMessage.applyRollMode(m,game.settings.get("core","rollMode")),await ChatMessage.create(m,{}),c}static async missileDamageDialog(e){let t=e.template||"systems/hm3/templates/dialog/missile-damage-dialog.hbs",a={name:e.name,ranges:e.ranges,defaultRange:e.defaultRange};const i=await renderTemplate(t,a);return e.name,Dialog.prompt({title:e.label,content:i.trim(),label:"Roll",callback:async t=>{const a=t[0].querySelector("form"),i=Number(a.addlImpact.value),s=Number(a.damageDice.value),n=a.range.value;let o=await _.rollTest({type:e.type,target:0,data:e.data,diceSides:6,diceNum:s,modifier:0});return{type:o.type,range:n,damageDice:s,addlImpact:i,rollObj:o.rollObj}}})}static async rollTest(e){const t=6===e.diceSides?"d6":"d100",a=(e.diceNum>0?e.diceNum:1)+t,i=Number(e.modifier),s=Number(e.target)+i,n="d100"===t?game.hm3.macros.HM100Check(s):s,o=await game.hm3.macros.rollObjectEvaluatedAsync(a,{name:e.name,target:n,targetCritical:(!e.isTreatment||!e.noTreatment)&&null,targetSuccess:(!e.isTreatment||!e.noTreatment)&&null,type:e.type});o||console.error(`Roll evaluation failed, diceSpec=${a}`);let r="",l=!1,c=!1,m=!1;if("d100"===t){l=o.total%5==0;const e=l?"Critical":"Marginal";o.total>n?r=e+" Failure":(r=e+" Success",c=!0),!c&&o.total>n+(100-n)/2?(m=!0,l||(r="Substantial Failure")):c&&o.total<=n/2&&(m=!0,l||(r="Substantial Success"))}else c=o.total<=n,r=c?"Success":"Failure";return e.noSubstantial&&(r=r.replace("Substantial","Marginal")),{description:r,isCapped:s!==n,isCritical:l,isSubstantial:m,isSuccess:c,modifier:i,preData:e,rollObj:o,target:n,type:e.type}}static getRollMode(e){return(e=foundry.utils.mergeObject({skill:null,isAppraisal:!1,blind:!1,private:!1},e)).blind||game.settings.get("core","rollMode")===CONST.DICE_ROLL_MODES.BLIND||(i.blindRolls.includes(e.skill)||e.isAppraisal)&&game.settings.get("hm3","blindGmMode")?CONST.DICE_ROLL_MODES.BLIND:e.private?CONST.DICE_ROLL_MODES.PRIVATE:game.settings.get("core","rollMode")}}class x{_queue=[];_isLocked=!1;acquire(){return new Promise(e=>{this._queue.push({resolve:e}),this._dispatch()})}async runExclusive(e){const t=await this.acquire();try{return await e()}finally{t()}}_dispatch(){if(this._isLocked)return;const e=this._queue.shift();e&&(this._isLocked=!0,e.resolve(this._buildRelease()))}_buildRelease(){return()=>{this._isLocked=!1,this._dispatch()}}}let F;class H extends Token{constructor(...e){super(...e),F||(F=new x)}_onClickLeft(e){e.shiftKey&&e.ctrlKey?super._onClickLeft2(e):super._onClickLeft(e)}_onClickRight(e){e.shiftKey&&e.ctrlKey?super._onClickRight2(e):super._onClickRight(e)}async addCondition(e,t={}){return bt(this,e,t)}hasCondition(e){return this.actor.hasCondition(e)}getCondition(e){return this.actor.getCondition(e)}getConditions(){return Object.values(game.hm3.Condition).filter(e=>this.hasCondition(e))}getConditionsWithMacro(e){return Object.values(game.hm3.Condition).filter(t=>{const a=this.getCondition(t);return a?.flags?.effectMacro&&a.flags.effectmacro[e]?.script})}async disableCondition(e,t=0){return new Promise(a=>setTimeout(async()=>{await(this.getCondition(e)?.update({disabled:!0})),a()},t))}async deleteCondition(e,t=0){return new Promise(a=>setTimeout(async()=>{await game.hm3.macros.deleteCondition(this,this.getCondition(e)),a()},t))}async deleteAllMoraleConditions(e=null){e!==game.hm3.Condition.BERSERK&&await this.deleteCondition(game.hm3.Condition.BERSERK),e!==game.hm3.Condition.BROKEN&&await this.deleteCondition(game.hm3.Condition.BROKEN),e!==game.hm3.Condition.CAUTIOUS&&await this.deleteCondition(game.hm3.Condition.CAUTIOUS),e!==game.hm3.Condition.DESPERATE&&await this.deleteCondition(game.hm3.Condition.DESPERATE),e!==game.hm3.Condition.EMPOWERED&&await this.deleteCondition(game.hm3.Condition.EMPOWERED),e!==game.hm3.Condition.WEAKENED&&await this.deleteCondition(game.hm3.Condition.WEAKENED)}get player(){return game.users.find(e=>!e.isGM&&this.actor.testUserPermission(e,"OWNER"))||null}getInjuries(){return this.actor.items.filter(e=>e.type===d.INJURY)}isInjured(){return this.getInjuries().length>0}hasInjury(e){return!!this.actor.items.find(t=>t.id===e)}hasSeriousInjuries(){return this.getInjuries().filter(e=>e.system.injuryLevel>=2).length>0}hasGreviousInjuries(){return this.getInjuries().filter(e=>e.system.injuryLevel>=4).length>0}hasSeriousLegInjuries(){return this.getInjuries().filter(e=>/\b|leg|hip|thigh|knee|calf|foot|\b/i.test(e.name.toLowerCase())&&e.system.injuryLevel>=2).length>0}hasGreviousLegInjuries(){return this.getInjuries().filter(e=>/\b|leg|hip|thigh|knee|calf|foot|\b/i.test(e.name.toLowerCase())&&e.system.injuryLevel>=4).length>0}hasEngagementZone(){if(!game.combat?.started)return!1;const e=this.hasCondition(l.CAUTIOUS),t=this.hasCondition(l.DISTRACTED),a=this.hasCondition(l.GRAPPLED),i=this.hasCondition(l.INCAPACITATED),s=this.hasCondition(l.PRONE),n=this.hasCondition(l.SHOCKED),o=this.hasCondition(l.UNCONSCIOUS);return!(e||t||this.dying||a||i||s||n||o)}getEngagedTokens(e=!1){if(!game.combat?.started)return[];const t=canvas.scene.tokens.contents;let a=[];a=this.document.disposition===CONST.TOKEN_DISPOSITIONS.FRIENDLY?t.filter(e=>[CONST.TOKEN_DISPOSITIONS.HOSTILE,CONST.TOKEN_DISPOSITIONS.NEUTRAL,CONST.TOKEN_DISPOSITIONS.SECRET].includes(e.disposition)&&e.id!==this.id):this.document.disposition===CONST.TOKEN_DISPOSITIONS.HOSTILE?t.filter(e=>[CONST.TOKEN_DISPOSITIONS.FRIENDLY,CONST.TOKEN_DISPOSITIONS.NEUTRAL,CONST.TOKEN_DISPOSITIONS.SECRET].includes(e.disposition)&&e.id!==this.id):t.filter(e=>[CONST.TOKEN_DISPOSITIONS.FRIENDLY,CONST.TOKEN_DISPOSITIONS.HOSTILE,CONST.TOKEN_DISPOSITIONS.NEUTRAL,CONST.TOKEN_DISPOSITIONS.SECRET].includes(e.disposition)&&e.id!==this.id);let i=[...a.filter(e=>J(this,e.object)<5.1&&e.object.hasEngagementZone()).map(e=>e.object)];return e&&(i=[...i.filter(e=>e.getEngagedTokens().length<=1)]),i}isEngaged(e=!1){return game.combat?.started&&(e?1===this.getEngagedTokens(e).length:this.getEngagedTokens(e).length>0)}hasReactionZone(){return!this.isEngaged()&&this.hasEngagementZone()}async turnEnds(e=0){game.combat?.started&&(console.info(`HM3 | Token ${this.name} plans to finish the turn.`),await new Promise(t=>setTimeout(async()=>{game.combat?.started&&(console.info(`HM3 | Token ${this.name} started the end of the turn.`),await game.combat.nextTurn(this.id),console.info(`HM3 | Token ${this.name} has finished the turn.`),t())},e)))}get dying(){return this.hasCondition(l.DYING)||this.document.hasStatusEffect("dead")&&this.document.disposition===CONST.TOKEN_DISPOSITIONS.HOSTILE}pronoun(e=!1){const t=()=>this.actor.system.gender?"Male"===this.actor.system.gender?"His":"Her":"It";return e?t():t().toLowerCase()}async toggleVisibility(e={}){let t=void 0!==e?.active?e.active:this.document.hidden;const a=(this.controlled?canvas.tokens.controlled:[this]).map(e=>({_id:e.id,hidden:!t}));return canvas.scene.updateEmbeddedDocuments("Token",a)}}class P extends TokenDocument{_onCreate(e,t,a){super._onCreate(e,t,a),this.testUserPermission(game.user,"OWNER")&&this.setFlag("wall-height","tokenHeight",6|this.actor.system.height)}async addCondition(e,t={}){return this.object.addCondition(e,t)}hasCondition(e){return this.object?.hasCondition(e)||!1}getCondition(e){return this.object.getCondition(e)}async disableCondition(e,t=0){return this.object.disableCondition(e,t)}async deleteCondition(e,t=0){return this.object.deleteCondition(e,t)}async deleteAllMoraleConditions(e=null){return this.object.deleteAllMoraleConditions(e)}get player(){return this.object?.player||!1}isInjured(){return this.object.isInjured()}hasInjury(e){return this.object.hasInjury(e)}hasEngagementZone(){return this.object.hasEngagementZone()}getEngagedTokens(e=!1){return this.object.getEngagedTokens(e)}isEngaged(e=!1){return this.object.isEngaged(e)}hasReactionZone(){return this.object.hasReactionZone()}async turnEnds(e=0){return this.object.turnEnds(e)}get dying(){return this.object.dying}pronoun(e=!1){return this.object.pronoun(e)}async toggleVisibility(e={}){return this.object.toggleVisibility(e)}}async function G(e){const t={title:`${e.name} Select Weapon`};t.weapons=e.weapons.map(e=>({key:e.name})),t.defaultWeapon=e.defaultWeapon,t.defaultModifier=e.defaultModifier||0,e.modifierType&&(t.modifierType=e.modifierType),t.prompt=e.prompt?e.prompt:"Please select your weapon";const a=await renderTemplate("systems/hm3/templates/dialog/query-weapon-dialog.hbs",t);return e.noDialog?{weapon:e.defaultWeapon.name,addlModifier:e.defaultModifier||0}:Dialog.prompt({title:t.title,content:a.trim(),label:"OK",callback:e=>{const t=e[0].querySelector("form"),a=t.addlModifier?parseInt(t.addlModifier.value):0;return{weapon:t.weapon.value,addlModifier:a}}})}async function j(e){if(e.weapons){const t=e.weapons.filter(e=>e.system.isEquipped);e.weapons=t}if(!e.weapon&&e.weapons&&e.weapons.length){e.name=e.attackerName;const t=await G(e);t&&(e.weapon=e.weapons.find(e=>t.weapon===e.name))}if(!e.weapon)return ui.notifications.warn(`${e.attackerName} has no equipped weapons available for attack.`),null;e.unarmed=e.weapon.system.assocSkill.toLowerCase().includes("unarmed");const t={weapon:e.weapon.name,aimLocations:[{key:"Low",label:"Low (-10)"},{key:"Mid",label:"Mid (+0)"},{key:"High",label:"High (-10)"}],defaultAim:"Mid",defaultModifier:e.defaultModifier||0,unarmed:e.unarmed};if("weapongear"===e.weapon.type){t.title=`Weapon ${e.type} with ${e.weapon.name}`;const a=function(e){const t=e.system,a={defaultAspect:null,aspects:{}},i=Math.max(t.blunt,t.piercing,t.edged);return i>=0&&(t.blunt>=0&&(a.aspects[o.BLUNT]=t.blunt),t.edged>=0&&(a.aspects[o.EDGED]=t.edged),t.piercing>=0&&(a.aspects[o.PIERCING]=t.piercing),i===t.piercing?a.defaultAspect=o.PIERCING:i===t.edged?a.defaultAspect=o.EDGED:i===t.blunt&&(a.defaultAspect=o.BLUNT)),a}(e.weapon);if(!a.defaultAspect)return null;foundry.utils.mergeObject(t,a)}else{if("missilegear"!==e.weapon.type)return null;{t.title=`Missile ${e.type} with ${e.weapon.name}`;const a=e.weapon.system;t.aspects={},t.aspects[a.weaponAspect]=-1,t.defaultAspect=a.weaponAspect;const i="grid"===game.settings.get("hm3","distanceUnits"),s=canvas.dimensions.distance,n=`Short (${i?a.range.short/s+" hex":a.range.short+" ft"}/+0)`,o=`Medium (${i?a.range.medium/s+" hex":a.range.medium+" ft"}/-20)`,r=`Long (${i?a.range.long/s+" hex":a.range.long+" ft"}/-40)`,l=`Extreme (${i?a.range.extreme/s+" hex":a.range.extreme+" ft"}/-80)`;t.ranges=[{key:"Short",label:n,impact:a.impact.short},{key:"Medium",label:o,impact:a.impact.medium},{key:"Long",label:r,impact:a.impact.long},{key:"Extreme",label:l,impact:a.impact.extreme}],t.rangeExceedsExtreme=!1,e.distance?(t.isGridDistanceUnits=i,t.distance=e.distance,t.distanceGrid=e.distance/s,e.distance<=a.range.short?t.defaultRange="Short":e.distance<=a.range.medium?t.defaultRange="Medium":e.distance<=a.range.long?t.defaultRange="Long":e.distance<=a.range.extreme?t.defaultRange="Extreme":(t.defaultRange="Extreme",t.rangeExceedsExtreme=!0)):t.defaultRange="Extreme"}}t.title=`${e.attackerName} vs. ${e.defenderName} ${e.type} with ${e.weapon.name}`;const a=await renderTemplate("systems/hm3/templates/dialog/attack-dialog.hbs",t),i=(a,i,s)=>{const n={addlModifier:a.addlModifier?parseInt(a.addlModifier.value):0,aim:a.aim?a.aim.value:null,aspect:a.weaponAspect?a.weaponAspect.value:null,impactMod:0,isGrappleAtk:s,range:i,rangeExceedsExtreme:t.rangeExceedsExtreme,unarmed:e.unarmed,weapon:e.weapon};return i?(i.startsWith("Short")?(n.range="Short",n.rangeMod=0):i.startsWith("Medium")?(n.range="Medium",n.rangeMod=-20):i.startsWith("Long")?(n.range="Long",n.rangeMod=-40):(n.range="Extreme",n.rangeMod=-80),n.impactMod=t.ranges.filter(e=>e.key===n.range)[0].impact||0):n.impactMod=t.aspects[n.aspect]||0,n};return e.noDialog?i({weaponAspect:{value:t.defaultAspect},aim:{value:t.defaultAim},addlModifier:{value:t.defaultModifier}},t.defaultRange,!1):Dialog.prompt({title:t.title,content:a.trim(),label:e.type,callback:e=>{const t=e[0].querySelector("form"),a=t.range?t.range.value:null,s=t[3]?.checked||!1;return i(t,a,s)}})}function B(e){return e?e.actor?!!["character","creature"].includes(e.actor.type)||(ui.notifications.warn(`Token ${e.name} is not a character or creature.`),!1):(ui.notifications.warn(`Token ${e.name} is not a valid actor.`),!1):(ui.notifications.warn("No token selected."),!1)}function W(e,t="highestDmg"){if(!B(e))return{weapons:[],defaultWeapon:null};if(!["highestDmg","highestAML","highestDML"].includes(t))return{weapons:[],defaultWeapon:null};const a=e.actor.itemTypes.weapongear.filter(e=>e.system.isEquipped);if(0===a.length)return{weapons:[],defaultWeapon:null};let i=null;switch(t){case"highestDmg":i=a.sort((e,t)=>{const a=Math.max(e.system.blunt,e.system.edged,e.system.piercing);return Math.max(t.system.blunt,t.system.edged,t.system.piercing)-a});break;case"highestAML":i=a.sort((e,t)=>t.system.attackMasteryLevel-e.system.attackMasteryLevel);break;case"highestDML":i=a.sort((e,t)=>t.system.defenseMasteryLevel-e.system.defenseMasteryLevel)}return{weapons:i,defaultWeapon:i[0]}}function U(e,t){return("string"==typeof e||e instanceof String)&&(e=t?.actor?.items.find(t=>t.name===e)),!!e?.system?.assocSkill?.toLowerCase().includes("unarmed")}async function K(e,t,a,i){if(!t||!e)return console.error("HM3 | Attack weapon was not specified"),{attackWeaponBroke:!1,defendWeaponBroke:!1};if(!i||!a)return console.error("HM3 | Defend weapon was not specified"),{attackWeaponBroke:!1,defendWeaponBroke:!1};let s=!1,o=!1,r=!1,l=!1,c=0,m=0,d=0,u=0;const h=t.getArcanePower(n.SWORDBREAKER),g=t.getArcanePower(n.WARD_AKANA),p=!!g&&!i.isArtifact,f=i.getArcanePower(n.SWORDBREAKER),y=i.getArcanePower(n.WARD_AKANA),k=!!y&&!t.isArtifact,b=t.system.weaponQuality+(t.system.wqModifier||0),S=i.system.weaponQuality+(i.system.wqModifier||0);let v=game.hm3.macros.rollObject("3d6",{check:"d6",name:e.name,target:b,type:"atkBreakRoll"}),w=game.hm3.macros.rollObject("3d6",{check:"d6",name:a.name,target:S,type:"defBreakRoll"}),C=game.hm3.macros.rollObject("0",{check:"d6",name:e.name,target:b,type:"atkSwordbreakerRoll"}),M=game.hm3.macros.rollObject("0",{check:"d6",name:a.name,target:S,type:"defSwordbreakerRoll"});h?.isOwnerAware?w=game.hm3.macros.rollObject(`3d6+1d${h.lvl}`,{check:"d6",name:a.name,target:S,type:"defBreakRoll"}):h&&(M=game.hm3.macros.rollObject(`1d${h.lvl}`,{check:"d6",name:a.name,target:S,type:"defSwordbreakerRoll"})),f?.isOwnerAware?v=game.hm3.macros.rollObject(`3d6+1d${f.lvl}`,{check:"d6",name:e.name,target:b,type:"atkBreakRoll"}):f&&(C=game.hm3.macros.rollObject(`1d${f.lvl}`,{check:"d6",name:e.name,target:b,type:"atkSwordbreakerRoll"})),d=(await v.evaluate()).total,u=(await w.evaluate()).total,p&&g?.isOwnerAware?r=!0:p&&(d=Math.min(d,b)),k&&y?.isOwnerAware?l=!0:k&&(u=Math.min(u,S)),0!==b&&0!==S||(r=!0,l=!0),b<=S?(r||(d>b?(l=!0,s=!0,c=d-b):d+(await C.evaluate()).total>b&&(l=!0,s=!0,d=Math.min(d+(await C.evaluate()).total,18),c=d-b)),l||(!s&&u>S?(o=!0,m=u-S):!s&&u+(await M.evaluate()).total>S&&(o=!0,u=Math.min(u+(await M.evaluate()).total,18),m=u-S))):(l||(u>S?(r=!0,o=!0,m=u-S):u+(await M.evaluate()).total>S&&(r=!0,o=!0,u=Math.min(u+(await M.evaluate()).total,18),m=u-S)),r||(!o&&d>b?(s=!0,c=d-b):!o&&d+(await C.evaluate()).total>b&&(s=!0,d=Math.min(d+(await C.evaluate()).total,18),c=d-b)));const T={sound:CONFIG.sounds.dice,style:CONST.CHAT_MESSAGE_STYLES.OTHER,user:game.user.id},I="systems/hm3/templates/chat/weapon-break-card.hbs",E={actorId:t.parent,debug:CONFIG.debug.hm3&&game.user.isGM,rollFormula:v.formula,rollResult:v.result,rollValue:d,title:"Attack Weapon Break Check",tokenName:e.name,weaponBroke:s,weaponName:t.name,weaponQuality:t.system.weaponQuality+(t.system.wqModifier||0)};let A=await renderTemplate(I,E);T.content=A.trim(),T.speaker=ChatMessage.getSpeaker({token:e}),T.roll=v;const N={};return ChatMessage.applyRollMode(T,game.settings.get("core","rollMode")),r||await ChatMessage.create(T,N),E.actorId=i.parent,E.rollFormula=w.formula,E.rollResult=w.result,E.rollValue=u,E.title="Defend Weapon Break Check",E.tokenName=a.name,E.weaponBroke=o,E.weaponName=i.name,E.weaponQuality=i.system.weaponQuality+(i.system.wqModifier||0),A=await renderTemplate(I,E),T.content=A.trim(),T.speaker=ChatMessage.getSpeaker({token:a}),T.roll=w,ChatMessage.applyRollMode(T,game.settings.get("core","rollMode")),l||await ChatMessage.create(T,N),{attackWeaponBroke:s,atkWeaponDiff:c,defendWeaponBroke:o,defWeaponDiff:m}}function q({atkAddlImpact:e=0,atkDie:t=6,atkResult:a,atkToken:s,defAddlImpact:n=0,defDie:o=6,defense:r,defResult:c=null,defToken:m,isGrappleAtk:d=!1,isGrappleDef:u=!1}){let h=null,g=null;const p=d?i.grappleCombatTable[r]:i.meleeCombatTable[r];if(p&&(g="ignore"===r?a:`${a}:${c}`,h=p[g]),!h)return null;h.atkFumble&&s?.hasCondition(l.NO_FUMBLE)&&(h.atkFumble=!1),h.defFumble&&m?.hasCondition(l.NO_FUMBLE)&&(h.defFumble=!1),h.atkStumble&&s?.hasCondition(l.NO_STUMBLE)&&(h.atkStumble=!1),h.defStumble&&m?.hasCondition(l.NO_STUMBLE)&&(h.defStumble=!1);const f={atkHold:!!h.atkHold,csDesc:u?"Grapple attempt unsuccessful":"Counterstrike misses",defHold:!!h.defHold,desc:d?"Grapple attempt unsuccessful":"Attack misses",outcome:h};return"counterstrike"!==r?h.atkHold?f.desc=`${s.name} obtains hold`:h.atkDice?f.desc=`${s.name} strikes for ${Y(h.atkDice,e,t)} impact`:h.atkFumble&&h.defFumble?f.desc="Both attacker and defender fumble":h.atkFumble?f.desc=`${s.name} fumbles`:h.defFumble?f.desc=`${m.name} fumbles`:h.defStumble&&h.atkStumble?f.desc="Both attacker and defender stumble":h.atkStumble?f.desc=`${s.name} stumbles`:h.defStumble?f.desc=`${m.name} stumbles`:h.block?f.desc="Attack blocked":h.dta&&(f.desc=`${m.name} gains a Tactical Advantage`):(h.atkHold&&h.defHold?f.desc="Both attacker and defender obtain hold":h.atkHold?f.desc=`${s.name} obtains hold`:h.atkDice?f.desc=`${s.name} strikes for ${Y(h.atkDice,e,t)} impact`:h.atkFumble?f.desc=`${s.name} fumbles`:h.atkStumble&&(f.desc=`${s.name} stumbles`),h.atkHold&&h.defHold?f.desc="Both attacker and defender obtain hold":h.defHold?f.csDesc=`${m.name} obtains hold`:h.defDice?f.csDesc=`${m.name} strikes for ${Y(h.defDice,n,o)} impact`:h.defFumble?f.csDesc=`${m.name} fumbles`:h.defStumble?f.csDesc=`${m.name} stumbles`:h.block?(f.desc=`${s.name} blocked`,f.csDesc=`${m.name} blocked`):h.dta?f.csDesc=`${m.name} gains a Tactical Advantage!`:h.miss&&(f.csDesc=`${m.name} misses`)),f}function z(e,t,a,s=0){let n=null,o=null;const r=i.missileCombatTable[a];if(r&&(o="ignore"===a?e:`${e}:${t}`,n=r[o]),!n)return null;const l={outcome:n,desc:"No result"};return n.atkDice&&!n.defDice?l.desc=`Missile strikes for ${Y(n.atkDice,s)} impact.`:n.wild?l.desc="Missile goes wild; effects at GM discretion.":n.block?l.desc="Defender blocks missile!":n.miss&&(l.desc="Missile missed."),l}function Y(e,t,a=6){return e<=0?"no":t?`${e}d${a}${t<0?"-":"+"}${Math.abs(t)}`:`${e}d${a}`}async function V(e,t,a){if(!e)return ui.notifications.warn("No item name was specified. You must specify an item name."),null;let i=fromUuidSync(e);if(!i){if(!a||"object"!=typeof a)return ui.notifications.warn("No actor was selected. You must select an actor."),null;const s=e.toLowerCase(),n=a?a.items.filter(e=>e.type===t&&e.name.toLowerCase()===s):[];if(n.length>1)ui.notifications.warn(`Your controlled Actor ${a.name} has more than one ${t} with name ${e}. The first matched ${t} will be chosen.`);else if(0===n.length)return ui.notifications.warn(`Your controlled Actor does not have a ${t} named ${e}`),null;i=n[0]}return i||(ui.notifications.warn(`The item ${e} was not found`),null)}function J(e,t,a=!1){if(!(e&&t&&canvas.scene&&canvas.scene.grid))return 9999;const i=game.hm3.macros.distanceBtwnTwoTokens(e.id,t.id);return I(a?i/canvas.dimensions.distance:i,0)}async function Q(){return game.hm3.socket.executeAsGM("isFirstTA")}async function X(e=!1){return await Q()&&!e?(await game.hm3.socket.executeAsGM("setTAFlag"),!0):(await game.hm3.GmSays({text:"No more than one <b>Tactical Advantage</b> may be earned per character turn. <b>Turn ends.</b>",source:"Combat 12"}),await game.combat.combatant.token.turnEnds(),!1)}const Z="systems/hm3/images/icons/svg/enrage-white.svg",ee="systems/hm3/images/icons/svg/despair-white.svg",te="systems/hm3/images/icons/svg/distraction-white.svg",ae="systems/hm3/images/icons/svg/spiked-wall-white.svg",ie="systems/hm3/images/icons/svg/distraction-white.svg",se="systems/hm3/images/icons/svg/distraction-white.svg",ne="icons/svg/skull.svg",oe="icons/svg/upgrade.svg",re="icons/svg/net.svg",le="systems/hm3/images/icons/svg/skeleton-white.svg",ce="systems/hm3/images/icons/svg/no-fumble.svg",me="systems/hm3/images/icons/svg/no-outnumbered.svg",de="systems/hm3/images/icons/svg/no-stumble.svg",ue="systems/hm3/images/icons/svg/backup-white.svg",he="icons/svg/falling.svg",ge="systems/hm3/images/icons/svg/arm-sling.svg",pe="icons/svg/lightning.svg",fe="icons/svg/downgrade.svg";class ye extends Roll{constructor(e,t={},a={}){super(e,t,a),this._target=a.target??null,this._check=null!==this._target?e.toLowerCase().includes("d100")?"d100":"d6":null,this._effTarget=null,this._maximum=null,this._minimum=null,this._name=a.name??"Unknown",this._targetCode=a.targetCode??null,this._targetCritical=a.targetCritical??null,this._targetSubstantial=a.targetSubstantial??null,this._targetSuccess=a.targetSuccess??null,this._targetValue=null,this._type=a.type??"Unknown",null!==this._target&&"d100"===this._check?this._effTarget=Math.max(Math.min(this._target,95),5):null!==this._target&&"d6"===this._check&&(this._effTarget=Math.max(Math.min(this._target,18),3))}get debug(){return game.settings.get("hm3","debugMode")}get cheating(){return game.settings.get("hm3","cheatMode")}get autocheating(){return!!this._effTarget&&(null!==this._targetCritical||null!==this._targetSubstantial||null!==this._targetSuccess)}get isCritical(){return"d6"!==this._check&&(null!==this._effTarget?this.total%5==0:void 0)}get isSubstantial(){return"d6"!==this._check&&(null!==this._effTarget?this.total<=this._effTarget/2||this.total>this._effTarget+(100-this._effTarget)/2:void 0)}get isSuccess(){if(null!==this._effTarget)return this.total<=this._effTarget}get minimum(){return this._minimum}get maximum(){return this._maximum}get code(){if("d100"===this._check){let e="m";return this.isCritical?e="c":this.isSubstantial&&(e="s"),this.isSuccess?e+="s":e+="f",e}if("d6"===this._check)return this.isSuccess?"s":"f"}async evaluate({minimize:e=!1,maximize:t=!1,allowStrings:a=!1,allowInteractive:i=!0,...s}={}){if(this.autocheating&&!this.isDeterministic)return this._cheatRoll({minimize:e,maximize:t,allowStrings:a,allowInteractive:i,options:s});if(this.cheating&&!this.isDeterministic){await this._minMax();const n=await game.hm3.socket.executeAsGM("cheating",this._check??"roll",this._name,this._type,this._formula,this._minimum,this._maximum,this._effTarget);return this._targetCritical=n.targetCritical??null,this._targetSubstantial=n.targetSubstantial??null,this._targetSuccess=n.targetSuccess??null,this._targetValue=n.targetValue??null,this._cheatRoll({minimize:e,maximize:t,allowStrings:a,allowInteractive:i,options:s})}return super.evaluate({minimize:e,maximize:t,allowStrings:a,allowInteractive:i,options:s})}async _cheatRoll({minimize:e=!1,maximize:t=!1,allowStrings:a=!1,allowInteractive:i=!0,...s}={}){let n=1e3,o=null;do{this._reset(),o=await super.evaluate({minimize:e,maximize:t,allowStrings:a,allowInteractive:i,options:s})}while(--n>0&&(null!==this._targetCritical&&this._targetCritical!==this.isCritical||null!==this._targetSubstantial&&this._targetSubstantial!==this.isSubstantial||null!==this._targetSuccess&&this._targetSuccess!==this.isSuccess||null!==this._targetValue&&this._targetValue!==this.total));return o}_reset(){this._dice=[],this.terms.forEach(e=>{e._evaluated=!1,e.results=[]}),this._evaluated=!1,this._resolver=void 0,this._root=void 0,this._total=void 0}async _minMax(){this._minimum=(await super.evaluate({minimize:!0,maximize:!1,allowStrings:!1,allowInteractive:!1})).total,this._reset(),this._maximum=(await super.evaluate({minimize:!1,maximize:!0,allowStrings:!1,allowInteractive:!1})).total,this._reset()}}function ke(e,t){return"Item"!==e.type||(async function(e,t){const a=fromUuidSync(e.uuid);if(!a?.system)return ui.notifications.warn("No macro exists for that type of object."),null;let i,s=a.name;switch(a.actor&&(s=`${a.actor.name}'s ${a.name}`),a.type){case d.SKILL:i=`skillRoll("${a.uuid}");`;break;case"psionic":i=`usePsionicRoll("${a.uuid}");`;break;case"spell":i=`castSpellRoll("${a.uuid}");`;break;case"invocation":i=`invokeRitualRoll("${a.uuid}");`;break;case"weapongear":return function(e,t,a){const i=fromUuidSync(e);i||ui.notifications.warn(`No weapon with Uuid ${e}`);let s="";return i.actor&&(s=`${i.actor.name}'s `),new Promise(n=>{new Dialog({title:"Select Weapon Macro",content:"<p>Select the type of weapon macro to create:</p>".trim(),buttons:{enhAttackButton:{label:"Automated Combat",callback:async s=>be(`${i.name} Automated Combat`,`await game.hm3.macros.weaponAttack("${e}");`,t,a,{"hm3.itemMacro":!1})},attackButton:{label:"Attack",callback:async n=>be(`${s}${i.name} Attack Roll`,`await game.hm3.macros.weaponAttackRoll("${e}");`,t,a,{"hm3.itemMacro":!1})},defendButton:{label:"Defend",callback:async n=>be(`${s}${i.name} Defend Roll`,`await game.hm3.macros.weaponDefendRoll("${e}");`,t,a,{"hm3.itemMacro":!1})},damageButton:{label:"Damage",callback:async n=>be(`${s}${i.name} Damage Roll`,`await game.hm3.macros.weaponDamageRoll("${e}");`,t,a,{"hm3.itemMacro":!1})}},default:"enhAttackButton",close:()=>n(!1)}).render(!0)})}(a.uuid,t,a.img);case"missilegear":return function(e,t,a){return new Promise(i=>{new Dialog({title:"Select Missile Macro",content:"<p>Select the type of missile macro to create:</p>".trim(),buttons:{enhAttackButton:{label:"Automated Combat",callback:async i=>be(`${e} Automated Combat`,`game.hm3.macros.missileAttack("${e}");`,t,a,{"hm3.itemMacro":!1})},attackButton:{label:"Attack",callback:async i=>be(`${actorName}'s ${e} Attack Roll`,`game.hm3.macros.missileAttackRoll("${e}"undefined);`,t,a,{"hm3.itemMacro":!1})},damageButton:{label:"Damage",callback:async i=>be(`${actorName}'s ${e} Damage Roll`,`game.hm3.macros.missileDamageRoll("${e}"undefined);`,t,a,{"hm3.itemMacro":!1})}},default:"enhAttackButton",close:()=>i(!1)}).render(!0)})}(a.uuid,t,a.img);case"injury":i=`healingRoll("${a.name}");`;break;default:return null}be(s,`await game.hm3.macros.${i}`,t,a.img,{"hm3.itemMacro":!1})}(e,t),!1)}async function be(e,t,a,i,s){let n=[game.macros.values()].find(a=>a.name===e&&a.command===t);return n||(n=await Macro.create({name:e,type:"script",img:i,command:t,flags:s})),game.user.assignHotbarMacro(n,a),null}async function Se(e,t,a){let s={actor:t,item:null,speaker:ChatMessage.getSpeaker()};return e&&(s.item=await V(e,a,t),t=s.item.actor||t,s.item?.type!==a)?(s.item?ui.notifications.warn(`Ignoring ${i.ITEM_TYPE_LABEL[a].singular} test because ${s.item.name} is not a ${i.ITEM_TYPE_LABEL[a].singular}`):ui.notifications.warn(`Ignoring ${i.ITEM_TYPE_LABEL[a].singular} test because no ${i.ITEM_TYPE_LABEL[a].singular} found for '${e}'`),null):(s=rt(s),s||(ui.notifications.warn("No actor for this action could be determined."),null))}async function ve(e,t=!1,a=null){const{actor:i,item:s,speaker:n}=await Se(e,a,"skill"),o={type:`skill-${s.name}`,skill:`${s.name}`,label:`${s.name} Skill Test`,target:s.system.effectiveMasteryLevel,notesData:{up:i.system.universalPenalty,pp:i.system.physicalPenalty,il:i.system.eph.totalInjuryLevels||0,fatigue:i.system.eph.fatigue,eml:s.system.effectiveMasteryLevel,ml:s.system.masteryLevel,sb:s.system.skillBase.value,si:s.system.skillIndex},speaker:n,fastforward:t,notes:s.system.notes,effSkillBase:s.system.skillBase.value,isCraftOrLore:[p.CRAFT,"Lore"].includes(s.system.type)};if(i.isToken?o.token=i.token.id:o.actor=i.id,Hooks.call("hm3.preSkillRoll",o,i,s)){const e=await _.d100StdRoll(o);return e&&(s.runCustomMacro(e),lt("hm3.onSkillRoll",i,e,o,s),D(s,{success:e.roll.isSuccess})),e}return null}async function we(e,t=!1,a=null){const{actor:i,item:s,speaker:n}=await Se(e,a,"spell"),o={type:`spell-${s.name}`,skill:`${s.name}`,label:`Casting ${s.name}`,target:s.system.effectiveMasteryLevel,notesData:{up:i.system.universalPenalty,pp:i.system.physicalPenalty,il:i.system.eph.totalInjuryLevels||0,fatigue:i.system.eph.fatigue,eml:s.system.effectiveMasteryLevel,ml:s.system.masteryLevel,sb:s.system.skillBase,si:s.system.skillIndex,spellName:s.name,convocation:s.system.convocation,level:s.system.level},speaker:n,fastforward:t,notes:s.system.notes};if(i.isToken?o.token=i.token.id:o.actor=i.id,Hooks.call("hm3.preSpellRoll",o,i,s)){const e=await _.d100StdRoll(o);return e&&(s.runCustomMacro(e),lt("hm3.onSpellRoll",i,e,o,s)),e}return null}async function Ce(e,t=!1,a=null){const{actor:i,item:s,speaker:n}=await Se(e,a,"invocation"),o={type:`invocation-${s.name}`,skill:`${s.name}`,label:`Invoking ${s.name} Ritual`,target:s.system.effectiveMasteryLevel,notesData:{up:i.system.universalPenalty,pp:i.system.physicalPenalty,il:i.system.eph.totalInjuryLevels||0,fatigue:i.system.eph.fatigue,eml:s.system.effectiveMasteryLevel,ml:s.system.masteryLevel,sb:s.system.skillBase,si:s.system.skillIndex,invocationName:s.name,diety:s.system.diety,circle:s.system.circle},speaker:n,fastforward:t,notes:s.system.notes};if(i.isToken?o.token=i.token.id:o.actor=i.id,Hooks.call("hm3.preInvocationRoll",o,i,s)){const e=await _.d100StdRoll(o);return e&&(s.runCustomMacro(e),lt("hm3.onInvocationRoll",i,e,o,s)),e}return null}async function Me(e,t=!1,a=null){const{actor:i,item:s,speaker:n}=await Se(e,a,"psionic"),o={type:`psionic-${s.name}`,skill:`${s.name}`,label:`Using ${s.name} Talent`,target:s.system.effectiveMasteryLevel,notesData:{up:i.system.universalPenalty,pp:i.system.physicalPenalty,il:i.system.eph.totalInjuryLevels||0,fatigue:i.system.eph.fatigue,eml:s.system.effectiveMasteryLevel,ml:s.system.masteryLevel,sb:s.system.skillBase.value,si:s.system.skillIndex,psionicName:s.name,fatigueCost:s.system.fatigue},speaker:n,fastforward:t,notes:s.system.notes};if(i.isToken?o.token=i.token.id:o.actor=i.id,Hooks.call("hm3.prePsionicsRoll",o,i,s)){const e=await _.d100StdRoll(o);return e&&(s.runCustomMacro(e),lt("hm3.onPsionicsRoll",i,e,o,s),R(i,s.system.fatigue),D(s,{success:e.roll.isSuccess})),e}return null}async function Te(e,t=!1,a=null){return Ie({ability:e,noDialog:t,myActor:a})}async function Ie(e){const t=rt({actor:(e=foundry.utils.mergeObject({noDialog:!1,myActor:null,blind:!1},e)).myActor,item:null,speaker:ChatMessage.getSpeaker()});if(!t)return ui.notifications.warn("No actor for this action could be determined."),null;let a;if("character"===t.actor.type)a=Object.keys(game.model.Actor.character.abilities);else{if("creature"!==t.actor.type)return ui.notifications.warn(`${t.name} does not have ability scores.`),null;a=Object.keys(game.model.Actor.creature.abilities)}if(!e.ability||!a.includes(e.ability))return null;const i={type:`${e.ability}-d6`,skill:`${e.ability[0].toUpperCase()}${e.ability.slice(1)}`,label:`d6 ${e.ability[0].toUpperCase()}${e.ability.slice(1)} Roll`,target:t.actor.system.abilities[e.ability].effective,numdice:3,notesData:{},speaker:t.speaker,fastforward:e.noDialog,notes:""};if(t.actor.isToken?i.token=t.actor.token.id:i.actor=t.actor.id,Hooks.call("hm3.preAbilityRollD6",i,t.actor)){const e=await _.d6Roll(i);return e&&(t.actor.runCustomMacro(e),lt("hm3.onAbilityRollD6",e,e,i)),e}return null}async function Ee(e,t=!1,a=null,i=5){return Ae({ability:e,noDialog:t,myActor:a,multiplier:i})}async function Ae(e){const t=rt({actor:(e=foundry.utils.mergeObject({ability:null,noDialog:!1,myActor:null,multiplier:5,blind:!1,private:!1,fluff:null,fluffResult:null},e)).myActor,item:null,speaker:ChatMessage.getSpeaker({actor:e.myActor})});if(!t)return ui.notifications.warn("No actor for this action could be determined."),null;let a;if("character"===t.actor.type)a=Object.keys(game.model.Actor.character.abilities);else{if("creature"!==t.actor.type)return ui.notifications.warn(`${t.actor.name} does not have ability scores.`),null;a=Object.keys(game.model.Actor.creature.abilities)}if(!e.ability||!a.includes(e.ability))return null;const i={type:`${e.ability}-d100`,skill:`${e.ability[0].toUpperCase()}${e.ability.slice(1)}`,label:`d100 ${e.ability[0].toUpperCase()}${e.ability.slice(1)} Roll`,effSkillBase:Math.max(1,t.actor.system.abilities[e.ability].effective),target:Math.max(5,t.actor.system.abilities[e.ability].effective*e.multiplier),notesData:{},speaker:t.speaker,fastforward:e.noDialog,notes:"",isAbility:!0,multiplier:e.multiplier,blind:e.blind,private:e.private,fluff:e.fluff,fluffResult:e.fluffResult};if(t.actor.isToken?i.token=t.actor.token.id:i.actor=t.actor.id,Hooks.call("hm3.preAbilityRollD100",i,t.actor)){const e=await _.d100StdRoll(i);return e&&(t.actor.runCustomMacro(e),lt("hm3.onAbilityRollD100",t.actor,e,i)),e}return null}async function Ne(e,t=null,a=null){if(t&&!i.allowedAspects.includes(t))return ui.notifications.warn(`Invalid aspect requested on damage roll: ${t}`),null;const{actor:s,item:n,speaker:o}=await Se(e,a,"weapongear"),r={notesData:{up:s.system.universalPenalty,pp:s.system.physicalPenalty,il:s.system.eph.totalInjuryLevels||0,fatigue:s.system.eph.fatigue,weaponName:n.name},weapon:n.name,data:s,speaker:o,aspect:t||null,notes:n.system.notes};if(s.isToken?r.token=s.token.id:r.actor=s.id,Hooks.call("hm3.preDamageRoll",r,s)){const e=await _.damageRoll(r);return e&&lt("hm3.onDamageRoll",s,e,r),e}return null}async function De(e,t=null,a=null){if(a&&=a instanceof Actor?a:fromUuidSync(a),t&&!i.allowedRanges.includes(t))return ui.notifications.warn(`Invalid range requested on damage roll: ${t}`),null;const{actor:s,item:n,speaker:o}=await Se(e,a,"missilegear"),r={notesData:{up:s.system.universalPenalty,pp:s.system.physicalPenalty,il:s.system.eph.totalInjuryLevels||0,fatigue:s.system.eph.fatigue,missileName:n.name,aspect:n.system.weaponAspect},name:n.name,aspect:n.system.weaponAspect,defaultRange:t,impactShort:n.system.impact.short,impactMedium:n.system.impact.medium,impactLong:n.system.impact.long,impactExtreme:n.system.impact.extreme,data:s,speaker:o,notes:n.system.notes};if(s.isToken?r.token=s.token.id:r.actor=s.id,Hooks.call("hm3.preMissileDamageRoll",r,s,n)){const e=await _.missileDamageRoll(r);return e&&lt("hm3.onMissileDamageRoll",s,e,r),e}return null}async function Le(e,t=!1,a=null){const{actor:i,item:s,speaker:n}=await Se(e,a,"weapongear"),o={label:`${s.name} Attack`,target:s.system.attackMasteryLevel,notesData:{up:i.system.universalPenalty,pp:i.system.physicalPenalty,il:i.system.eph.totalInjuryLevels||0,fatigue:i.system.eph.fatigue,ml:s.system.masteryLevel,sb:s.system.skillBase,si:s.system.skillIndex,weaponName:s.name,attack:s.system.attack,atkMod:s.system.attackModifier,aml:s.system.attackMasteryLevel},speaker:n,fastforward:t,notes:s.system.notes};if(i.isToken?o.token=i.token.id:o.actor=i.id,Hooks.call("hm3.preWeaponAttackRoll",o,i,s)){const e=await _.d100StdRoll(o);return e&&lt("hm3.onWeaponAttackRoll",i,e,o,s),e}return null}async function Re(e,t=!1,a=null){const{actor:i,item:s,speaker:n}=await Se(e,a,"weapongear");let o=0;i.system?.eph?.outnumbered>1&&(o=-10*Math.floor(i.system.eph.outnumbered-1));const r={label:`${s.name} Defense`,target:s.system.defenseMasteryLevel,modifier:o,notesData:{up:i.system.universalPenalty,pp:i.system.physicalPenalty,il:i.system.eph.totalInjuryLevels||0,fatigue:i.system.eph.fatigue,ml:s.system.masteryLevel,sb:s.system.skillBase,si:s.system.skillIndex,weaponName:s.name,defense:s.system.defense,dml:s.system.defenseMasteryLevel},speaker:n,fastforward:t,notes:s.system.notes};if(i.isToken?r.token=i.token.id:r.actor=i.id,Hooks.call("hm3.preWeaponDefendRoll",r,i,s)){const e=await _.d100StdRoll(r);return e&&lt("hm3.onWeaponDefendRoll",i,e,r,s),e}return null}async function Oe(e,t=null){const{actor:a,item:i,speaker:s}=await Se(e,t,"missilegear"),n={notesData:{up:a.system.universalPenalty,pp:a.system.physicalPenalty,il:a.system.eph.totalInjuryLevels||0,fatigue:a.system.eph.fatigue,missileName:i.name},name:i.name,target:i.system.attackMasteryLevel,aspect:i.system.weaponAspect,rangeShort:i.system.range.short,rangeMedium:i.system.range.medium,rangeLong:i.system.range.long,rangeExtreme:i.system.range.extreme,data:i,speaker:s,notes:i.system.notes};if(a.isToken?n.token=a.token.id:n.actor=a.id,Hooks.call("hm3.preMissileAttackRoll",n,a,i)){const e=await _.missileAttackRoll(n);return e&&lt("hm3.onMissileAttackRoll",a,e,n,i),e}return null}async function _e(e=null,t={}){const a=rt({actor:e,item:null,speaker:null});if(!a)return ui.notifications.warn("No actor for this action could be determined."),null;if(t.notesData={},t.actor=a.actor,t.speaker=a.speaker,t.notes="",Hooks.call("hm3.preInjuryRoll",t,a.actor)){const e=await _.injuryRoll(t);return e&&lt("hm3.onInjuryRoll",a.actor,e,t),e}return null}async function xe(e,t=!1,a=null){const{actor:s,item:n,speaker:r}=await Se(e,a,d.INJURY),l=n.system.subType||m.HEALING;if(l===m.HEALING&&(isNaN(n.system.injuryLevel)||n.system?.injuryLevel<1||n.system?.injuryLevel>5))return ui.notifications.warn("No valid injury level specified."),null;if(isNaN(n.system.healRate)||n.system?.healRate<1||n.system?.healRate>7)return async function(e,t,a){const s=i.treatmentTable[t.system.aspect||o.BLUNT][Math.floor(t.system.injuryLevel/2)];let n=`<p><b>Injury:</b> ${s.injury}</p><p><b>Description:</b> ${s.desc}</p><p><b>Treatment:</b> ${s.treatment}</p>`.trim(),r="";s.treatment.includes("Surgery")&&(n+="<p><b>Surgery</b> takes some minutes. It requires sharp knives, and a needle and thread for sutures. Anesthetic is highly recommended (patients tend to struggle and whimper otherwise) and disinfectants are a good idea too. Such items may be purchased from good apothecaries and improve <b>Treatment EML 10-20</b>.</p>",r+=`<p><b>Surgery</b> took ${await It("10d6",{name:e.name,type:"treatmentRoll Surgery"})} minutes.</p>`),s.treatment.includes("Compress")&&(n+="<p>Apply cold <b>compress</b> for some minutes. Herbal remedies and balms that reduce swelling add improve <b>Treatment EML 10-20</b>.</p>",r+=`<p>Cold <b>compress</b> took ${await It("5d6",{name:e.name,type:"treatmentRoll Compress"})} minutes.</p>`),s.treatment.includes("Splint")&&(n+="<p>Setting bone and <b>splinting</b> takes some minutes.</p>",r+=`<p><b>Splinting</b> took ${await It("5d6",{name:e.name,type:"treatmentRoll Splint"})} minutes.</p>`),(s.treatment.includes("Clean")||s.treatment.includes("Surgery"))&&(n+="<p><b>Cleaning and dressing</b> takes some minutes and requires water and bandages.</p>",r+=`<p><b>Cleaning and dressing</b> took ${5*t.system.injuryLevel} minutes.</p>`),s.treatment.includes("Warming")&&(n+="<p>Gentle <b>warming</b> (blanket, healthy person's flesh, etc.) of the injury for a few hours.</p>",r+=`<p><b>Warming</b> took ${await It("1d3",{name:e.name,type:"treatmentRoll Warming"})} hours.</p>`);const l={fastforward:!1,fluff:n,fluffResult:{CS:r+`<p>Excellent work! ${7===s.cs?"EE":"H"+s.cs} is the best result possible.</p>`,MS:r+`<p>Good work. ${7===s.ms?"EE":"H"+s.ms} is a solid result.</p>`,MF:r+`<p>Lousy work. H${s.mf} is just as bad as without treatment.</p>`,CF:r+`<p>Catastrophic work! H${s.cf} is worse than without treatment.</p>`},label:`${t.name} Treatment Roll`,notes:t.system.notes,physicianSkills:e.getPartySkills("Physician"),speaker:a,subType:t.system.subType,target:0,treatmentTable:s,type:"treatment",notesData:{endurance:e.system.endurance,fatigue:e.system.eph.fatigue,healRate:t.system.healRate,il:e.system.eph.totalInjuryLevels||0,injuryName:t.name,pp:e.system.physicalPenalty,up:e.system.universalPenalty}};e.isToken?l.token=e.token.id:l.actor=e.id;if(Hooks.call("hm3.preTreatmentRoll",l,e,t)){const a=await _.d100StdRoll(l);if(a){let i=a.isCritical?"c":"m";i+=a.isSuccess?"s":"f";const n=s[i];await t.update({"system.healRate":n}),a.roll.preData?.physician&&await D(a.roll.preData.physician,{actor:e,success:a.isSuccess}),lt("hm3.onTreatmentRoll",e,a,l,t)}return a}return null}(s,n,r);if(7===n.system?.healRate)return await n.delete(),null;const c={fastforward:t,label:`${n.name} Healing Roll`,notes:n.system.notes,physicianSkills:s.getPartySkills("Physician"),speaker:r,subType:l,target:n.system.healRate*s.system.endurance,type:"healing",notesData:{endurance:s.system.endurance,fatigue:s.system.eph.fatigue,healRate:n.system.healRate,il:s.system.eph.totalInjuryLevels||0,injuryName:n.name,pp:s.system.physicalPenalty,up:s.system.universalPenalty}};if(s.isToken?c.token=s.token.id:c.actor=s.id,Hooks.call("hm3.preHealingRoll",c,s,n)){const e=await _.d100StdRoll(c);return n.runCustomMacro(e),e&&(await async function(e,t){switch(e.system.subType||m.HEALING){case m.BLOODLOSS:break;case m.HEALING:if(t.isSuccess){const a=e.system.injuryLevel-(t.isCritical?2:1);a<=0?await e.delete():await e.update({"system.injuryLevel":a})}break;case m.DISEASE:case m.POISON:case m.TOXIN:case m.SHOCK:let a;a=t.isSuccess?e.system.healRate+(t.isCritical?2:1):e.system.healRate-(t.isCritical?2:1),a>=6?await e.delete():a<=0||await e.update({"system.healRate":a})}}(n,e),e.roll.preData?.physician&&await D(e.roll.preData.physician,{actor:s,success:e.isSuccess}),lt("hm3.onHealingRoll",s,e,c,n)),e}return null}async function Fe(e=!1,t=null){const a=rt({actor:t,item:null,speaker:null});if(!a)return ui.notifications.warn("No actor for this action could be determined."),null;const i={type:"dodge",label:"Dodge Roll",target:a.actor.system.dodge,notesData:{},speaker:a.speaker,fastforward:e,notes:""};if(a.actor.isToken?i.token=a.actor.token.id:i.actor=a.actor.id,Hooks.call("hm3.preDodgeRoll",i,a.actor)){const e=await _.d100StdRoll(i);return e&&lt("hm3.onDodgeRoll",a.actor,e,i),e}return null}async function He(e){const t=rt({actor:(e=foundry.utils.mergeObject({noDialog:!1,myActor:null,token:null,injuryLevel:0},e)).myActor,item:null,speaker:null,token:e.token});if(!t)return ui.notifications.warn("No actor for this action could be determined."),null;let a=!1,i=null;if(i={fastforward:e.noDialog,label:"Kill Roll",notes:"",notesData:{},numdice:e.injuryLevel,speaker:t.speaker,target:t.actor.system.endurance,type:"kill"},t.actor.isToken?(i.token=t.actor.token.id,e.token=t.actor.token):(i.actor=t.actor.id,i.token=e.token?.id),a=Hooks.call("hm3.preKillRoll",i,t.actor),a){const a=await _.d6Roll(i);return t.actor.runCustomMacro(a),a&&(a.isSuccess?await game.hm3.GmSays({text:`<b>${e.token.name}</b> just survives this <b>Fatal</b> wound, and makes a normal <b>Shock</b> roll.`,source:"Combat 14"}):await(e.token?.addCondition(game.hm3.Condition.DYING)),lt("hm3.onKillRoll",t.actor,a,i)),a}return null}async function Pe(e=!1,t=null,a=null,i=0){const s=rt({actor:t,item:null,speaker:null,token:a});if(!s)return ui.notifications.warn("No actor for this action could be determined."),null;if(s.actor?.hasCondition(l.INANIMATE))return ui.notifications.warn("Token is inanimate, and immune to shock."),null;let n=!1;const o={fastforward:e,label:"Shock Roll",notes:"",notesData:{},numdice:s.actor.system.universalPenalty,speaker:s.speaker,target:s.actor.system.endurance,type:"shock"};if(s.actor.isToken?(o.token=s.actor.token.id,a=s.actor.token):(o.actor=s.actor.id,o.token=a?.id),i>0&&(o.noTA=!0),n=Hooks.call("hm3.preShockRoll",o,s.actor),n){const e=await _.d6Roll(o);return s.actor.runCustomMacro(e),e&&(0!==i||e.isSuccess||await(a?.addCondition(l.UNCONSCIOUS)),lt("hm3.onShockRoll",s.actor,e,o)),e}return null}async function $e({myActor:e=null,noDialog:t=!1,token:a=null}){const i=rt({actor:e,item:null,speaker:null,token:a});if(!i)return ui.notifications.warn("No actor for this action could be determined."),null;if(i.actor?.hasCondition(l.INANIMATE))return ui.notifications.warn("Token is inanimate, and immune to shock."),null;let s=!1;const n={fastforward:t,label:"Mental Shock Roll",notes:"",notesData:{},numdice:i.actor.system.universalPenalty,speaker:i.speaker,target:i.actor.system.abilities.will.base,type:"willshock"};if(i.actor.isToken?n.token=i.actor.token.id:(n.actor=i.actor.id,n.token=a?.id),s=Hooks.call("hm3.preWillShockRoll",n,i.actor),s){const e=await _.d6Roll(n);return e&&lt("hm3.onWillShockRoll",i.actor,e,n),e}return null}async function Ge(e=!1,t=null,a=null,i=null){const s=rt({actor:t,item:null,speaker:null});if(!s)return ui.notifications.warn("No actor for this action could be determined."),null;if(s.actor?.hasCondition(l.NO_STUMBLE))return ui.notifications.warn("Token has No Stumble feat."),null;const n={fastforward:e,label:`${s.actor.isToken?s.actor.token.name:s.actor.name} Stumble Roll`,notes:"",notesData:{},numdice:3,opponentToken:a,speaker:s.speaker,target:s.actor.system.eph.stumbleTarget,type:"stumble"};if(s.actor.isToken?(n.token=s.actor.token.id,i=s.actor.token):(n.actor=s.actor.id,n.token=i?.id),Hooks.call("hm3.preStumbleRoll",n,s.actor)){const e=await _.d6Roll(n);return e&&(s.actor.runCustomMacro(e),e.isSuccess||(await(i?.addCondition(l.PRONE)),await X()),lt("hm3.onStumbleRoll",s.actor,e,n)),e}return null}async function je(e=!1,t=null,a=null,i=null){const s=rt({actor:t,item:null,speaker:null});if(!s)return ui.notifications.warn("No actor for this action could be determined."),null;if(s.actor?.hasCondition(l.NO_FUMBLE))return ui.notifications.warn("Token has No Fumble feat."),null;if(s.actor.system.abilities.dexterity.base<=0)return game.user.isGM&&ui.notifications.warn(`Fumble target is not set for ${s.token.name}.`),Ge(e,t,a,i);const n={actor:s.actor,fastforward:e,label:`${s.actor.isToken?s.actor.token.name:s.actor.name} Fumble Roll`,notes:"",notesData:{},numdice:3,opponentToken:a,speaker:s.speaker,target:s.actor.system.eph.fumbleTarget,type:"fumble"};if(s.actor.isToken?(n.token=s.actor.token.id,i=s.actor.token):(n.actor=s.actor.id,n.token=i?.id),Hooks.call("hm3.preFumbleRoll",n,s.actor)){const e=await _.d6Roll(n);return e&&(s.actor.runCustomMacro(e),e.isSuccess||await X(),lt("hm3.onFumbleRoll",s.actor,e,n)),e}return null}async function Be(e,t,a,i){const s=canvas.tokens.get(e);if(!s)return ui.notifications.warn(`Attacker ${s.name} could not be found on canvas.`),null;const n=canvas.tokens.get(t);if(!n)return ui.notifications.warn(`Defender ${n.name} could not be found on canvas.`),null;if(Hooks.call("hm3.preThrowDownRoll",s,n)){let e=0,t=0;for(;e===t;)e=It(`${3+a}d6 + ${s.actor.system.abilities.strength.effective}`),t=It(`${3+i}d6 + ${n.actor.system.abilities.strength.effective}`);let o,r=!1,c=!1,m="";e>t?(o=async()=>await bt(n,l.PRONE),m=`${s.name} has thrown ${n.name} to the ground and wins a Tactical Advantage.`,r=!0):(o=async()=>await bt(s,l.PRONE),m=`${n.name} has thrown ${s.name} to the ground and wins a Tactical Advantage.`,c=!0),(r||c)&&(await X()||(r=!1,c=!1));const d={ata:r,atkTokenId:s.id,attacker:s.name,attackRoll:e,defender:n.name,defenseRoll:t,defTokenId:n.id,dta:c,hasAttackHit:!1,resultDesc:m,title:"Throw Down Roll",visibleAtkActorId:s.actor.id,visibleDefActorId:n.actor.id};let u="systems/hm3/templates/chat/attack-result-card.hbs",h={content:(await renderTemplate(u,d)).trim(),sound:CONFIG.sounds.dice,speaker:ChatMessage.getSpeaker(),user:game.user.id};await ChatMessage.create(h,{}),await o(),lt("hm3.onThrowDownRoll",s,n,{atkResult:e,defResult:t})}return null}async function We(e=!1,t=null,a=null){const i=rt({actor:t,item:null,speaker:null});if(!i)return ui.notifications.warn("No actor for this action could be determined."),null;let s={clear:!0,grabbing:!1,height:6,modifier:0};const n=i.actor.items.find(e=>e.type===d.SKILL&&"Dodge"===e.name),r=i.actor.items.find(e=>e.type===d.SKILL&&"Acrobatics"===e.name);s.skill="Dodge",s.skills=[{key:"Dodge"}],r&&(s.skill="Acrobatics",s.skills=[{key:"Acrobatics"},{key:"Dodge"}]),s.surface="0",s.surfaces=[{key:"-3",label:"Deep Water (3 feet or more) (-3d6)"},{key:"-2",label:"Shallow Water (less than 3 feet) (-2d6)"},{key:"-1",label:"Soft Ground (mud, bog, etc.) (-1d6)"},{key:"0",label:"Normal Ground (grass, earth, etc.) (+0)"},{key:"1",label:"Hard Ground (paving stone, etc.) (+1d6)"},{key:"2",label:"Rocky Ground (+2d6)"}];const l=await renderTemplate("systems/hm3/templates/dialog/falling-test-dialog.hbs",s);return await Dialog.prompt({content:l.trim(),label:"Roll",options:{width:550},title:"Falling Test",callback:async e=>{const t=e[0].querySelector("form"),s=t.clear.checked,l=t.grabbing.checked,c=Number(t.height.value),m=Number(t.modifier.value),d=t.skills.value,u=Number(t.surfaces.value);let h=Math.ceil(c/10+Number.EPSILON);if(h+=u,l){const e=i.actor.system.abilities.dexterity.effective,t={actor:i.actor,effSkillBase:e,fastforward:!0,isAbility:!0,label:"d100 Dexterity Roll",multiplier:5,name:`${i.token.name} tries to grab something while falling.`,notes:"",notesData:{},numdice:1,skill:"Dexterity",speaker:i.speaker,target:5*e,type:"dexterity-d100"};i.actor.isToken?t.token=i.actor.token.id:(t.actor=i.actor.id,t.token=a?.id),t.addlInfoCallback=e=>{const t="Fall modifier:";return e.isSuccess?e.isCritical?(h+=-3,`<p>${t} -3d6</p>`):(h+=-2,`<p>${t} -2d6</p>`):e.isCritical?`<p>${i.token.name} has wrenched one arm, giving a Blunt Minor Injury (M1).</p>`:"<p>No effect</p>"};const s=await _.d100StdRoll(t);!s.isSuccess&&s.isCritical&&await _.injuryRoll({actor:i.actor,aim:"Mid",aspect:o.BLUNT,impact:1,items:i.actor.items,location:(1===await It("1d2")?"Right":"Left")+" Shoulder",name:"Character has wrenched one arm.",noArmor:!0,speaker:i.speaker})}let g=!1;if(s&&c>15){let e="Acrobatics"===d?r.system.effectiveMasteryLevel:n.system.effectiveMasteryLevel;e=game.hm3.macros.HM100Check(e+m);const t={actor:i.actor,fastforward:!0,label:`${d} Skill Test`,name:`${i.token.name} tries to avoid falling damage.`,notes:"",notesData:{},numdice:1,skill:d,speaker:i.speaker,target:e,type:"falling"};i.actor.isToken?t.token=i.actor.token.id:(t.actor=i.actor.id,t.token=a?.id),t.addlInfoCallback=e=>{const a="Fall modifier:",i={Dodge:-2,Acrobatics:-3},s={Dodge:-1,Acrobatics:-2},n={Dodge:1,Acrobatics:0},o={Dodge:2,Acrobatics:1};return e.isSuccess?e.isCritical?(h+=i[t.skill],`<p>${a} ${i[t.skill]}d6</p>`):(h+=s[t.skill],`<p>${a} ${s[t.skill]}d6</p>`):e.isCritical?(h+=o[t.skill],`<p>${a} +${o[t.skill]}d6</p>`):(h+=n[t.skill],`<p>${a} +${n[t.skill]}d6</p>`)},g=(await _.d100StdRoll(t)).isSuccess}h=Math.max(h,0),await _.injuryRoll({actor:i.actor,aim:g?"Low":"Mid",aspect:o.BLUNT,impact:await game.hm3.macros.rollResultAsync(h+"d6",{name:i.actor.name,type:"fallingRoll"}),items:i.actor.items,name:`Falling from ${c} feet with ${h}d6 blunt damage.`,speaker:i.speaker})}}),null}async function Ue(e=null){const t=rt({actor:e,item:null,speaker:ChatMessage.getSpeaker()});if(!t)return ui.notifications.warn("No actor for this action could be determined."),null;const a={weapon:"",data:t.actor,speaker:t.speaker,notesData:{},notes:""};if(t.actor.isToken?a.token=t.actor.token.id:a.actor=t.actor.id,Hooks.call("hm3.preDamageRoll",a,t.actor)){const e=await _.damageRoll(a);return e&&lt("hm3.onDamageRoll",t.actor,e,a),e}return null}async function Ke(e=!1,t=null){const a=rt({actor:t,item:null,speaker:null});if(!a)return ui.notifications.warn("No actor for this action could be determined."),null;if(a.actor?.hasCondition(l.INANIMATE))return ui.notifications.warn("Token is inanimate, and immune to morale."),null;const i=a.actor.items.find(e=>"Initiative"===e.name);if(!i)return ui.notifications.warn("No Initiative skill for this actor for this action could be determined."),null;let s=a.token;const n=a.actor?.hasCondition(l.UNCONSCIOUS);if(n)return ui.notifications.warn("Token is unconscious."),null;const o={actor:a.actor,fastforward:e,label:`${a.actor.isToken?a.actor.token.name:a.actor.name} Morale Roll`,notes:"",notesData:{},private:!0,speaker:a.speaker,target:i.system.effectiveMasteryLevel+5*a.actor.system.encumbrance,type:"Morale-d100"};if(a.actor.isToken?o.token=a.actor.token.id:o.actor=a.actor.id,Hooks.call("hm3.preMoraleRoll",o,a.actor)){const e=await _.d100StdRoll(o);if(e){if(a.actor.runCustomMacro(e),e.isSuccess&&e.isCritical)await(s?.addCondition(l.EMPOWERED,{oneTurn:!0}));else if(e.isSuccess||e.isCritical){if(!e.isSuccess&&e.isCritical){const e=await game.hm3.macros.rollResultAsync("1d100",{name:a.actor.name,type:"CF moraleRoll"});e<=25?await(s?.addCondition(l.BERSERK)):e<=50?await(s?.addCondition(l.DESPERATE)):e<=75?await(s?.addCondition(l.BROKEN)):await(s?.addCondition(l.CAUTIOUS))}}else await(s?.addCondition(l.CAUTIOUS,{oneRound:!0}));lt("hm3.onMoraleRoll",a.actor,e,o)}return e}return null}async function qe(e=!1,t=null){const a=rt({actor:t,item:null,speaker:null});if(!a)return ui.notifications.warn("No actor for this action could be determined."),null;if(!a.actor.system.mounted)return ui.notifications.warn("Actor is not mounted."),null;const i=a.actor.items.find(e=>e.type===d.SKILL&&e.name.includes("Riding"));if(!i)return ui.notifications.warn("No Riding skill for this actor for this action could be determined."),null;let s=a.token;const n={actor:a.actor,fastforward:e||!a.actor.hasPlayerOwner,label:`${a.actor.isToken?a.actor.token.name:a.actor.name} Steed Command Check`,notes:"",notesData:{},private:!a.actor.hasPlayerOwner,speaker:a.speaker,target:i.system.effectiveMasteryLevel,type:"SteedCommand-d100"};if(a.actor.isToken?n.token=a.actor.token.id:n.actor=a.actor.id,Hooks.call("hm3.preSteedCommandRoll",n,a.actor)){const o=await _.d100StdRoll(n);return o&&(a.actor.runCustomMacro(o),o.isSuccess&&o.isCritical?await(s?.addCondition(l.EMPOWERED,{oneTurn:!0})):o.isSuccess||o.isCritical?!o.isSuccess&&o.isCritical&&ze(e,t,!0):await(s?.addCondition(l.WEAKENED,{oneTurn:!0})),lt("hm3.onSteedCommandRoll",a.actor,o,n),D(i,{success:o.isSuccess})),o}return null}async function ze(e=!1,t=null,a=!1){const i=rt({actor:t,item:null,speaker:null});if(!i)return ui.notifications.warn("No actor for this action could be determined."),null;if(!i.actor.system.mounted)return ui.notifications.warn("Actor is not mounted."),null;const s=i.actor.items.find(e=>e.type===d.SKILL&&e.name.includes("Riding"));if(!s)return ui.notifications.warn("No Riding skill for this actor for this action could be determined."),null;let n=i.token;const o={actor:i.actor,fastforward:e,label:`${i.actor.isToken?i.actor.token.name:i.actor.name} Unhorsing Roll`,modifier:i.actor.system.eph.unhorsing||0,notes:"",notesData:{},private:!i.actor.hasPlayerOwner,speaker:i.speaker,target:s.system.effectiveMasteryLevel,type:"SteedCommand-d100"};if(i.actor.isToken?o.token=i.actor.token.id:o.actor=i.actor.id,Hooks.call("hm3.preUnhorsingRoll",o,i.actor)){const e=a?{isSuccess:!1,isCritical:!1}:await _.d100StdRoll(o);return e&&(i.actor.runCustomMacro(e),e.isSuccess?(await game.hm3.GmSays({text:`<b>${n.name}</b> stays in the saddle.`,source:"Combat 24"}),e.isCritical):await game.hm3.GmSays({text:`<b>${n.name}</b> is thrown.`,source:"Combat 24"}),lt("hm3.onUnhorsingRoll",i.actor,e,o),D(s,{success:e.isSuccess})),e}return null}async function Ye(e,t=null){const a=rt({actor:t,item:null,speaker:ChatMessage.getSpeaker()});if(!a)return ui.notifications.warn("No actor for this action could be determined."),null;const i={};if(/^\s*[+-]/.test(e)){const t=parseInt(e,10);isNaN(t)||(i["system.fatigue"]=Math.max(a.actor.system.fatigue+t,0))}else{const t=parseInt(e,10);isNaN(t)||(i["system.fatigue"]=t)}return void 0!==i["system.fatigue"]&&await a.actor.update(i),!0}async function Ve(e,t,a=null){a&&=a instanceof Actor?a:fromUuidSync(a);const i=await V(e,"missilegear",a),s={actor:a,item:null,speaker:ChatMessage.getSpeaker()};"missilegear"===i?.type&&i.parent&&(s.actor=i.parent,s.speaker=ChatMessage.getSpeaker({actor:i.parent}));const n=rt(result);if(!n)return ui.notifications.warn("No actor for this action could be determined."),null;if(!i)return ui.notifications.warn(`${e} could not be found in the list of missiles for ${n.actor.name}.`),null;const o={};if(/^\s*[+-]/.test(t)){const e=parseInt(t,10);isNaN(e)||(o["system.quantity"]=Math.max(i.system.quantity+e,0))}else{const e=parseInt(t,10);isNaN(e)||(o["system.quantity"]=e)}if(void 0!==o["system.quantity"]){const e=n.actor.items.get(i.id);await e.update(o)}return!0}async function Je(e,t=null){t&&=t instanceof Actor?t:fromUuidSync(t);const a=await V(e,"skill",t),i=rt(result);if(!i)return ui.notifications.warn("No actor for this action could be determined."),null;if(!a)return ui.notifications.warn(`${e} could not be found in the list of skills for ${i.name}.`),null;if(!i.isOwner)return ui.notifications.warn(`You are not an owner of ${i.name}, so you may not set the skill development flag.`),null;if(!a.system.improveFlag){const e={"system.improveFlag":1};await a.update(e)}return!0}async function Qe(e=null,t=!1,a=null,i=!1){const s=nt(a,i);if(!s)return null;const n=ot(s);if(!n)return null;let o=null;e&&(o=await V(e,"weapongear",s.actor));const r=o?.system.assocSkill.toLowerCase().includes("unarmed")||!1;if(Hooks.call("hm3.preMeleeAttack",s,n,o,r)){const e=await async function(e,t,{weaponItem:a=null,unarmed:i=!1,noDialog:s=!1}={}){if(!e)return ui.notifications.warn("No attacker token identified."),null;if(!B(e))return console.error(`HM3 | meleeAttack atkToken=${e} is not valid.`),null;if(console.assert(e instanceof H,`atkToken is NOT a TokenHM3 instance: ${e}`),!t)return ui.notifications.warn("No defender token identified."),null;if(!B(t))return console.error(`HM3 | meleeAttack defToken=${t} is not valid.`),null;if(console.assert(t instanceof H,`defToken is NOT a TokenHM3 instance: ${t}`),!e.isOwner)return ui.notifications.warn(`You do not have permissions to perform this operation on ${e.name}`),null;if(e.hasCondition(l.BROKEN))return ui.notifications.warn(`You cannot attack while you are '${l.BROKEN}'.`),null;if(e.hasCondition(l.CAUTIOUS))return ui.notifications.warn(`You cannot attack while you are '${l.CAUTIOUS}'.`),null;if(e.hasCondition(l.SHOCKED))return ui.notifications.warn(`You cannot attack while you are '${l.SHOCKED}'.`),null;if(e.hasCondition(l.UNCONSCIOUS))return ui.notifications.warn(`You cannot attack while you are '${l.UNCONSCIOUS}'.`),null;const n=J(e,t,!0);if(n>1){const a=`Target ${t.name} is outside of melee range for attacker ${e.name}; range=${n}.`;return console.warn(a),ui.notifications.warn(a),null}const o=ChatMessage.getSpeaker({token:e}),r={type:"Attack",attackerName:e.name,defenderName:t.name,noDialog:s,unarmed:i};if(a){if(!a.system.isEquipped)return ui.notifications.warn(`For ${e.name} ${a.name} is not equipped.`),null;r.weapon=a}else{const t=W(e);if(!t.weapons||!t.weapons.length)return ui.notifications.warn(`${e.name} does not have any equipped melee weapons.`),null;r.weapons=t.weapons,r.defaultWeapon=t.defaultWeapon}r.defaultModifier=0,void 0!==e.actor?.system?.eph?.meleeAMLMod&&(r.defaultModifier+=e.actor.system.eph.meleeAMLMod);const c=t.hasCondition(l.PRONE);c&&(r.defaultModifier+=20);const m=await j(r);if(!m)return null;a||(a=m.weapon),m.addlModifier+="Mid"===m.aim?0:-10;const d=e.hasCondition(l.CLOSE_MODE)&&!r.unarmed&&("Blunt"===m.aspect||"Edged"===m.aspect);m.addlModifier+=d?-10:0;const u=game.hm3.macros.HM100Check(m.weapon.system.attackMasteryLevel+m.addlModifier),h="systems/hm3/templates/chat/attack-card.hbs",g=t.hasCondition(l.BERSERK),p=t.hasCondition(l.BROKEN),f=t.hasCondition(l.CAUTIOUS),y=t.hasCondition(l.DESPERATE),k=t.hasCondition(l.GRAPPLED),b=t.hasCondition(l.INCAPACITATED),S=t.hasCondition(l.SHOCKED),v=t.hasCondition(l.STUNNED),w=t.hasCondition(l.UNCONSCIOUS),C=m.isGrappleAtk?"Grapple":"Melee",M={addlModifierAbs:Math.abs(m.addlModifier),addlModifierSign:m.addlModifier<0?"-":"+",aim:m.aim,aspect:m.aspect,atkBerserk:e.hasCondition(l.BERSERK),atkCloseMode:d,atkProne:e.hasCondition(l.PRONE),atkTokenId:e.id,attacker:e.name,debug:CONFIG.debug.hm3&&game.user.isGM,defBerserk:g,defender:t.name,defProne:c,defTokenId:t.id,effAML:u,hasBlock:!(g||y||k||b||S||v||w||m.isGrappleAtk),hasCounterstrike:!(p||f||b||S||v||w),hasDodge:!(g||y||k||b||S||v||w)&&t.actor.system.dodge>0,hasEsoteric:!1,hasIgnore:!0,impactMod:m.impactMod,isGrappleAtk:!!m.isGrappleAtk,origAML:a.system.attackMasteryLevel,title:`${a.name} ${C} Attack`,visibleActorId:t.actor.id,weaponName:a.name,weaponType:"melee"};M.oneButton=1===[M.hasBlock,M.hasCounterstrike,M.hasDodge,M.hasEsoteric,h.hasIgnore].filter(Boolean).length;const T=await renderTemplate(h,M),I={user:game.user.id,speaker:o,content:T.trim(),type:CONST.CHAT_MESSAGE_STYLES.OTHER};return ChatMessage.applyRollMode(I,game.settings.get("core","rollMode")),await ChatMessage.create(I,{}),game.settings.get("hm3","combatAudio")&&foundry.audio.AudioHelper.play({src:"sounds/drums.wav",autoplay:!0,loop:!1},!0),M}(s.token,n,{weaponItem:o,unarmed:r,noDialog:t});return Hooks.call("hm3.onMeleeAttack",e,s,n,o,r),e}return null}async function Xe(e=null,t=!1,a=null,i=!1){const s=nt(a,i);if(!s)return null;const n=ot(s);if(!n)return null;let o=null;if(e&&(o=await V(e,"missilegear",s.actor)),Hooks.call("hm3.preMissileAttack",s,n,o)){const e=await async function(e,t,a){if(!e)return ui.notifications.warn("No attacker token identified."),null;if(!B(e))return ui.notifications.error("Attack token not valid."),console.error(`HM3 | missileAttack atkToken=${e} is not valid.`),null;if(console.assert(e instanceof H,`atkToken is NOT a TokenHM3 instance: ${e}`),!t)return ui.notifications.warn("No defender token identified."),null;if(!B(t))return ui.notifications.error("Defender token not valid."),console.error(`HM3 | missileAttack defToken=${t} is not valid.`),null;if(console.assert(t instanceof H,`defToken is NOT a TokenHM3 instance: ${t}`),!e.isOwner)return ui.notifications.warn(`You do not have permissions to perform this operation on ${e.name}`),null;if(e.hasCondition(l.BROKEN))return ui.notifications.warn(`You cannot attack while you are '${l.BROKEN}'.`),null;if(e.hasCondition(l.CAUTIOUS))return ui.notifications.warn(`You cannot attack while you are '${l.CAUTIOUS}'.`),null;if(e.hasCondition(l.SHOCKED))return ui.notifications.warn(`You cannot attack while you are '${l.SHOCKED}'.`),null;if(e.hasCondition(l.UNCONSCIOUS))return ui.notifications.warn(`You cannot attack while you are '${l.UNCONSCIOUS}'.`),null;const i=ChatMessage.getSpeaker({token:e}),s=J(e,t),n={distance:Math.round(s),type:"Attack",attackerName:e.name,defenderName:t.name};if(!a)return ui.notifications.warn("You must specify a missile weapon to use."),null;if(!a.system.isEquipped)return ui.notifications.warn(`${a.name} is not equipped.`),null;n.weapon=a,void 0!==e.actor?.system?.eph?.missileAMLMod&&(n.defaultModifier=e.actor.system.eph.missileAMLMod);const o=await j(n);if(!o)return null;if(a||(a=o.weapon),game.settings.get("hm3","missileTracking")&&e.actor){if(a.system.quantity<=0)return ui.notifications.warn(`No more ${a.name} left, attack denied.`),null;e.actor.items.get(a.id).update({"system.quantity":a.system.quantity-1})}o.addlModifier+="Mid"===o.aim?0:-10;const r=game.hm3.macros.HM100Check(o.weapon.system.attackMasteryLevel+o.addlModifier+o.rangeMod),c="systems/hm3/templates/chat/attack-card.hbs",m=t.hasCondition(l.GRAPPLED),d=t.hasCondition(l.INCAPACITATED),u=t.hasCondition(l.SHOCKED),h=t.hasCondition(l.STUNNED),g=t.hasCondition(l.UNCONSCIOUS),p=/\bbow\b|shortbow|longbow|crossbow|\bsling\b|\barrow\b|\bbolt\b|\bbullet\b/i.test(a.name),f=t.actor.itemTypes.weapongear.filter(e=>e.system.isEquipped&&/shield|\bbuckler\b/i.test(e.name)),y=p&&0===f.length,k={title:`${a.name} Missile Attack`,addlModifierAbs:Math.abs(o.addlModifier),addlModifierSign:o.addlModifier<0?"-":"+",aim:o.aim,aspect:o.aspect,atkTokenId:e.id,attacker:e.name,debug:CONFIG.debug.hm3&&game.user.isGM,defender:t.name,defTokenId:t.id,effAML:r,hasBlock:!(m||d||u||h||g||y),hasCounterstrike:!1,hasDodge:!(m||d||u||h||g)&&t.actor.system.dodge>0,hasEsoteric:!1,hasIgnore:!0,impactMod:o.impactMod,origAML:a.system.attackMasteryLevel,rangeDist:Math.round(s),rangeExceedsExtreme:o.rangeExceedsExtreme,rangeModifierAbs:Math.abs(o.rangeMod),rangeModSign:o.rangeMod<0?"-":"+",rangeText:o.range,visibleActorId:t.actor.id,weaponName:a.name,weaponType:"missile"};k.oneButton=1===[k.hasBlock,k.hasCounterstrike,k.hasDodge,k.hasEsoteric,c.hasIgnore].filter(Boolean).length;const b={content:(await renderTemplate(c,k)).trim(),speaker:i,type:CONST.CHAT_MESSAGE_STYLES.OTHER,user:game.user.id};return ChatMessage.applyRollMode(b,game.settings.get("core","rollMode")),await ChatMessage.create(b,{}),game.settings.get("hm3","combatAudio")&&foundry.audio.AudioHelper.play({src:"sounds/drums.wav",autoplay:!0,loop:!1},!0),k}(s.token,n,o);return Hooks.call("hm3.onMissileAttack",e,s,n,o),e}return null}async function Ze(e=null,t=!1,a=null,i=!1){const s=nt(a,i);if(!s)return null;const n=ot(s);if(!n)return null;let o=null;if(e&&(o=await V(e,"skill",s.actor)),Hooks.call("hm3.preEsotericAttack",s,n,o)){const e=await async function(e,t,a){if(!e)return ui.notifications.warn("No attacker token identified."),null;if(!B(e))return ui.notifications.error("Attack token not valid."),console.error(`HM3 | esotericAttack atkToken=${e} is not valid.`),null;if(console.assert(e instanceof H,`atkToken is NOT a TokenHM3 instance: ${e}`),!t)return ui.notifications.warn("No defender token identified."),null;if(!B(t))return ui.notifications.error("Defender token not valid."),console.error(`HM3 | esotericAttack defToken=${t} is not valid.`),null;if(console.assert(t instanceof H,`defToken is NOT a TokenHM3 instance: ${t}`),!e.isOwner)return ui.notifications.warn(`You do not have permissions to perform this operation on ${e.name}`),null;if(e.hasCondition(l.BROKEN))return ui.notifications.warn(`You cannot attack while you are '${l.BROKEN}'.`),null;if(e.hasCondition(l.CAUTIOUS))return ui.notifications.warn(`You cannot attack while you are '${l.CAUTIOUS}'.`),null;if(e.hasCondition(l.SHOCKED))return ui.notifications.warn(`You cannot attack while you are '${l.SHOCKED}'.`),null;if(e.hasCondition(l.UNCONSCIOUS))return ui.notifications.warn(`You cannot attack while you are '${l.UNCONSCIOUS}'.`),null;const i=ChatMessage.getSpeaker({token:e}),s=J(e,t),n={attackerName:e.name,defenderName:t.name,distance:s,maxDistance:a.system.masteryLevel,type:a.name,weapon:a};if(n.distance>n.maxDistance){const i=`Target ${t.name} is outside of ${a.name} range for attacker ${e.name}; range=${s}/${n.maxDistance}.`;return ui.notifications.warn(i),null}const o=await async function(e){if(!e.weapon)return ui.notifications.warn(`${e.attackerName} has no esoteric weapons available for attack.`),null;const t={defaultModifier:e.defaultModifier||0,weapon:e.weapon.name};if(e.weapon.type===d.SKILL&&e.weapon.name.includes("Mental Conflict"))t.isMentalConflict=!0,t.addlInfo="Mental Conflict Type: ",t.mentalConflictType="possession",t.mentalConflictTypes=[{key:"possession",label:"Possession"},{key:"conflict",label:"Ethereal Conflict"},{key:"artifact",label:"Artifact Control"}];else{if(e.weapon.type!==d.PSIONIC||!e.weapon.name.includes("Mental Bolt"))return null;t.isMentalBolt=!0}t.title=`${e.attackerName} vs. ${e.defenderName} ${e.type} with ${e.weapon.name}`;const a=await renderTemplate("systems/hm3/templates/dialog/esoteric-attack-dialog.hbs",t);return Dialog.prompt({title:t.title,content:a.trim(),label:e.type,callback:a=>{const i=a[0].querySelector("form"),s=i.range?i.range.value:null,n=i.mentalConflictType?i.mentalConflictType[i.mentalConflictType.selectedIndex].innerHTML:null;return{addlModifier:i.addlModifier?parseInt(i.addlModifier.value):0,addlInfo:t.isEsotericCombat?t.addlInfo+n:null,range:s,weapon:e.weapon}}})}(n);if(!o)return null;const r=game.hm3.macros.HM100Check(a.system.effectiveMasteryLevel+o.addlModifier),c="systems/hm3/templates/chat/attack-card.hbs",m={title:"Esoteric Attack",addlInfo:o.addlInfo,addlModifierAbs:Math.abs(o.addlModifier),addlModifierSign:o.addlModifier<0?"-":"+",atkTokenId:e.id,attacker:e.name,debug:CONFIG.debug.hm3&&game.user.isGM,defender:t.name,defTokenId:t.id,effAML:r,hasBlock:!1,hasCounterstrike:!1,hasDodge:!1,hasEsoteric:!0,hasIgnore:!1,origAML:a.system.effectiveMasteryLevel,visibleActorId:t.actor.id,weaponName:a.name,weaponType:"esoteric"};m.oneButton=1===[m.hasBlock,m.hasCounterstrike,m.hasDodge,m.hasEsoteric,c.hasIgnore].filter(Boolean).length;const u={content:(await renderTemplate(c,m)).trim(),speaker:i,type:CONST.CHAT_MESSAGE_STYLES.OTHER,user:game.user.id};if(ChatMessage.applyRollMode(u,game.settings.get("core","rollMode")),await ChatMessage.create(u,{}),game.settings.get("hm3","autoMarkUsedSkills")){const t=a;e.actor.items.forEach(e=>{e.name===t&&"skill"===e.type&&e.update({"system.improveFlag":e.system.improveFlag+1})})}return m}(s.token,n,o);return Hooks.call("hm3.onEsotericAttack",e,s,n,o),e}return null}async function et(e,t,a,i,n,o,r,c,m=!1){const d=canvas.tokens.get(e);if(!d)return ui.notifications.warn(`Attacker ${d.name} could not be found on canvas.`),null;const u=canvas.tokens.get(t);if(!u)return ui.notifications.warn(`Defender ${u.name} could not be found on canvas.`),null;if(Hooks.call("hm3.preMeleeCounterstrikeResume",d,u,a,i,n,o,r,c)){const e=await async function(e,t,a,i,n,o,r,c){if(!B(e)||!B(t))return null;if(!t.isOwner)return ui.notifications.warn(`You do not have permissions to perform this operation on ${e.name}`),null;const m=W(t);if(!m.weapons)return ui.notifications.warn(`${t.name} has no equipped weapons, counterstrike defense refused.`),null;m.type="Counterstrike",m.attackerName=t.name,m.defenderName=e.name,m.defaultModifier=0,t.actor?.system?.eph?.outnumbered>1&&(m.defaultModifier+=-10*Math.floor(t.actor.system.eph.outnumbered-1)),e.hasCondition(l.PRONE)&&(m.defaultModifier+=20),t.hasCondition(l.BERSERK)&&(m.defaultModifier+=20);const d=await j(m);if(!d)return null;const u=e.hasCondition(l.CLOSE_MODE)&&!U(a,e)&&("Blunt"===o||"Edged"===o),h=t.hasCondition(l.CLOSE_MODE)&&!d.unarmed&&("Blunt"===d.aspect||"Edged"===d.aspect);d.addlModifier+=h?-10:0;const g=await _.rollTest({data:{},diceNum:1,diceSides:100,modifier:0,name:e.name,target:i,type:"atkRoll"}),p=game.hm3.macros.HM100Check(d.weapon.system.attackMasteryLevel),f=await _.rollTest({data:{},diceNum:1,diceSides:100,modifier:d.addlModifier,name:t.name,target:p,type:"defRoll"});if(game.dice3d){const e=g.rollObj;e.dice[0].options.colorset="glitterparty",await game.dice3d.showForRoll(e,game.user,!0);const t=f.rollObj;t.dice[0].options.colorset="bloodmoon",await game.dice3d.showForRoll(t,game.user,!0)}const y=e.actor.type===s.CREATURE?Number(e.actor.system.size):6,k=t.actor.type===s.CREATURE?Number(t.actor.system.size):6,b=d.isGrappleAtk,S=`${g.isCritical?"c":"m"}${g.isSuccess?"s":"f"}`,v=`${f.isCritical?"c":"m"}${f.isSuccess?"s":"f"}`,w=q({atkAddlImpact:Number(r),atkDie:y,atkResult:S,atkToken:e,defAddlImpact:d.impactMod,defDie:k,defense:b?"grapple":"counterstrike",defResult:v,defToken:t,isGrappleAtk:c,isGrappleDef:b}),C=e.actor.itemTypes.weapongear.find(e=>e.name===a),M=d.weapon;let T={attackWeaponBroke:!1,defendWeaponBroke:!1};if(game.settings.get("hm3","weaponDamage")&&w.outcome.block){if(T=await K(e,C,t,M),T.attackWeaponBroke)try{await L(C,T.atkWeaponDiff)}catch(e){}finally{w.outcome.dta=!0}if(T.defendWeaponBroke)try{await L(M,T.defWeaponDiff)}catch(e){}finally{w.outcome.ata=!0}}let I=!1;w.outcome.ata&&w.outcome.dta?(w.outcome.ata=!1,w.outcome.dta=!1,I=!0):(w.outcome.ata||w.outcome.dta)&&(await Q()?await X():(w.outcome.ata=!1,w.outcome.dta=!1,I=!0));let E=null;w.outcome.atkDice&&(E=await game.hm3.macros.rollObjectEvaluatedAsync(`${w.outcome.atkDice}d${y}`,{name:e.name,type:"atkImpactRoll"}));let A=null;w.outcome.defDice&&(A=await game.hm3.macros.rollObjectEvaluatedAsync(`${w.outcome.defDice}d${k}`,{name:t.name,type:"defImpactRoll"}));const N={addlWeaponImpact:0,atkAim:n,atkAspect:o,atkCloseMode:u,atkIsCritical:g.isCritical,atkIsSuccess:g.isSuccess,atkRollResult:g.description.replace("Substantial","Marginal"),atkTokenId:e.id,atkWeaponBroke:T.attackWeaponBroke,attacker:e.name,attackRoll:g.rollObj.total,attackWeapon:a,defender:t.name,defendWeapon:M.name,defense:"Counterstrike",defenseRoll:0,defRollResult:"",defTokenId:t.id,defWeaponBroke:T.defendWeaponBroke,effAML:game.hm3.macros.HM100Check(i),effDML:0,hasAttackHit:!c&&!!w.outcome.atkDice,impactRoll:E?E.dice[0].values.join(" + "):null,isAtkFumbleRoll:w.outcome.atkFumble,isAtkStumbleRoll:w.outcome.atkStumble,isDefFumbleRoll:null,isDefStumbleRoll:null,mlType:"AML",resultDesc:w.desc,title:"Attack Result",totalImpact:E?E.total+parseInt(r):0,visibleAtkActorId:e.actor.id,visibleDefActorId:t.actor.id,weaponImpact:r},R={addlModifierAbs:Math.abs(d.addlModifier),addlModifierSign:d.addlModifier<0?"-":"+",addlWeaponImpact:0,atkAim:d.aim,atkAspect:d.aspect,atkBerserk:e.hasCondition(l.BERSERK),atkIsCritical:f.isCritical,atkIsSuccess:f.isSuccess,atkProne:e.hasCondition(l.PRONE),atkRollResult:f.description.replace("Substantial","Marginal"),atkTokenId:t.id,attacker:t.name,attackRoll:f.rollObj.total,attackWeapon:d.weapon.name,defBerserk:t.hasCondition(l.BERSERK),defCloseMode:h,defender:e.name,defenseRoll:0,defProne:t.hasCondition(l.PRONE),defRollResult:"",defTokenId:e.id,dta:w.outcome.dta,effAML:game.hm3.macros.HM100Check(p+d.addlModifier),effDML:0,effEML:game.hm3.macros.HM100Check(p+d.addlModifier),hasAttackHit:!c&&!!w.outcome.defDice,impactRoll:A?A.dice[0].values.join(" + "):null,isAtkFumbleRoll:w.outcome.defFumble,isAtkStumbleRoll:w.outcome.defStumble,isDefFumbleRoll:null,isDefStumbleRoll:null,mlType:"AML",origEML:p,outnumbered:t.actor?.system?.eph?.outnumbered>1?t.actor.system.eph.outnumbered:0,resultDesc:w.csDesc,title:"Counterstrike Result",totalImpact:A?A.total+parseInt(d.impactMod):0,visibleAtkActorId:t.actor.id,visibleDefActorId:e.actor.id,weaponImpact:d.impactMod};let O="systems/hm3/templates/chat/attack-result-card.hbs",x=await renderTemplate(O,N),F={content:x.trim(),speaker:ChatMessage.getSpeaker({token:e}),style:CONST.CHAT_MESSAGE_STYLES.OTHER,user:game.user.id};return w.outcome.atkDice&&(F.roll=E,F.sound=CONFIG.sounds.dice),ChatMessage.applyRollMode(F,game.settings.get("core","rollMode")),await ChatMessage.create(F,{}),x=await renderTemplate(O,R),F={content:x.trim(),speaker:ChatMessage.getSpeaker({token:t}),style:CONST.CHAT_MESSAGE_STYLES.OTHER,user:game.user.id},w.outcome.defDice&&(F.roll=A,F.sound=CONFIG.sounds.dice),ChatMessage.applyRollMode(F,game.settings.get("core","rollMode")),await ChatMessage.create(F,{}),w.outcome.atkHold&&await t.addCondition(l.GRAPPLED),w.outcome.defHold&&await e.addCondition(l.GRAPPLED),D(e.actor.items.find(e=>e.name===a),{actor:e.actor,success:g.isSuccess}),D(M.system.assocSkill,{actor:t.actor,success:f.isSuccess}),I&&await X(!0),{atk:N,cs:R}}(d,u,a,i,n,o,r,c);return Hooks.call("hm3.onMeleeCounterstrikeResume",e,d,u,a,i,n,o,r,c),e}return null}async function tt(e,t,a,i,n,o,r,c,m,d=!1){const u=canvas.tokens.get(e);if(!u)return ui.notifications.warn(`Attacker ${u.name} could not be found on canvas.`),null;const h=canvas.tokens.get(t);if(!h)return ui.notifications.warn(`Defender ${h.name} could not be found on canvas.`),null;if(Hooks.call("hm3.preDodgeResume",u,h,a,i,n,o,r,c,m)){const e=await async function(e,t,a,i,n,o,r,c,m){if(!B(e)||!B(t))return null;if(!t.isOwner)return ui.notifications.warn(`You do not have permissions to perform this operation on ${e.name}`),null;const d=ChatMessage.getSpeaker({token:e}),u=game.hm3.macros.HM100Check(t.actor.system.dodge);let h=0;t.actor?.system?.eph?.outnumbered>1&&(h+=Math.floor(-10*(t.actor.system.eph.outnumbered-1))),e.hasCondition(l.PRONE)&&(h+=20);const g=await _.rollTest({data:{},diceNum:1,diceSides:100,modifier:0,name:e.name,target:n,type:"atkRoll"}),p=await _.rollTest({data:{},diceNum:1,diceSides:100,modifier:h,name:t.name,target:u,type:"defRoll"});if(game.dice3d){const e=g.rollObj;e.dice[0].options.colorset="glitterparty",await game.dice3d.showForRoll(e,game.user,!0);const t=p.rollObj;t.dice[0].options.colorset="bloodmoon",await game.dice3d.showForRoll(t,game.user,!0)}const f=e.actor.type===s.CREATURE?Number(e.actor.system.size):6,y=`${g.isCritical?"c":"m"}${g.isSuccess?"s":"f"}`,k=`${p.isCritical?"c":"m"}${p.isSuccess?"s":"f"}`;let b=null;b="melee"===a?q({atkAddlImpact:c,atkDie:f,atkResult:y,atkToken:e,defense:"dodge",defResult:k,defToken:t,isGrappleAtk:m}):z(y,k,"dodge",c);let S=!1;b.outcome.dta&&(await Q()?X():(b.outcome.dta=!1,S=!0));let v=null;b.outcome.atkDice&&(v=await game.hm3.macros.rollObjectEvaluatedAsync(`${b.outcome.atkDice}d${f}`,{name:e.name,type:"atkImpact"}));const w=e.hasCondition(l.CLOSE_MODE)&&!U(i,e)&&("Blunt"===r||"Edged"===r),C=m?"Grapple Result":"Attack Result",M={addlModifierAbs:Math.abs(h),addlModifierSign:h<0?"-":"+",addlWeaponImpact:0,atkAim:o,atkAspect:r,atkCloseMode:w,atkIsCritical:g.isCritical,atkIsSuccess:g.isSuccess,atkProne:e.hasCondition(l.PRONE),atkRollResult:g.description.replace("Substantial","Marginal"),atkTokenId:e.id,attacker:e.name,attackRoll:g.rollObj.total,attackWeapon:i,defender:t.name,defense:"Dodge",defenseRoll:p.rollObj.total,defIsCritical:p.isCritical,defIsSuccess:p.isSuccess,defProne:t.hasCondition(l.PRONE),defRollResult:p.description.replace("Substantial","Marginal"),defTokenId:t.id,dta:b.outcome.dta,effAML:n,effDML:game.hm3.macros.HM100Check(u+h),effEML:game.hm3.macros.HM100Check(u+h),hasAttackHit:!m&&!!b.outcome.atkDice,impactRoll:v?v.dice[0].values.join(" + "):null,isAtkFumbleRoll:b.outcome.atkFumble,isAtkHold:b.outcome.atkHold,isAtkStumbleRoll:b.outcome.atkStumble,isDefFumbleRoll:b.outcome.defFumble,isDefHold:b.outcome.defHold,isDefStumbleRoll:b.outcome.defStumble,isGrappleAtk:m,isGrappleAtkSuccessful:m&&b.outcome.atkDice>0,mlType:"DML",origEML:u,outnumbered:t.actor?.system?.eph?.outnumbered>1?t.actor.system.eph.outnumbered:null,resultDesc:b.desc,title:C,totalImpact:v?v.total+parseInt(c):0,visibleAtkActorId:e.actor.id,visibleDefActorId:t.actor.id,weaponImpact:c},T=await renderTemplate("systems/hm3/templates/chat/attack-result-card.hbs",M);let I={user:game.user.id,speaker:d,content:T.trim()};return b.outcome.atkDice?(I.roll=v,I.sound=CONFIG.sounds.dice,I.style=CONST.CHAT_MESSAGE_STYLES.OTHER):I.style=CONST.CHAT_MESSAGE_STYLES.OTHER,ChatMessage.applyRollMode(I,game.settings.get("core","rollMode")),await ChatMessage.create(I,{}),!b.outcome.atkDice&&game.settings.get("hm3","combatAudio")&&foundry.audio.AudioHelper.play({src:"systems/hm3/audio/swoosh1.ogg",autoplay:!0,loop:!1},!0),b.outcome.atkHold&&await t.addCondition(l.GRAPPLED),b.outcome.defHold&&await e.addCondition(l.GRAPPLED),D(e.actor.items.find(e=>e.name===i),{actor:e.actor,success:g.isSuccess}),D("Dodge",{actor:t.actor,success:p.isSuccess}),S&&await X(!0),M}(u,h,a,i,n,o,r,c,m);return Hooks.call("hm3.onDodgeResume",e,u,h,a,i,n,o,r,c,m),e}return null}async function at(e,t,a,i,n,o,r,c,m,d=!1){const u=canvas.tokens.get(e);if(!u)return ui.notifications.warn(`Attacker ${u.name} could not be found on canvas.`),null;const h=canvas.tokens.get(t);if(!h)return ui.notifications.warn(`Defender ${h.name} could not be found on canvas.`),null;if(Hooks.call("hm3.preBlockResume",u,h,a,i,n,o,r,c,m)){const e=await async function(e,t,a,i,n,o,r,c,m,d=!1){if(!B(e)||!B(t))return null;if(!t.isOwner)return ui.notifications.warn(`You do not have permissions to perform this operation on ${e.name}`),null;const u=ChatMessage.getSpeaker({token:e.document});let h=null,g=W(t,"highestDML").weapons;const p=g.filter(e=>e.system.isEquipped&&/shield|\bbuckler\b/i.test(e.name));let f=null;if("missile"===a)if(f=e.actor.itemTypes.missilegear.find(e=>e.name===i),/\bbow\b|shortbow|longbow|crossbow|\bsling\b|\barrow\b|\bbolt\b|\bbullet\b/i.test(i)){if(!p.length)return ui.notifications.warn(`${i} is a high-velocity missile that can only be blocked with a shield, and you don't have a shield equipped. Block defense refused.`),null;g=p,h=`${i} is a high-velocity missile, and can only be blocked with a shield. Choose which shield to use.`}else h=`${i} is a low-velocity missile, and can be blocked either by a shield (at full DML) or by a melee weapon (at &#189; DML). Choose wisely.`;else f=e.actor.itemTypes.weapongear.find(e=>e.name===i);let y=g,k=g[0];if(0===y.length)return ui.notifications.warn(`${t.name} has no weapons that can be used for blocking, block defense refused.`);let b=0;t.actor?.system?.eph?.outnumbered>1&&(b+=-10*Math.floor(t.actor.system.eph.outnumbered-1)),e.hasCondition(l.PRONE)&&(b+=20);const S={defaultModifier:b,defaultWeapon:k,modifierType:"Defense",name:t.name,noDialog:d,prompt:h,weapons:y},v=await G(S);if(!v)return null;let w;const C=t.actor.itemTypes.weapongear.find(e=>e.name===v.weapon);w=C?game.hm3.macros.HM100Check(C.system.defenseMasteryLevel):5,"missile"===a&&(p.some(e=>e.name===v.weapon.name)||(w=game.hm3.macros.HM100Check(w/2)));const M=await _.rollTest({data:{},diceNum:1,diceSides:100,modifier:0,name:e.name,target:n,type:"atkRoll"}),T=await _.rollTest({data:{},diceNum:1,diceSides:100,modifier:v.addlModifier,name:t.name,target:w,type:"defRoll"});if(game.dice3d){const e=M.rollObj;e.dice[0].options.colorset="glitterparty",await game.dice3d.showForRoll(e,game.user,!0);const t=T.rollObj;t.dice[0].options.colorset="bloodmoon",await game.dice3d.showForRoll(t,game.user,!0)}const I=`${M.isCritical?"c":"m"}${M.isSuccess?"s":"f"}`,E=`${T.isCritical?"c":"m"}${T.isSuccess?"s":"f"}`,A=e.actor.type===s.CREATURE?Number(e.actor.system.size):6;let N;N="melee"===a?q({atkAddlImpact:Number(c),atkDie:A,atkResult:I,atkToken:e,defense:"block",defResult:E,defToken:t,isGrappleAtk:m}):z(I,E,"block",c);let R={attackWeaponBroke:!1,defendWeaponBroke:!1};if(game.settings.get("hm3","weaponDamage")&&N.outcome.block){if(R=await K(e,f,t,C),R.attackWeaponBroke)try{await L(f,R.atkWeaponDiff)}catch(e){}finally{N.outcome.dta=!0}if(R.defendWeaponBroke)try{await L(C,R.defWeaponDiff)}catch(e){}finally{N.outcome.ata=!0}}let O=!1;N.outcome.ata&&N.outcome.dta?(N.outcome.ata=!1,N.outcome.dta=!1,O=!0):(N.outcome.ata||N.outcome.dta)&&(await Q()?await X():(N.outcome.ata=!1,N.outcome.dta=!1,O=!0));let x=null;N.outcome.atkDice&&(x=await game.hm3.macros.rollObjectEvaluatedAsync(`${N.outcome.atkDice}d${A}`,{name:e.name,type:"atkImpact"}));const F=e.hasCondition(l.CLOSE_MODE)&&!U(i,e)&&("Blunt"===r||"Edged"===r),H=m?"Grapple Result":"Attack Result",P={addlModifierAbs:Math.abs(v.addlModifier),addlModifierSign:v.addlModifier<0?"-":"+",addlWeaponImpact:0,ata:N.outcome.ata,atkAim:o,atkAspect:r,atkCloseMode:F,atkIsCritical:M.isCritical,atkIsSuccess:M.isSuccess,atkProne:e.hasCondition(l.PRONE),atkRollResult:M.description.replace("Substantial","Marginal"),atkTokenId:e.id,atkWeaponBroke:R.attackWeaponBroke,attacker:e.name,attackRoll:M.rollObj.total,attackWeapon:i,defender:t.name,defendWeapon:C?C.name:"",defense:`Block w/ ${v.weapon}`,defenseRoll:T.rollObj.total,defIsCritical:T.isCritical,defIsSuccess:T.isSuccess,defProne:t.hasCondition(l.PRONE),defRollResult:T.description.replace("Substantial","Marginal"),defTokenId:t.id,defWeaponBroke:R.defendWeaponBroke,dta:N.outcome.dta,effAML:n,effDML:game.hm3.macros.HM100Check(w+v.addlModifier),effEML:game.hm3.macros.HM100Check(w+v.addlModifier),hasAttackHit:!m&&!!N.outcome.atkDice,impactRoll:x?x.dice[0].values.join(" + "):null,isAtkFumbleRoll:N.outcome.atkFumble,isAtkStumbleRoll:N.outcome.atkStumble,isDefFumbleRoll:N.outcome.defFumble,isDefStumbleRoll:N.outcome.defStumble,isGrappleAtk:m,isGrappleAtkSuccessful:m&&N.outcome.atkDice>0,mlType:"DML",origEML:w,outnumbered:t.actor?.system?.eph?.outnumbered>1?t.actor.system.eph.outnumbered:null,resultDesc:N.desc,title:H,totalImpact:x?x.total+parseInt(c):0,visibleAtkActorId:e.actor.id,visibleDefActorId:t.actor.id,weaponImpact:c},$=await renderTemplate("systems/hm3/templates/chat/attack-result-card.hbs",P);let j={user:game.user.id,speaker:u,content:$.trim()};return N.outcome.atkDice?(j.roll=x,j.sound=CONFIG.sounds.dice,j.style=CONST.CHAT_MESSAGE_STYLES.OTHER):j.style=CONST.CHAT_MESSAGE_STYLES.OTHER,ChatMessage.applyRollMode(j,game.settings.get("core","rollMode")),await ChatMessage.create(j,{}),!N.outcome.atkDice&&game.settings.get("hm3","combatAudio")&&foundry.audio.AudioHelper.play({src:"systems/hm3/audio/shield-bash.ogg",autoplay:!0,loop:!1},!0),N.outcome.atkHold&&await t.addCondition(l.GRAPPLED),N.outcome.defHold&&await e.addCondition(l.GRAPPLED),D(e.actor.items.find(e=>e.name===i),{actor:e.actor,success:M.isSuccess}),D(C.system.assocSkill,{actor:t.actor,success:T.isSuccess}),O&&await X(!0),P}(u,h,a,i,n,o,r,c,m,d);return Hooks.call("hm3.onBlockResume",e,u,h,a,i,n,o,r,c,m),e}return null}async function it(e,t,a,s,n=!1){const o=canvas.tokens.get(e);if(!o)return ui.notifications.warn(`Attacker ${o.name} could not be found on canvas.`),null;const r=canvas.tokens.get(t);if(!r)return ui.notifications.warn(`Defender ${r.name} could not be found on canvas.`),null;if(Hooks.call("hm3.preEsotericResume",o,r,a,s)){const e=await async function(e,t,a,s){if(!B(e)||!B(t))return null;if(!t.isOwner)return ui.notifications.warn(`You do not have permissions to perform this operation on ${e.name}`),null;const n=ChatMessage.getSpeaker({token:e}),o=await _.rollTest({data:{},diceSides:100,diceNum:1,modifier:0,target:s}),r=function(e){if(!B(e))return{weapons:[],defaultWeapon:null};const t=e.actor.items.find(e=>e.type===d.SKILL&&e.name.includes("Mental Conflict"));return t?{weapons:[t],defaultWeapon:t}:(ui.notifications.warn(`${e.name} has no equipped Esoteric weapons, attack refused.`),{weapons:[],defaultWeapon:null})}(t),c=game.hm3.macros.HM100Check(r.defaultWeapon.system.effectiveMasteryLevel);let m=0;e.hasCondition(l.INANIMATE)&&!t.hasCondition(l.INANIMATE)&&(m+=10),m+=10,t.hasCondition(l.UNCONSCIOUS)&&(m-=10);const u=await _.rollTest({data:{},diceSides:100,diceNum:1,modifier:m,target:c});if(game.dice3d){const e=o.rollObj;e.dice[0].options.colorset="glitterparty",await game.dice3d.showForRoll(e,game.user,!0);const t=u.rollObj;t.dice[0].options.colorset="bloodmoon",await game.dice3d.showForRoll(t,game.user,!0)}const h=function({atkResult:e,atkToken:t,defense:a,defResult:s,defToken:n}){let o=null,r=null;const l=i.mentalConflictCombatTable[a];if(l&&(r="ignore"===a?e:`${e}:${s}`,o=l[r]),!o)return null;const c={desc:"",outcome:o};return o.atkFatigue===o.defFatigue?(c.desc=`<p>Stalemate, both attacker and defender lose ${o.atkFatigue} Fatigue Level${o.atkFatigue>1?"s":""}</p>`,c.csDesc=c.desc):o.atkFatigue?c.desc=`<p>Defender was able to successfully withstand the esoteric attack</p><p>Attacker receives ${o.atkFatigue} Fatigue level${o.atkFatigue>1?"s":""}</p>`:o.defFatigue&&(c.desc=`<p>Estoric Attack successful</p><p>Defender receives ${o.defFatigue} Fatigue Level${o.defFatigue>1?"s":""}</p>`),c}({atkResult:`${o.isCritical?"c":"m"}${o.isSuccess?"s":"f"}`,atkToken:e,defense:"mentalConflict",defResult:`${u.isCritical?"c":"m"}${u.isSuccess?"s":"f"}`,defToken:t});h.outcome.atkFatigue&&R(e.actor,h.outcome.atkFatigue),h.outcome.defFatigue&&R(t.actor,h.outcome.defFatigue);const g={addlModifierAbs:Math.abs(m),addlModifierSign:m<0?"-":"+",addlWeaponImpact:0,atkIsCritical:o.isCritical,atkIsSuccess:o.isSuccess,atkRollResult:o.description.replace("Substantial","Marginal"),atkTokenId:e.id,attacker:e.name,attackRoll:o.rollObj.total,attackWeapon:a,defender:t.name,defense:r.defaultWeapon.name,defenseRoll:u.rollObj.total,defIsCritical:u.isCritical,defIsSuccess:u.isSuccess,defRollResult:u.description.replace("Substantial","Marginal"),defTokenId:t.id,effAML:s,effDML:game.hm3.macros.HM100Check(c+m),effEML:game.hm3.macros.HM100Check(c+m),hasAttackHit:!1,impactRoll:0,isAtkWillShockRoll:!!h.outcome.atkFatigue&&!e.hasCondition(l.INANIMATE),isDefWillShockRoll:!!h.outcome.defFatigue&&!t.hasCondition(l.INANIMATE),mlType:"ML",origEML:c,resultDesc:h.desc,title:"Esoteric Attack Result",totalImpact:h.outcome.atkFatigue,visibleAtkActorId:e.actor.id,visibleDefActorId:t.actor.id,weaponImpact:h.outcome.atkFatigue},p={content:(await renderTemplate("systems/hm3/templates/chat/attack-result-card.hbs",g)).trim(),speaker:n,style:CONST.CHAT_MESSAGE_STYLES.OTHER,user:game.user.id};return ChatMessage.applyRollMode(p,game.settings.get("core","rollMode")),await ChatMessage.create(p,{}),game.settings.get("hm3","autoMarkUsedSkills")&&r.defaultWeapon.update({"system.improveFlag":(r.defaultWeapon.system.improveFlag||0)+(u.isSuccess?1:2)}),g}(o,r,a,s);return Hooks.call("hm3.onEsotericResume",e,o,r,a,s),e}return null}async function st(e,t,a,i,n,o,r,c,m,d=!1){const u=canvas.tokens.get(e);if(!u)return ui.notifications.warn(`Attacker ${u.name} could not be found on canvas.`),null;const h=canvas.tokens.get(t);if(!h)return ui.notifications.warn(`Defender ${h.name} could not be found on canvas.`),null;if(Hooks.call("hm3.preIgnoreResume",u,h,a,i,n,o,r,c,m)){const e=await async function(e,t,a,i,n,o,r,c,m){if(!B(e)||!B(t))return null;if(!t.isOwner)return ui.notifications.warn(`You do not have permissions to perform this operation on ${e.name}`),null;const d=ChatMessage.getSpeaker({token:e}),u=await _.rollTest({data:{},diceSides:100,diceNum:1,modifier:0,name:e.name,target:n,type:"atkRoll"});if(game.dice3d){const e=u.rollObj;e.dice[0].options.colorset="glitterparty",await game.dice3d.showForRoll(e,game.user,!0)}const h=e.actor.type===s.CREATURE?Number(e.actor.system.size):6,g=`${u.isCritical?"c":"m"}${u.isSuccess?"s":"f"}`;let p;p="melee"===a?q({atkAddlImpact:Number(c),atkDie:h,atkResult:g,atkToken:e,defense:"ignore",defToken:t,isGrappleAtk:m}):z(g,null,"ignore",c);let f=null;p.outcome.atkDice&&(f=await game.hm3.macros.rollObjectEvaluatedAsync(`${p.outcome.atkDice}d${h}`,{name:e.name,type:"atkImpact"}));const y=m?"Grapple Result":"Attack Result",k={addlWeaponImpact:0,atkAim:o,atkAspect:r,atkCloseMode:e.hasCondition(l.CLOSE_MODE)&&!U(i,e)&&("Blunt"===r||"Edged"===r),atkDice:p.outcome.atkDice,atkIsCritical:u.isCritical,atkIsSuccess:u.isSuccess,atkRollResult:u.description.replace("Substantial","Marginal"),atkTokenId:e.id,attacker:e.name,attackRoll:u.rollObj.total,attackWeapon:i,defDice:p.outcome.defDice,defender:t.name,defense:"Ignore",defenseRoll:0,defRollResult:"",defTokenId:t.id,dta:p.outcome.dta,effAML:n,effDML:0,hasAttackHit:!m&&!!p.outcome.atkDice,impactRoll:f?f.dice[0].values.join(" + "):null,isAtkFumbleRoll:p.outcome.atkFumble,isAtkHold:p.outcome.atkHold,isAtkStumbleRoll:p.outcome.atkStumble,isDefFumbleRoll:p.outcome.defFumble,isDefHold:p.outcome.defHold,isDefStumbleRoll:p.outcome.defStumble,isGrappleAtk:m,isGrappleAtkSuccessful:m&&p.outcome.atkDice>0,mlType:"AML",resultDesc:p.desc,title:y,totalImpact:f?f.total+parseInt(c):0,visibleAtkActorId:e.actor.id,visibleDefActorId:t.actor.id,weaponImpact:c},b=await renderTemplate("systems/hm3/templates/chat/attack-result-card.hbs",k);let S={user:game.user.id,speaker:d,content:b.trim()};return p.outcome.atkDice?(S.roll=f,S.sound=CONFIG.sounds.dice,S.style=CONST.CHAT_MESSAGE_STYLES.OTHER):S.style=CONST.CHAT_MESSAGE_STYLES.OTHER,ChatMessage.applyRollMode(S,game.settings.get("core","rollMode")),await ChatMessage.create(S,{}),p.outcome.atkHold&&await t.addCondition(l.GRAPPLED),p.outcome.defHold&&await e.addCondition(l.GRAPPLED),D(e.actor.items.find(e=>e.name===i),{actor:e.actor,success:u.isSuccess}),k}(u,h,a,i,n,o,r,c,m);return Hooks.call("hm3.onIgnoreResume",e,u,h,a,i,n,o,r,c,m),e}return null}function nt(e=null,t=!1){if(e&&(game.user.isGM||t))return{token:e,actor:e.actor};if(!game.combat||0===game.combat.combatants.length)return ui.notifications.warn("No active combatant."),null;const a=game.combat.combatant;return e&&e.id!==a.token.id?(ui.notifications.warn(`${e.name} cannot perform that action at this time.`),null):a.actor.isOwner?{token:e=canvas.tokens.get(a.token.id),actor:a.actor}:(ui.notifications.warn(`You do not have permissions to control ${a.token.name}.`),null)}function ot(e){const t=game.user.targets;if(!t?.size)return ui.notifications.warn("No targets selected, you must select exactly one target, combat aborted."),null;t.size>1&&ui.notifications.warn(`${t} targets selected, you must select exactly one target, combat aborted.`);const a=Array.from(game.user.targets)[0];return e?.token&&a.id===e.token.id?(ui.notifications.warn("You have targetted the combatant, they cannot attack themself, combat aborted."),null):a}function rt({item:e,actor:t,speaker:a,token:i}={}){const s={item:e,actor:t,speaker:a,token:i};if(e?.actor)s.actor=e.actor,s.speaker=ChatMessage.getSpeaker({actor:s.actor});else if(s.actor instanceof Actor)s.speaker||=ChatMessage.getSpeaker({actor:s.actor});else{if(s.actor)s.actor=fromUuidSync(s.actor),s.speaker=ChatMessage.getSpeaker({actor:s.actor});else{if(s.speaker=ChatMessage.getSpeaker(),s.speaker?.token){const e=canvas.tokens.get(s.speaker.token);s.actor=e.actor}else s.actor=s.speaker?.actor;if(!s.actor)return ui.notifications.warn("No actor selected, roll ignored."),null}if(!s.actor)return ui.notifications.warn("No actor selected, roll ignored."),null}return s.token||(s.token=canvas.tokens.get(s.speaker.token)),s.actor.isOwner?s:(ui.notifications.warn(`You do not have permissions to control ${s.actor.name}.`),null)}function lt(e,t,a,i,s=null){const n={type:a.type,title:a.title,origTarget:a.origTarget,modifier:("-"===a.plusMinus?-1:1)*a.modifier,modifiedTarget:a.modifiedTarget,rollValue:a.rollValue,isSuccess:a.isSuccess,isCritical:a.isCritical,result:a.isSuccess?a.isCritical?"CS":"MS":a.isCritical?"CF":"MF",description:a.description,notes:a.notes},o=game.macros.getName(e);return o&&!o.hasPlayerOwner&&M(o,{actor:t,token:t?.isToken?t.token:null,rollResult:n,rollData:i,item:s}),s?Hooks.call(e,t,n,i,s,a):Hooks.call(e,t,n,i,a)}function ct(e,t,a=!1){const i=canvas.tokens.get(e),s=canvas.tokens.get(t);if(!(i&&s&&canvas.scene&&canvas.scene.grid))return 9999;const n=i.document?.elevation||0,o=s.document?.elevation||0;let r=I(canvas.grid.measurePath([i.center,s.center]).distance,0);return r=Math.sqrt(r**2+(n-o)**2),r=Math.ceil(r/canvas.dimensions.distance)*canvas.dimensions.distance,a?r/canvas.dimensions.distance:r}function mt(e){return e=foundry.utils.mergeObject({friendly:!0,neutral:!0,secret:!0,hostile:!0},e),canvas.scene.tokens.contents.filter(t=>t.disposition===CONST.TOKEN_DISPOSITIONS.FRIENDLY&&e.friendly||t.disposition===CONST.TOKEN_DISPOSITIONS.NEUTRAL&&e.neutral||t.disposition===CONST.TOKEN_DISPOSITIONS.SECRET&&e.secret||t.disposition===CONST.TOKEN_DISPOSITIONS.HOSTILE&&e.hostile)}function dt(e){return mt(e=foundry.utils.mergeObject({friendly:!1,neutral:!1,secret:!1,hostile:!1},e))}function ut(e,t,a=!0){const i=canvas.grid.size/canvas.grid.distance,s=(a?e.radius:e.radius+canvas.grid.distance)*i,n=new PIXI.Circle(e.center.x,e.center.y,s).segmentIntersections(t.p1,t.p2);return 0===n.length?null:1===n.length||(t.p1.x-n[0].x)**2+(t.p1.y-n[0].y)**2<=(t.p1.x-n[1].x)**2+(t.p1.y-n[1].y)**2?n[0]:n[1]}function ht(e,t,a=!1){const i=gt(e,t,a);return!!i&&!!i?.active}function gt(e,t,a=!1){let i=e instanceof Ht?e:null;return i||(i=e instanceof H||e instanceof P?e.actor:null),i&&t?a?i.allApplicableEffects(!0).find(e=>e.name===t):i.allApplicableEffects(!0).find(e=>e.name.toLowerCase().includes(t.toLowerCase())||t.toLowerCase().includes(e.name.toLowerCase())):null}let pt=new x;async function ft(e,t=[],a={}){return pt.runExclusive(async()=>{if(!(e=foundry.utils.mergeObject({flags:[],icon:"icons/svg/aura.svg",label:null,postpone:0,rounds:1,seconds:null,startRound:null,startTime:null,startTurn:null,token:null,turns:0,type:null},e)).label||!e.token||!e.type)return console.error('HM3 | Macro "createActiveEffect" needs label, token & type as mandatory input!'),null;if(a=foundry.utils.mergeObject({hidden:!1,selfDestroy:!1,unique:!1},a),t=t.map(t=>{t=foundry.utils.mergeObject({key:"",value:0,mode:2,priority:null},t);const a=Ct(e.token.actor.system);return t.key="system."+a.find(e=>e.includes(t.key)),t}),a.unique&&ht(e.token,e.label))return game.user.isGM&&ui.notifications.info(`HM3 | Effect ${e.label} is unique and already exists.`),null;const i={changes:t,flags:e.flags,icon:e.icon,label:e.label,origin:e.token.actor.uuid};if("GameTime"===e.type){const t=e.postpone,a=e.startTime||game.time.worldTime+t,s=null===e.seconds?null:e.seconds||1;i["duration.startTime"]=a,i["duration.seconds"]=s}else{if("Combat"!==e.type||!game.combats.active?.current)return null;{const t=e.startRound||game.combats.active.current.round||1,a=e.startTurn||game.combats.active.current.turn||0,s=e.rounds,n=e.turns;i["duration.combat"]=game.combats.active.id,i["duration.startRound"]=t,i["duration.startTurn"]=a,i["duration.rounds"]=s,i["duration.turns"]=n}}const s=await ActiveEffect.create(i,{parent:e.token.actor});return a.hidden&&await s.setFlag("hm3","hidden",!0),a.unique&&await s.setFlag("hm3","unique",!0),a.selfDestroy&&(await s.setFlag("hm3","selfDestroy",!0),await s.setFlag("effectmacro","onDisable.script",`game.hm3.macros.deleteActiveEffect('${e.token.id}', '${s.id}');`)),s})}let yt=new x;async function kt(e,t){e&&t&&canvas.tokens.get(e)&&await yt.runExclusive(async()=>{const a=canvas.tokens.get(e),i=a?.actor?.allApplicableEffects().find(e=>e.id===t);return i?.delete()})}async function bt(e,t,a={}){if(!e)return null;let i;switch(a=foundry.utils.mergeObject({numTurns:0,oneRoll:!1,oneRound:!1,oneTurn:!1,outnumbered:1,overlay:!1},a),t){case l.BLINDED:case l.DEAFENED:case l.INCAPACITATED:return game.user.isGM&&ui.notifications.info(`Condition '${t}' not yet implemented.`),null;case l.BERSERK:i=await async function(e,t={}){if(!e)return!1;if(e.hasCondition(game.hm3.Condition.INANIMATE))return!1;const a=game.hm3.Condition.BERSERK;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID(),s=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nawait token.deleteAllMoraleConditions('${a}');\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious) await game.hm3.Gm2GmSays("<b>" + token.name + "</b> enters <b>Berserk Mode</b>, and <b>Must</b> take the most aggressive action available for Attack or Defense, adding 20 to EML to Attack or Counterstrike. Further Initiative rolls are ignored until the battle ends.", "Combat 18");\nconsole.info("HM3 | Condition: ${a} created for token: ${e.name}");\n`,n=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious) await game.hm3.Gm2GmSays("<b>" + token.name + "</b> is in <b>Berserk Mode</b>, and <b>Must</b> take the most aggressive action available for Attack or Defense, adding 20 to EML to Attack or Counterstrike. Further Initiative rolls are ignored until the battle ends.", "Combat 18");\n`;return{effectData:{icon:Z,label:a,seconds:game.hm3.CONST.TIME.INDEFINITE,token:e,type:"GameTime",flags:{effectmacro:{onCreate:{script:s},onTurnStart:{script:n}},hm3:{uuid:i}}},changes:[{key:"eph.meleeAMLMod",mode:2,priority:null,value:"20"}],options:{unique:!0}}}(e,a);break;case l.BROKEN:i=await async function(e,t={}){if(!e)return!1;if(e.hasCondition(game.hm3.Condition.INANIMATE))return!1;const a=game.hm3.Condition.BROKEN;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID(),s=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nawait token.deleteAllMoraleConditions('${a}');\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious) await game.hm3.Gm2GmSays("<b>" + token.name + "</b> is now <b>Broken</b>, and is unable to fight in any useful way. The only available options are flight or surrender. Flight is normally preferable; surrender is a last resort.", "Combat 16", !token.player);\n`,n=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious) await game.hm3.Gm2GmSays("<b>" + token.name + "</b> is still <b>Broken</b>, and is unable to fight in any useful way. The only available options are flight or surrender. Flight is normally preferable; surrender is a last resort.", "Combat 16", !token.player);\n`;return{effectData:{icon:ee,label:a,seconds:game.hm3.CONST.TIME.INDEFINITE,token:e,type:"GameTime",flags:{effectmacro:{onCreate:{script:s},onTurnStart:{script:n}},hm3:{uuid:i}}},changes:[],options:{unique:!0}}}(e,a);break;case l.CAUTIOUS:i=await async function(e,t={}){if(!e)return!1;if(e.hasCondition(game.hm3.Condition.INANIMATE))return!1;const a=game.hm3.Condition.CAUTIOUS;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID(),s=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nawait token.deleteAllMoraleConditions('${a}');\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious) {\n    await game.hm3.Gm2GmSays(\n        '<b>' +\n            token.name +\n            '</b> is now <b>Cautious</b>, and will not Engage, must choose <b>Pass</b> if engaged, and cannot select the Counterstrike defense.',\n        'Combat 16'\n    );\n    if (token.isEngaged()) {\n        await game.hm3.GmSays({\n            text:\n                '<b>' +\n                token.name +\n                '</b> is <b>Cautious</b>, and must choose <b>Pass</b> if engaged. <b>Turn ends.</b>',\n            source: 'Combat 16',\n            gmonly: !token.player,\n            token\n        });\n        await token.turnEnds();\n    }\n}\n`,n=t.oneRound?"":`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious) {\n    await game.hm3.Gm2GmSays({\n        text:\n            '<b>' +\n            token.name +\n            '</b> is still <b>Cautious</b>, and will not Engage, must choose <b>Pass</b> if engaged, and cannot select the Counterstrike defense.',\n        source: 'Combat 16',\n        token\n    });\n    if (token.isEngaged()) {\n        await token.turnEnds();\n        await game.hm3.GmSays({\n            text:\n                '<b>' +\n                token.name +\n                '</b> is <b>Cautious</b>, and must choose <b>Pass</b> if engaged. <b>Turn ends.</b>',\n            source: 'Combat 16',\n            gmonly: !token.player,\n            token\n        });\n    }\n}\n`,o=t.oneRound||t.oneTurn?"Combat":"GameTime",r="GameTime"===o?game.hm3.CONST.TIME.INDEFINITE:void 0,l="Combat"===o&&t.oneRound?1:void 0,c="Combat"===o&&t.oneTurn?1:void 0;return{effectData:{icon:te,label:a,rounds:l,seconds:r,token:e,turns:c,type:o,flags:{effectmacro:{onCreate:{script:s},onTurnStart:{script:n}},hm3:{uuid:i}}},changes:[],options:{selfDestroy:!0,unique:!0}}}(e,a);break;case l.CLOSE_MODE:i=await async function(e,t={}){if(!e)return;const a=game.hm3.Condition.CLOSE_MODE;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID(),s=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious)\n    await game.hm3.GmSays({\n        text:\n            '<b>' +\n            token.name +\n            '</b> is in <b>Close Mode</b>, and gets -10 on <b>All</b> attack rolls. Any <b>Thrusting Weapon</b> (such as a Spear, or a Sword employing Point aspect) ignore Close Mode modifiers.',\n        source: 'Combat 11',\n        gmonly: !token.player\n    });\n`;return{effectData:{icon:ae,label:a,seconds:game.hm3.CONST.TIME.INDEFINITE,token:e,type:"GameTime",flags:{effectmacro:{onTurnStart:{script:s}},hm3:{uuid:i}}},changes:[],options:{unique:!0}}}(e,a);break;case l.DESPERATE:i=await async function(e,t={}){if(!e)return!1;if(e.hasCondition(game.hm3.Condition.INANIMATE))return!1;const a=game.hm3.Condition.DESPERATE;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID(),s=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nawait token.deleteAllMoraleConditions(game.hm3.Condition.DESPERATE);\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious) await game.hm3.Gm2GmSays("<b>" + token.name + "</b> is now <b>Desperate</b>, and tries to conclude the battle, one way or the other, as soon as possible. Until the situation changes and a new Initiative Test is passed, the character selects the <b>Most Aggressive</b> option available.", "Combat 16", !token.player);\n`,n=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious) await game.hm3.Gm2GmSays("<b>" + token.name + "</b> is still <b>Desperate</b>, and tries to conclude the battle, one way or the other, as soon as possible. Until the situation changes and a new Initiative Test is passed, the character selects the <b>Most Aggressive</b> option available.", "Combat 16", !token.player);\n`;return{effectData:{icon:ie,label:a,seconds:game.hm3.CONST.TIME.INDEFINITE,token:e,type:"GameTime",flags:{effectmacro:{onCreate:{script:s},onTurnStart:{script:n}},hm3:{uuid:i}}},changes:[],options:{unique:!0}}}(e,a);break;case l.DISTRACTED:i=await async function(e,t={}){if(!e)return;const a=game.hm3.Condition.DISTRACTED;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID(),s=t.oneRound?"":`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious) {\n    await game.hm3.GmSays({\n        text:\n            '<b>' +\n            token.name +\n            '</b> remains <b>Distracted</b> and <b>Must</b> take the <b>Pass</b> action. All Defense actions suffer a -10 penalty to EML. <b>Turn ends.</b>',\n        source: 'House Rule',\n        gmonly: !token.player,\n        token\n    });\n    await token.turnEnds();\n}\n`,n=t.oneRound||t.oneTurn?"Combat":"GameTime",o="GameTime"===n?game.hm3.CONST.TIME.INDEFINITE:void 0,r="Combat"===n&&t.oneRound?1:void 0,l="Combat"===n&&t.oneTurn?1:void 0;return{effectData:{icon:se,label:a,rounds:r,seconds:o,token:e,turns:l,type:n,flags:{effectmacro:{onTurnStart:{script:s}},hm3:{uuid:i}}},changes:[{key:"eph.meleeDMLMod",mode:2,priority:null,value:"-10"}],options:{selfDestroy:!0,unique:!0}}}(e,a);break;case l.DYING:i=await async function(e,t={}){if(!e)return;const a=game.hm3.Condition.DYING;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID(),s=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nawait token.deleteAllMoraleConditions();\nawait token.combatant?.update({defeated: true});\nawait token.addCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!!token.actor.player) {\n    await game.hm3.GmSays({\n        text:\n            '<b>' +\n            token.name +\n            '</b> is <b>unconscious</b> due to a <b>Mortal Wound</b> and is <b>Dying</b>. Life-saving measures should be initiated as quickly as possible.',\n        source: 'Combat 14'\n    });\n} else {\n    await game.hm3.GmSays({\n        text: '<b>' + token.name + '</b> is <b>Dead</b> due to a <b>Mortal Wound</b>.',\n        source: 'Combat 14'\n    });\n}\nconsole.info('HM3 | Condition: ${a} created for token: ${e.name}');\n`,n=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nawait game.hm3.GmSays({\n    text: '<b>' + token.name + '</b> stays unconscious due to a <b>Mortal Wound</b>. <b>Turn ends.</b>',\n    source: 'Combat 14',\n    token\n});\nawait token.turnEnds();\n`,o=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nawait token.combatant?.update({defeated: false});\ngame.hm3.macros.updateOverlay(token);\nconsole.info("HM3 | Condition: ${a} deleted for token: ${e.name}");\n`;return{effectData:{icon:ne,label:a,token:e,type:"GameTime",seconds:game.hm3.CONST.TIME.INDEFINITE,flags:{effectmacro:{onCreate:{script:s},onTurnStart:{script:n},onDelete:{script:o}},hm3:{uuid:i}}},changes:[],options:{overlay:!0,unique:!0}}}(e,a);break;case l.EMPOWERED:i=await async function(e,t={}){if(!e)return!1;if(e.hasCondition(game.hm3.Condition.INANIMATE))return!1;const a=game.hm3.Condition.EMPOWERED;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID(),s=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nawait token.deleteAllMoraleConditions(game.hm3.Condition.EMPOWERED);\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious) await game.hm3.Gm2GmSays("<b>" + token.name + "</b> is now <b>Empowered</b>, and adds 10 to any EML this turn.", "Combat 16");\nconsole.info("HM3 | Condition: ${a} created for token: ${e.name}");\n`,n=t.oneRound||t.oneTurn?"Combat":"GameTime",o="GameTime"===n?game.hm3.CONST.TIME.INDEFINITE:void 0,r="Combat"===n&&t.oneRound?1:void 0,l="Combat"===n&&t.oneTurn?1:void 0;return{effectData:{icon:oe,label:a,rounds:r,seconds:o,token:e,turns:l,type:n,flags:{effectmacro:{onCreate:{script:s},onTurnStart:{script:""}},hm3:{uuid:i}}},changes:[{key:"eph.meleeAMLMod",mode:2,priority:null,value:"10"}],options:{selfDestroy:!0,unique:!0}}}(e,a);break;case l.GRAPPLED:i=await async function(e){if(e)return{effectData:{label:game.hm3.Condition.GRAPPLED,token:e,icon:re,type:"GameTime",seconds:game.hm3.CONST.TIME.INDEFINITE},changes:[],options:{unique:!0}}}(e);break;case l.INANIMATE:i=await async function(e){if(!e)return;const t=game.hm3.Condition.INANIMATE;return{effectData:{icon:le,label:t,seconds:game.hm3.CONST.TIME.INDEFINITE,token:e,type:"GameTime"},changes:[{key:"eph.fatigue",mode:2,priority:null,value:"-100"},{key:"eph.totalInjuryLevels",mode:2,priority:null,value:"-100"}],options:{hidden:!0,unique:!0}}}(e);break;case l.NO_FUMBLE:i=await async function(e,t={}){if(!e)return;const a=game.hm3.Condition.NO_FUMBLE;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID();return{effectData:{icon:ce,label:a,seconds:game.hm3.CONST.TIME.INDEFINITE,token:e,type:"GameTime",flags:{hm3:{uuid:i}}},changes:[],options:{hidden:!0,unique:!0}}}(e,a);break;case l.NO_OUTNUMBERED:i=await async function(e,t={}){if(!e)return;const a=game.hm3.Condition.NO_OUTNUMBERED;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID();return{effectData:{icon:me,label:a,seconds:game.hm3.CONST.TIME.INDEFINITE,token:e,type:"GameTime",flags:{hm3:{uuid:i}}},changes:[],options:{hidden:!0,unique:!0}}}(e,a);break;case l.NO_STUMBLE:i=await async function(e,t={}){if(!e)return;const a=game.hm3.Condition.NO_STUMBLE;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID();return{effectData:{icon:de,label:a,seconds:game.hm3.CONST.TIME.INDEFINITE,token:e,type:"GameTime",flags:{hm3:{uuid:i}}},changes:[],options:{hidden:!0,unique:!0}}}(e,a);break;case l.OUTNUMBERED:i=await async function(e,t={}){if(!e)return;if((t?.outnumbered||1)<2)return;if(e.hasCondition(game.hm3.Condition.NO_OUTNUMBERED))return!1;const a=`${game.hm3.Condition.OUTNUMBERED} ${t.outnumbered}:1`;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID(),s=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious)\n    await game.hm3.GmSays({\n        text:\n            '<b>' +\n            token.name +\n            '</b> is <b>${a}</b>, and gets -${10*(t.outnumbered-1)} on <b>All</b> defense rolls including counterattack.',\n        source: 'Combat 11',\n        gmonly: !token.player\n    });\n`;return{effectData:{icon:ue,label:a,seconds:game.hm3.CONST.TIME.INDEFINITE,token:e,type:"GameTime",flags:{effectmacro:{onCreate:{script:""},onTurnStart:{script:s}},hm3:{uuid:i}}},changes:[{key:"eph.outnumbered",mode:2,priority:null,value:`${t.outnumbered}`}],options:{unique:!0}}}(e,a);break;case l.PRONE:i=await async function(e,t={}){if(!e)return!1;if(e.hasCondition(game.hm3.Condition.NO_STUMBLE))return!1;const a=game.hm3.Condition.PRONE;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID(),s=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nawait token.document.setFlag('wall-height', 'tokenHeight', 2);\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious)\n    await game.hm3.GmSays({\n        text:\n            '<b>' +\n            token.name +\n            '</b> falls prone, and getting up takes one action. <b>All</b> opponents gain +20 on <b>All</b> attack and defense rolls.',\n        source: 'Combat 11'\n    });\nconsole.info('HM3 | Condition: ${a} created for token: ${e.name}');\n`,n=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nconst distracted = token.hasCondition(game.hm3.Condition.DISTRACTED);\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (distracted || unconscious) return;\nconst PRONE_IMG = '${he}';\nawait game.hm3.GmSays({\n    text:\n        '<b>' + token.name + '</b> is prone, and <b>All</b> opponents gain +20 on <b>All</b> attack and defense rolls.',\n    source: 'Combat 11',\n    gmonly: !token.player\n});\nawait Requestor.request({\n    title: game.hm3.Condition.PRONE,\n    description: '<div class="chat-card fluff"><p>Getting up takes <b>ONE Action</b>.</p></div>',\n    img: PRONE_IMG,\n    limit: Requestor.LIMIT.OPTION,\n    speaker: ChatMessage.getSpeaker({token}),\n    buttonData: [\n        {\n            label: 'Rise',\n            command: async function () {\n                const token = canvas.tokens.get('${e.id}');\n                await token.deleteCondition(game.hm3.Condition.PRONE);\n            }\n        },\n        {\n            label: 'Ignore',\n            command: async function () {\n                const token = canvas.tokens.get('${e.id}');\n                await game.hm3.GmSays({\n                    text: 'Ok, ' + token.name + ' remains lying on the floor.',\n                    source: 'Combat 11',\n                    gmonly: !token.player\n                });\n            }\n        }\n    ]\n});\n`,o=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nawait token.document.setFlag('wall-height', 'tokenHeight', token.actor.system.height || 6);\nif (game.combat?.started && game.combat.combatant) {\n    if (game.combat.combatant.id === token.combatant?.id) {\n        await game.hm3.GmSays({\n            text: '<b>' + token.name + '</b> rises successfully. <b>Turn ends.</b>',\n            source: 'Combat 11',\n            token\n        });\n        await token.turnEnds();\n    } else {\n        await game.hm3.GmSays({text: '<b>' + token.name + '</b> rises successfully.', source: 'Combat 11', token});\n    }\n}\ngame.hm3.macros.updateOverlay(token);\nconsole.info('HM3 | Condition: ${a} deleted for token: ${e.name}');\n`;return{effectData:{icon:he,label:a,seconds:game.hm3.CONST.TIME.INDEFINITE,token:e,type:"GameTime",flags:{effectmacro:{onCreate:{script:s},onTurnStart:{script:n},onDelete:{script:o}},hm3:{uuid:i}}},changes:[],options:{overlay:!(e.hasCondition(game.hm3.Condition.DYING)||e.hasCondition(game.hm3.Condition.UNCONSCIOUS)||e.hasCondition(game.hm3.Condition.SHOCKED)),unique:!0}}}(e,a);break;case l.SECONDARY_HAND:i=await async function(e,t={}){if(!e)return;const a=game.hm3.Condition.SECONDARY_HAND;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID(),s=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious)\n    await game.hm3.GmSays({\n        text:\n            '<b>' + token.name + '</b> fights with the <b>Secondary Hand</b>, and gets -10 on <b>All</b> attack rolls.',\n        source: 'Combat 3 & 11',\n        gmonly: !token.player\n    });\n`;return{effectData:{label:a,token:e,icon:ge,type:"GameTime",seconds:game.hm3.CONST.TIME.INDEFINITE,flags:{effectmacro:{onTurnStart:{script:s}},hm3:{uuid:i}}},changes:[{key:"eph.meleeAMLMod",mode:2,value:"-10"}],options:{unique:!0}}}(e,a);break;case l.SHOCKED:i=await async function(e,t={}){if(!e)return!1;if(e.hasCondition(game.hm3.Condition.INANIMATE))return!1;const a=game.hm3.Condition.SHOCKED;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID(),s=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nconst dateTime = SimpleCalendar?.api?.currentDateTimeDisplay();\nawait game.hm3.macros.createInjury({\n    token,\n    name: 'Shock',\n    subType: 'shock',\n    healRate: 4,\n    notes: 'Started: ' + dateTime?.date + ' - ' + dateTime?.time\n});\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious) {\n    if (game.combat?.started && !token.player) await token.combatant.update({defeated: true});\n    const turnEnds = game.combat?.started && game.combat.combatant.id === token.combatant.id;\n    if (turnEnds) {\n        await game.hm3.GmSays({\n            text:\n                '<b>' +\n                token.name +\n                '</b> is in <b>Shock</b> and displays a variety of symptoms including pallor, cold sweats, weakness, nausea, thirst, and groaning. <b>' +\n                token.name +\n                '</b> is incoherent and gazes helplessly at the injuries. <b>Turn Ends.</b>',\n            source: 'Combat 14',\n            token\n        });\n        await token.turnEnds();\n    } else {\n        await game.hm3.GmSays({\n            text:\n                '<b>' +\n                token.name +\n                '</b> is in <b>Shock</b> and displays a variety of symptoms including pallor, cold sweats, weakness, nausea, thirst, and groaning. <b>' +\n                token.name +\n                '</b> is incoherent and gazes helplessly at the injuries.',\n            source: 'Combat 14',\n            token\n        });\n    }\n}\nconsole.info('HM3 | Condition: ${a} created for token: ${e.name}');\n`,n=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious)\n    await game.hm3.GmSays({\n        text:\n            '<b>' +\n            token.name +\n            '</b> is in <b>Shock</b>. Shock prevents the use of skills, spells, and psionic talents. In a combat situation, a character in <b>Shock</b> may Rest, Walk/Crawl (at half move), or be led away; the character will <b>Ignore</b> any attacks.',\n        source: 'Combat 18',\n        token\n    });\n`,o=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\ngame.hm3.macros.updateOverlay(token);\nconsole.info("HM3 | Condition: ${a} deleted for token: ${e.name}");\n`;return{effectData:{icon:pe,label:a,seconds:game.hm3.CONST.TIME.INDEFINITE,token:e,type:"GameTime",flags:{effectmacro:{onCreate:{script:s},onTurnStart:{script:n},onDelete:{script:o}},hm3:{uuid:i}}},changes:[],options:{overlay:!(e.hasCondition(game.hm3.Condition.DYING)||e.hasCondition(game.hm3.Condition.UNCONSCIOUS)),unique:!0}}}(e,a);break;case l.UNCONSCIOUS:i=await async function(e,t={}){if(!e)return!1;if(e.hasCondition(game.hm3.Condition.INANIMATE))return!1;const a=game.hm3.Condition.UNCONSCIOUS;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID(),s=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nawait token.deleteAllMoraleConditions();\nawait token.addCondition(game.hm3.Condition.PRONE);\nconst almostDying = !token.player && token.actor.system.shockIndex.value < game.hm3.CONST.COMBAT.SHOCK_INDEX_THRESHOLD;\nif (almostDying) {\n    await token.combatant?.update({defeated: true});\n    await game.hm3.GmSays({\n        text: '<b>' + token.name + '</b> is <b>Defeated</b> due to <b>Too Many Wounds</b>.',\n        source: 'House Rule',\n        token\n    });\n} else if (!token.dying) {\n    await game.hm3.GmSays({\n        text:\n            'Overwhelmed by pain, blood loss, and exhaustion, <b>' +\n            token.name +\n            '</b> collapses unconscious onto the battlefield, falling <b>Prone</b> amidst the chaos.',\n        source: 'Combat 14',\n        token\n    });\n}\nconsole.info('HM3 | Condition: ${a} created for token: ${e.name}');\n`,n=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nif (token.dying || token.combatant.isDefeated) return;\nawait game.hm3.GmSays({\n    text: '<b>' + token.name + '</b> needs a successful <b>Shock</b> roll to regain consciousness.',\n    source: 'Combat 14',\n    gmonly: !token.player,\n    token\n});\nconst success = (await game.hm3.macros.shockRoll(!token.player, token.actor, token, 1)).isSuccess;\nif (success) {\n    // Combatant regains consciousness\n    await game.hm3.GmSays({\n        text:\n            '<b>' +\n            token.name +\n            '</b> regains consciousness and starts coming back to full senses, though stability remains uncertain. Another <b>Shock Roll</b> is needed.',\n        source: 'Combat 14',\n        token\n    });\n    token.disableCondition('${a}', 500); // postpone a bit\n} else {\n    // Combatant stays unconscious\n    await game.hm3.GmSays({\n        text: '<b>' + token.name + '</b> stays unconscious. <b>Turn ends.</b>',\n        source: 'Combat 14',\n        token\n    });\n    await token.turnEnds();\n}\n`,o=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nif (!game.combat?.started && !token.player) return;\nconst ok = (await game.hm3.macros.shockRoll(!token.player, token.actor, token, 2)).isSuccess;\nawait token.deleteCondition('${a}');\nif (ok) {\n    // Combatant is back\n    await game.hm3.GmSays({\n        text: '<b>' + token.name + '</b> regains consciousness and resumes functioning normally. <b>Turn Ends.</b>',\n        source: 'Combat 14'\n    });\n    await token.turnEnds();\n} else {\n    // Combatant is now SHOCKED\n    await token.addCondition(game.hm3.Condition.SHOCKED);\n}\n`,r=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\ngame.hm3.macros.updateOverlay(token);\nconsole.info("HM3 | Condition: ${a} deleted for token: ${e.name}");\n`;return{effectData:{label:a,token:e,icon:CONFIG.statusEffects.find(e=>"unconscious"===e.id).img,type:"GameTime",seconds:await game.hm3.macros.rollResultAsync(`2d6 * ${game.hm3.CONST.TIME.MINUTE}`),flags:{effectmacro:{onCreate:{script:s},onTurnStart:{script:n},onDisable:{script:o},onDelete:{script:r}},hm3:{uuid:i}}},changes:[],options:{overlay:!e.hasCondition(game.hm3.Condition.DYING),unique:!0}}}(e,a);break;case l.WEAKENED:i=await async function(e,t={}){if(!e)return!1;if(e.hasCondition(game.hm3.Condition.INANIMATE))return!1;const a=game.hm3.Condition.WEAKENED;console.info(`HM3 | Creating condition: ${a} for token: ${e.name}`,t);const i=foundry.utils.randomID(),s=`\nconst token = canvas.tokens.get('${e.id}');\nif (!token) return;\nawait token.deleteAllMoraleConditions('${a}');\nconst unconscious = token.hasCondition(game.hm3.Condition.UNCONSCIOUS);\nif (!unconscious) await game.hm3.Gm2GmSays("<b>" + token.name + "</b> is now <b>Weakened</b>, and adds -10 to any EML this turn.", "Combat 16", !token.player);\nconsole.info("HM3 | Condition: ${a} created for token: ${e.name}");\n`,n=t.oneRound||t.oneTurn?"Combat":"GameTime",o="GameTime"===n?game.hm3.CONST.TIME.INDEFINITE:void 0,r="Combat"===n&&t.oneRound?1:void 0,l="Combat"===n&&t.oneTurn?1:void 0;return{effectData:{icon:fe,label:a,rounds:r,seconds:o,token:e,turns:l,type:n,flags:{effectmacro:{onCreate:{script:s},onTurnStart:{script:""}},hm3:{uuid:i}}},changes:[{key:"eph.meleeAMLMod",mode:2,priority:null,value:"-10"}],options:{selfDestroy:!0,unique:!0}}}(e,a);break;default:return game.user.isGM&&ui.notifications.error(`${t} is no valid condition.`),null}if(!i)return game.user.isGM&&ui.notifications.error(`Condition ${t} could not be created.`),null;if(i.options.unique&&e.hasCondition(t))return game.user.isGM&&ui.notifications.info(`HM3 | Condition ${t} is unique and already exists.`),null;i.options.overlay&&(i.effectData.flags.core={overlay:!0}),Object.keys(i.effectData.flags?.effectmacro||{}).forEach(e=>{const a=i.effectData.flags.effectmacro[e];a.script="let success=true;try{"+a.script.trim()+`}catch(error){success=false;game.hm3.gmconsole('error','Error in Condition "${t}" - Effect Macro "${e}"',error);} \n            finally{Hooks.callAllUsers('hm3.${i.effectData.flags.hm3.uuid}', success);}`,a.script=N(a.script)}),i.effectData.system={status:"Running"};const s=i.effectData.flags?.effectmacro?.onCreate?.script;if(s&&0!==s?.length){const e=i.effectData.flags.hm3.uuid,a=new Promise((a,s)=>{let n;Hooks.once(`hm3.${e}`,e=>{n&&clearTimeout(n),a(e)}),n=setTimeout(()=>s({error:`HM3 | Timeout in 'onCreate' callback for Condition ${t}!`,condData:i}),5e3)});return(await Promise.allSettled([a,ft(i.effectData,i.changes,i.options)]))[1].value}return ft(i.effectData,i.changes,i.options)}async function St(e,t){if(!e||!t||!t?.id)return null;if(!t.hasDeleteMacro())return kt(e.id,t.id);{const a=t.flags.hm3.uuid,i=new Promise((e,i)=>{let s;Hooks.once(`hm3.${a}`,t=>{s&&clearTimeout(s),e(t)}),s=setTimeout(()=>i({error:`HM3 | Timeout in 'onDelete' callback for Condition ${t.name}!`,condition:t}),5e3)});let s=null;try{s=await Promise.allSettled([i,kt(e.id,t.id)])}catch(e){console.error(e)}finally{return s[1].value}}}async function vt(e,t={}){if(e=foundry.utils.mergeObject({aspect:o.BLUNT,flags:[],healRate:0,icon:"systems/hm3/images/icons/svg/injury.svg",injuryLevel:0,name:null,notes:"",subType:m.HEALING,token:null},e),t=foundry.utils.mergeObject({},t),!e.name||!e.token)return console.error('HM3 | Macro "createInjury" needs name & token as mandatory input!'),null;let a;a=1===e.injuryLevel?"M":e.injuryLevel<=3?"S":"G";const i=await Item.create({flags:e.flags,icon:e.icon,name:e.name,origin:e.token.actor.uuid,type:"injury",system:{aspect:e.aspect,healRate:e.healRate,injuryLevel:e.injuryLevel,notes:e.notes,severity:a,subType:e.subType}},{parent:e.token.actor});return e.injuryId=i.id,i}async function wt(e){const t=SimpleCalendar.api.timestamp();let a,i;switch(e.subType){case m.BLOODLOSS:case m.HEALING:a=SimpleCalendar.api.timestampPlusInterval(t,{day:5}),i=SimpleCalendar.api.timestampToDate(a);break;case m.DISEASE:case m.INFECTION:a=SimpleCalendar.api.timestampPlusInterval(t,{day:1}),i=SimpleCalendar.api.timestampToDate(a);break;case m.POISON:case m.TOXIN:const s=e.minute||5,n=e.second||0;a=SimpleCalendar.api.timestampPlusInterval(t,{minute:s,second:n});break;case m.SHOCK:a=SimpleCalendar.api.timestampPlusInterval(t,{hour:4});break;default:console.error("HM3 | Wrong injury subType.")}return i&&(a=SimpleCalendar.api.dateToTimestamp({year:i.year,month:i.month,day:i.day,hour:0,minute:0,seconds:0})),ft({label:`Injury Helper (${e.name})`,seconds:1,startTime:a,token:token,type:"GameTime",flags:{effectmacro:{onDelete:{script:`const token = canvas.tokens.get('${e.token.id}');\nif(token.hasInjury('${e.injuryId}'))\n    await game.hm3.macros.createInjuryHelper(${e});`}}}},[],{hidden:!0,selfDestroy:!0})}function Ct(e,t){var a=Object.keys(e);return t=t?t+".":"",a.reduce(function(a,i){var s;return s=e[i],"[object Object]"===Object.prototype.toString.call(s)?a=a.concat(Ct(e[i],t+i)):a.push(t+i),a},[])}function Mt(e,t={}){return new ye(e,{},t)}async function Tt(e,t={}){return Mt(e,t).evaluate()}async function It(e,t={}){return(await Tt(e,t)).total}function Et(e){return Math.max(Math.min(Math.round(e),95),5)}async function At(e){}async function Nt(e){if(!e)return!0;const t=e.hasCondition(l.CAUTIOUS),a=e.hasCondition(l.DISTRACTED),i=e.hasCondition(l.UNCONSCIOUS);return!t&&!a&&!i&&await game.hm3.socket.executeAsGM("isFirstTA")}async function Dt(e){let t=null;return e.hasCondition(l.DYING)?(t=e.getCondition(l.DYING),t.testUserPermission(game.user,"OWNER")&&await t.setFlag("core","overlay",!0)):e.hasCondition(l.UNCONSCIOUS)?(t=e.getCondition(l.UNCONSCIOUS),t.testUserPermission(game.user,"OWNER")&&await t.setFlag("core","overlay",!0)):e.hasCondition(l.SHOCKED)?(t=e.getCondition(l.SHOCKED),t.testUserPermission(game.user,"OWNER")&&await t.setFlag("core","overlay",!0)):e.hasCondition(l.PRONE)&&(t=e.getCondition(l.PRONE),t.testUserPermission(game.user,"OWNER")&&await t.setFlag("core","overlay",!0)),t}class Lt{constructor(e){this._actor=e}get actor(){return this._actor}get id(){return this._actor.id}get img(){return this._actor.img}get link(){return this._actor.link}get macrolist(){return this._actor.macrolist.map(e=>(e.trigger=game.macros.get(e.id)?.getFlag("hm3","trigger"),e.ownerId=game.macros.get(e.id)?.getFlag("hm3","ownerId"),e)).sort((e,t)=>e?.name.toLowerCase()>t?.name.toLowerCase()?1:t?.name.toLowerCase()>e?.name.toLowerCase()?-1:0)}get name(){return this._actor.name}get proxies(){return this._actor.proxies}get type(){return this._actor.type}get subtype(){return this._actor.subtype}get uuid(){return this._actor.uuid}get bioImage(){return this._actor.system.bioImage}get description(){return this._actor.system.description}get hasDescription(){return this.description&&this.description.length>0}HM100Check(e){return Math.max(Math.min(Math.round(e),95),5)}HM6Check(e){return Math.max(Math.round(e),1)}Skill(e){return this.proxies.find(t=>t.type===d.SKILL&&t.name.toLowerCase().includes(e.toLowerCase()))}}class Rt{_ability=null;_actor=null;_penalty=null;constructor(e,t,a){this._ability=e,this._actor=t,this._penalty=a}get base(){return this._getDescendantProp(this._actor,this._ability).base||0}get effective(){const e=this._penalty?this._getDescendantProp(this._actor.proxy,this._penalty):0;return this.HM6Check(this.base-e)}HM6Check(e){return Math.max(Math.round(e),1)}_getDescendantProp(e,t){for(var a=t.split(".");a.length&&(e=e[a.shift()]););return e}}class Ot extends Lt{get biography(){return this._actor.system.biography}get dodge(){return this.Skill("Dodge")?.EML??0}get fatigue(){return this._actor.system.fatigue??0}get gender(){return this._actor.system.gender??"Male"}get initiative(){return this.Skill("Initiative")?.EML??0}get loadRating(){return this._actor.system.loadRating??0}get mounted(){return this._actor.system.mounted??!1}get move(){return this._ability("system.move","PP")}get shockIndex(){return{value:this._actor.system.shockIndex.value,max:100}}get size(){return this._actor.system.size||6}get species(){return this._actor.system.species}get strength(){return this._ability("system.abilities.strength","PP")}get stamina(){return this._ability("system.abilities.stamina","PP")}get dexterity(){return this._ability("system.abilities.dexterity","PP")}get agility(){return this._ability("system.abilities.agility","PP")}get intelligence(){return this._ability("system.abilities.intelligence","UP")}get aura(){return this._ability("system.abilities.aura","UP")}get will(){return this._ability("system.abilities.will","UP")}get eyesight(){return this._ability("system.abilities.eyesight","UP")}get hearing(){return this._ability("system.abilities.hearing","UP")}get smell(){return this._ability("system.abilities.smell","UP")}get voice(){return this._ability("system.abilities.voice","UP")}get comeliness(){return this._ability("system.abilities.comeliness")}get morality(){return this._ability("system.abilities.morality")}get STR(){return this.strength.effective}get STA(){return this.stamina.effective}get DEX(){return this.dexterity.effective}get AGL(){return this.agility.effective}get INT(){return this.intelligence.effective}get AUR(){return this.aura.effective}get WIL(){return this.will.effective}get EYE(){return this.eyesight.effective}get HRG(){return this.hearing.effective}get SML(){return this.smell.effective}get VOI(){return this.voice.effective}get CML(){return this.comeliness.effective}get MOR(){return this.morality.effective}get END(){return this.endurance}get MOV(){return this.move.effective}get capacity(){return{max:this.loadRating+10*this.endurance,value:this.totalGearWeight}}get endurance(){const e=this.Skill("Condition")?.ML;return Math.round(e?e/5:(this.strength.base+this.stamina.base+this.will.base)/3)}get encumbrance(){return Math.floor(Math.max(this.totalGearWeight-this.loadRating,0)/this.END)}get EP(){return this.mounted?Math.round(this.encumbrance/2):this.encumbrance}get FP(){return this.mounted?Math.round(this.fatigue/2):this.fatigue}get IP(){return this.proxies.filter(e=>e.type===d.INJURY).reduce((e,t)=>e+t.IL,0)}get UP(){return this.IP+this.FP}get PP(){return this.UP+this.EP}get totalArmorWeight(){return I(this.proxies.filter(e=>e.type===d.ARMORGEAR&&e.isCarried).reduce((e,t)=>e+t.quantity*t.weight,0))}get totalMiscGearWeight(){return I(this.proxies.filter(e=>(e.type===d.MISCGEAR||e.type===d.CONTAINERGEAR)&&e.isCarried).reduce((e,t)=>e+t.quantity*t.weight,0))}get totalMissileWeight(){return I(this.proxies.filter(e=>e.type===d.MISSILEGEAR&&e.isCarried).reduce((e,t)=>e+t.quantity*t.weight,0))}get totalWeaponWeight(){return I(this.proxies.filter(e=>e.type===d.WEAPONGEAR&&e.isCarried).reduce((e,t)=>e+t.quantity*t.weight,0))}get totalGearWeight(){return I(this.totalArmorWeight+this.totalMiscGearWeight+this.totalMissileWeight+this.totalWeaponWeight)}get hasSteed(){return!!this.Skill("Riding")?.actorUuid}get steed(){return this.hasSteed?fromUuidSync(this.Skill("Riding").actorUuid):null}get containers(){const e={"on-person":{name:"On Person",type:d.CONTAINERGEAR,container:"on-person",collapsed:this.actor.getFlag("hm3","onPersonContainerCollapsed")||!1,capacity:{max:this.capacity.max,value:this.capacity.value}}};return this.proxies.forEach(t=>{t.type===d.CONTAINERGEAR&&(e[t.id]=t)}),e}_ability(e,t=null){return new Rt(e,this._actor,t)}}class _t extends Ot{get culture(){return this._actor.system.culture}get frame(){return this._actor.system.frame}get heigth(){return this._actor.system.heigth}get occupation(){return this._actor.system.occupation}get socialClass(){return this._actor.system.socialClass}get species(){return super.species||"Human"}get sunsign(){return this._actor.system.sunsign}get weight(){return this._actor.system.weight}}class xt extends Lt{get capacity(){return this._actor.system.capacity}}class Ft extends Ot{}class Ht extends Actor{static _proxyMap=new Map;get proxy(){if(!Ht._proxyMap.has(this.id))switch(this.type){case s.CHARACTER:Ht._proxyMap.set(this.id,new _t(this));break;case s.CONTAINER:Ht._proxyMap.set(this.id,new xt(this));break;case s.CREATURE:Ht._proxyMap.set(this.id,new Ft(this))}return Ht._proxyMap.get(this.id)}get proxies(){return this.items.contents.map(e=>e.proxy)}get macrolist(){return game.macros.contents.filter(e=>e.getFlag("hm3","ownerId")===this.id)||[]}get macrofolder(){return game.folders.get(game.settings.get("hm3","actorMacrosFolderId"))||null}get player(){return game.users.find(e=>!e.isGM&&this.testUserPermission(e,"OWNER"))||null}get subtype(){return this.player&&this.type===s.CHARACTER?"pc":this.type===s.CHARACTER?"npc":this.type}get skillImprovement(){return!!this.player||!!this.getFlag("hm3","SkillImprovement")}pronoun(e=!1){const t=()=>this.system.gender?"Male"===this.system.gender?"His":"Her":"It";return e?t():t().toLowerCase()}hasLinkedSteed(){const e=this.items.find(e=>e.type===d.SKILL&&e.name.includes("Riding"));return!!e&&!!e.system.actorUuid}getSteeds(){return this.items.contents.filter(e=>e.type===d.COMPANION&&e.system.type===r.STEED).map(e=>fromUuidSync(e.system.actorUuid))}getParty(){return[this,...this.items.contents.filter(e=>e.type===d.COMPANION&&e.system.type===r.PARTY).map(e=>fromUuidSync(e.system.actorUuid))]}getPartySkills(e){return this.getParty().map(t=>t.items.getName(e)).filter(e=>!!e).sort((e,t)=>t.system.effectiveMasteryLevel-e.system.effectiveMasteryLevel)}allApplicableEffects(e=!1){e||=!game.settings.get("hm3","activeEffectPermissions");const t=[];for(const a of super.allApplicableEffects())if(e)t.push(a);else{const e=a.hidden&&!game.user.isGM;a.testUserPermission(game.user,CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED)&&!e&&t.push(a)}return t}hasCondition(e){return ht(this,e,e!==l.OUTNUMBERED)}getCondition(e){return gt(this,e,e!==l.OUTNUMBERED)}static defaultName({type:e,parent:t,pack:a}={}){const i=this.metadata.name;let s;s=t?t.getEmbeddedCollection(i):a?game.packs.get(a):game.collections.get(i);const n=new Set;for(const e of s)n.add(e.name);const o=CONFIG.Actor.typeLabels[e]?CONFIG.Actor.typeLabels[e]:e;let r=o,l=1;for(;n.has(r);)r=`${o} (${++l})`;return r}static async createDialog(e={},{parent:t=null,pack:a=null,types:i,...s}={}){if(this.hasTypeData&&i){if(0===i.length)throw new Error("The array of sub-types to restrict to must not be empty");for(const e of i)if(e===CONST.BASE_DOCUMENT_TYPE||!this.TYPES.includes(e))throw new Error(`Invalid ${this.documentName} sub-type: "${e}"`)}const n=this.TYPES.filter(e=>e!==CONST.BASE_DOCUMENT_TYPE&&!1!==i?.includes(e));let o;t||(o=a?game.packs.get(a):game.collections.get(this.documentName));const r=o?._formatFolderSelectOptions()??[],l=game.i18n.localize(this.metadata.label),c=game.i18n.format("DOCUMENT.Create",{type:l});let m=CONFIG[this.documentName]?.defaultType;m&&!1!==i?.includes(m)||(m=n[0]);const d=e.type||m,u=await renderTemplate("templates/sidebar/document-create.html",{folders:r,name:e.name||"",defaultName:this.implementation.defaultName({type:d,parent:t,pack:a}),folder:e.folder,hasFolders:r.length>1,type:d,types:Object.fromEntries(n.map(e=>{const t=CONFIG[this.documentName]?.typeLabels?.[e]??e;return[e,game.i18n.has(t)?game.i18n.localize(t):e]}).sort((e,t)=>e[1].localeCompare(t[1],game.i18n.lang))),hasTypes:this.hasTypeData,content:'<div class="form-group">\n            <label for="initDefaults" class="init-checkbox">Initialize default skills &amp; locations</label>\n            <input type="checkbox" id="initDefaults" name="initDefaults" checked />\n            </div>\n            <div class="form-group">\n            <label for="locations" class="location-dropdown">Locations</label>\n            <select name="locations" id="locations">\n              <option value="default-humanoid">Default Humanoid</option>\n              <option value="simplified-humanoid">Simplified Humanoid</option>\n              <option value="default-horse">Default Horse</option>\n              <option value="default-dog">Default Dog</option>\n            </select>\n            </div>'});return Dialog.prompt({title:c,content:u,label:c,render:e=>{this.hasTypeData&&e[0].querySelector('[name="type"]').addEventListener("change",i=>{e[0].querySelector('[name="name"]').placeholder=this.implementation.defaultName({type:i.target.value,parent:t,pack:a})})},callback:i=>{const s=i[0].querySelector("form"),o=new FormDataExtended(s);foundry.utils.mergeObject(e,o.object,{inplace:!0}),e.folder||delete e.folder,1===n.length&&(e.type=n[0]),e.name?.trim()||(e.name=this.implementation.defaultName({type:e.type,parent:t,pack:a}));const r={parent:t,pack:a,renderSheet:!0};return this.create(e,r)},rejectClose:!1,options:s})}async _onCreate(e,t,a){await super._onCreate(e,t,a),this.testUserPermission(game.user,"OWNER")&&this.type===s.CHARACTER&&await this.setFlag("hm3","SkillImprovement",!0)}async _preCreate(e,t,a){if(await super._preCreate(e,t,a),!e.initDefaults||e.items)return;const n={};if(e.type===s.CHARACTER)switch(n["system.description"]=await(await fetch("systems/hm3/module/actor/character-description.html")).text(),n["system.biography"]='<h1>Data</h1>\n<table style="width: 95%;" border="1">\n<tbody>\n<tr>\n<td style="padding: 2px; width: 143.6px;"><strong>Birthdate</strong></td>\n<td style="padding: 2px; width: 432px;">&nbsp;</td>\n</tr>\n<tr>\n<td style="padding: 2px; width: 143.6px;"><strong>Birthplace</strong></td>\n<td style="padding: 2px; width: 432px;">&nbsp;</td>\n</tr>\n<tr>\n<td style="padding: 2px; width: 143.6px;"><strong>Sibling Rank</strong></td>\n<td style="padding: 2px; width: 432px;">x of y</td>\n</tr>\n<tr>\n<td style="padding: 2px; width: 143.6px;"><strong>Parent(s)</strong></td>\n<td style="padding: 2px; width: 432px;">&nbsp;</td>\n</tr>\n<tr>\n<td style="padding: 2px; width: 143.6px;"><strong>Parent Occupation</strong></td>\n<td style="padding: 2px; width: 432px;">&nbsp;</td>\n</tr>\n<tr>\n<td style="padding: 2px; width: 143.6px;"><strong>Estrangement</strong></td>\n<td style="padding: 2px; width: 432px;">&nbsp;</td>\n</tr>\n<tr>\n<td style="padding: 2px; width: 143.6px;"><strong>Clanhead</strong></td>\n<td style="padding: 2px; width: 432px;">&nbsp;</td>\n</tr>\n<tr>\n<td style="padding: 2px; width: 143.6px;"><strong>Medical Traits</strong></td>\n<td style="padding: 2px; width: 432px;">&nbsp;</td>\n</tr>\n<tr>\n<td style="padding: 2px; width: 143.6px;"><strong>Psyche Traits</strong></td>\n<td style="padding: 2px; width: 432px;">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<h1>Life Story</h1>',n["system.bioImage"]="systems/hm3/images/svg/knight-silhouette.svg",n.items=[],await Ht.addItemsFromPack(i.defaultCharacterSkills,["hm3.character"],n.items),e.locations){case"simplified-humanoid":Ht._createSimpleHumanoidLocations(n.items);break;case"default-horse":Ht._createHorseLocations(n.items);break;case"default-dog":Ht._createDogLocations(n.items);break;default:Ht._createDefaultHumanoidLocations(n.items,!1)}else if("creature"===e.type)switch(n["system.description"]="",n["system.biography"]='<h1>Data</h1>\n<table style="width: 95%;" border="1">\n<tbody>\n<tr>\n<td style="padding: 2px; width: 143.6px;"><strong>Habitat</strong></td>\n<td style="padding: 2px; width: 432px;">&nbsp;</td>\n</tr>\n<tr>\n<td style="padding: 2px; width: 143.6px;"><strong>Height</strong></td>\n<td style="padding: 2px; width: 432px;">&nbsp;</td>\n</tr>\n<tr>\n<td style="padding: 2px; width: 143.6px;"><strong>Weight</strong></td>\n<td style="padding: 2px; width: 432px;"></td>\n</tr>\n<tr>\n<td style="padding: 2px; width: 143.6px;"><strong>Diet</strong></td>\n<td style="padding: 2px; width: 432px;">&nbsp;</td>\n</tr>\n<tr>\n<td style="padding: 2px; width: 143.6px;"><strong>Lifespan</strong></td>\n<td style="padding: 2px; width: 432px;">&nbsp;</td>\n</tr>\n<tr>\n<td style="padding: 2px; width: 143.6px;"><strong>Group</strong></td>\n<td style="padding: 2px; width: 432px;">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<h1>Special Abilities</h1>\n<p>Describe any special abilities.</p>\n<h1>Attacks</h1>\n<p>Describe methods of attack.</p>\n<h1>Behavior</h1>\n<p>Describe behavioral aspects.</p>',n["system.bioImage"]="systems/hm3/images/svg/monster-silhouette.svg",n.items=[],await Ht.addItemsFromPack(i.defaultCreatureSkills,["hm3.character"],n.items),e.locations){case"simplified-humanoid":Ht._createSimpleHumanoidLocations(n.items);break;case"default-horse":Ht._createHorseLocations(n.items);break;case"default-dog":Ht._createDogLocations(n.items);break;default:Ht._createDefaultHumanoidLocations(n.items,!1)}else"container"===e.type&&(n["system.capacity.max"]=1,n["system.description"]="",n["system.bioImage"]="systems/hm3/images/icons/svg/chest.svg",n.img="systems/hm3/images/icons/svg/chest.svg");if(this.updateSource(n),e.type===s.CHARACTER||"creature"===e.type){let e=0,t=0,a=0,i=0;n.items.forEach(s=>{s.type===d.ARMORLOCATION&&(e+=s.system.probWeight.high,t+=s.system.probWeight.mid,a+=s.system.probWeight.low,i++)}),(e%100||t%100||a%100)&&game.user.isGM&&ui.notifications.warn(`Armor prob weight is NOT equal to 100, 1000 or 10000. ${this.name}: ${e} | ${t} | ${a}`,{permanent:!0})}}static async addItemsFromPack(e,t,a){let i=foundry.utils.deepClone(e);const s=[];for(let e of t){const t=game.packs.get(e);await t.getDocuments().then(e=>{let t=Promise.resolve();e.forEach(async(e,a)=>{t=await t.then(async()=>{if(i.includes(e.name)){const t=e.toObject();t.effects=t.effects.contents,t.system?.hasOwnProperty("createdTime")&&(t.system.createdTime=game.time.worldTime),s.push(t),i=i.filter(t=>t!==e.name)}})})})}s.sort((t,a)=>e.indexOf(t.name)-e.indexOf(a.name)),a.push(...s)}static _setupLocation(e,t){const a=foundry.utils.deepClone(game.model.Item.armorlocation);return foundry.utils.mergeObject(a,i.injuryLocations[t]),a.probWeight.high*=10,a.probWeight.mid*=10,a.probWeight.low*=10,{name:e,type:d.ARMORLOCATION,system:a}}static _createDefaultHumanoidLocations(e,t=!0){e.push(Ht._setupLocation("Skull","Skull")),t?e.push(Ht._setupLocation("Face","Face")):Ht._createDefaultHumanoidFaceLocations(e),e.push(Ht._setupLocation("Neck","Neck")),e.push(Ht._setupLocation("Left Shoulder","Shoulder")),e.push(Ht._setupLocation("Right Shoulder","Shoulder")),e.push(Ht._setupLocation("Left Upper Arm","Upper Arm")),e.push(Ht._setupLocation("Right Upper Arm","Upper Arm")),e.push(Ht._setupLocation("Left Elbow","Elbow")),e.push(Ht._setupLocation("Right Elbow","Elbow")),e.push(Ht._setupLocation("Left Forearm","Forearm")),e.push(Ht._setupLocation("Right Forearm","Forearm")),e.push(Ht._setupLocation("Left Hand","Hand")),e.push(Ht._setupLocation("Right Hand","Hand")),e.push(Ht._setupLocation("Thorax","Thorax")),e.push(Ht._setupLocation("Abdomen","Abdomen")),e.push(Ht._setupLocation("Groin","Groin")),e.push(Ht._setupLocation("Left Hip","Hip")),e.push(Ht._setupLocation("Right Hip","Hip")),e.push(Ht._setupLocation("Left Thigh","Thigh")),e.push(Ht._setupLocation("Right Thigh","Thigh")),e.push(Ht._setupLocation("Left Knee","Knee")),e.push(Ht._setupLocation("Right Knee","Knee")),e.push(Ht._setupLocation("Left Calf","Calf")),e.push(Ht._setupLocation("Right Calf","Calf")),e.push(Ht._setupLocation("Left Foot","Foot")),e.push(Ht._setupLocation("Right Foot","Foot"))}static _createDefaultHumanoidFaceLocations(e){e.push(Ht._setupLocation("Left Eye","Eye")),e.push(Ht._setupLocation("Right Eye","Eye")),e.push(Ht._setupLocation("Nose","Nose")),e.push(Ht._setupLocation("Left Ear","Ear")),e.push(Ht._setupLocation("Right Ear","Ear")),e.push(Ht._setupLocation("Left Cheek","Cheek")),e.push(Ht._setupLocation("Right Cheek","Cheek")),e.push(Ht._setupLocation("Mouth","Mouth")),e.push(Ht._setupLocation("Jaw","Jaw"))}static _createSimpleHumanoidLocations(e){e.push(Ht._setupLocation("Head","Head, humanoid simple")),e.push(Ht._setupLocation("Neck","Neck, humanoid simple")),e.push(Ht._setupLocation("Left Arm","Arm, humanoid simple")),e.push(Ht._setupLocation("Right Arm","Arm, humanoid simple")),e.push(Ht._setupLocation("Thorax","Thorax, humanoid simple")),e.push(Ht._setupLocation("Abdomen","Abdomen, humanoid simple")),e.push(Ht._setupLocation("Left Leg","Leg, humanoid simple")),e.push(Ht._setupLocation("Right Leg","Leg, humanoid simple"))}static _createHorseLocations(e){e.push(Ht._setupLocation("Head","Head, horse")),e.push(Ht._setupLocation("Neck","Neck, horse")),e.push(Ht._setupLocation("Left Fore Leg","Fore Leg, horse")),e.push(Ht._setupLocation("Right Fore Leg","Fore Leg, horse")),e.push(Ht._setupLocation("Left Flank (Thorax)","Flank, horse")),e.push(Ht._setupLocation("Right Flank (Thorax)","Flank, horse")),e.push(Ht._setupLocation("Abdomen","Abdomen, horse")),e.push(Ht._setupLocation("Left Quarter","Quarter, horse")),e.push(Ht._setupLocation("Right Quarter","Quarter, horse")),e.push(Ht._setupLocation("Left Hind Leg","Hind Leg, horse")),e.push(Ht._setupLocation("Right Hind Leg","Hind Leg, horse")),e.push(Ht._setupLocation("Tail","Tail, horse"))}static _createDogLocations(e){e.push(Ht._setupLocation("Head","Head, dog")),e.push(Ht._setupLocation("Neck","Neck, dog")),e.push(Ht._setupLocation("Left Fore Leg","Fore Leg, dog")),e.push(Ht._setupLocation("Right Fore Leg","Fore Leg, dog")),e.push(Ht._setupLocation("Thorax","Thorax, dog")),e.push(Ht._setupLocation("Abdomen","Abdomen, dog")),e.push(Ht._setupLocation("Left Hind Leg","Hind Leg, dog")),e.push(Ht._setupLocation("Right Hind Leg","Hind Leg, dog")),e.push(Ht._setupLocation("Tail","Tail, dog"))}prepareBaseData(){super.prepareBaseData();const e=this.system,t=this.items;e.eph||(e.eph={});const a=e.eph;if(e.totalWeight=0,this.calcTotalGearWeight(),"container"===this.type)return e.capacity.value=e.totalWeight,e.capacity.pct=Math.round((e.capacity.max-e.capacity.value)/(e.capacity.max||1)*100),void(e.capacity.pct=Math.max(Math.min(e.capacity.pct,100),0));e.abilities.strength.effective=0,e.abilities.stamina.effective=0,e.abilities.dexterity.effective=0,e.abilities.agility.effective=0,e.abilities.intelligence.effective=0,e.abilities.aura.effective=0,e.abilities.will.effective=0,e.abilities.eyesight.effective=0,e.abilities.hearing.effective=0,e.abilities.smell.effective=0,e.abilities.voice.effective=0,e.abilities.comeliness.effective=0,e.abilities.morality.effective=0,e.abilities.strength.modified=0,e.abilities.stamina.modified=0,e.abilities.dexterity.modified=0,e.abilities.agility.modified=0,e.abilities.intelligence.modified=0,e.abilities.aura.modified=0,e.abilities.will.modified=0,e.abilities.eyesight.modified=0,e.abilities.hearing.modified=0,e.abilities.smell.modified=0,e.abilities.voice.modified=0,e.abilities.comeliness.modified=0,e.abilities.morality.modified=0,e.dodge=0,e.initiative=0,e.endurance=0,e.shockIndex||(e.shockIndex={value:100,max:100}),e.move.effective=0,e.universalPenalty=0,e.physicalPenalty=0,e.totalInjuryLevels=0,e.injuryLevels||(e.injuryLevels={value:0,max:6}),e.encumbrance=0,e.condition=0,e.mounted=!!e.mounted,a.move=e.move.base,a.fatigue=e.fatigue||0,a.strength=e.abilities.strength.base,a.stamina=e.abilities.stamina.base,a.dexterity=e.abilities.dexterity.base,a.agility=e.abilities.agility.base,a.eyesight=e.abilities.eyesight.base,a.hearing=e.abilities.hearing.base,a.smell=e.abilities.smell.base,a.voice=e.abilities.voice.base,a.intelligence=e.abilities.intelligence.base,a.will=e.abilities.will.base,a.aura=e.abilities.aura.base,a.morality=e.abilities.morality.base,a.comeliness=e.abilities.comeliness.base,a.endurance=e.endurance,a.meleeAMLMod=0,a.meleeDMLMod=0,a.missileAMLMod=0,a.outnumbered=0,a.commSkillsMod=0,a.physicalSkillsMod=0,a.combatSkillsMod=0,a.craftSkillsMod=0,a.ritualSkillsMod=0,a.magicSkillsMod=0,a.psionicTalentsMod=0,a.itemAMLMod=0,a.itemDMLMod=0,a.itemEMLMod=0,a.itemCustomMod=0,a.unhorsing=0,e.endurance=Math.round((e.abilities.strength.base+e.abilities.stamina.base+e.abilities.will.base)/3);const i=e.injuryLevels.value;t.forEach(t=>{const i=t.system;t.type===d.INJURY?e.totalInjuryLevels+=i.injuryLevel||0:t.type===d.SKILL&&t.name.includes("Condition")&&(i.masteryLevel||(e.abilities.strength.modified=a.strength,e.abilities.stamina.modified=a.stamina,e.abilities.will.modified=a.will,t.prepareData(),t.postProcessItems()),e.endurance=Math.round((i.masteryLevel||5*e.endurance)/5),e.condition=i.masteryLevel)}),e.endurance=Math.max(e.endurance,1),this.hasCondition(l.INANIMATE)?e.injuryLevels.max!==e.endurance&&setTimeout(()=>this.update({"system.injuryLevels.max":e.endurance}),500):6!==e.injuryLevels.max&&setTimeout(()=>this.update({"system.injuryLevels.max":6}),500),a.totalInjuryLevels=e.totalInjuryLevels,a.effectiveWeight=e.loadRating?Math.max(e.totalWeight-e.loadRating,0):e.totalWeight,e.encumbrance=Math.floor(a.effectiveWeight/e.endurance),i!==e.totalInjuryLevels&&Hooks.call("hm3.onTotalInjuryLevelsChanged",this,i,e.totalInjuryLevels),Hooks.call("hm3.onActorPrepareBaseData",this)}prepareDerivedData(){super.prepareDerivedData();const e=this.system,t=e.eph;if(this._calcGearWeightTotals(),"container"===this.type)return;e.abilities.strength.modified=t.strength,e.abilities.stamina.modified=t.stamina,e.abilities.dexterity.modified=t.dexterity,e.abilities.agility.modified=t.agility,e.abilities.eyesight.modified=t.eyesight,e.abilities.hearing.modified=t.hearing,e.abilities.smell.modified=t.smell,e.abilities.voice.modified=t.voice,e.abilities.intelligence.modified=t.intelligence,e.abilities.will.modified=t.will,e.abilities.aura.modified=t.aura,e.abilities.morality.modified=t.morality,e.abilities.comeliness.modified=t.comeliness,this.system.encumbrance=Math.floor(this.system.eph.effectiveWeight/this.system.endurance),this.system.mounted&&(this.system.encumbrance=Math.round(this.system.encumbrance/2+Number.EPSILON),t.fatigue=Math.round(t.fatigue/2+Number.EPSILON)||0),e.encumbrance=Math.max(Math.round(e.encumbrance+Number.EPSILON),0),e.endurance=Math.max(Math.round(e.endurance+Number.EPSILON),0),e.move.effective=Math.max(Math.round(t.move+Number.EPSILON),0),t.totalInjuryLevels=Math.max(Math.round(t.totalInjuryLevels+Number.EPSILON),0),t.fatigue=Math.max(Math.round(t.fatigue+Number.EPSILON),0)||0,Ht.calcUniversalPenalty(this),this.applySpecificActiveEffect("system.universalPenalty"),e.universalPenalty=Math.floor(Math.max(e.universalPenalty||0,0)),Ht.calcPhysicalPenalty(this),this.applySpecificActiveEffect("system.physicalPenalty"),e.physicalPenalty=Math.floor(Math.max(e.physicalPenalty||0,0)),Ht.calcShockIndex(this),e.move.effective=Math.max(t.move-(e.move.base<25?e.physicalPenalty:5*e.physicalPenalty),0),this._setupEffectiveAbilities(e),t.stumbleTarget=Math.max(e.abilities.agility.effective,0),t.fumbleTarget=Math.max(e.abilities.dexterity.effective,0),this.items.forEach(e=>{e.postProcessItems(),[d.SKILL,d.PSIONIC].includes(e.type)&&this.applySkillTypeActiveEffect(e)}),this._applySkillActiveEffects(),this._refreshSpellsAndInvocations();let a={};this.items.forEach(e=>{const t=e.system;e.type!==d.SKILL||t.type!==p.COMBAT&&"throwing"!==e.name.toLowerCase()||(a[e.name]={name:e.name,eml:t.effectiveMasteryLevel})}),this._setupWeaponData(a),this._generateArmorLocationMap(e),this._setMinMaxEML_AML_DML(),this.items.forEach(t=>{const a=t.system;if(t.type===d.SKILL)switch(t.name.toLowerCase()){case"dodge":e.dodge=a.effectiveMasteryLevel;break;case"initiative":e.initiative=a.effectiveMasteryLevel;break;case"condition":e.condition=a.effectiveMasteryLevel}}),Hooks.call("hm3.onActorPrepareDerivedData",this)}calcTotalGearWeight(){const e=this.items,t=this.system;if(!this.isOwner)return;if(!e)return;const a={};e.forEach(e=>{e.type===d.CONTAINERGEAR&&(a[e.id]=e.system.isCarried)});let i=0;e.forEach(e=>{const t=e.system;e.type.endsWith("gear")&&("on-person"===t.container?t.isCarried&&(i+=t.weight*t.quantity):a[t.container]&&(i+=t.weight*t.quantity))}),i=I(i),t.totalWeight=i}_calcGearWeightTotals(){const e=this.system.eph;e.totalWeaponWeight=0,e.totalMissileWeight=0,e.totalArmorWeight=0,e.totalMiscGearWeight=0;let t=0;this.items.forEach(e=>{e.type===d.CONTAINERGEAR&&(e.system.capacity.value=0)}),this.items.forEach(a=>{const i=a.system;if(t=0,a.type.endsWith("gear")&&i.container&&"on-person"!==i.container){const e=this.items.find(e=>e.id===i.container);e&&(i.isCarried=e.system.isCarried)}switch(a.type){case d.WEAPONGEAR:if(t=Math.max(i.weight*i.quantity,0),!i.isCarried)break;e.totalWeaponWeight+=t;break;case d.MISSILEGEAR:if(t=Math.max(i.weight*i.quantity,0),!i.isCarried)break;e.totalMissileWeight+=t;break;case d.ARMORGEAR:if(t=Math.max(i.weight*i.quantity,0),!i.isCarried)break;e.totalArmorWeight+=t;break;case d.MISCGEAR:case d.CONTAINERGEAR:if(t=Math.max(i.weight*i.quantity,0),!i.isCarried)break;e.totalMiscGearWeight+=t}if(a.type.endsWith("gear")){const e=i.container;if(e&&"on-person"!=e){const a=this.items.get(e);a?a.system.capacity.value=I(a.system.capacity.value+t):i.container="on-person"}}}),e.totalArmorWeight=I(e.totalArmorWeight),e.totalWeaponWeight=I(e.totalWeaponWeight),e.totalMissileWeight=I(e.totalMissileWeight),e.totalMiscGearWeight=I(e.totalMiscGearWeight),e.totalGearWeight=e.totalWeaponWeight+e.totalMissileWeight+e.totalArmorWeight+e.totalMiscGearWeight,e.totalGearWeight=I(e.totalGearWeight)}_setupEffectiveAbilities(e){const t=this.system.eph;e.abilities.strength.effective=Math.max(Math.round(t.strength+Number.EPSILON)-e.physicalPenalty,0),e.abilities.stamina.effective=Math.max(Math.round(t.stamina+Number.EPSILON)-e.physicalPenalty,0),e.abilities.agility.effective=Math.max(Math.round(t.agility+Number.EPSILON)-e.physicalPenalty,0),e.abilities.dexterity.effective=Math.max(Math.round(t.dexterity+Number.EPSILON)-e.physicalPenalty,0),e.abilities.intelligence.effective=Math.max(Math.round(t.intelligence+Number.EPSILON)-e.universalPenalty,0),e.abilities.aura.effective=Math.max(Math.round(t.aura+Number.EPSILON)-e.universalPenalty,0),e.abilities.will.effective=Math.max(Math.round(t.will+Number.EPSILON)-e.universalPenalty,0),e.abilities.eyesight.effective=Math.max(Math.round(t.eyesight+Number.EPSILON)-e.universalPenalty,0),e.abilities.hearing.effective=Math.max(Math.round(t.hearing+Number.EPSILON)-e.universalPenalty,0),e.abilities.smell.effective=Math.max(Math.round(t.smell+Number.EPSILON)-e.universalPenalty,0),e.abilities.voice.effective=Math.max(Math.round(t.voice+Number.EPSILON)-e.universalPenalty,0),e.abilities.comeliness.effective=Math.max(Math.round(t.comeliness+Number.EPSILON),0),e.abilities.morality.effective=Math.max(Math.round(t.morality+Number.EPSILON),0)}_setupWeaponData(e){const t=this.system.eph;t.missileAMLMod||(t.missileAMLMod=0),t.weaponAMLMod||(t.weaponAMLMod=0),t.weaponDMLMod||(t.weaponDMLMod=0),this.items.forEach(t=>{const a=t.system;if(t.type===d.MISSILEGEAR){a.attackMasteryLevel=5;let t=a.assocSkill;if(void 0!==e[t]){let i=e[t].eml;a.attackMasteryLevel=(i||0)+(a.attackModifier||0)}}else if(t.type===d.WEAPONGEAR){a.attackMasteryLevel=5,a.defenseMasteryLevel=5;let t=a.name;if("None"===a.assocSkill){if(void 0===e[t])return;a.assocSkill=e[t].name}let i=a.assocSkill;if(void 0!==e[i]){let t=e[i].eml;a.attackMasteryLevel=(t||0)+(a.attack||0)+(a.attackModifier||0),a.defenseMasteryLevel=(t||0)+(a.defense||0)}}}),this._applyWeaponActiveEffects()}_setMinEML_AML_DML(){this.items.forEach(e=>{const t=e.system;switch(e.type){case d.SKILL:case d.PSIONIC:case d.SPELL:case d.INVOCATION:t.effectiveMasteryLevel=Math.max(t.effectiveMasteryLevel,5);break;case d.WEAPONGEAR:t.attackMasteryLevel=Math.max(t.attackMasteryLevel,5),t.defenseMasteryLevel=Math.max(t.defenseMasteryLevel,5);break;case d.MISSILEGEAR:t.attackMasteryLevel=Math.max(t.attackMasteryLevel,5)}})}_setMinMaxEML_AML_DML(){this.items.forEach(e=>{const t=e.system;switch(e.type){case d.SKILL:case d.PSIONIC:case d.SPELL:case d.INVOCATION:t.effectiveMasteryLevel=Math.min(Math.max(t.effectiveMasteryLevel,5),95);break;case d.WEAPONGEAR:t.attackMasteryLevel=Math.min(Math.max(t.attackMasteryLevel,5),95),t.defenseMasteryLevel=Math.min(Math.max(t.defenseMasteryLevel,5),95);break;case d.MISSILEGEAR:t.attackMasteryLevel=Math.min(Math.max(t.attackMasteryLevel,5),95)}})}_refreshSpellsAndInvocations(){this._resetAllSpellsAndInvocations(),this.items.forEach(e=>{const t=e.system;e.type===d.SKILL&&t.type===p.MAGIC?this._setConvocationSpells(e.name,t.skillBase.value,t.masteryLevel,t.effectiveMasteryLevel):e.type===d.SKILL&&t.type===p.RITUAL&&this._setRitualInvocations(e.name,t.skillBase.value,t.masteryLevel,t.effectiveMasteryLevel)})}_resetAllSpellsAndInvocations(){this.items.forEach(e=>{const t=e.system;e.type!==d.SPELL&&e.type!==d.INVOCATION||(t.effectiveMasteryLevel=0,t.skillIndex=0,t.masteryLevel=0,t.effectiveMasteryLevel=0)})}_setConvocationSpells(e,t,a,i){if(!e||0==e.length)return;let s=e.toLowerCase();this.items.forEach(e=>{const n=e.system;e.type===d.SPELL&&n.convocation&&n.convocation.toLowerCase()===s&&(n.effectiveMasteryLevel=i-5*n.level,n.skillIndex=Math.floor(a/10),n.masteryLevel=a,n.skillBase=t)})}_setRitualInvocations(e,t,a,i){if(!e||0==e.length)return;let s=e.toLowerCase();this.items.forEach(e=>{const n=e.system;e.type===d.INVOCATION&&n.diety&&n.diety.toLowerCase()===s&&(n.effectiveMasteryLevel=i-5*n.circle,n.skillIndex=Math.floor(a/10),n.masteryLevel=a,n.skillBase=t)})}_generateArmorLocationMap(e){if(!this.itemTypes.armorgear.length)return;const t={},a=i.injuryLocations;Object.keys(a).forEach(e=>{const i=a[e].impactType;"base"!=i&&"custom"!=i&&(t[e]={name:i,blunt:0,edged:0,piercing:0,fire:0,squeeze:0,tear:0,layers:""})}),this.items.forEach(e=>{const a=e.system;if(e.type===d.ARMORGEAR&&a.isCarried&&a.isEquipped){if(!a.hasOwnProperty("locations"))return;a.locations.forEach(e=>{if(void 0!==t[e]){const i=a.armorQuality||0;if(a.hasOwnProperty("protection")?(t[e].blunt+=Math.min(2*a.protection.blunt,a.protection.blunt+i),t[e].edged+=Math.min(2*a.protection.edged,a.protection.edged+i),t[e].piercing+=Math.min(2*a.protection.piercing,a.protection.piercing+i),t[e].fire+=Math.min(2*a.protection.fire,a.protection.fire+i),t[e].squeeze+=Math.min(2*a.protection.squeeze,a.protection.squeeze+i),t[e].tear+=Math.min(2*a.protection.tear,a.protection.tear+i)):console.warn("HM3 | item has no 'protection' property"),a.material.length>0){t[e].layers.length>0&&(t[e].layers+=", ");let s="";0!==i&&(s=(i>0?"+":"-")+Math.abs(i)),t[e].layers+=a.material+s}}})}});const s=Object.values(t);this.items.forEach(e=>{const t=e.system;if(e.type===d.ARMORLOCATION){let e=s.find(e=>e.name===t.impactType);e&&(t.blunt=e.blunt,t.edged=e.edged,t.piercing=e.piercing,t.fire=e.fire,t.layers=e.layers)}})}async skillDevRoll(e,t=!0){if(this.type===s.CREATURE&&this.system.species.toLowerCase().includes("horse")&&["Initiative","Trample"].includes(e.name)){const t=fromUuidSync(this.system.ownerUuid);if(t){const a=t.items.find(e=>e.type===game.hm3.ItemType.SKILL&&e.name.includes("Riding"));if(e.system.masteryLevel>=a.system.masteryLevel)return await game.hm3.GmSays({text:`<h4>${this.name}: ${e.name}</h4>`+game.i18n.localize("hm3.SDR.SteedSkills")+`<p style="font-size: smaller; font-variant: small-caps;">(${e.name} ML${e.system.masteryLevel} &ge; Riding ML${a.system.masteryLevel})</p>`,source:"Combat 20"}),await e.update({"system.improveFlag":0}),!1}}const a=await _.sdrRoll(e,t);return a?.sdrIncr?e.type===d.SKILL&&2===a.sdrIncr&&e.system.masteryLevel<40?(await game.hm3.GmSays({text:`<h4>${this.name}: ${e.name}</h4>`+game.i18n.localize("hm3.SDR.SkillSpecialty"),source:"SKILLS 2"}),!1):(await e.update({"system.improveFlag":0,"system.masteryLevel":+e.system.masteryLevel+(2===a.sdrIncr?2:1)}),!0):(await e.update({"system.improveFlag":0}),!1)}static chatListeners(e){e.on("click",".card-buttons button",this._onChatCardAction.bind(this))}static async _onChatCardAction(e){e.preventDefault();const t=e.currentTarget;t.disabled=!0;const a=t.dataset.action,i=t.dataset.injuryLevel;let s=null;if(t.dataset.actorId&&(s=game.actors.get(t.dataset.actorId),!s))return console.warn(`HM3 | Action=${a}; Cannot find actor ${t.dataset.actorId}`),t.disabled=!1,null;let n=null;if(t.dataset.tokenId&&(n=canvas.tokens.get(t.dataset.tokenId),!n))return console.warn(`HM3 | Action=${a}; Cannot find token ${t.dataset.tokenId}`),t.disabled=!1,null;!s&&n&&(s=n.actor);let o=null;if(t.dataset.atkTokenId&&(o=canvas.tokens.get(t.dataset.atkTokenId),!o))return console.warn(`HM3 | Action=${a}; Cannot find attack token ${t.dataset.atkTokenId}`),t.disabled=!1,null;let r=null;if(t.dataset.defTokenId&&(r=canvas.tokens.get(t.dataset.defTokenId),!r))return console.warn(`HM3 | Action=${a}; Cannot find defense token ${t.dataset.defTokenId}`),t.disabled=!1,null;let l=null;if(t.dataset.opponentTokenId&&(l=canvas.tokens.get(t.dataset.opponentTokenId),!l))return console.warn(`HM3 | Action=${a}; Cannot find opponent token ${t.dataset.opponentTokenId}`),t.disabled=!1,null;switch(a){case"injury":_e(n.actor,{actor:n.actor,aim:t.dataset.aim,aspect:t.dataset.aspect,atkToken:o,attackerId:t.dataset.atkTokenId,attackWeapon:t.dataset.attackWeapon,impact:t.dataset.impact,items:n.actor.items,token:n,tokenId:n.id});break;case"ata-attack":case"dta-attack":case"ota-attack":Qe(null,!1,o,!0);break;case"dodge":return tt(o.id,r.id,t.dataset.weaponType,t.dataset.weapon,t.dataset.effAml,t.dataset.aim,t.dataset.aspect,t.dataset.impactMod,"true"===t.dataset.grappleAtk,e.shiftKey||e.ctrlKey||e.altKey);case"ignore":st(o.id,r.id,t.dataset.weaponType,t.dataset.weapon,t.dataset.effAml,t.dataset.aim,t.dataset.aspect,t.dataset.impactMod,"true"===t.dataset.grappleAtk,e.shiftKey||e.ctrlKey||e.altKey);break;case"block":at(o.id,r.id,t.dataset.weaponType,t.dataset.weapon,t.dataset.effAml,t.dataset.aim,t.dataset.aspect,t.dataset.impactMod,"true"===t.dataset.grappleAtk,e.shiftKey||e.ctrlKey||e.altKey);break;case"counterstrike":et(o.id,r.id,t.dataset.weapon,t.dataset.effAml,t.dataset.aim,t.dataset.aspect,t.dataset.impactMod,"true"===t.dataset.grappleAtk,e.shiftKey||e.ctrlKey||e.altKey);break;case"esoteric":it(o.id,r.id,t.dataset.weapon,t.dataset.effAml,e.shiftKey||e.ctrlKey||e.altKey);break;case"shock":Pe(!1,s,n);break;case"willshock":$e({atkToken:o,attackerId:t.dataset.atkTokenId,attackWeapon:t.dataset.attackWeapon,impact:t.dataset.impact,items:n.actor.items,myActor:n.actor,noDialog:e.shiftKey||e.ctrlKey||e.altKey,token:n,tokenId:n.id});break;case"kill":He({myActor:s,token:n,injuryLevel:i});break;case"stumble":Ge(!1,s,l,n);break;case"fumble":je(!1,s,l,n);break;case"throwdown":Be(o.id,r.id,Number(t.dataset.atkDice),Number(t.dataset.defDice));break;case"falling":We(!1,s,n);break;default:console.warn(`HM3 | Action=${a}; No handler for this action`)}t.disabled=!1}applyActiveEffects(){const e={};this.statuses.clear();const t=[];for(const e of this.allApplicableEffects(!0))if(e.active){t.push(...e.changes.map(t=>{const a=foundry.utils.deepClone(t);return a.effect=e,a.priority=a.priority??10*a.mode,a}));for(const t of e.statuses)this.statuses.add(t)}t.sort((e,t)=>e.priority-t.priority);for(let a of t){if(!a.key)continue;const t=a.effect.apply(this,a);Object.assign(e,t)}this.overrides=foundry.utils.expandObject(e)}_applySkillActiveEffects(){const e=this.items,t=this.allApplicableEffects(!0).reduce((t,a)=>{if(!a.active)return t;const i=a.changes.filter(t=>{if("system.eph.itemEMLMod"===t.key){const a=T(t.value);if(2!=a.length)return!1;const i=Number.parseFloat(a[1]);if(isNaN(i))return!1;const s=a[0];return Array.from(e).some(e=>e.name===s&&(e.type===d.SKILL||e.type===d.PSIONIC))}return!1});return t.concat(i.map(e=>{const t=T((e=foundry.utils.duplicate(e)).value),i=t[0];return e.value=I(Number.parseFloat(t[1])),e.key="system.effectiveMasteryLevel",e.item=this.itemTypes.skill.find(e=>e.name===i),e.item||(e.item=this.itemTypes.psionic.find(e=>e.name===i)),e.effect=a,e.priority=e.priority??10*e.mode,e}))},[]);t.sort((e,t)=>e.priority-t.priority);for(let e of t)e.item&&(e.effect.apply(e.item,e),this.roundChange(e.item,e))}_applyWeaponActiveEffects(){const e=this.allApplicableEffects(!0).reduce((e,t)=>{if(!t.active)return e;const a=t.changes.filter(e=>{if("system.eph.itemAMLMod"===e.key){const t=T(e.value);if(2!=t.length)return!1;const a=Number.parseInt(t[1],10);if(isNaN(a))return!1;const i=t[0];for(let e of this.items.contents)if(e.name===i&&(e.type===d.WEAPONGEAR||e.type===d.MISSILEGEAR))return!0}return!1}),i=t.changes.filter(e=>{if("system.eph.itemDMLMod"===e.key){const t=T(e.value);if(2!=t.length)return!1;const a=Number.parseInt(t[1],10);if(isNaN(a))return!1;const i=t[0];for(let e of this.items.contents)if(e.name===i&&e.type===d.WEAPONGEAR)return!0}return!1}),s=a.concat(i);return e.concat(s.map(e=>{const a=T((e=foundry.utils.duplicate(e)).value),i=a[0];switch(e.value=Number.parseInt(a[1],10),e.key){case"system.eph.itemAMLMod":e.key="system.attackMasteryLevel",e.item=this.itemTypes.weapongear.find(e=>e.name===i),e.item||(e.item=this.itemTypes.missilegear.find(e=>e.name===i));break;case"system.eph.itemDMLMod":e.key="system.defenseMasteryLevel",e.item=this.itemTypes.weapongear.find(e=>e.name===i)}return e.effect=t,e.priority=e.priority??10*e.mode,e}))},[]);e.sort((e,t)=>e.priority-t.priority);for(let t of e)t.item&&(t.effect.apply(t.item,t),this.roundChange(t.item,t))}roundChange(e,t){const a=foundry.utils.getProperty(e,t.key)??null;if("number"!==foundry.utils.getType(a)||Number.isInteger(a))return a;{const i=Math.round(a+Number.EPSILON);return foundry.utils.setProperty(e,t.key,i),i}}applySpecificActiveEffect(e){const t={},a=this.allApplicableEffects(!0).reduce((t,a)=>{if(!a.active)return t;const i=a.changes.filter(t=>t.key===e);return t.concat(i.map(e=>((e=foundry.utils.duplicate(e)).effect=a,e.priority=e.priority??10*e.mode,e)))},[]);a.sort((e,t)=>e.priority-t.priority);for(let e of a){e.effect.apply(this,e);const a=this.roundChange(this,e);null!==a&&(t[e.key]=a)}foundry.utils.mergeObject(this.overrides,foundry.utils.expandObject(t))}applySkillTypeActiveEffect(e){const t=e.system,a=this.allApplicableEffects(!0).reduce((a,i)=>{if(!i.active)return a;if(![d.SKILL,d.PSIONIC].includes(e.type))return a;const s=i.changes.filter(a=>"system.eph.commSkillsMod"===a.key&&t.type===p.COMMUNICATION||"system.eph.physicalSkillsMod"===a.key&&t.type===p.PHYSICAL||"system.eph.combatSkillsMod"===a.key&&t.type===p.COMBAT||"system.eph.craftSkillsMod"===a.key&&t.type===p.CRAFT||"system.eph.ritualSkillsMod"===a.key&&t.type===p.RITUAL||"system.eph.magicSkillsMod"===a.key&&t.type===p.MAGIC||"system.eph.psionicTalentsMod"===a.key&&e.type===d.PSIONIC);return a.concat(s.map(e=>((e=foundry.utils.duplicate(e)).key="system.effectiveMasteryLevel",e.effect=i,e.priority=e.priority??10*e.mode,e)))},[]);a.sort((e,t)=>e.priority-t.priority);for(let t of a)t.effect.apply(e,t),this.roundChange(e,t)}async runCustomMacro(e){if(!e)return null;const t=this.system,a={type:e.type,title:e.title,origTarget:e.origTarget,modifier:("-"===e.plusMinus?-1:1)*e.modifier,modifiedTarget:e.modifiedTarget,rollValue:e.rollValue,isSuccess:e.isSuccess,isCritical:e.isCritical,result:e.isSuccess?e.isCritical?"CS":"MS":e.isCritical?"CF":"MF",description:e.description,notes:e.notes};if(!t.macros.command)return null;const i=await Macro.create({name:`${this.name} ${this.type} macro`,type:t.macros.type,scope:"global",command:t.macros.command},{temporary:!0});return i?M(i,{actor:this,token:this.isToken?this.token:null,rollResult:a}):(console.error(`HM3 | Failure initializing macro '${this.name} ${this.type} macro', type=${t.system.macros.type}, command='${t.system.macros.command}'`),null)}static _normalcdf(e){var t=1/(1+.2316419*Math.abs(e)),a=.3989423*Math.exp(-e*e/2)*t*(.3193815+t*(t*(1.781478+t*(1.330274*t-1.821256))-.3565638));return e>0&&(a=1-a),a}static normProb(e,t,a){let i;return i=0==a?e<t?0:100:Math.round(100*Ht._normalcdf((e-t)/a)),i}static calcUniversalPenalty(e){const t=e.system;return t.universalPenalty=t.eph.totalInjuryLevels+(t.eph.fatigue||0),t.universalPenalty}static calcPhysicalPenalty(e){const t=e.system;return t.physicalPenalty=t.universalPenalty+t.encumbrance,t.physicalPenalty}static calcShockIndex(e){const t=e.system,a=t.shockIndex.value;e.hasCondition(l.INANIMATE)?t.shockIndex.value=Math.max(100-Math.round(t.totalInjuryLevels/t.endurance*100),0):t.shockIndex.value=Ht.normProb(t.endurance,3.5*t.universalPenalty,t.universalPenalty),e.testUserPermission(game.user,"OWNER")&&(t.shockIndex.value!==a?e.update({"system.shockIndex":t.shockIndex}).then(()=>{Hooks.call("hm3.onCalcShockIndex",e,a,t.shockIndex.value),Hooks.call("hm3.onShockIndexChanged",e,a,t.shockIndex.value),t.shockIndex.value<a?Hooks.call("hm3.onShockIndexReduced",e,a,t.shockIndex.value):t.shockIndex.value>a&&Hooks.call("hm3.onShockIndexIncreased",e,a,t.shockIndex.value)}):Hooks.call("hm3.onCalcShockIndex",e,a,t.shockIndex.value))}}async function Pt(e,t){e.preventDefault();const a=e.currentTarget,i=a.closest("li"),s=a.dataset.action;let n;switch(t instanceof Actor&&(n=i.dataset.effectId?t.allApplicableEffects().find(e=>e.id===i.dataset.effectId):null),t instanceof Item&&(n=i.dataset.effectId?t.effects.get(i.dataset.effectId):null),s){case"create":const e="systems/hm3/templates/dialog/active-effect-start.hbs",a={gameTime:game.time.worldTime};game.combat&&(a.combatId=game.combat.id,a.combatRound=game.combat.round,a.combatTurn=game.combat.turn);const i=await renderTemplate(e,a);return Dialog.prompt({title:"Select Start Time",content:i,label:"OK",callback:async e=>{const i=e.querySelector("#active-effect-start"),s=new FormDataExtended(i).object.startType,n={label:"New Effect",icon:"icons/svg/aura.svg",origin:t.uuid};return"nowGameTime"===s?(n["duration.startTime"]=a.gameTime,n["duration.seconds"]=1):"nowCombat"===s&&(n["duration.combat"]=a.combatId,n["duration.startRound"]=a.combatRound,n["duration.startTurn"]=a.combatTurn,n["duration.rounds"]=1,n["duration.turns"]=0),ActiveEffect.create(n,{parent:t})},options:{jQuery:!1}});case"edit":return n.sheet.render(!0);case"delete":return n.parent instanceof Item&&n.parent?.parent instanceof Actor?ui.notifications.info(`This effect (${n.name}) originates from an item (${n.parent.name}) and cannot be deleted.`):new Dialog({title:"Delete Active Effect",content:"<p>Are you sure?</p><p>This active effect will be permanently deleted and cannot be recovered.</p>",buttons:{yes:{icon:'<i class="fas fa-check"></i>',label:"Yes",callback:async e=>{await n.delete()}},no:{icon:'<i class="fas fa-times"></i>',label:"No",callback:async e=>{}}},default:"yes"}).render(!0);case"toggle":const s={};return n.disabled?(s.disabled=!1,s["duration.startTime"]=game.time.worldTime,game.combat&&(s["duration.startRound"]=game.combat.round,s["duration.startTurn"]=game.combat.turn)):s.disabled=!0,n.update(s)}}async function $t(){const e=O();for(let t of e)if(t.allApplicableEffects(!0)?.length){const e=await Gt(t);t.sheet.conditionalRender({aeStarted:e})}}async function Gt(e){let t=!1;for(const a of e.allApplicableEffects(!0))void 0===a.system.status?a.started?(await a.update({"system.status":"Running"}),t=!0):await a.update({"system.status":"Pending"}):"Pending"===a.system.status?a.started&&(await a.update({"system.status":"Running"}),t=!0):"Started"===a.system.status&&await a.update({"system.status":"Running"});return t}async function jt(){const e=O();for(let t of e)if(t.allApplicableEffects(!0)?.length){const e=await Bt(t);t.sheet.conditionalRender({aeDisabled:e})}}async function Bt(e){let t=!1;for(let a of e.allApplicableEffects(!0))if(!a.disabled){const e=a.duration;"none"!==e.type&&e.remaining<=0&&(await a.update({disabled:!0,"system.status":"Ended"}),t=!0)}return t}const Wt=Object.values(c),Ut=["applyTokenStatusEffect","combatRound","combatStart","combatTurn","combatTurnChange","createCombatant","createToken","deleteCombatant","deleteToken","pauseGame","preUpdateCombat","preUpdateCombatant","preUpdateToken","targetToken","updateCombat","updateCombatant","updateToken","updateWorldTime"];async function Kt(e,t){e.preventDefault();const a=e.currentTarget,i=a.closest("li"),s=i.firstElementChild?.className?.includes("macro-name")&&"create"!==a.dataset.action&&"delete"!==a.dataset.action?"edit":a.dataset.action;let n=i.dataset.macroId?game.macros.get(i.dataset.macroId):null;switch(s){case"create":return n=await Macro.create({name:"New macro",type:"script",scope:"global",folder:t.macrofolder}),await n.setFlag("hm3","trigger","manual"),await n.setFlag("hm3","ownerId",t.id),n.sheet.render(!0);case"edit":return n.sheet.render(!0);case"delete":return new Dialog({title:"Delete Macro",content:"<p>Are you sure?</p><p>This macro will be permanently deleted and cannot be recovered.</p>",buttons:{yes:{icon:'<i class="fas fa-check"></i>',label:"Yes",callback:async e=>{await n.delete(),E(n)?.sheet.render()}},no:{icon:'<i class="fas fa-times"></i>',label:"No",callback:async e=>{}}},default:"yes"}).render(!0)}}class qt extends ActorSheet{async _prepareContext(e){return{...await super._prepareContext(e),document:this.document,editable:this.isEditable,options:this.options}}async getData(e={}){this.actor.system.eph.stumbleTarget||this.actor.prepareDerivedData();let t=foundry.utils.mergeObject(super.getData(e),{actor:null,items:null});return t=foundry.utils.mergeObject(t,{aproxy:this.actor.proxy,config:CONFIG.HM3,customSunSign:game.settings.get("hm3","customSunSign"),dtypes:["String","Number","Boolean"],editable:this.isEditable&&this._mode===this.constructor.MODES.EDIT,effects:this.actor.allApplicableEffects().map(e=>({changes:w(e),disabled:e.disabled,duration:v(e),id:e.id,img:e.img,name:e.name,source:e,sourceName:e.sourceName})),filters:this._filters,hasRwPermission:game.user.isGM||!game.settings.get("hm3","strictGmMode"),hasSteed:this.actor.hasLinkedSteed(),isCharacter:this.document.type===s.CHARACTER,isCharacterMancer:this.actor.getFlag("hm3","CharacterMancer")||!1,isContainer:this.document.type===s.CONTAINER,isCreature:this.document.type===s.CREATURE,isGM:game.user.isGM,isSkillImprovement:this.actor.skillImprovement,items:this.actor.proxies.filter(e=>e.visible).sort((e,t)=>e.sort-t.sort),labels:this.actor.labels||{},macroTypes:[{key:"chat",label:"Chat"},{key:"script",label:"Script"}],strictMode:game.settings.get("hm3","strictGmMode")}),t=foundry.utils.mergeObject(t,{cssClass:t.editable?"editable":this.isEditable?"interactable":"locked",...this._itemLists(t.items)}),t.descriptionHTML=await TextEditor.enrichHTML(this.object.system.description,{secrets:game.user.isGM,relativeTo:this.object.system}),t}_itemLists(e){return{get physicalSkills(){return e.filter(e=>e.type===d.SKILL&&e.subtype===p.PHYSICAL)},get communicationSkills(){return e.filter(e=>e.type===d.SKILL&&e.subtype===p.COMMUNICATION)},get combatSkills(){return e.filter(e=>e.type===d.SKILL&&e.subtype===p.COMBAT)},get craftSkills(){return e.filter(e=>e.type===d.SKILL&&e.subtype===p.CRAFT)},get magicSkills(){return e.filter(e=>e.type===d.SKILL&&e.subtype===p.MAGIC)},get ritualSkills(){return e.filter(e=>e.type===d.SKILL&&e.subtype===p.RITUAL)},get companions(){return e.filter(e=>e.type===d.COMPANION)},get injuries(){return e.filter(e=>e.type===d.INJURY)},get invocations(){return e.filter(e=>e.type===d.INVOCATION)},get missiles(){return e.filter(e=>e.type===d.MISSILEGEAR)},get psionics(){return e.filter(e=>e.type===d.PSIONIC)},get spells(){return e.filter(e=>e.type===d.SPELL)},get esoterics(){return e.filter(e=>[d.INVOCATION,d.PSIONIC,d.SPELL].includes(e.type))},get companionParty(){return e.filter(e=>e.type===d.COMPANION&&e.subtype===r.PARTY)},get companionAnimal(){return e.filter(e=>e.type===d.COMPANION&&e.subtype===r.ANIMAL)},get companionSteed(){return e.filter(e=>e.type===d.COMPANION&&e.subtype===r.STEED)},get companionFollower(){return e.filter(e=>e.type===d.COMPANION&&e.subtype===r.FOLLOWER)},get companionConnection(){return e.filter(e=>e.type===d.COMPANION&&e.subtype===r.CONNECTION)},get companionFriend(){return e.filter(e=>e.type===d.COMPANION&&e.subtype===r.FRIEND)},get companionFoe(){return e.filter(e=>e.type===d.COMPANION&&e.subtype===r.FOE)},get esotericAtkOptions(){e.filter(e=>game.hm3.config.esotericCombatItems.attack.includes(e.name)&&e.isEquipped)},get esotericDefOptions(){e.filter(e=>game.hm3.config.esotericCombatItems.defense.includes(e.name))}}}_onSortItem(e,t){if(this.actor.isToken)return;if(!t.type.endsWith("gear"))return super._onSortItem(e,t);const a=this.actor.items.get(t._id),i=this.actor.items.filter(e=>e.type.endsWith("gear")&&e.id!==a.id),s=e.target.closest(".item"),n=s?s.dataset.itemId:null,o=i.find(e=>e.id===n);if(o&&!o.type.endsWith("gear"))return;const r=SortingHelpers.performIntegerSort(a,{target:o,siblings:i}).map(e=>{const t=e.update;return t._id=e.target._id,t});return this.actor.updateEmbeddedDocuments("Item",r)}async _onDropActor(e,t){if(!this.actor.isOwner)return!1;const a=await Actor.fromDropData(t);return!(!a||"container"===a?.type||(this.actor.id===a.id?(ui.notifications.warn("You cannot add yourself."),1):(await this.actor.createEmbeddedDocuments("Item",[{name:a.name,type:"companion",system:{actorUuid:a.uuid}}]),0)))}async _onDropItem(e,t){if(!this.actor.isOwner)return!1;const a=await Item.fromDropData(t);if(!a.pack&&a.type?.endsWith("gear")&&a.parent){const i=e.target.closest("[data-container-id]"),s=i?.dataset.containerId?i.dataset.containerId:"on-person";if(a.parent.isToken&&this.actor.token?.id===a.parent.token.id||!a.parent.isToken&&!this.actor.isToken&&a.parent.id===this.actor.id)return a.type.endsWith("gear")&&"containergear"!==a.type&&a.system.container!==s&&await a.update({"system.container":s}),super._onDropItem(e,t);if(a.type===d.CONTAINERGEAR)return this._moveContainer(e,a);a.system.container=s;const n=a.system.quantity;return!(n<=0)&&(n>1?this._moveQtyDialog(e,a):this._moveItems(a,1))}{const a=e.target.closest("[data-container-id]"),i=a?.dataset.containerId?a.dataset.containerId:"on-person";let s=await super._onDropItem(e,t);if(!s)return;s=s[0],s?.type?.endsWith("gear")&&"containergear"!==s?.type&&s.system.container!==i&&await s.update({"system.container":i})}}async _moveContainer(e,t){if(!t.parent)throw ui.notifications.warn("Error accessing actor where container is coming from, move aborted"),Error("Error accessing actor where container is coming from, move aborted");let a=t.toObject;delete a._id;const i=await Item.create(a,{parent:this.actor});if(!i)return ui.notifications.warn("Error while moving container, move aborted"),null;let s=!1;for(let e of t.parent.items.values())s||e.system.container!==data.id||(a=e.toObject(),delete a._id,a.system.container=i.id,await Item.create(a,{parent:this.actor})?await Item.deleteDocuments([e.id],{parent:t.parent}):s=!0);return s?(ui.notifications.error("Error duing move of items from source to destination, container has been only partially moved!"),null):(await Item.deleteDocuments([data._id],{parent:t.parent}),i)}async _moveQtyDialog(e,t){if(!t.parent)throw ui.notifications.warn("Error accessing actor where container is coming from, move aborted"),Error("Error accessing actor where container is coming from, move aborted");let a={itemName:t.name,sourceName:t.parent.name,targetName:this.actor.name,maxItems:t.system.quantity};const i=await renderTemplate("systems/hm3/templates/dialog/item-qty.hbs",a);return Dialog.prompt({title:"Move Items",content:i,label:"OK",callback:async e=>{const a=e.querySelector("#items-to-move"),i=new FormDataExtended(a).object;let s=parseInt(i.itemstomove);return!(s<=0)&&this._moveItems(t,s)},options:{jQuery:!1}})}async _moveItems(e,t){const a=e.name,i=e.type,s=e.system.quantity;if(!e.parent)return ui.notifications.warn("Error accessing actor where container is coming from, move aborted"),null;let n=this.actor.items.find(e=>e.type===i&&e.name===a);if(n){const e=n.system.quantity+t;await n.update({"system.quantity":e})}else{const a=e.toObject();delete a._id,a.system.quantity=t,a.system.container="on-person",n=await Item.create(a,{parent:this.actor})}if(n)if(t>=s)await Item.deleteDocuments([e.id],{parent:e.parent});else{const a=s-t;await e.update({"system.quantity":a})}return n}async _onDropItemCreate(e){const t=this.actor;return!!t.isOwner&&(e.type.endsWith("gear")?super._onDropItemCreate(e):t.type===s.CONTAINER?(ui.notifications.warn(`You may only place physical objects in a container; drop of ${e.name} refused.`),!1):(t.items.forEach(t=>{if(t.type===e.type&&t.name===e.name)return this.mergeItem(t,e),!1}),Item.create(e,{parent:this.actor})))}activateListeners(e){super.activateListeners(e),game.user.isGM||(e.find(".facade-image").click(async e=>{new ImagePopout(this.actor.system.bioImage,{title:this.actor.name,uuid:this.actor.uuid}).render(!0)}),e.find(".profile-img").click(async e=>{new ImagePopout(this.actor.img,{title:this.actor.name,uuid:this.actor.uuid}).render(!0)})),this.options.editable&&(e.find(".character-mancer").click(async e=>{await this.actor.unsetFlag("hm3","CharacterMancer"),this.actor.sheet.render()}),e.find(".item-create").click(this._onItemCreate.bind(this)),e.find(".item-edit, .gear-name").click(e=>{const t=$(e.currentTarget).parents(".item");this.actor.items.get(t.data("itemId")).sheet.render(!0)}),e.find(".item-delete").click(this._onItemDelete.bind(this)),e.find(".item-dumpdesc").click(this._onDumpEsotericDescription.bind(this)),e.find(".item-minimize, .item-maximize").click(this._onContainerCollapse.bind(this)),e.on("click",".fff-name",e=>{const t=e.currentTarget.querySelector("#companion");if(!t)return;const a=t.dataset.itemActorUuid;fromUuidSync(a).sheet.render(!0)}),e.on("click",".item-name, .spell-name",e=>{switch(e.currentTarget.innerText){case"Magic Spells":ui.notifications.info("Magic Spells sorted!");const e=new Map([["Fyvria",1],["Jmorvi",2],["Lyahvi",3],["Odivshe",4],["Peleahn",5],["Savorya",6],["Neutral",7]]);this.object.items.forEach(async t=>{t.type===d.SPELL&&await t.update({sort:Number(e.get(t.system.convocation).toString()+t.system.level.toString()+(t.name.toLowerCase().charCodeAt(0)-87).toString()+(t.name.toLowerCase().charCodeAt(1)-87).toString()+(t.name.toLowerCase().charCodeAt(2)-87).toString()+((97|t.name.toLowerCase().charCodeAt(3))-87).toString()+((97|t.name.toLowerCase().charCodeAt(4))-87).toString())})});break;case"Ritual Invocations":ui.notifications.info("Ritual Invocations sorted!"),this.object.items.forEach(async e=>{e.type===d.INVOCATION&&await e.update({sort:Number(e.system.circle.toString()+(e.name.toLowerCase().charCodeAt(0)-87).toString()+(e.name.toLowerCase().charCodeAt(1)-87).toString()+(e.name.toLowerCase().charCodeAt(2)-87).toString()+((97|e.name.toLowerCase().charCodeAt(3))-87).toString()+((97|e.name.toLowerCase().charCodeAt(4))-87).toString())})});break;case"Psionic Talents":ui.notifications.info("Psionic Talents sorted!"),this.object.items.forEach(async e=>{e.type===d.PSIONIC&&await e.update({sort:Number((e.name.toLowerCase().charCodeAt(0)-87).toString()+(e.name.toLowerCase().charCodeAt(1)-87).toString()+(e.name.toLowerCase().charCodeAt(2)-87).toString()+((97|e.name.toLowerCase().charCodeAt(3))-87).toString()+((97|e.name.toLowerCase().charCodeAt(4))-87).toString())})})}}),e.find(".effect-control, .effect-name").click(e=>Pt(e,this.document)),e.find(".macro-control, .macro-name").click(e=>Kt(e,this.document)),e.on("click","input[type='number']",e=>{e.currentTarget.select()}),e.on("click","input[type='text']",e=>{e.currentTarget.select()}),e.on("change","input[type='text']",e=>{"item-quantity-special"===e.target.name?this._handleQtyInput(e.target.id.slice(0,16),e.target.value):"item-sbx-special"===e.target.name?this._handleSbxInput(e.target.id.slice(0,16),e.target.value):"item-op-special"===e.target.name&&this._handleOpInput(e.target.id.slice(0,16),e.target.value)}),e.on("keyup",".skill-name-filter",t=>{this.skillNameFilter=$(t.currentTarget).val();const a=this.skillNameFilter.toLowerCase();let i=e.find(".skill-item");for(let e of i){const t=e.getAttribute("data-item-name");a?t.toLowerCase().includes(a)?$(e).show():$(e).hide():$(e).show()}}),e.on("keyup",".gear-name-filter",t=>{this.gearNameFilter=$(t.currentTarget).val();const a=this.gearNameFilter.toLowerCase();let i=e.find(".gear-item");for(let e of i){const t=e.getAttribute("data-item-name");a?t.toLowerCase().includes(a)?$(e).show():$(e).hide():$(e).show()}}),e.on("keyup",".macros-name-filter",t=>{this.macrosNameFilter=$(t.currentTarget).val();const a=this.macrosNameFilter.toLowerCase();let i=e.find(".macro");for(let e of i){const t=e.getAttribute("data-macro-name");a?t.toLowerCase().includes(a)?$(e).show():$(e).hide():$(e).show()}}),e.on("keyup",".effects-name-filter",t=>{this.effectsNameFilter=$(t.currentTarget).val();const a=this.effectsNameFilter.toLowerCase();let i=e.find(".effect");for(let e of i){const t=e.getAttribute("data-effect-name");a?t.toLowerCase().includes(a)?$(e).show():$(e).hide():$(e).show()}}),e.find(".skill-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.shiftKey||e.altKey||e.ctrlKey,i=this.actor.items.get(t.data("itemId"));ve(i?.uuid,a,this.actor)}),e.find(".spell-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.shiftKey||e.altKey||e.ctrlKey,i=this.actor.items.get(t.data("itemId"));we(i?.uuid,a,this.actor)}),e.find(".invocation-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.shiftKey||e.altKey||e.ctrlKey,i=this.actor.items.get(t.data("itemId"));Ce(i?.uuid,a,this.actor)}),e.find(".psionic-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.shiftKey||e.altKey||e.ctrlKey,i=this.actor.items.get(t.data("itemId"));Me(i?.uuid,a,this.actor)}),e.find(".ability-d6-roll").click(e=>{Te(e.currentTarget.dataset.ability,e.shiftKey||e.altKey||e.ctrlKey,this.actor)}),e.find(".ability-d100-roll").click(e=>{Ee(e.currentTarget.dataset.ability,e.shiftKey||e.altKey||e.ctrlKey,this.actor)}),e.find(".weapon-damage-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.currentTarget.dataset.aspect,i=this.actor.items.get(t.data("itemId"));Ne(i?.uuid,a,this.actor)}),e.find(".missile-damage-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.currentTarget.dataset.range,i=this.actor.items.get(t.data("itemId"));De(i?.uuid,a,this.actor)}),e.find(".melee-weapon-attack").click(e=>{let t=this.actor.token;if(!t){const e=this.actor.getActiveTokens(!0);if(0==e.length)return ui.notifications.warn("There are no tokens linked to this actor on the canvas, double-click on a specific token on the canvas."),null;if(e.length>1)return ui.notifications.warn(`There are ${e.length} tokens linked to this actor on the canvas, so the attacking token can't be identified.`),null;t=e[0]}const a=$(e.currentTarget).parents(".item"),i=this.actor.items.get(a.data("itemId"));Qe(i?.uuid,!1,t)}),e.find(".missile-weapon-attack").click(e=>{let t=this.actor.token;if(!t){const e=this.actor.getActiveTokens(!0);if(0==e.length)return ui.notifications.warn("There are no tokens linked to this actor on the canvas, double-click on a specific token on the canvas."),null;if(e.length>1)return ui.notifications.warn(`There are ${e.length} tokens linked to this actor on the canvas, so the attacking token can't be identified.`),null;t=e[0]}const a=$(e.currentTarget).parents(".item"),i=this.actor.items.get(a.data("itemId"));Xe(i?.uuid,!1,t)}),e.find(".esoteric-attack").click(e=>{let t=this.actor.token;if(!t){const e=this.actor.getActiveTokens(!0);if(0==e.length)return ui.notifications.warn("There are no tokens linked to this actor on the canvas, double-click on a specific token on the canvas."),null;if(e.length>1)return ui.notifications.warn(`There are ${e.length} tokens linked to this actor on the canvas, so the attacking token can't be identified.`),null;t=e[0]}const a=$(e.currentTarget).parents(".item"),i=this.actor.items.get(a.data("itemId"));Ze(i?.uuid,!1,t)}),e.find(".weapon-attack-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.shiftKey||e.altKey||e.ctrlKey,i=this.actor.items.get(t.data("itemId"));Le(i?.uuid,a,this.actor)}),e.find(".weapon-defend-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.shiftKey||e.altKey||e.ctrlKey,i=this.actor.items.get(t.data("itemId"));Re(i?.uuid,a,this.actor)}),e.find(".missile-attack-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=this.actor.items.get(t.data("itemId"));Oe(a?.uuid,this.actor)}),e.find(".injury-roll").click(e=>_e(this.actor)),e.find(".healing-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.shiftKey||e.altKey||e.ctrlKey,i=this.actor.items.get(t.data("itemId"));xe(i?.uuid,a,this.actor)}),e.find(".dodge-roll").click(e=>Fe(e.shiftKey||e.altKey||e.ctrlKey,this.actor)),e.find(".shock-roll").click(e=>Pe(e.shiftKey||e.altKey||e.ctrlKey,this.actor)),e.find(".stumble-roll").click(e=>Ge(e.shiftKey||e.altKey||e.ctrlKey,this.actor)),e.find(".fumble-roll").click(e=>je(e.shiftKey||e.altKey||e.ctrlKey,this.actor)),e.find(".damage-roll").click(e=>Ue(this.actor)),e.find(".falling-roll").click(e=>We(!1,this.actor)),e.find(".morale-roll").click(e=>Ke(e.shiftKey||e.altKey||e.ctrlKey,this.actor)),e.find(".mount-action").click(this._onToggleMount.bind(this)),e.find(".steedcommand-roll").click(e=>qe(e.shiftKey||e.altKey||e.ctrlKey,this.actor)),e.find(".unhorsing-roll").click(e=>ze(e.shiftKey||e.altKey||e.ctrlKey,this.actor)),e.find(".item-carry").click(this._onToggleCarry.bind(this)),e.find(".item-equip").click(this._onToggleEquip.bind(this)),e.find(".item-improve").click(this._onToggleImprove.bind(this)),e.find(".more-info").click(this._onMoreInfo.bind(this)),e.find(".facade-image").on("click",this._onShowBioImage.bind(this)),e.find(".profile-img").on("click",this._onShowProfileImage.bind(this)))}async _onItemDelete(e){e.preventDefault();const t=e.currentTarget,a=foundry.utils.deepClone(t.dataset),i=$(t).parents(".item"),s=i.data("itemId");if(s){const e=this.actor.items.get(s);if(!e)return void console.error(`HM3 | Delete aborted, item ${s} in actor ${this.actor.name} was not found.`);let t,n=`Delete ${a.label}`;"containergear"===e.type?(n="Delete Container",t="<p>WARNING: All items in this container will be deleted as well!</p><p>Are you sure?</p>"):t="<p>Are you sure?</p>";let o=!1;if(await Dialog.confirm({title:n,content:t,yes:()=>o=!0}),o){const t=[];"containeritem"===e.type&&this.actor.items.forEach(a=>{e.type.endsWith("gear")&&a.systemn.container===s&&t.push(a.id)}),t.push(s);for(let e of t)await Item.deleteDocuments([e],{parent:this.actor}),i.slideUp(200,()=>this.render(!1))}}}async _onContainerCollapse(e){const t=e.currentTarget.dataset;if(!t)return;const a=fromUuidSync(t.cuuid);a?"minimize"===t.action?a.update({"system.collapsed":!0}):"maximize"===t.action&&a.update({"system.collapsed":!1}):"on-person"===t.containerId&&("minimize"===t.action?this.actor.setFlag("hm3","onPersonContainerCollapsed",!0):"maximize"===t.action&&this.actor.setFlag("hm3","onPersonContainerCollapsed",!1))}async mergeItem(e,t){if(e.type!=t.type)return;const a=e.system,i=t.system,s={};switch(a.notes||(s["system.notes"]=i.notes),a.source||(s["system.source"]=i.source),a.description||(s["system.description"]=i.description),a.macros.type&&a.macros.type===i.macros.type||(s["system.macros.type"]=i.macros.type),a.macros.command||(s["system.macros.command"]=i.macros.command),s.img=t.img,e.type){case"skill":if(a.type!=i.type)return;a.skillBase.formula||(s["system.skillBase.formula"]=i.skillBase.formula,s["system.skillBase.isFormulaValid"]=i.skillBase.isFormulaValid);break;case"spell":s["system.convocation"]=i.convocation,s["system.level"]=i.level;break;case"invocation":s["system.diety"]=i.diety,s["system.circle"]=i.circle;break;case"psionic":a.skillBase.formula||(s["system.skillBase.formula"]=i.skillBase.formula,s["system.skillBase.isFormulaValid"]=i.skillBase.isFormulaValid),s["system.fatigue"]=i.fatigue||0}await e.update(s)}async _onItemCreate(e){e.preventDefault();const t=e.currentTarget,a=foundry.utils.deepClone(t.dataset);let i,s=[],n=null;if("skill"===a.type&&a.skilltype)i=y(`New ${a.skilltype} Skill`,this.actor.itemTypes.skill);else if("trait"==a.type&&a.traittype)i=y(`New ${a.traittype} Trait`,this.actor.itemTypes.trait);else if(a.type.endsWith("gear"))i="New Gear",s=["Misc. Gear","Armor","Melee Weapon","Missile Weapon","Container"],n="Gear Type";else switch(a.type){case d.ARMORLOCATION:i=y("New Location",this.actor.itemTypes.armorlocation);break;case"injury":i=y("New Injury",this.actor.itemTypes.injury);break;case"spell":i=y("New Spell",this.actor.itemTypes.spell);break;case"invocation":i=y("New Invocation",this.actor.itemTypes.invocation);break;case"psionic":i=y("New Psionic",this.actor.itemTypes.psionic);break;default:return console.error(`HM3 | Can't create item: unknown item type '${a.type}'`),null}let o={type:a.type,title:i,placeholder:i,extraList:s,extraLabel:n};const r=await renderTemplate("systems/hm3/templates/dialog/create-item.hbs",o);return Dialog.prompt({title:o.title,content:r,label:"Create",callback:async e=>{const t=e.querySelector("#create-item"),i=new FormDataExtended(t).object;let s=i.name,n=i.extra_value;const o={name:s,type:a.type};"gear"===a.type&&(o.type="Container"===n?"containergear":"Armor"===n?"armorgear":"Melee Weapon"===n?"weapongear":"Missile Weapon"===n?"missilegear":"miscgear"),"skill"===a.type?o["system.type"]=a.skilltype:"trait"===a.type?o["system.type"]=a.traittype:a.type.endsWith("gear")?o["system.container"]=a.containerId:"spell"===a.type?o["system.convocation"]=n:"invocation"===a.type&&(o["system.diety"]=n);const r=await Item.create(o,{parent:this.actor});if(!r)throw new Error(`Error creating item '${o.name}' of type '${o.type}' on character '${this.actor.name}'`);return this.actor.items.get(r.id).sheet.render(!0),r},options:{jQuery:!1}})}async _onToggleMount(e){e.preventDefault();const t=this.actor.items.find(e=>e.type===game.hm3.ItemType.SKILL&&e.name.includes("Riding")),a=fromUuidSync(t.system.actorUuid);a&&(this.actor.system.mounted?Hooks.call("hm3.onUnmount",this.actor,a):Hooks.call("hm3.onMount",this.actor,a))}async _onToggleCarry(e){e.preventDefault();const t=e.currentTarget.closest(".item").dataset.itemId,a=this.actor.items.get(t);if(a.type.endsWith("gear")){const e="system.isCarried",t=await a.update({[e]:!foundry.utils.getProperty(a,e)});for(const e of a.effects.contents)await e.update({disabled:!a.system.isEquipped||!a.system.isCarried});return t}return null}async _onToggleEquip(e){e.preventDefault();const t=e.currentTarget.closest(".item").dataset.itemId,a=this.actor.items.get(t);if(a.type.endsWith("gear")){const e="system.isEquipped",t=await a.update({[e]:!foundry.utils.getProperty(a,e)});for(const e of a.effects.contents)await e.update({disabled:!a.system.isEquipped||!a.system.isCarried});return t}return null}async _onToggleImprove(e){e.preventDefault();const t=e.currentTarget.closest(".item").dataset.itemId,a=this.actor.items.get(t);return"skill"===a.type||"psionic"===a.type?a.system.improveFlag?this._improveToggleDialog(a):a.update({"system.improveFlag":1}):null}async _onMoreInfo(e){e.preventDefault();const t=e.currentTarget.dataset.journalEntry,a=(await game.packs.find(e=>"hm3.system-help"===e.collection).getDocuments()).find(e=>e.name===t);return a?(a.sheet.render(!0,{editable:!1}),null):(console.error(`HM3 | Can't find journal entry with name "${t}".`),null)}async _improveToggleDialog(e){if("skill"===e.type&&"Condition"===e.name&&e.system.masteryLevel>=7*e.system.skillBase.value)return void await game.hm3.GmSays({text:`<h4>${this.actor.name}: ${e.name}</h4>`+game.i18n.localize("hm3.SDR.ConditionSkillMax"),source:"SKILLS 9"});let t=game.i18n.localize("hm3.SDR.MainDlgHtml");return new Promise(a=>{new Dialog({title:game.i18n.localize("hm3.SDR.Toggle"),content:t.trim(),buttons:{performSDR:{label:game.i18n.localize("hm3.SDR.Perform"),callback:async()=>{let t=e.system.improveFlag;t=t<=2?1:t<=5?2:t<=9?3:t<=14?4:5;for(let a=0;a<t;a++)await this.actor.skillDevRoll(e);a(!0)}},performTrainingSDR:{label:game.i18n.localize("hm3.SDR.PerformTraining"),callback:async a=>{if("skill"===e.type&&"Combat"===e.system.type){if("Initiative"===e.name)return void await game.hm3.GmSays({text:`<h4>${this.actor.name}: ${e.name}</h4>`+game.i18n.localize("hm3.SDR.InitiativeExperience"),source:"SKILLS 18"});if(e.system.masteryLevel>=70)return void await game.hm3.GmSays({text:`<h4>${this.actor.name}: ${e.name}</h4>`+game.i18n.localize("hm3.SDR.CombatExperience"),source:"SKILLS 18"})}return t=game.i18n.localize("hm3.SDR.TrainingDlgHtml"),new Promise(a=>{new Dialog({title:game.i18n.localize("hm3.SDR.SDRs"),content:t.trim(),buttons:{roll:{label:game.i18n.localize("hm3.SDR.Roll"),callback:async t=>{const i=Number(t.find("#sdr")[0].value);let s=0;for(let t=0;t<i;t++){if("skill"===e.type&&"Condition"===e.name&&e.system.masteryLevel>=7*e.system.skillBase.value){await game.hm3.GmSays({text:`<h4>${this.actor.name}: ${e.name}</h4>`+game.i18n.localize("hm3.SDR.ConditionSkillMax")+`<p>(${i-t} SDRs left)</p>`,source:"SKILLS 9"});break}if("skill"===e.type&&"Combat"===e.system.type&&e.system.masteryLevel>=70){await game.hm3.GmSays({text:`<h4>${this.actor.name}: ${e.name}</h4>`+game.i18n.localize("hm3.SDR.CombatExperience")+`<p>(${i-t} SDRs left)</p>`,source:"SKILLS 18"});break}await this.actor.skillDevRoll(e,!1)&&s++}await game.hm3.GmSays({text:`<h4>${this.actor.name}: ${e.name}</h4>${s}/${i} SDRs succeeded`}),a(!0)}}},default:"roll",close:()=>a(!1)}).render(!0)})}},disableFlag:{label:game.i18n.localize("hm3.SDR.DisableFlag"),callback:async()=>e.update({"system.improveFlag":0})}},default:"performSDR",close:()=>a(!1)},{width:550}).render(!0)})}async _onDumpEsotericDescription(e){e.preventDefault();const t=e.currentTarget,a=$(t).parents(".item").data("itemId");if(a){const e=this.actor.items.get(a);if(!e)return;const t=e.system;if(["spell","invocation","psionic"].includes(e.type)){const a={name:e.name,desc:t.description,notes:t.notes||null,fatigue:"psionic"===e.type?t.fatigue:null};"spell"===e.type?(a.level=S(t.level),a.title=`${t.convocation} Spell`):"invocation"===e.type?(a.level=S(t.circle),a.title=`${t.diety} Invocation`):"psionic"===e.type&&(a.level=`F${t.fatigue}`,a.title="Psionic Talent");const i="systems/hm3/templates/chat/esoteric-desc-card.hbs",s=await renderTemplate(i,a),n={user:game.user.id,speaker:ChatMessage.getSpeaker({actor:this.object}),content:s.trim(),type:CONST.CHAT_MESSAGE_STYLES.OTHER};return ChatMessage.create(n)}}}async _handleQtyInput(e,t){const a=this.actor.items.find(t=>t.id===e);if(0===t.length)return void(document.getElementById(e).value=a.system.quantity);const i=Array.from(t)[0];let s=!1,n=!1;"+"===i&&(s=!0),"-"===i&&(n=!0),(s||n)&&(t=t.slice(1)),0===t.length||isNaN(t)?document.getElementById(e).value=a.system.quantity:(t=I(Number(t),0),a.system.quantity=s?a.system.quantity+t:n?Math.max(a.system.quantity-t):t,document.getElementById(e).value=a.system.quantity,a.update({"system.quantity":a.system.quantity}))}async _handleSbxInput(e,t){const a=this.actor.items.find(t=>t.id===e);0===t.length||isNaN(t)||Number(t)<=0||Number(t)>=8?document.getElementById(e+"-SBx").value=a.system.skillBase.SBx:(a.system.skillBase.SBx=t,document.getElementById(e+"-SBx").value=a.system.skillBase.SBx,await a.update({"system.skillBase.SBx":a.system.skillBase.SBx}),await a.update({"system.masteryLevel":0}))}async _handleOpInput(e,t){const a=this.actor.items.find(t=>t.id===e);if(0===t.length)return a.system.skillBase.OP=null,document.getElementById(e+"-OP").value=a.system.skillBase.OP,await a.update({"system.skillBase.-=OP":a.system.skillBase.OP}),void await a.update({"system.masteryLevel":0});isNaN(t)||Number(t)<=0||Number(t)>=4?document.getElementById(e+"-OP").value=a.system.skillBase.OP:(a.system.skillBase.OP=t,document.getElementById(e+"-OP").value=a.system.skillBase.OP,await a.update({"system.skillBase.OP":a.system.skillBase.OP}),await a.update({"system.masteryLevel":0}))}async conditionalRender({aeDisabled:e=!1,aeStarted:t=!1,force:a=!1}={}){if(a||"effects"===this._tabs[0].active||e||t)return super.render(a)}static MODES={PLAY:1,EDIT:2};_mode=null;async _render(e,{mode:t,...a}={}){return void 0===t&&"createItem"===a.renderContext&&(t=this.constructor.MODES.EDIT),this._mode=t??this._mode??this.constructor.MODES.PLAY,this.rendered&&(this.element[0].querySelector(".window-header .mode-slider").checked=this._mode===this.constructor.MODES.EDIT),super._render(e,a)}async _renderOuter(){const e=await super._renderOuter(),t=e[0].querySelector(".window-header");if(t.querySelectorAll(".header-button").forEach(e=>{const t=e.querySelector(":scope > i").nextSibling;e.dataset.tooltip=t.textContent,e.dataset.tooltipDirection="UP",e.setAttribute("aria-label",t.textContent),e.addEventListener("dblclick",e=>e.stopPropagation()),t.remove()}),!game.user.isGM&&this.document.limited)return e[0].classList.add("limited"),e;if(this.isEditable){const e=document.createElement("slide-toggle");e.checked=this._mode===this.constructor.MODES.EDIT,e.classList.add("mode-slider"),e.dataset.tooltip="hm3.SheetModeEdit",e.dataset.tooltipDirection="UP",e.setAttribute("aria-label",game.i18n.localize("hm3.SheetModeEdit")),e.addEventListener("change",this._onChangeSheetMode.bind(this)),e.addEventListener("dblclick",e=>e.stopPropagation()),t.insertAdjacentElement("afterbegin",e)}const a=t.querySelector(".header-button"),i=t.querySelector(".document-id-link");return i&&(a?.insertAdjacentElement("beforebegin",i),i.classList.add("pseudo-header-button"),i.dataset.tooltipDirection="UP"),e}async _onChangeSheetMode(e){const{MODES:t}=this.constructor,a=e.currentTarget,i=game.i18n.localize("hm3.SheetMode"+(a.checked?"Play":"Edit"));a.dataset.tooltip=i,a.setAttribute("aria-label",i),this._mode=a.checked?t.EDIT:t.PLAY,await this.submit(),this.render()}_onShowBioImage(){if(this._mode===this.constructor.MODES.PLAY&&game.user.isGM){const e=this.actor.system.bioImage;game.release.generation<13?new ImagePopout(e,{title:this.actor.name,uuid:this.actor.uuid}).render(!0):new foundry.applications.apps.ImagePopout({src:e,uuid:this.actor.uuid,window:{title:this.actor.name}}).render({force:!0})}}_onShowProfileImage(){if(this._mode===this.constructor.MODES.PLAY&&game.user.isGM){const e=this.actor.img;game.release.generation<13?new ImagePopout(e,{title:this.actor.name,uuid:this.actor.uuid}).render(!0):new foundry.applications.apps.ImagePopout({src:e,uuid:this.actor.uuid,window:{title:this.actor.name}}).render({force:!0})}}}class zt extends qt{static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["hm3","sheet","actor","actor-v2","character"],width:810,height:850,tabs:[{navSelector:".sheet-tabs-v2",contentSelector:".sheet-body-v2",initial:"facade"}],scrollY:[".main-content"],resizable:!1})}get template(){return!game.user.isGM&&this.actor.limited?"systems/hm3/templates/actor-v2/character-limited.hbs":"systems/hm3/templates/actor-v2/character-sheet.hbs"}}class Yt extends ActorSheet{async getData(e={}){this.actor.system.eph.stumbleTarget||this.actor.prepareDerivedData();let t=this.document.isOwner;const a={config:CONFIG.HM3,cssClass:t?"editable":"locked",editable:this.isEditable,isCharacter:"character"===this.document.type,isCharacterMancer:this.actor.getFlag("hm3","CharacterMancer")||!1,isContainer:"container"===this.document.type,isCreature:"creature"===this.document.type,isSkillImprovement:this.actor.skillImprovement,limited:this.document.limited,options:this.options,owner:t};a.hasDescription="description"in this.object.system,a.hasDescription&&(a.descriptionHTML=await TextEditor.enrichHTML(this.object.system.description,{secrets:game.user.isGM,relativeTo:this.object.system})),a.isGM=game.user.isGM,a.strictMode=game.settings.get("hm3","strictGmMode"),a.hasRwPermission=a.isGM||!a.strictMode,a.isGridDistanceUnits="grid"===game.settings.get("hm3","distanceUnits"),a.customSunSign=game.settings.get("hm3","customSunSign"),a.actor=foundry.utils.deepClone(this.actor);let i=0,n=0,o=0;this.actor.items.forEach(e=>{e.type===d.ARMORLOCATION&&(i+=e.system.probWeight.high,n+=e.system.probWeight.mid,o+=e.system.probWeight.low)}),i/=100,n/=100,o/=100,a.items=this.actor.items.map(e=>{if([d.ARMORGEAR,d.CONTAINERGEAR,d.EFFECT,d.MISCGEAR,d.MISSILEGEAR,d.WEAPONGEAR].includes(e.type)&&(e.system.weightT=I(e.system.weight,3)),e.type===d.ARMORLOCATION&&(e.probHigh=I(e.system.probWeight.high/i,1),e.probMid=I(e.system.probWeight.mid/n,1),e.probLow=I(e.system.probWeight.low/o,1)),e.type===d.PSIONIC&&(e.system.visible=String(!game.settings.get("hm3","dormantPsionicTalents")||e.system.masteryLevel>20||e.system.effectiveMasteryLevel>20||game.user.isGM)),e.type===d.TRAIT&&"Psyche"===e.system.type){const t=a.config.psycheSeverity.find(t=>t.key===e.system.severity)?.label||"Mild";e.psycheName=t+" "+e.name}if(e.type===d.COMPANION){const t=fromUuidSync(e.system.actorUuid);t&&(e.gender=t.system.gender||"Male",e.img=t.img,e.linkToActor=t.link,e.name=t.name,e.occupation=t.system.occupation||"Unknown",e.species=t.system.species||"Unknown")}return e.type===d.MISSILEGEAR&&a.isGridDistanceUnits&&(e.system.rangeGrid={short:e.system.range.short/canvas.dimensions.distance,medium:e.system.range.medium/canvas.dimensions.distance,long:e.system.range.long/canvas.dimensions.distance,extreme:e.system.range.extreme/canvas.dimensions.distance}),e.type===d.WEAPONGEAR&&(e.wq=e.system.weaponQuality+(e.system.wqModifier||0)),[d.SKILL,d.PSIONIC].includes(e.type)&&(e.isSkillImprovement=a.isSkillImprovement,this.actor.type===s.CREATURE&&this.actor.system.species.toLowerCase().includes("dog")&&"Awareness"===e.name&&(e.isSkillImprovement=!1)),e}).filter(e=>e.type!==d.EFFECT||game.user.isGM),a.items.sort((e,t)=>(e.sort||0)-(t.sort||0)),a.physicalSkills=a.items.filter(e=>e.type===d.SKILL&&e.system.type===p.PHYSICAL),a.communicationSkills=a.items.filter(e=>e.type===d.SKILL&&e.system.type===p.COMMUNICATION),a.combatSkills=a.items.filter(e=>e.type===d.SKILL&&e.system.type===p.COMBAT),a.craftSkills=a.items.filter(e=>e.type===d.SKILL&&e.system.type===p.CRAFT),a.magicSkills=a.items.filter(e=>e.type===d.SKILL&&e.system.type===p.MAGIC),a.ritualSkills=a.items.filter(e=>e.type===d.SKILL&&e.system.type===p.RITUAL),a.companions=a.items.filter(e=>e.type===d.COMPANION),a.injuries=a.items.filter(e=>e.type===d.INJURY),a.invocations=a.items.filter(e=>e.type===d.INVOCATION),a.missiles=a.items.filter(e=>e.type===d.MISSILEGEAR),a.psionics=a.items.filter(e=>e.type===d.PSIONIC),a.spells=a.items.filter(e=>e.type===d.SPELL),a.esoterics=a.items.filter(e=>[d.INVOCATION,d.PSIONIC,d.SPELL].includes(e.type)),a.companionParty=a.items.filter(e=>e.type===d.COMPANION&&e.system.type===r.PARTY),a.companionAnimal=a.items.filter(e=>e.type===d.COMPANION&&e.system.type===r.ANIMAL),a.companionSteed=a.items.filter(e=>e.type===d.COMPANION&&e.system.type===r.STEED),a.companionFollower=a.items.filter(e=>e.type===d.COMPANION&&e.system.type===r.FOLLOWER),a.companionConnection=a.items.filter(e=>e.type===d.COMPANION&&e.system.type===r.CONNECTION),a.companionFriend=a.items.filter(e=>e.type===d.COMPANION&&e.system.type===r.FRIEND),a.companionFoe=a.items.filter(e=>e.type===d.COMPANION&&e.system.type===r.FOE),a.adata=a.actor.system,a.labels=this.actor.labels||{},a.filters=this._filters,a.macroTypes=[{key:"chat",label:"Chat"},{key:"script",label:"Script"}],a.dtypes=["String","Number","Boolean"];let l=0,c=0;this.actor.type===s.CHARACTER?(l=10*a.adata.endurance,a.adata.eph&&(c=a.adata.eph.totalGearWeight)):this.actor.type===s.CREATURE?(l=a.adata.loadRating+10*a.adata.endurance,a.adata.eph&&(c=a.adata.eph.totalGearWeight)):this.actor.type===s.CONTAINER&&(l=a.adata.capacity.max,c=a.adata.capacity.value),a.containers={"on-person":{name:"On Person",type:d.CONTAINERGEAR,system:{container:"on-person",collapsed:this.actor.getFlag("hm3","onPersonContainerCollapsed")||!1,capacity:{max:l,value:c}}}},this.actor.items.forEach(e=>{e.type===d.CONTAINERGEAR&&(a.containers[e.id]=e)}),a.gearTypes={armorgear:"Armour",containergear:"Container",effectgear:"Effect",miscgear:"Misc. Gear",missilegear:"Missile Wpn",weapongear:"Melee Wpn"},a.effects={},this.actor.allApplicableEffects().forEach(e=>{a.effects[e.id]={changes:w(e),disabled:e.disabled,duration:v(e),id:e.id,img:e.img,name:e.name,source:e,sourceName:e.sourceName}});let m=this.actor.macrolist.find(e=>"legacy"===e.getFlag("hm3","trigger"));return m||(async()=>{m=await Macro.create({name:`${this.actor.name} Legacy Macro`,type:this.actor.system.macros.type,command:this.actor.system.macros.command,folder:this.actor.macrofolder}),await m.setFlag("hm3","trigger","legacy"),await m.setFlag("hm3","ownerId",this.actor.id),this.actor.sheet.render()})(),a.adata.macrolist=this.actor.macrolist,a.adata.macrolist.map(e=>{e.trigger=game.macros.get(e.id)?.getFlag("hm3","trigger"),e.ownerId=game.macros.get(e.id)?.getFlag("hm3","ownerId")}),a.adata.macrolist.sort((e,t)=>e?.name.toLowerCase()>t?.name.toLowerCase()?1:t?.name.toLowerCase()>e?.name.toLowerCase()?-1:0),this.actor.type===s.CHARACTER&&0===a.adata.species.length&&(a.adata.species="Human"),void 0===a.adata.size&&(a.adata.size="6"),a.hasSteed=this.actor.hasLinkedSteed(),a.esotericAtkOptions=this.actor.items.filter(e=>game.hm3.config.esotericCombatItems.attack.includes(e.name)&&e.system.isEquipped),a.esotericDefOptions=this.actor.items.filter(e=>game.hm3.config.esotericCombatItems.defense.includes(e.name)),a}_onSortItem(e,t){if(this.actor.isToken)return;if(!t.type.endsWith("gear"))return super._onSortItem(e,t);const a=this.actor.items.get(t._id),i=this.actor.items.filter(e=>e.type.endsWith("gear")&&e.id!==a.id),s=e.target.closest(".item"),n=s?s.dataset.itemId:null,o=i.find(e=>e.id===n);if(o&&!o.type.endsWith("gear"))return;const r=SortingHelpers.performIntegerSort(a,{target:o,siblings:i}).map(e=>{const t=e.update;return t._id=e.target._id,t});return this.actor.updateEmbeddedDocuments("Item",r)}async _onDropActor(e,t){if(!this.actor.isOwner)return!1;const a=await Actor.fromDropData(t);return!(!a||"container"===a?.type||(this.actor.id===a.id?(ui.notifications.warn("You cannot add yourself."),1):(await this.actor.createEmbeddedDocuments("Item",[{name:a.name,type:"companion",system:{actorUuid:a.uuid}}]),0)))}async _onDropItem(e,t){if(!this.actor.isOwner)return!1;const a=await Item.fromDropData(t);if(!a.pack&&a.type?.endsWith("gear")&&a.parent){const i=e.target.closest("[data-container-id]"),s=i?.dataset.containerId?i.dataset.containerId:"on-person";if(a.parent.isToken&&this.actor.token?.id===a.parent.token.id||!a.parent.isToken&&!this.actor.isToken&&a.parent.id===this.actor.id)return a.type.endsWith("gear")&&"containergear"!==a.type&&a.system.container!==s&&await a.update({"system.container":s}),super._onDropItem(e,t);if(a.type===d.CONTAINERGEAR)return this._moveContainer(e,a);a.system.container=s;const n=a.system.quantity;return!(n<=0)&&(n>1?this._moveQtyDialog(e,a):this._moveItems(a,1))}{const a=e.target.closest("[data-container-id]"),i=a?.dataset.containerId?a.dataset.containerId:"on-person";let s=await super._onDropItem(e,t);if(!s)return;s=s[0],s?.type?.endsWith("gear")&&"containergear"!==s?.type&&s.system.container!==i&&await s.update({"system.container":i})}}async _moveContainer(e,t){if(!t.parent)throw ui.notifications.warn("Error accessing actor where container is coming from, move aborted"),Error("Error accessing actor where container is coming from, move aborted");let a=t.toObject;delete a._id;const i=await Item.create(a,{parent:this.actor});if(!i)return ui.notifications.warn("Error while moving container, move aborted"),null;let s=!1;for(let e of t.parent.items.values())s||e.system.container!==data.id||(a=e.toObject(),delete a._id,a.system.container=i.id,await Item.create(a,{parent:this.actor})?await Item.deleteDocuments([e.id],{parent:t.parent}):s=!0);return s?(ui.notifications.error("Error duing move of items from source to destination, container has been only partially moved!"),null):(await Item.deleteDocuments([data._id],{parent:t.parent}),i)}async _moveQtyDialog(e,t){if(!t.parent)throw ui.notifications.warn("Error accessing actor where container is coming from, move aborted"),Error("Error accessing actor where container is coming from, move aborted");let a={itemName:t.name,sourceName:t.parent.name,targetName:this.actor.name,maxItems:t.system.quantity};const i=await renderTemplate("systems/hm3/templates/dialog/item-qty.hbs",a);return Dialog.prompt({title:"Move Items",content:i,label:"OK",callback:async e=>{const a=e.querySelector("#items-to-move"),i=new FormDataExtended(a).object;let s=parseInt(i.itemstomove);return!(s<=0)&&this._moveItems(t,s)},options:{jQuery:!1}})}async _moveItems(e,t){const a=e.name,i=e.type,s=e.system.quantity;if(!e.parent)return ui.notifications.warn("Error accessing actor where container is coming from, move aborted"),null;let n=this.actor.items.find(e=>e.type===i&&e.name===a);if(n){const e=n.system.quantity+t;await n.update({"system.quantity":e})}else{const a=e.toObject();delete a._id,a.system.quantity=t,a.system.container="on-person",n=await Item.create(a,{parent:this.actor})}if(n)if(t>=s)await Item.deleteDocuments([e.id],{parent:e.parent});else{const a=s-t;await e.update({"system.quantity":a})}return n}async _onDropItemCreate(e){const t=this.actor;return!!t.isOwner&&(e.type.endsWith("gear")?super._onDropItemCreate(e):t.type===s.CONTAINER?(ui.notifications.warn(`You may only place physical objects in a container; drop of ${e.name} refused.`),!1):(t.items.forEach(t=>{if(t.type===e.type&&t.name===e.name)return this.mergeItem(t,e),!1}),Item.create(e,{parent:this.actor})))}activateListeners(e){super.activateListeners(e),game.user.isGM||(e.find(".facade-image").click(async e=>{new ImagePopout(this.actor.system.bioImage,{title:this.actor.name,uuid:this.actor.uuid}).render(!0)}),e.find(".profile-img").click(async e=>{new ImagePopout(this.actor.img,{title:this.actor.name,uuid:this.actor.uuid}).render(!0)})),this.options.editable&&(e.find(".character-mancer").click(async e=>{await this.actor.unsetFlag("hm3","CharacterMancer"),this.actor.sheet.render()}),e.find(".item-create").click(this._onItemCreate.bind(this)),e.find(".item-edit, .gear-name").click(e=>{const t=$(e.currentTarget).parents(".item");this.actor.items.get(t.data("itemId")).sheet.render(!0)}),e.find(".item-delete").click(this._onItemDelete.bind(this)),e.find(".item-dumpdesc").click(this._onDumpEsotericDescription.bind(this)),e.find(".item-minimize, .item-maximize").click(this._onContainerCollapse.bind(this)),e.on("click",".fff-name",e=>{const t=e.currentTarget.querySelector("#companion");if(!t)return;const a=t.dataset.itemActorUuid;fromUuidSync(a).sheet.render(!0)}),e.on("click",".item-name, .spell-name",e=>{switch(e.currentTarget.innerText){case"Magic Spells":ui.notifications.info("Magic Spells sorted!");const e=new Map([["Fyvria",1],["Jmorvi",2],["Lyahvi",3],["Odivshe",4],["Peleahn",5],["Savorya",6],["Neutral",7]]);this.object.items.forEach(async t=>{t.type===d.SPELL&&await t.update({sort:Number(e.get(t.system.convocation).toString()+t.system.level.toString()+(t.name.toLowerCase().charCodeAt(0)-87).toString()+(t.name.toLowerCase().charCodeAt(1)-87).toString()+(t.name.toLowerCase().charCodeAt(2)-87).toString()+((97|t.name.toLowerCase().charCodeAt(3))-87).toString()+((97|t.name.toLowerCase().charCodeAt(4))-87).toString())})});break;case"Ritual Invocations":ui.notifications.info("Ritual Invocations sorted!"),this.object.items.forEach(async e=>{e.type===d.INVOCATION&&await e.update({sort:Number(e.system.circle.toString()+(e.name.toLowerCase().charCodeAt(0)-87).toString()+(e.name.toLowerCase().charCodeAt(1)-87).toString()+(e.name.toLowerCase().charCodeAt(2)-87).toString()+((97|e.name.toLowerCase().charCodeAt(3))-87).toString()+((97|e.name.toLowerCase().charCodeAt(4))-87).toString())})});break;case"Psionic Talents":ui.notifications.info("Psionic Talents sorted!"),this.object.items.forEach(async e=>{e.type===d.PSIONIC&&await e.update({sort:Number((e.name.toLowerCase().charCodeAt(0)-87).toString()+(e.name.toLowerCase().charCodeAt(1)-87).toString()+(e.name.toLowerCase().charCodeAt(2)-87).toString()+((97|e.name.toLowerCase().charCodeAt(3))-87).toString()+((97|e.name.toLowerCase().charCodeAt(4))-87).toString())})})}}),e.find(".effect-control, .effect-name").click(e=>Pt(e,this.document)),e.find(".macro-control, .macro-name").click(e=>Kt(e,this.document)),e.on("click","input[type='number']",e=>{e.currentTarget.select()}),e.on("click","input[type='text']",e=>{e.currentTarget.select()}),e.on("change","input[type='text']",e=>{"item-quantity-special"===e.target.name?this._handleQtyInput(e.target.id.slice(0,16),e.target.value):"item-sbx-special"===e.target.name?this._handleSbxInput(e.target.id.slice(0,16),e.target.value):"item-op-special"===e.target.name&&this._handleOpInput(e.target.id.slice(0,16),e.target.value)}),e.on("keyup",".skill-name-filter",t=>{this.skillNameFilter=$(t.currentTarget).val();const a=this.skillNameFilter.toLowerCase();let i=e.find(".skill-item");for(let e of i){const t=e.getAttribute("data-item-name");a?t.toLowerCase().includes(a)?$(e).show():$(e).hide():$(e).show()}}),e.on("keyup",".gear-name-filter",t=>{this.gearNameFilter=$(t.currentTarget).val();const a=this.gearNameFilter.toLowerCase();let i=e.find(".gear-item");for(let e of i){const t=e.getAttribute("data-item-name");a?t.toLowerCase().includes(a)?$(e).show():$(e).hide():$(e).show()}}),e.on("keyup",".macros-name-filter",t=>{this.macrosNameFilter=$(t.currentTarget).val();const a=this.macrosNameFilter.toLowerCase();let i=e.find(".macro");for(let e of i){const t=e.getAttribute("data-macro-name");a?t.toLowerCase().includes(a)?$(e).show():$(e).hide():$(e).show()}}),e.on("keyup",".effects-name-filter",t=>{this.effectsNameFilter=$(t.currentTarget).val();const a=this.effectsNameFilter.toLowerCase();let i=e.find(".effect");for(let e of i){const t=e.getAttribute("data-effect-name");a?t.toLowerCase().includes(a)?$(e).show():$(e).hide():$(e).show()}}),e.find(".skill-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.shiftKey||e.altKey||e.ctrlKey,i=this.actor.items.get(t.data("itemId"));ve(i?.uuid,a,this.actor)}),e.find(".spell-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.shiftKey||e.altKey||e.ctrlKey,i=this.actor.items.get(t.data("itemId"));we(i?.uuid,a,this.actor)}),e.find(".invocation-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.shiftKey||e.altKey||e.ctrlKey,i=this.actor.items.get(t.data("itemId"));Ce(i?.uuid,a,this.actor)}),e.find(".psionic-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.shiftKey||e.altKey||e.ctrlKey,i=this.actor.items.get(t.data("itemId"));Me(i?.uuid,a,this.actor)}),e.find(".ability-d6-roll").click(e=>{Te(e.currentTarget.dataset.ability,e.shiftKey||e.altKey||e.ctrlKey,this.actor)}),e.find(".ability-d100-roll").click(e=>{Ee(e.currentTarget.dataset.ability,e.shiftKey||e.altKey||e.ctrlKey,this.actor)}),e.find(".weapon-damage-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.currentTarget.dataset.aspect,i=this.actor.items.get(t.data("itemId"));Ne(i?.uuid,a,this.actor)}),e.find(".missile-damage-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.currentTarget.dataset.range,i=this.actor.items.get(t.data("itemId"));De(i?.uuid,a,this.actor)}),e.find(".melee-weapon-attack").click(e=>{let t=this.actor.token;if(!t){const e=this.actor.getActiveTokens(!0);if(0==e.length)return ui.notifications.warn("There are no tokens linked to this actor on the canvas, double-click on a specific token on the canvas."),null;if(e.length>1)return ui.notifications.warn(`There are ${e.length} tokens linked to this actor on the canvas, so the attacking token can't be identified.`),null;t=e[0]}const a=$(e.currentTarget).parents(".item"),i=this.actor.items.get(a.data("itemId"));Qe(i?.uuid,!1,t)}),e.find(".missile-weapon-attack").click(e=>{let t=this.actor.token;if(!t){const e=this.actor.getActiveTokens(!0);if(0==e.length)return ui.notifications.warn("There are no tokens linked to this actor on the canvas, double-click on a specific token on the canvas."),null;if(e.length>1)return ui.notifications.warn(`There are ${e.length} tokens linked to this actor on the canvas, so the attacking token can't be identified.`),null;t=e[0]}const a=$(e.currentTarget).parents(".item"),i=this.actor.items.get(a.data("itemId"));Xe(i?.uuid,!1,t)}),e.find(".esoteric-attack").click(e=>{let t=this.actor.token;if(!t){const e=this.actor.getActiveTokens(!0);if(0==e.length)return ui.notifications.warn("There are no tokens linked to this actor on the canvas, double-click on a specific token on the canvas."),null;if(e.length>1)return ui.notifications.warn(`There are ${e.length} tokens linked to this actor on the canvas, so the attacking token can't be identified.`),null;t=e[0]}const a=$(e.currentTarget).parents(".item"),i=this.actor.items.get(a.data("itemId"));Ze(i?.uuid,!1,t)}),e.find(".weapon-attack-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.shiftKey||e.altKey||e.ctrlKey,i=this.actor.items.get(t.data("itemId"));Le(i?.uuid,a,this.actor)}),e.find(".weapon-defend-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.shiftKey||e.altKey||e.ctrlKey,i=this.actor.items.get(t.data("itemId"));Re(i?.uuid,a,this.actor)}),e.find(".missile-attack-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=this.actor.items.get(t.data("itemId"));Oe(a?.uuid,this.actor)}),e.find(".injury-roll").click(e=>_e(this.actor)),e.find(".healing-roll").click(e=>{const t=$(e.currentTarget).parents(".item"),a=e.shiftKey||e.altKey||e.ctrlKey,i=this.actor.items.get(t.data("itemId"));xe(i?.uuid,a,this.actor)}),e.find(".dodge-roll").click(e=>Fe(e.shiftKey||e.altKey||e.ctrlKey,this.actor)),e.find(".shock-roll").click(e=>Pe(e.shiftKey||e.altKey||e.ctrlKey,this.actor)),e.find(".stumble-roll").click(e=>Ge(e.shiftKey||e.altKey||e.ctrlKey,this.actor)),e.find(".fumble-roll").click(e=>je(e.shiftKey||e.altKey||e.ctrlKey,this.actor)),e.find(".damage-roll").click(e=>Ue(this.actor)),e.find(".falling-roll").click(e=>We(!1,this.actor)),e.find(".morale-roll").click(e=>Ke(e.shiftKey||e.altKey||e.ctrlKey,this.actor)),e.find(".mount-action").click(this._onToggleMount.bind(this)),e.find(".steedcommand-roll").click(e=>qe(e.shiftKey||e.altKey||e.ctrlKey,this.actor)),e.find(".unhorsing-roll").click(e=>ze(e.shiftKey||e.altKey||e.ctrlKey,this.actor)),e.find(".item-carry").click(this._onToggleCarry.bind(this)),e.find(".item-equip").click(this._onToggleEquip.bind(this)),e.find(".item-improve").click(this._onToggleImprove.bind(this)),e.find(".more-info").click(this._onMoreInfo.bind(this)))}async _onItemDelete(e){e.preventDefault();const t=e.currentTarget,a=foundry.utils.deepClone(t.dataset),i=$(t).parents(".item"),s=i.data("itemId");if(s){const e=this.actor.items.get(s);if(!e)return void console.error(`HM3 | Delete aborted, item ${s} in actor ${this.actor.name} was not found.`);let t,n=`Delete ${a.label}`;"containergear"===e.type?(n="Delete Container",t="<p>WARNING: All items in this container will be deleted as well!</p><p>Are you sure?</p>"):t="<p>Are you sure?</p>";let o=!1;if(await Dialog.confirm({title:n,content:t,yes:()=>o=!0}),o){const t=[];"containeritem"===e.type&&this.actor.items.forEach(a=>{e.type.endsWith("gear")&&a.systemn.container===s&&t.push(a.id)}),t.push(s);for(let e of t)await Item.deleteDocuments([e],{parent:this.actor}),i.slideUp(200,()=>this.render(!1))}}}async _onContainerCollapse(e){const t=e.currentTarget.dataset;if(!t)return;const a=fromUuidSync(t.cuuid);a?"minimize"===t.action?a.update({"system.collapsed":!0}):"maximize"===t.action&&a.update({"system.collapsed":!1}):"on-person"===t.containerId&&("minimize"===t.action?this.actor.setFlag("hm3","onPersonContainerCollapsed",!0):"maximize"===t.action&&this.actor.setFlag("hm3","onPersonContainerCollapsed",!1))}async mergeItem(e,t){if(e.type!=t.type)return;const a=e.system,i=t.system,s={};switch(a.notes||(s["system.notes"]=i.notes),a.source||(s["system.source"]=i.source),a.description||(s["system.description"]=i.description),a.macros.type&&a.macros.type===i.macros.type||(s["system.macros.type"]=i.macros.type),a.macros.command||(s["system.macros.command"]=i.macros.command),s.img=t.img,e.type){case"skill":if(a.type!=i.type)return;a.skillBase.formula||(s["system.skillBase.formula"]=i.skillBase.formula,s["system.skillBase.isFormulaValid"]=i.skillBase.isFormulaValid);break;case"spell":s["system.convocation"]=i.convocation,s["system.level"]=i.level;break;case"invocation":s["system.diety"]=i.diety,s["system.circle"]=i.circle;break;case"psionic":a.skillBase.formula||(s["system.skillBase.formula"]=i.skillBase.formula,s["system.skillBase.isFormulaValid"]=i.skillBase.isFormulaValid),s["system.fatigue"]=i.fatigue||0}await e.update(s)}async _onItemCreate(e){e.preventDefault();const t=e.currentTarget,a=foundry.utils.deepClone(t.dataset);let i,s=[],n=null;if("skill"===a.type&&a.skilltype)i=y(`New ${a.skilltype} Skill`,this.actor.itemTypes.skill);else if("trait"==a.type&&a.traittype)i=y(`New ${a.traittype} Trait`,this.actor.itemTypes.trait);else if(a.type.endsWith("gear"))i="New Gear",s=["Misc. Gear","Armor","Melee Weapon","Missile Weapon","Container"],n="Gear Type";else switch(a.type){case d.ARMORLOCATION:i=y("New Location",this.actor.itemTypes.armorlocation);break;case"injury":i=y("New Injury",this.actor.itemTypes.injury);break;case"spell":i=y("New Spell",this.actor.itemTypes.spell);break;case"invocation":i=y("New Invocation",this.actor.itemTypes.invocation);break;case"psionic":i=y("New Psionic",this.actor.itemTypes.psionic);break;default:return console.error(`HM3 | Can't create item: unknown item type '${a.type}'`),null}let o={type:a.type,title:i,placeholder:i,extraList:s,extraLabel:n};const r=await renderTemplate("systems/hm3/templates/dialog/create-item.hbs",o);return Dialog.prompt({title:o.title,content:r,label:"Create",callback:async e=>{const t=e.querySelector("#create-item"),i=new FormDataExtended(t).object;let s=i.name,n=i.extra_value;const o={name:s,type:a.type};"gear"===a.type&&(o.type="Container"===n?"containergear":"Armor"===n?"armorgear":"Melee Weapon"===n?"weapongear":"Missile Weapon"===n?"missilegear":"miscgear"),"skill"===a.type?o["system.type"]=a.skilltype:"trait"===a.type?o["system.type"]=a.traittype:a.type.endsWith("gear")?o["system.container"]=a.containerId:"spell"===a.type?o["system.convocation"]=n:"invocation"===a.type&&(o["system.diety"]=n);const r=await Item.create(o,{parent:this.actor});if(!r)throw new Error(`Error creating item '${o.name}' of type '${o.type}' on character '${this.actor.name}'`);return this.actor.items.get(r.id).sheet.render(!0),r},options:{jQuery:!1}})}async _onToggleMount(e){e.preventDefault();const t=this.actor.items.find(e=>e.type===d.SKILL&&e.name.includes("Riding")),a=fromUuidSync(t.system.actorUuid);a&&(this.actor.system.mounted?Hooks.call("hm3.onUnmount",this.actor,a):Hooks.call("hm3.onMount",this.actor,a))}async _onToggleCarry(e){e.preventDefault();const t=e.currentTarget.closest(".item").dataset.itemId,a=this.actor.items.get(t);if(a.type.endsWith("gear")){const e="system.isCarried",t=await a.update({[e]:!foundry.utils.getProperty(a,e)});for(const e of a.effects.contents)await e.update({disabled:!a.system.isEquipped||!a.system.isCarried});return t}return null}async _onToggleEquip(e){e.preventDefault();const t=e.currentTarget.closest(".item").dataset.itemId,a=this.actor.items.get(t);if(a.type.endsWith("gear")){const e="system.isEquipped",t=await a.update({[e]:!foundry.utils.getProperty(a,e)});for(const e of a.effects.contents)await e.update({disabled:!a.system.isEquipped||!a.system.isCarried});return t}return null}async _onToggleImprove(e){e.preventDefault();const t=e.currentTarget.closest(".item").dataset.itemId,a=this.actor.items.get(t);return"skill"===a.type||"psionic"===a.type?a.system.improveFlag?this._improveToggleDialog(a):a.update({"system.improveFlag":1}):null}async _onMoreInfo(e){e.preventDefault();const t=e.currentTarget.dataset.journalEntry,a=(await game.packs.find(e=>"hm3.system-help"===e.collection).getDocuments()).find(e=>e.name===t);return a?(a.sheet.render(!0,{editable:!1}),null):(console.error(`HM3 | Can't find journal entry with name "${t}".`),null)}async _improveToggleDialog(e){if("skill"===e.type&&"Condition"===e.name&&e.system.masteryLevel>=7*e.system.skillBase.value)return void await game.hm3.GmSays({text:`<h4>${this.actor.name}: ${e.name}</h4>`+game.i18n.localize("hm3.SDR.ConditionSkillMax"),source:"SKILLS 9"});let t=game.i18n.localize("hm3.SDR.MainDlgHtml");return new Promise(a=>{new Dialog({title:game.i18n.localize("hm3.SDR.Toggle"),content:t.trim(),buttons:{performSDR:{label:game.i18n.localize("hm3.SDR.Perform"),callback:async()=>{let t=e.system.improveFlag;t=t<=2?1:t<=5?2:t<=9?3:t<=14?4:5;for(let a=0;a<t;a++)await this.actor.skillDevRoll(e);a(!0)}},performTrainingSDR:{label:game.i18n.localize("hm3.SDR.PerformTraining"),callback:async a=>{if("skill"===e.type&&"Combat"===e.system.type){if("Initiative"===e.name)return void await game.hm3.GmSays({text:`<h4>${this.actor.name}: ${e.name}</h4>`+game.i18n.localize("hm3.SDR.InitiativeExperience"),source:"SKILLS 18"});if(e.system.masteryLevel>=70)return void await game.hm3.GmSays({text:`<h4>${this.actor.name}: ${e.name}</h4>`+game.i18n.localize("hm3.SDR.CombatExperience"),source:"SKILLS 18"})}return t=game.i18n.localize("hm3.SDR.TrainingDlgHtml"),new Promise(a=>{new Dialog({title:game.i18n.localize("hm3.SDR.SDRs"),content:t.trim(),buttons:{roll:{label:game.i18n.localize("hm3.SDR.Roll"),callback:async t=>{const i=Number(t.find("#sdr")[0].value);let s=0;for(let t=0;t<i;t++){if("skill"===e.type&&"Condition"===e.name&&e.system.masteryLevel>=7*e.system.skillBase.value){await game.hm3.GmSays({text:`<h4>${this.actor.name}: ${e.name}</h4>`+game.i18n.localize("hm3.SDR.ConditionSkillMax")+`<p>(${i-t} SDRs left)</p>`,source:"SKILLS 9"});break}if("skill"===e.type&&"Combat"===e.system.type&&e.system.masteryLevel>=70){await game.hm3.GmSays({text:`<h4>${this.actor.name}: ${e.name}</h4>`+game.i18n.localize("hm3.SDR.CombatExperience")+`<p>(${i-t} SDRs left)</p>`,source:"SKILLS 18"});break}await this.actor.skillDevRoll(e,!1)&&s++}await game.hm3.GmSays({text:`<h4>${this.actor.name}: ${e.name}</h4>${s}/${i} SDRs succeeded`}),a(!0)}}},default:"roll",close:()=>a(!1)}).render(!0)})}},disableFlag:{label:game.i18n.localize("hm3.SDR.DisableFlag"),callback:async()=>e.update({"system.improveFlag":0})}},default:"performSDR",close:()=>a(!1)},{width:550}).render(!0)})}async _onDumpEsotericDescription(e){e.preventDefault();const t=e.currentTarget,a=$(t).parents(".item").data("itemId");if(a){const e=this.actor.items.get(a);if(!e)return;const t=e.system;if(["spell","invocation","psionic"].includes(e.type)){const a={name:e.name,desc:t.description,notes:t.notes||null,fatigue:"psionic"===e.type?t.fatigue:null};"spell"===e.type?(a.level=S(t.level),a.title=`${t.convocation} Spell`):"invocation"===e.type?(a.level=S(t.circle),a.title=`${t.diety} Invocation`):"psionic"===e.type&&(a.level=`F${t.fatigue}`,a.title="Psionic Talent");const i="systems/hm3/templates/chat/esoteric-desc-card.hbs",s=await renderTemplate(i,a),n={user:game.user.id,speaker:ChatMessage.getSpeaker({actor:this.object}),content:s.trim(),type:CONST.CHAT_MESSAGE_STYLES.OTHER};return ChatMessage.create(n)}}}async _handleQtyInput(e,t){const a=this.actor.items.find(t=>t.id===e);if(0===t.length)return void(document.getElementById(e).value=a.system.quantity);const i=Array.from(t)[0];let s=!1,n=!1;"+"===i&&(s=!0),"-"===i&&(n=!0),(s||n)&&(t=t.slice(1)),0===t.length||isNaN(t)?document.getElementById(e).value=a.system.quantity:(t=I(Number(t),0),a.system.quantity=s?a.system.quantity+t:n?Math.max(a.system.quantity-t):t,document.getElementById(e).value=a.system.quantity,a.update({"system.quantity":a.system.quantity}))}async _handleSbxInput(e,t){const a=this.actor.items.find(t=>t.id===e);0===t.length||isNaN(t)||Number(t)<=0||Number(t)>=8?document.getElementById(e+"-SBx").value=a.system.skillBase.SBx:(a.system.skillBase.SBx=t,document.getElementById(e+"-SBx").value=a.system.skillBase.SBx,await a.update({"system.skillBase.SBx":a.system.skillBase.SBx}),await a.update({"system.masteryLevel":0}))}async _handleOpInput(e,t){const a=this.actor.items.find(t=>t.id===e);if(0===t.length)return a.system.skillBase.OP=null,document.getElementById(e+"-OP").value=a.system.skillBase.OP,await a.update({"system.skillBase.-=OP":a.system.skillBase.OP}),void await a.update({"system.masteryLevel":0});isNaN(t)||Number(t)<=0||Number(t)>=4?document.getElementById(e+"-OP").value=a.system.skillBase.OP:(a.system.skillBase.OP=t,document.getElementById(e+"-OP").value=a.system.skillBase.OP,await a.update({"system.skillBase.OP":a.system.skillBase.OP}),await a.update({"system.masteryLevel":0}))}async conditionalRender({aeDisabled:e=!1,aeStarted:t=!1,force:a=!1}={}){if(a||"effects"===this._tabs[0].active||e||t)return super.render(a)}}class Vt extends Yt{static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["hm3","sheet","actor","character"],width:810,height:850,tabs:[{navSelector:".sheet-tabs",contentSelector:".sheet-body",initial:"facade"}],resizable:!0})}get template(){return!game.user.isGM&&this.actor.limited?"systems/hm3/templates/actor/character-limited.hbs":"systems/hm3/templates/actor/character-sheet.hbs"}}class Jt extends qt{static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["hm3","sheet","actor","actor-v2","container"],width:700,height:640,tabs:[{navSelector:".sheet-tabs-v2",contentSelector:".sheet-body-v2",initial:"facade"}],scrollY:[".main-content"],resizable:!1})}get template(){return!game.user.isGM&&this.actor.limited?"systems/hm3/templates/actor-v2/container-limited.hbs":"systems/hm3/templates/actor-v2/container-sheet.hbs"}}class Qt extends Yt{static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["hm3","sheet","actor","container"],width:700,height:640,tabs:[{navSelector:".sheet-tabs",contentSelector:".sheet-body",initial:"facade"}]})}get template(){return!game.user.isGM&&this.actor.limited?"systems/hm3/templates/actor/container-limited.hbs":"systems/hm3/templates/actor/container-sheet.hbs"}}class Xt extends qt{static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["hm3","sheet","actor","actor-v2","creature"],width:810,height:850,tabs:[{navSelector:".sheet-tabs-v2",contentSelector:".sheet-body-v2",initial:"facade"}],scrollY:[".main-content"],resizable:!1})}get template(){return!game.user.isGM&&this.actor.limited?"systems/hm3/templates/actor-v2/creature-limited.hbs":"systems/hm3/templates/actor-v2/creature-sheet.hbs"}}class Zt extends Yt{static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["hm3","sheet","actor","creature"],width:810,height:850,tabs:[{navSelector:".sheet-tabs",contentSelector:".sheet-body",initial:"facade"}]})}get template(){return!game.user.isGM&&this.actor.limited?"systems/hm3/templates/actor/creature-limited.hbs":"systems/hm3/templates/actor/creature-sheet.hbs"}}class ea extends ActiveEffect{_prepareDuration(){const e=super._prepareDuration();return e.duration===game.hm3.CONST.TIME.INDEFINITE?e.label="Indefinite":e.duration===game.hm3.CONST.TIME.PERMANENT&&(e.label="Permanent"),e}async _preUpdate(e,t,a){if(e.changes&&e.changes.length>0)for(const t of e.changes)null!==t.priority&&void 0!==t.priority&&""!==t.priority&&"0"!==t.priority||(t.priority=(10*t.mode).toString());return super._preUpdate(e,t,a)}get started(){return this.duration?.startTime<=game.time.worldTime}get isSuppressed(){return!this.started}get hidden(){let e=!!this.flags?.hm3?.hidden;return this.parent instanceof Item&&(e||=!!this.parent.system.hidden),e}get selfDestroy(){return!!this.flags?.hm3?.selfDestroy}get unique(){return!!this.flags?.hm3?.unique}hasCreateMacro(){return this.flags?.effectmacro?.onCreate?.script&&""!==this.flags?.effectmacro?.onCreate?.script?.trim()}hasDeleteMacro(){return this.flags?.effectmacro?.onDelete?.script&&""!==this.flags?.effectmacro?.onDelete?.script?.trim()}hasDisableMacro(){return this.flags?.effectmacro?.onDisable?.script&&""!==this.flags?.effectmacro?.onDisable?.script?.trim()}hasTurnStartMacro(){return this.flags?.effectmacro?.onTurnStart?.script&&""!==this.flags?.effectmacro?.onTurnStart?.script?.trim()}}class ta extends ChatMessage{_highlighted=null;static getSpeaker({scene:e,actor:t,token:a,alias:i,user:s}={}){return s?this._getSpeakerFromUser({scene:e,user:s,alias:i}):super.getSpeaker({scene:e,actor:t,token:a,alias:i})}async getHTML(e={}){const t=await super.getHTML(e),a=t instanceof HTMLElement?t:t[0];return"function"===foundry.utils.getType(this.system?.getHTML)?(await this.system.getHTML(a,e),t):(this._enrichChatCard(a),Hooks.callAll("hm3.renderChatMessage",this,a),t)}_enrichChatCard(e){const t=this.getAssociatedActor();let a,i;this.isContentVisible?(a=t?.img??this.author.avatar,i=this.alias):(a=this.author.avatar,i=this.author.name);const s=document.createElement("a");s.classList.add("avatar"),t&&(s.dataset.uuid=t.uuid);const n=document.createElement("img");Object.assign(n,{src:a,alt:i}),s.append(n);const o=document.createElement("span");o.classList.add("name-stacked");const r=document.createElement("span");r.classList.add("title"),r.append(i),o.append(r);const l=document.createElement("span");l.classList.add("subtitle"),this.whisper.length&&(l.innerText=e.querySelector(".whisper-to")?.innerText??""),i===this.author?.name||l.innerText.length||(l.innerText=this.author?.name??""),o.appendChild(l);const c=e.querySelector(".message-sender");c?.replaceChildren(s,o),e.querySelector(".whisper-to")?.remove(),e.querySelectorAll("i.dnd5e-icon").forEach(e=>{const t=document.createElement("dnd5e-icon");t.src=e.dataset.src,e.replaceWith(t)}),s.addEventListener("click",this._onTargetMouseDown.bind(this)),s.addEventListener("pointerover",this._onTargetHoverIn.bind(this)),s.addEventListener("pointerout",this._onTargetHoverOut.bind(this))}getAssociatedActor(){if(this.speaker.scene&&this.speaker.token){const e=game.scenes.get(this.speaker.scene),t=e?.tokens.get(this.speaker.token);if(t)return t.actor}return game.actors.get(this.speaker.actor)}_activateActivityListeners(e){this.getAssociatedActivity()?.activateChatListeners(this,e)}async _onTargetMouseDown(e){e.stopPropagation();const t=e.currentTarget.dataset.uuid,a=fromUuidSync(t),i=a?.token?.object??a?.getActiveTokens()[0];if(!i||!a.testUserPermission(game.user,"LIMITED"))return;const s=!e.shiftKey;if(!i.controlled)return i.control({releaseOthers:s}),canvas.animatePan(i.center);i.release()}_onTargetHoverIn(e){const t=e.currentTarget.dataset.uuid,a=fromUuidSync(t),i=a?.token?.object??a?.getActiveTokens()[0];i&&i.isVisible&&(i.controlled||i._onHoverIn(e,{hoverOutOthers:!0}),this._highlighted=i)}_onTargetHoverOut(e){this._highlighted&&this._highlighted._onHoverOut(e),this._highlighted=null}}class aa extends Combat{_combatMutex=new x;async startCombat(){return(await Promise.allSettled([new Promise(e=>{let t=setTimeout(()=>e(),3e3);Hooks.once("hm3.onOutnumbered",()=>{clearTimeout(t),e()})}),game.hm3.socket.executeAsGM("unsetTAFlag"),super.startCombat()]))[2].value}async nextRound(){const e=this.combatants.filter(e=>!e.token?.hasCondition(game.hm3.Condition.BERSERK)).map(e=>e.id);return await this.rollInitiative(e),super.nextRound()}async nextTurn(e="true"){if(game.combat?.started)return this._combatMutex.runExclusive(async()=>{if(game.combat?.started&&("true"===e||e===game.combat.combatant?.token?.id))return await game.hm3.socket.executeAsGM("unsetTAFlag"),super.nextTurn()})}}class ia extends Combatant{getInitiativeRoll(e){const t=game.settings.get("hm3","autoMarkUsedSkills");if(this.actor.system.mounted){const e=this.actor.items.find(e=>e.type===d.SKILL&&e.name.includes("Riding"));this.actor.system.initiative=e.system.effectiveMasteryLevel,this.actor.system.initiative+=e.system.skillBase.value/10,t&&e.update({"system.improveFlag":e.system.improveFlag+1})}else{const e=this.actor.items.find(e=>e.type===d.SKILL&&"Initiative"===e.name);this.actor.system.initiative=this.token?.hasCondition(game.hm3.Condition.SHOCKED)?0:e.system.effectiveMasteryLevel,this.actor.system.initiative+=e.system.skillBase.value/10,t&&e.update({"system.improveFlag":e.system.improveFlag+1})}return super.getInitiativeRoll(e)}}class sa extends Macro{get canExecute(){return super.canExecute||!!this.getFlag("hm3","ownerId")||"manual"===this.getFlag("hm3","trigger")}}class na extends ActiveEffectConfig{static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{template:"systems/hm3/templates/effect/active-effect-config.hbs"})}async getData(e={}){const t=await super.getData(e);return t.keyChoices=i.activeEffectKey,t}}class oa extends AmbientLight{_onClickLeft(e){e.shiftKey&&e.ctrlKey?super._onClickLeft2(e):super._onClickLeft(e)}_onClickRight(e){e.shiftKey&&e.ctrlKey?super._onClickRight2(e):super._onClickRight(e)}}class ra extends AmbientSound{_onClickLeft(e){e.shiftKey&&e.ctrlKey?super._onClickLeft2(e):super._onClickLeft(e)}_onClickRight(e){e.shiftKey&&e.ctrlKey?super._onClickRight2(e):super._onClickRight(e)}}class la extends Drawing{_onClickLeft(e){e.shiftKey&&e.ctrlKey?super._onClickLeft2(e):super._onClickLeft(e)}_onClickRight(e){e.shiftKey&&e.ctrlKey?super._onClickRight2(e):super._onClickRight(e)}}class ca extends MacroConfig{static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{height:575,jQuery:!1})}get template(){return this.object.limited?"systems/hm3/templates/dialog/macro-config-limited.hbs":"systems/hm3/templates/dialog/macro-config.hbs"}async getData(e={}){const t=super.getData();return t.macroTypes=game.documentTypes.Macro.map(e=>({value:e,label:game.i18n.localize(CONFIG.Macro.typeLabels[e]),disabled:"script"===e&&!game.user.can("MACRO_SCRIPT")})),t.macroScopes=CONST.MACRO_SCOPES.map(e=>({value:e,label:e})),t.triggerTypes=[{value:"manual",label:"Manual"},{value:"hm3.onDamageRoll",label:"HM3 On Damage Roll"},{value:"hm3.onFumbleRoll",label:"HM3 On Fumble Roll"},{value:"hm3.onHealingRoll",label:"HM3 On Healing Roll"},{value:"hm3.onInjuryRoll",label:"HM3 On Injury Roll"},{value:"hm3.onInvocationRoll",label:"HM3 On Invocation Roll"},{value:"hm3.onPsionicsRoll",label:"HM3 On Psionics Roll"},{value:"hm3.onShockRoll",label:"HM3 On Shock Roll"},{value:"hm3.onSpellRoll",label:"HM3 On Spell Roll"},{value:"hm3.onStumbleRoll",label:"HM3 On Stumble Roll"},{value:"hm3.preInjuryRoll",label:"HM3 Pre Injury Roll"},{value:"applyTokenStatusEffect",label:"Apply Token Status Effect"},{value:"combatRound",label:"Combat Round"},{value:"combatStart",label:"Combat Start"},{value:"combatTurn",label:"Combat Turn"},{value:"combatTurnChange",label:"Combat Turn Change"},{value:"createCombatant",label:"Create Combatant"},{value:"createToken",label:"Create Token"},{value:"deleteCombatant",label:"Delete Combatant"},{value:"deleteToken",label:"Delete Token"},{value:"pauseGame",label:"Pause Game"},{value:"preUpdateCombat",label:"Pre Update Combat"},{value:"preUpdateCombatant",label:"Pre Update Combatant"},{value:"preUpdateToken",label:"Pre Update Token"},{value:"targetToken",label:"Target Token"},{value:"updateCombat",label:"Update Combat"},{value:"updateCombatant",label:"Update Combatant"},{value:"updateToken",label:"Update Token"},{value:"updateWorldTime",label:"Update World Time"}],t.trigger=this.object.getFlag("hm3","trigger")||"manual","legacy"===t.trigger&&(t.triggerTypes.push({value:"legacy",label:"Legacy"}),t.isLegacy=!0),this.object.limited&&t.triggerTypes.push({value:"confidential",label:"Confidential"}),t}async _updateObject(e,t){if(e.preventDefault(),e instanceof SubmitEvent){const a=await super._updateObject(e,t);return await this.object.setFlag("hm3","trigger",t.trigger),E(this.object)?.sheet.render(),a}return super._updateObject(e,t)}async _activateCoreListeners(...e){const t=await super._activateCoreListeners(...e);return this.object.limited?(this.form[5].disabled=!0,this.form[6].disabled=!0):["legacy","manual"].includes(this.object.getFlag("hm3","trigger"))||(this.form[6].disabled=!0),t}}class ma extends Note{_onClickLeft(e){e.shiftKey&&e.ctrlKey?super._onClickLeft2(e):super._onClickLeft(e)}_onClickRight(e){e.shiftKey&&e.ctrlKey?super._onClickRight2(e):super._onClickRight(e)}}class da extends Region{_onClickLeft(e){e.shiftKey&&e.ctrlKey?super._onClickLeft2(e):super._onClickLeft(e)}_onClickRight(e){e.shiftKey&&e.ctrlKey?super._onClickRight2(e):super._onClickRight(e)}}class ua extends Tile{_onClickLeft(e){e.shiftKey&&e.ctrlKey?super._onClickLeft2(e):super._onClickLeft(e)}_onClickRight(e){e.shiftKey&&e.ctrlKey?super._onClickRight2(e):super._onClickRight(e)}}class ha extends Wall{_onClickLeft(e){e.shiftKey&&e.ctrlKey?super._onClickLeft2(e):super._onClickLeft(e)}_onClickRight(e){e.shiftKey&&e.ctrlKey?super._onClickRight2(e):super._onClickRight(e)}}class ga extends ItemSheet{static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["hm3","sheet","item","item-v2"],width:650,height:740,tabs:[{navSelector:".sheet-tabs-v2",contentSelector:".sheet-body-v2",initial:"properties"}],scrollY:[".main-content"],resizable:!1})}get template(){return`systems/hm3/templates/item-v2/${this.item.type}-sheet.hbs`}async _prepareContext(e){return{...await super._prepareContext(e),document:this.document,editable:this.isEditable,options:this.options}}async getData(e={}){e.classes.push(this.item.type.toLowerCase().replace(" ","-")),this.item.system.type&&e.classes.push(this.item.system.type.toLowerCase().replace(" ","-")),this.item.system.arcane?.isArtifact&&(this.item.system.arcane.isOwnerAware||game.user.isGM)&&e.classes.push("artifact");const t=super.getData(e);if(t.editable=this.isEditable&&this._mode===this.constructor.MODES.EDIT,t.cssClass=t.editable?"editable":this.isEditable?"interactable":"locked",t.hasDescription="description"in this.object.system,t.hasDescription&&(t.descriptionHTML=await TextEditor.enrichHTML(this.object.system.description,{secrets:game.user.isGM,relativeTo:this.object.system})),t.item=this.item,t.idata=this.item.system,t.config=CONFIG.HM3,t.itemType=this.item.type,t.hasActor=this.actor&&!0,t.hasCombatSkills=!1,t.hasRitualSkills=!1,t.hasMagicSkills=!1,t.isGM=game.user.isGM,t.strictMode=game.settings.get("hm3","strictGmMode"),t.hasRwPermission=t.isGM||!t.strictMode,t.isGridDistanceUnits="grid"===game.settings.get("hm3","distanceUnits"),t.idata.wqModifier=t.idata.wqModifier||0,t.macroTypes=[{key:"chat",label:"Chat"},{key:"script",label:"Script"}],t.containers=[{label:"On Person",key:"on-person"}],this.actor&&this.item.type!==d.CONTAINERGEAR&&this.actor.items.forEach(e=>{"containergear"===e.type&&t.containers.push({label:e.name,key:e.id})}),this.item.type===d.SPELL)t.convocations=[],this.actor&&this.actor.itemTypes.skill.forEach(e=>{"Magic"===e.system.type&&(t.convocations.push(e.name),t.hasMagicSkills=!0)});else if(this.item.type===d.INVOCATION)t.dieties=[],this.actor&&this.actor.itemTypes.skill.forEach(e=>{"Ritual"===e.system.type&&(t.dieties.push(e.name),t.hasRitualSkills=!0)});else if(this.item.type===d.WEAPONGEAR||this.item.type===d.MISSILEGEAR)t.combatSkills=[],this.actor&&(this.item.type===d.WEAPONGEAR?t.combatSkills.push({key:"None"}):t.combatSkills.push({key:"Throwing"}),this.actor.itemTypes.skill.forEach(e=>{if("Combat"===e.system.type){const a=e.name.toLowerCase();"initiative"!==a&&"dodge"!==a&&(t.combatSkills.push({key:e.name}),t.hasCombatSkills=!0)}}));else if(this.item.type===d.TRAIT)"Psyche"===t.idata.type&&(t.isPsycheTrait=!0,isNaN(parseInt(t.idata.severity))&&(t.idata.severity=5));else if(this.item.type===d.CONTAINERGEAR)void 0===t.idata.type&&(t.idata.type="Container");else if(this.item.type===d.SKILL&&this.item.name.includes("Riding")){const e=new Map(game.hm3.config.combatSkillIcons).get("riding"),a=this.actor.getSteeds();if(t.steeds=[{key:"",label:"No Steed"},...a.map(e=>{if(e)return{key:e.uuid,label:e.name}})],t.isRiding=!0,t.mounted=this.actor.system.mounted,this.item.system.actorUuid&&this.item.img===e){const e=fromUuidSync(this.item.system.actorUuid);e&&(this.item.img=e.img,this.item.name+="/"+e.name,this.item.update({img:this.item.img,name:this.item.name}),await e.update({"system.ownerUuid":this.item.actor.uuid}))}else this.item.system.actorUuid||this.item.img===e||(this.item.img=e,this.item.name="Riding",this.item.update({img:this.item.img,name:this.item.name}),this.item.actor.update({"system.mounted":!1}))}if(t.isGridDistanceUnits&&t.idata.range&&(t.rangeGrid={short:t.idata.range.short/canvas.dimensions.distance,medium:t.idata.range.medium/canvas.dimensions.distance,long:t.idata.range.long/canvas.dimensions.distance,extreme:t.idata.range.extreme/canvas.dimensions.distance}),t.effects=[],this.item.effects.forEach(e=>{t.effects.push({changes:w(e),disabled:e.disabled,duration:v(e),id:e.id,img:e.img,name:e.name,sourceName:e.sourceName})}),(game.hm3.config.esotericCombatItems.attack.includes(this.item.name)||game.hm3.config.esotericCombatItems.defense.includes(this.item.name))&&(t.isEsotericCombat=!0),t.idata.arcane&&t.idata.arcane.isArtifact){const e={};t.idata.arcane.type||(t.idata.arcane.type="Minor",e["system.arcane.type"]=t.idata.arcane.type),"Minor"!==t.idata.arcane.type||t.idata.arcane.minor?"Major"!==t.idata.arcane.type||t.idata.arcane.major||(t.idata.arcane.major={power1:{power:"None",duration:"Permanent",isOwnerAware:!1},power2:{power:"None",duration:"Permanent",isOwnerAware:!1},power3:{power:"None",duration:"Permanent",isOwnerAware:!1},power4:{power:"None",duration:"Permanent",isOwnerAware:!1},power5:{power:"None",duration:"Permanent",isOwnerAware:!1}},e["system.arcane.major"]=t.idata.arcane.major):(t.idata.arcane.minor={power:"None",duration:"Permanent",isOwnerAware:!1},e["system.arcane.minor"]=t.idata.arcane.minor),"Minor"===t.idata.arcane.type&&t.idata.arcane.major?(e["system.arcane.-=major"]=null,e["system.arcane.-=needsAttunement"]=null,e["system.arcane.-=isAttuned"]=null,e["system.arcane.charges"]=-1,e["system.arcane.ego"]=0,e["system.arcane.morality"]=-1):"Major"===t.idata.arcane.type&&t.idata.arcane.minor&&(e["system.arcane.-=minor"]=null),t.idata.arcane.isAttuned&&!t.idata.arcane.needsAttunement&&(t.idata.arcane.isAttuned=!1,e["system.arcane.isAttuned"]=!1),t.idata.arcane.minorPower&&(e["system.arcane.-=minorPower"]=null),t.idata.arcane.majorPower&&(e["system.arcane.-=majorPower"]=null),isNaN(parseInt(t.idata.arcane.morality))&&(t.idata.arcane.morality=-1,e["system.arcane.morality"]=-1),foundry.utils.isEmpty(e)||await this.object.update(e,{enforceTypes:!1}),t.arcane={choices:[{key:"Minor"},{key:"Major"}],durations:[{key:"Indefinite"},{key:"Permanent"}],description:game.hm3.config.arcanePowers.find(e=>e.key===t.idata.arcane.minor?.power)?.description||"",powers:("Minor"===t.idata.arcane.type?JSON.parse(JSON.stringify(game.hm3.config.arcanePowers)).filter(e=>e.minor&&e.validFor.includes(t.data.type)):JSON.parse(JSON.stringify(game.hm3.config.arcanePowers)).filter(e=>e.major>=0&&e.validFor.includes(t.data.type))).map(e=>(e.label=`${e.label}${e.legacy?"*":""}${e.lvl>0?` (${e.lvl})`:""} ${e.major>0&&"Major"===t.idata.arcane.type?`Costs: ${e.major}`:""}`,e))}}return t}setPosition(e={}){const t=super.setPosition(e),a=this.element.find(".sheet-body"),i=t.height-192;return a.css("height",i),t}activateListeners(e){super.activateListeners(e),e.find(".profile-img").on("click",this._onShowProfileImage.bind(this)),this.options.editable&&(e.on("click","input[type='number']",e=>{e.currentTarget.select()}),e.on("click","input[type='text']",e=>{e.currentTarget.select()}),e.on("keypress",".properties",e=>{"13"==(e.keyCode?e.keyCode:e.which)&&super.close()}),e.find(".effect-control").click(e=>{Pt(e,this.item)}),e.find(".armorgear-location-add").click(this._armorgearLocationAdd.bind(this)),e.find(".armorgear-location-delete").click(this._armorgearLocationDelete.bind(this)))}async _armorgearLocationAdd(e){const t=e.currentTarget.dataset,a=this.item.system;await this._onSubmit(e);let i=[];return void 0!==a.locations&&(i=[...a.locations]),-1===i.indexOf(t.location)&&i.push(t.location),this.item.update({"system.locations":i})}async _armorgearLocationDelete(e){const t=e.currentTarget.dataset,a=this.item.system;await this._onSubmit(e);let i=[...a.locations],s=i.indexOf(t.location);return s>=0&&i.splice(s,1),this.item.update({"system.locations":i})}static MODES={PLAY:1,EDIT:2};_mode=null;async _render(e,{mode:t,...a}={}){return void 0===t&&"createItem"===a.renderContext&&(t=this.constructor.MODES.EDIT),this._mode=t??this._mode??this.constructor.MODES.PLAY,this.rendered&&(this.element[0].querySelector(".window-header .mode-slider").checked=this._mode===this.constructor.MODES.EDIT),super._render(e,a)}async _renderOuter(){const e=await super._renderOuter(),t=e[0].querySelector(".window-header");if(t.querySelectorAll(".header-button").forEach(e=>{const t=e.querySelector(":scope > i").nextSibling;e.dataset.tooltip=t.textContent,e.dataset.tooltipDirection="UP",e.setAttribute("aria-label",t.textContent),e.addEventListener("dblclick",e=>e.stopPropagation()),t.remove()}),!game.user.isGM&&this.document.limited)return e[0].classList.add("limited"),e;if(this.isEditable){const e=document.createElement("slide-toggle");e.checked=this._mode===this.constructor.MODES.EDIT,e.classList.add("mode-slider"),e.dataset.tooltip="hm3.SheetModeEdit",e.dataset.tooltipDirection="UP",e.setAttribute("aria-label",game.i18n.localize("hm3.SheetModeEdit")),e.addEventListener("change",this._onChangeSheetMode.bind(this)),e.addEventListener("dblclick",e=>e.stopPropagation()),t.insertAdjacentElement("afterbegin",e)}const a=t.querySelector(".header-button"),i=t.querySelector(".document-id-link");return i&&(a?.insertAdjacentElement("beforebegin",i),i.classList.add("pseudo-header-button"),i.dataset.tooltipDirection="UP"),e}async _onChangeSheetMode(e){const{MODES:t}=this.constructor,a=e.currentTarget,i=game.i18n.localize("hm3.SheetMode"+(a.checked?"Play":"Edit"));a.dataset.tooltip=i,a.setAttribute("aria-label",i),this._mode=a.checked?t.EDIT:t.PLAY,await this.submit(),this.render()}_onShowProfileImage(){if(this._mode===this.constructor.MODES.PLAY||!game.user.isGM){const e=this.item.img;game.release.generation<13?new ImagePopout(e,{title:this.item.name,uuid:this.item.uuid}).render(!0):new foundry.applications.apps.ImagePopout({src:e,uuid:this.item.uuid,window:{title:this.item.name}}).render({force:!0})}}}class pa extends ItemSheet{static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["hm3","sheet","item"],width:605,height:game.user.isGM?850:650,tabs:[{navSelector:".sheet-tabs",contentSelector:".sheet-body",initial:"properties"}],resizable:!0})}get template(){return`systems/hm3/templates/item/${this.item.type}-sheet.hbs`}async getData(e={}){const t=super.getData(e);if(t.hasDescription="description"in this.object.system,t.hasDescription&&(t.descriptionHTML=await TextEditor.enrichHTML(this.object.system.description,{secrets:game.user.isGM,relativeTo:this.object.system})),t.item=this.item,t.idata=this.item.system,t.config=CONFIG.HM3,t.itemType=this.item.type,t.hasActor=this.actor&&!0,t.hasCombatSkills=!1,t.hasRitualSkills=!1,t.hasMagicSkills=!1,t.isGM=game.user.isGM,t.strictMode=game.settings.get("hm3","strictGmMode"),t.hasRwPermission=t.isGM||!t.strictMode,t.isGridDistanceUnits="grid"===game.settings.get("hm3","distanceUnits"),t.idata.wqModifier=t.idata.wqModifier||0,t.macroTypes=[{key:"chat",label:"Chat"},{key:"script",label:"Script"}],t.containers=[{label:"On Person",key:"on-person"}],this.actor&&this.item.type!==d.CONTAINERGEAR&&this.actor.items.forEach(e=>{"containergear"===e.type&&t.containers.push({label:e.name,key:e.id})}),this.item.type===d.SPELL)t.convocations=[],this.actor&&this.actor.itemTypes.skill.forEach(e=>{"Magic"===e.system.type&&(t.convocations.push(e.name),t.hasMagicSkills=!0)});else if(this.item.type===d.INVOCATION)t.dieties=[],this.actor&&this.actor.itemTypes.skill.forEach(e=>{"Ritual"===e.system.type&&(t.dieties.push(e.name),t.hasRitualSkills=!0)});else if(this.item.type===d.WEAPONGEAR||this.item.type===d.MISSILEGEAR)t.combatSkills=[],this.actor&&(this.item.type===d.WEAPONGEAR?t.combatSkills.push({key:"None"}):t.combatSkills.push({key:"Throwing"}),this.actor.itemTypes.skill.forEach(e=>{if("Combat"===e.system.type){const a=e.name.toLowerCase();"initiative"!==a&&"dodge"!==a&&(t.combatSkills.push({key:e.name}),t.hasCombatSkills=!0)}}));else if(this.item.type===d.TRAIT)"Psyche"===t.idata.type&&(t.isPsycheTrait=!0,isNaN(parseInt(t.idata.severity))&&(t.idata.severity=5));else if(this.item.type===d.CONTAINERGEAR)void 0===t.idata.type&&(t.idata.type="Container");else if(this.item.type===d.SKILL&&this.item.name.includes("Riding")){const e=new Map(game.hm3.config.combatSkillIcons).get("riding"),a=this.actor.getSteeds();if(t.steeds=[{key:"",label:"No Steed"},...a.map(e=>{if(e)return{key:e.uuid,label:e.name}})],t.isRiding=!0,t.mounted=this.actor.system.mounted,this.item.system.actorUuid&&this.item.img===e){const e=fromUuidSync(this.item.system.actorUuid);e&&(this.item.img=e.img,this.item.name+="/"+e.name,this.item.update({img:this.item.img,name:this.item.name}),await e.update({"system.ownerUuid":this.item.actor.uuid}))}else this.item.system.actorUuid||this.item.img===e||(this.item.img=e,this.item.name="Riding",this.item.update({img:this.item.img,name:this.item.name}),this.item.actor.update({"system.mounted":!1}))}if(t.isGridDistanceUnits&&t.idata.range&&(t.rangeGrid={short:t.idata.range.short/canvas.dimensions.distance,medium:t.idata.range.medium/canvas.dimensions.distance,long:t.idata.range.long/canvas.dimensions.distance,extreme:t.idata.range.extreme/canvas.dimensions.distance}),t.effects={},this.item.effects.forEach(e=>{t.effects[e.id]={changes:w(e),disabled:e.disabled,duration:v(e),id:e.id,img:e.img,name:e.name,sourceName:e.sourceName}}),(game.hm3.config.esotericCombatItems.attack.includes(this.item.name)||game.hm3.config.esotericCombatItems.defense.includes(this.item.name))&&(t.isEsotericCombat=!0),t.idata.arcane&&t.idata.arcane.isArtifact){const e={};t.idata.arcane.type||(t.idata.arcane.type="Minor",e["system.arcane.type"]=t.idata.arcane.type),"Minor"!==t.idata.arcane.type||t.idata.arcane.minor?"Major"!==t.idata.arcane.type||t.idata.arcane.major||(t.idata.arcane.major={power1:{power:"None",duration:"Permanent",isOwnerAware:!1},power2:{power:"None",duration:"Permanent",isOwnerAware:!1},power3:{power:"None",duration:"Permanent",isOwnerAware:!1},power4:{power:"None",duration:"Permanent",isOwnerAware:!1},power5:{power:"None",duration:"Permanent",isOwnerAware:!1}},e["system.arcane.major"]=t.idata.arcane.major):(t.idata.arcane.minor={power:"None",duration:"Permanent",isOwnerAware:!1},e["system.arcane.minor"]=t.idata.arcane.minor),"Minor"===t.idata.arcane.type&&t.idata.arcane.major?(e["system.arcane.-=major"]=null,e["system.arcane.-=needsAttunement"]=null,e["system.arcane.-=isAttuned"]=null,e["system.arcane.charges"]=-1,e["system.arcane.ego"]=0,e["system.arcane.morality"]=-1):"Major"===t.idata.arcane.type&&t.idata.arcane.minor&&(e["system.arcane.-=minor"]=null),t.idata.arcane.isAttuned&&!t.idata.arcane.needsAttunement&&(t.idata.arcane.isAttuned=!1,e["system.arcane.isAttuned"]=!1),t.idata.arcane.minorPower&&(e["system.arcane.-=minorPower"]=null),t.idata.arcane.majorPower&&(e["system.arcane.-=majorPower"]=null),isNaN(parseInt(t.idata.arcane.morality))&&(t.idata.arcane.morality=-1,e["system.arcane.morality"]=-1),foundry.utils.isEmpty(e)||await this.object.update(e,{enforceTypes:!1}),t.arcane={choices:[{key:"Minor"},{key:"Major"}],durations:[{key:"Indefinite"},{key:"Permanent"}],description:game.hm3.config.arcanePowers.find(e=>e.key===t.idata.arcane.minor?.power)?.description||"",powers:("Minor"===t.idata.arcane.type?JSON.parse(JSON.stringify(game.hm3.config.arcanePowers)).filter(e=>e.minor&&e.validFor.includes(t.data.type)):JSON.parse(JSON.stringify(game.hm3.config.arcanePowers)).filter(e=>e.major>=0&&e.validFor.includes(t.data.type))).map(e=>(e.label=`${e.label}${e.legacy?"*":""}${e.lvl>0?` (${e.lvl})`:""} ${e.major>0&&"Major"===t.idata.arcane.type?`Costs: ${e.major}`:""}`,e))}}return t}setPosition(e={}){const t=super.setPosition(e),a=this.element.find(".sheet-body"),i=t.height-192;return a.css("height",i),t}activateListeners(e){super.activateListeners(e),game.user.isGM||e.find(".profile-img").click(async e=>{new ImagePopout(this.item.img,{title:this.item.name,uuid:this.item.uuid}).render(!0)}),this.options.editable&&(e.on("click","input[type='number']",e=>{e.currentTarget.select()}),e.on("click","input[type='text']",e=>{e.currentTarget.select()}),e.on("keypress",".properties",e=>{"13"==(e.keyCode?e.keyCode:e.which)&&super.close()}),e.find(".effect-control").click(e=>{Pt(e,this.item)}),e.find(".armorgear-location-add").click(this._armorgearLocationAdd.bind(this)),e.find(".armorgear-location-delete").click(this._armorgearLocationDelete.bind(this)))}async _armorgearLocationAdd(e){const t=e.currentTarget.dataset,a=this.item.system;await this._onSubmit(e);let i=[];return void 0!==a.locations&&(i=[...a.locations]),-1===i.indexOf(t.location)&&i.push(t.location),this.item.update({"system.locations":i})}async _armorgearLocationDelete(e){const t=e.currentTarget.dataset,a=this.item.system;await this._onSubmit(e);let i=[...a.locations],s=i.indexOf(t.location);return s>=0&&i.splice(s,1),this.item.update({"system.locations":i})}}class fa{constructor(e){this._item=e}get actor(){return this._item.actor}get actorProxy(){return this._item.actor.proxy}get id(){return this._item.id}get img(){return this._item.img}get item(){return this._item}get name(){return this._item.name}get type(){return this._item.type}get sort(){return this._item.sort||0}get uuid(){return this._item.uuid}get visible(){return!0}get description(){return this._item.system.description}get hasDescription(){return this.description&&this.description.length>0}get notes(){return this._item.system.notes}get source(){return this._item.system.source}get subtype(){return this._item.system.type??this.type}get canBeArtifact(){return[d.ARMORGEAR,d.CONTAINERGEAR,d.MISCGEAR,d.MISSILEGEAR,d.WEAPONGEAR].includes(this.type)}get canBeEsotericCombat(){return[d.INVOCATION,d.PSIONIC,d.SKILL,d.SPELL].includes(this.type)}HM100Check(e){return Math.max(Math.min(Math.round(e),95),5)}Skill(e){return this.actor.proxies.find(t=>t.type===d.SKILL&&t.name.toLowerCase().includes(e.toLowerCase()))}}class ya extends fa{get container(){return this._item.system.container}get hasValue(){return!0}get isArtifact(){return this._item.isArtifact}get isCarried(){return this._item.system.isCarried}get isEquipped(){return this._item.system.isEquipped}get isMajorArtifact(){return this._item.isMajorArtifact}get isMinorArtifact(){return this._item.isMinorArtifact}get quantity(){return this._item.system.quantity}get value(){return this._item.system.value}get weight(){return this._item.system.weight}get weightT(){return I(this.weight,3)}get label(){const e=this._item.system.type||{armorgear:"Armour",containergear:"Container",effectgear:"Effect",miscgear:"Misc. Gear",missilegear:"Missile Wpn",weapongear:"Melee Wpn"}[this.type];return"Misc"===e?"Misc. Gear":e}get ariaLabelEquip(){return this.type===d.ARMORGEAR?this.isEquipped?`Doff ${this.name}`:`Don ${this.name}`:this.isEquipped?`Unequip ${this.name}`:`Equip ${this.name}`}get ariaLabelCarry(){return this.isCarried?`Drop ${this.name}`:`Carry ${this.name}`}}class ka extends ya{}class ba extends fa{static TotalWeightHigh=0;static TotalWeightMid=0;static TotalWeightLow=0;get layers(){return this._item.system.layers}get blunt(){return this._item.system.blunt}get edged(){return this._item.system.edged}get piercing(){return this._item.system.piercing}get fire(){return this._item.system.fire}get probWeightHigh(){return this._item.system.probWeight.high}get probWeightMid(){return this._item.system.probWeight.mid}get probWeightLow(){return this._item.system.probWeight.low}get probHigh(){return I(this.probWeightHigh/this.totalWeightHigh,1)}get probMid(){return I(this.probWeightMid/this.totalWeightMid,1)}get probLow(){return I(this.probWeightLow/this.totalWeightLow,1)}get totalWeightHigh(){return this._calcProbWeights(),ba.TotalWeightHigh}get totalWeightMid(){return this._calcProbWeights(),ba.TotalWeightMid}get totalWeightLow(){return this._calcProbWeights(),ba.TotalWeightLow}_calcProbWeights(){0===ba.TotalWeightHigh&&(this.actor.proxies.forEach(e=>{e.type===d.ARMORLOCATION&&(ba.TotalWeightHigh+=e.probWeightHigh,ba.TotalWeightMid+=e.probWeightMid,ba.TotalWeightLow+=e.probWeightLow)}),ba.TotalWeightHigh/=100,ba.TotalWeightMid/=100,ba.TotalWeightLow/=100)}}class Sa extends fa{constructor(e){super(e),this._companion=fromUuidSync(this._item.system.actorUuid)}get actorUuid(){return this._item.system.actorUuid}get companion(){return this._companion}get gender(){return this.companion?.system.gender??"Male"}get img(){return this.companion?.img}get linkToActor(){return this.companion?.link}get name(){return this.companion?.name??"Unknown"}get occupation(){return this.companion?.system.occupation??"Unknown"}get species(){return this.companion?.system.species??"Unknown"}}class va extends ya{get capacity(){return this._item.system.capacity}get collapsed(){return this._item.system.collapsed}}class wa extends ya{get visible(){return game.user.isGM}}class Ca extends fa{get HR(){return this._item.system.healRate}get IL(){return this._item.system.injuryLevel}get label(){return void 0!==this.HR?0===this.HR?"Treatment Roll":"Healing Roll":void 0}get severity(){return this._item.system.severity}}class Ma extends fa{get circle(){return this._item.system.circle}get diety(){return this._item.system.diety}get EML(){return this.HM100Check(this.Skill(this.diety).EML-5*this.circle)}}class Ta extends ya{}class Ia extends ya{get AML(){return this.HM100Check(this.Skill(this.assocSkill).EML)}get assocSkill(){return this._item.system.assocSkill}get isFeet(){return"grid"!==game.settings.get("hm3","distanceUnits")}get short(){return{range:this.isFeet?this._item.system.range.short:this._item.system.range.short/canvas.dimensions.distance,impact:this._item.system.impact.short}}get medium(){return{range:this.isFeet?this._item.system.range.medium:this._item.system.range.medium/canvas.dimensions.distance,impact:this._item.system.impact.medium}}get long(){return{range:this.isFeet?this._item.system.range.long:this._item.system.range.long/canvas.dimensions.distance,impact:this._item.system.impact.long}}get extreme(){return{range:this.isFeet?this._item.system.range.extreme:this._item.system.range.extreme/canvas.dimensions.distance,impact:this._item.system.impact.extreme}}}class Ea extends fa{get EML(){return this.HM100Check(this.ML-5*this.penalty)}get improveFlag(){return this._item.system.improveFlag}get ML(){return this._item.system.masteryLevel}get OP(){return this._item.system.skillBase.OP}get penalty(){return[p.COMBAT,p.PHYSICAL].includes(this.subtype)?this.actorProxy.PP:this.actorProxy.UP}get SB(){return this._item.system.skillBase.value}get SBx(){return this._item.system.skillBase.SBx}get SI(){return Math.floor(this.ML/10)}get isSkillImprovement(){return(this.actor.type!==s.CREATURE||!this.actor.system.species.toLowerCase().includes("dog")||"Awareness"!==this.name)&&this.actor.skillImprovement}}class Aa extends Ea{get fatigue(){return this._item.system.fatigue}get visible(){return!game.settings.get("hm3","dormantPsionicTalents")||this.ML>20||this.EML>20||game.user.isGM}}class Na extends fa{get convocation(){return this._item.system.convocation}get EML(){return this.HM100Check(this.Skill(this.convocation).EML-5*this.level)}get level(){return this._item.system.level}}class Da extends fa{get label(){return"Psyche"===this.subtype?`${game.hm3.config.psycheSeverity.find(e=>e.key===this.severity).label} ${this.name}`:this.name}get severity(){return"Psyche"===this.subtype?this._item.system.severity??"5":null}}class La extends ya{get AML(){return this.HM100Check(this.Skill(this.assocSkill).EML+this.attack)}get assocSkill(){return this._item.system.assocSkill}get attack(){return this._item.system.attack}get attackModifier(){return this._item.system.attackModifier}get blunt(){return this._item.system.blunt}get defense(){return this._item.system.defense}get DML(){return this.HM100Check(this.Skill(this.assocSkill).EML+this.defense)}get edged(){return this._item.system.edged}get piercing(){return this._item.system.piercing}get WQ(){return this._item.system.weaponQuality}get wqModifier(){return this._item.system.wqModifier||0}get wqTotal(){return this.WQ+this.wqModifier}}class Ra extends Item{_impactTypeChanged=!1;static _proxyMap=new Map;get proxy(){if(!Ra._proxyMap.has(this.id))switch(this.type){case d.ARMORGEAR:Ra._proxyMap.set(this.id,new ka(this));break;case d.ARMORLOCATION:Ra._proxyMap.set(this.id,new ba(this));break;case d.COMPANION:Ra._proxyMap.set(this.id,new Sa(this));break;case d.CONTAINERGEAR:Ra._proxyMap.set(this.id,new va(this));break;case d.EFFECT:Ra._proxyMap.set(this.id,new wa(this));break;case d.INJURY:Ra._proxyMap.set(this.id,new Ca(this));break;case d.INVOCATION:Ra._proxyMap.set(this.id,new Ma(this));break;case d.MISCGEAR:Ra._proxyMap.set(this.id,new Ta(this));break;case d.MISSILEGEAR:Ra._proxyMap.set(this.id,new Ia(this));break;case d.PSIONIC:Ra._proxyMap.set(this.id,new Aa(this));break;case d.SKILL:Ra._proxyMap.set(this.id,new Ea(this));break;case d.SPELL:Ra._proxyMap.set(this.id,new Na(this));break;case d.TRAIT:Ra._proxyMap.set(this.id,new Da(this));break;case d.WEAPONGEAR:Ra._proxyMap.set(this.id,new La(this))}return Ra._proxyMap.get(this.id)}async _preUpdate(e,t,a){return this._impactTypeChanged=!1,e.type===d.ARMORLOCATION&&e.system.impactType!==this.system.impactType&&(this._impactTypeChanged=!0),super._preUpdate(e,t,a)}asWeapon(){return this.type===d.WEAPONGEAR?new WeaponItem(this):null}get isArtifact(){return this.system.arcane?.isArtifact||!1}get isMinorArtifact(){return this.isArtifact&&"Minor"===this.system.arcane?.type}get isMajorArtifact(){return this.isArtifact&&"Major"===this.system.arcane?.type}get powers(){return this.isMinorArtifact?[this.system.arcane.minor]:this.isMajorArtifact?[this.system.arcane.major.power1,this.system.arcane.major.power2,this.system.arcane.major.power3,this.system.arcane.major.power4,this.system.arcane.major.power5]:void 0}hasArcanePower(e){return!!this.getArcanePower(e)}getArcanePower(e){if(this.isArtifact){const t=this.powers.find(t=>t.power.startsWith(e));if(t)return foundry.utils.mergeObject(t,game.hm3.config.arcanePowers.find(e=>e.key===t.power))}return null}prepareData(){super.prepareData();const e=this.system;this.type.endsWith("gear")&&(e.isCarried||(e.isEquipped=!1),e.container&&"on-person"!==e.container&&(e.isEquipped=!1)),this.type===d.ARMORLOCATION&&this._prepareArmorLocationData(e),Hooks.call("hm3.onItemPrepareData",this)}postProcessItems(){const e=this.system;let t=Ra.calcPenaltyPct(this.actor?.system?.universalPenalty),a=Ra.calcPenaltyPct(this.actor?.system?.physicalPenalty);if(this.type===d.SKILL){if((!e.masteryLevel||e.masteryLevel<0)&&(e.masteryLevel=0),f(this),this.actor&&0===e.masteryLevel&&e.skillBase.SBx){const t=Math.round((Number(e.skillBase.OP)||0)/2),a=(Number(e.skillBase.SBx)+t)*e.skillBase.value;if(this.name.includes("Condition")&&5*e.skillBase.value>70){const t=5*e.skillBase.value-70;e.masteryLevel=A(a-t)+t}else e.masteryLevel=A(a)}const i=Math.round(5*e.skillBase.delta);switch(e.type){case p.COMBAT:case p.PHYSICAL:if(this.name.includes("Riding")&&e.actorUuid){const t=fromUuidSync(e.actorUuid);if(t){t.prepareData();const s=t.items.find(e=>"Initiative"===e.name),n=Ht.calcUniversalPenalty(t);e.effectiveMasteryLevel=Math.round((e.masteryLevel+s.system.masteryLevel)/2)-a-5*n+i}}else e.effectiveMasteryLevel=e.masteryLevel-a+i;break;default:e.effectiveMasteryLevel=e.masteryLevel-t+i}const s=this.name.toLowerCase();"initiative"===s?this.actor?.system&&(this.actor.system.initiative=e.effectiveMasteryLevel):"dodge"===s&&this.actor?.system&&(this.actor.system.dodge=e.effectiveMasteryLevel)}else this.type===d.PSIONIC?((!e.masteryLevel||e.masteryLevel<0)&&(e.masteryLevel=0),f(this),this.actor&&0===e.masteryLevel&&(e.masteryLevel=e.skillBase.value),e.effectiveMasteryLevel=e.masteryLevel-t):this.type===d.INJURY&&(e.injuryLevel=Math.max(e.injuryLevel||0,0),Ra.calcInjurySeverity(this));Object.hasOwn(e,"improveFlag")&&"boolean"==typeof e.improveFlag&&(e.improveFlag=e.improveFlag?1:0)}_prepareArmorLocationData(e){"custom"!==e.impactType&&this._impactTypeChanged&&Object.keys(i.injuryLocations).forEach(t=>{i.injuryLocations[t].impactType===e.impactType&&foundry.utils.mergeObject(e,i.injuryLocations[t])}),e.probWeight.low=e.probWeight?.low||0,e.probWeight.mid=e.probWeight?.mid||0,e.probWeight.high=e.probWeight?.high||0,e.armorQuality=e.armorQuality||0,e.blunt=e.blunt||0,e.edged=e.edged||0,e.piercing=e.piercing||0,e.fire=e.fire||0}async _preCreate(e,t,a){super._preCreate(e,t,a);const s=this.system,n={};if(e.img&&(n.img=e.img),this.actor){if(this.type!==d.WEAPONGEAR&&this.type!==d.MISSILEGEAR||s.assocSkill||(n["system.assocSkill"]=function(e,t,a){if(!e||!t||!t.length)return a;const i=t.map(e=>e.data.name),s=e.toLowerCase();let n=i.find(e=>e.toLowerCase()===s);if(n)return n;let o=/\[([^\)]+)\]/i.exec(e);if(o){const e=o[1].toLowerCase();if(n=i.find(t=>t.toLowerCase()===e),n)return n}return a}(this.name,this.actor.itemTypes.skill,"None"),s.assocSkill=n["system.assocSkill"]),this.type===d.SPELL&&!s.convocation){let e=!1;for(let t of this.actor.itemTypes.skill.values())if(t.system.type===p.MAGIC){if("Neutral"===t.name){e=!0;continue}n["system.convocation"]=t.name,s.convocation=t.name;break}!n["system.convocation"]&&e&&(n["system.convocation"]="Neutral",s.convocation="Neutral")}if("invocation"===s.type&&!s.diety)for(let e of this.actor.itemTypes.skill.values())if(e.system.type===p.RITUAL){n["system.diety"]=e.name,s.diety=e.name;break}}if(n.img&&n.img!==Item.DEFAULT_ICON||(n.img=k(this.name)),!n.img){switch(this.type){case d.SKILL:s.type===p.RITUAL?n.img=k(i.defaultRitualIconName):s.type===p.MAGIC&&(n.img=k(i.defaultMagicIconName));break;case d.PSIONIC:n.img=k(i.defaultPsionicsIconName);break;case d.SPELL:n.img=k(s.convocation),n.img||(n.img=k(i.defaultMagicIconName));break;case d.INVOCATION:n.img=k(s.diety),n.img||(n.img=k(i.defaultRitualIconName));break;case d.MISCGEAR:n.img=k(i.defaultMiscItemIconName);break;case d.CONTAINERGEAR:n.img=k(i.defaultContainerIconName);break;case d.ARMORGEAR:n.img=k(i.defaultArmorGearIconName);break;case d.WEAPONGEAR:case d.MISSILEGEAR:n.img=k(s.assocSkill);break;case d.EFFECT:n.img="icons/svg/aura.svg"}n.img||delete n.img}await this.updateSource(n)}async runCustomMacro(e){if(!e)return null;if(!this.parent)return null;const t=this.parent,a={type:e.type,title:e.title,origTarget:e.origTarget,modifier:("-"===e.plusMinus?-1:1)*e.modifier,modifiedTarget:e.modifiedTarget,rollValue:e.rollValue,isSuccess:e.isSuccess,isCritical:e.isCritical,result:e.isSuccess?e.isCritical?"CS":"MS":e.isCritical?"CF":"MF",description:e.description,notes:e.notes};if(!this.system.macros.command)return null;const i=await Macro.create({name:`${this.name} ${this.type} macro`,type:this.system.macros.type,scope:"global",command:this.system.macros.command},{temporary:!0});return i?M(i,{actor:t,token:t.isToken?t.token:null,rollResult:a,item:this}):(console.error(`HM3 | Failure initializing macro '${this.name} ${this.type} macro', type=${this.system.macros.type}, command='${this.system.macros.command}'`),null)}static calcInjurySeverity(e){const t=e.system;0===t.injuryLevel?t.severity="":1==t.injuryLevel?t.severity="M1":t.injuryLevel<=3?t.severity=`S${t.injuryLevel}`:t.severity=`G${t.injuryLevel}`}static calcPenaltyPct(e){return 5*(e||0)}}async function Oa(){ui.notifications.info(`Applying HM3 System Migration for version ${game.system.version}. Please be patient and do not close your game or shut down your server.`,{permanent:!0}),console.info("HM3 | Starting Migration");for(let e of game.actors.contents)try{const t=await xa(e);foundry.utils.isEmpty(t)||(console.info(`HM3 | Migrating Actor ${e.name}`),await e.update(t,{enforceTypes:!1}),console.info(`HM3 | Actor ${e.name} was successfully migrated`))}catch(t){t.message=`Failed HM3 system migration for Actor ${e.name}: ${t.message}`,ui.notifications.error(t.message,{permanent:!0}),console.error(t)}for(let e of game.items.contents)try{const t=Fa(e);foundry.utils.isEmpty(t)||(console.info(`HM3 | Migrating Item ${e.name}`),await e.update(t,{enforceTypes:!1}),console.info(`HM3 | Item ${e.name} was successfully migrated`))}catch(t){t.message=`Failed HM3 system migration for Item ${e.name}: ${t.message}`,ui.notifications.error(t.message,{permanent:!0}),console.error(t)}for(let e of game.scenes.contents)try{const t=await Ha(e);foundry.utils.isEmpty(t)||(console.info(`HM3 | Migrating Scene ${e.name}`),await e.update(t,{enforceTypes:!1}),console.info(`HM3 | Scene ${e.name} was successfully migrated`))}catch(t){t.message=`Failed HM3 system migration for Scene ${e.name}: ${t.message}`,ui.notifications.error(t.message,{permanent:!0}),console.error(t)}console.info("HM3 | Migrating Compendium Packs");for(let e of game.packs)"world"===e.metadata.package&&["Actor","Item","Scene"].includes(e.documentName)&&(console.info(`HM3 | Starting Migration for Pack ${e.metadata.label}`),await _a(e));game.settings.set("hm3","systemMigrationVersion",game.system.version),console.info("HM3 | Migration Complete"),ui.notifications.info(`HM3 System Migration to version ${game.system.version} completed!`,{permanent:!0})}async function _a(e){const t=e.documentName;if(!["Actor","Item","Scene"].includes(t))return;const a=e.locked;await e.configure({locked:!1}),await e.migrate();const i=await e.getDocuments();for(let t of i){let a={};try{switch(t){case"Actor":a=await xa(t.data);break;case"Item":a=Fa(t.toObject());break;case"Scene":a=await Ha(t.data)}if(foundry.utils.isEmpty(a))continue;await t.update(a),console.info(`Migrated ${t} ${t.name} in Compendium ${e.collection}`)}catch(a){a.message=`Failed dnd5e system migration for ${t.name} in pack ${e.collection}: ${a.message}`,console.error(a)}}await e.configure({locked:a}),console.info(`Migrated all ${t} entities from Compendium ${e.collection}`)}async function xa(e){const t={},a=e.system;if(a.abilities?.hasOwnProperty("comliness")&&(t["system.abilities.comeliness.base"]=a.abilities.comliness.base,t["system.abilities.-=comliness"]=null),a.abilities?.hasOwnProperty("endurance")&&(a.abilities.endurance.base&&(t["flags.hm-gold.ability-endurance"]=a.abilities.endurance.base),t["system.abilities.-=endurance"]=null),a.abilities?.hasOwnProperty("speed")&&(a.abilities.speed.base&&(t["flags.hm-gold.ability-speed"]=a.abilities.speed.base),t["system.abilities.-=speed"]=null),a.abilities?.hasOwnProperty("touch")&&(a.abilities.touch.base&&(t["flags.hm-gold.ability-touch"]=a.abilities.touch.base),t["system.abilities.-=touch"]=null),a.abilities?.hasOwnProperty("frame")&&(a.abilities.frame.base&&(t["flags.hm-gold.ability-frame"]=a.abilities.frame.base),t["system.abilities.-=frame"]=null),a.hasOwnProperty("hasCondition")&&(t["system.-=hasCondition"]=null),a.hasOwnProperty("macros")&&a.macros?.hasOwnProperty("type")||(t["system.macros.command"]="",t["system.macros.type"]="script"),a.hasOwnProperty("shockIndex")||(t["system.shockIndex.value"]=100,t["system.shockIndex.max"]=100),a.hasOwnProperty("injuryLevels")||(t["system.injuryLevels.value"]=0,t["system.injuryLevels.max"]=6),Pa(e,t),!e.items)return t;const i=e.items.reduce((e,t)=>{const a=t instanceof CONFIG.Item.documentClass?t.toObject():t;let i=Fa(a);return foundry.utils.isEmpty(i)||(i._id=a._id,e.push(foundry.utils.expandObject(i))),e},[]);return i.length>0&&(t.items=i),t}function Fa(e){const t={};return e.system.macros?.hasOwnProperty("type")||(t["system.macros.command"]="",t["system.macros.type"]="script"),Object.hasOwn(e.system,"improveFlag")&&"boolean"==typeof e.system.improveFlag&&(t["system.improveFlag"]=e.system.improveFlag?1:0),"weapongear"===e.type&&(e.system.hasOwnProperty("squeeze")&&(e.system.squeeze&&(t["flags.hm-gold.squeeze-impact"]=e.system.squeeze),t["system.-=squeeze"]=null),e.system.hasOwnProperty("tear")&&(e.system.squeeze&&(t["flags.hm-gold.tear-impact"]=e.system.tear),t["system.-=tear"]=null)),"missilegear"===e.type&&(e.system.range.hasOwnProperty("extreme64")&&(t["system.range.-=extreme64"]=null),e.system.range.hasOwnProperty("extreme128")&&(t["system.range.-=extreme128"]=null),e.system.range.hasOwnProperty("extreme256")&&(t["system.range.-=extreme256"]=null),e.system.impact.hasOwnProperty("extreme64")&&(e.system.impact.extreme64&&(t["flags.hm-gold.range4-impact"]=e.system.impact.short,t["flags.hm-gold.range8-impact"]=e.system.impact.medium,t["flags.hm-gold.range16-impact"]=e.system.impact.long,t["flags.hm-gold.range32-impact"]=e.system.impact.extreme,t["flags.hm-gold.range64-impact"]=e.system.impact.extreme64),t["system.impact.-=extreme64"]=null),e.system.impact.hasOwnProperty("extreme128")&&(e.system.impact.extreme128&&(t["flags.hm-gold.range128-impact"]=e.system.impact.extreme128),t["system.impact.-=extreme128"]=null),e.system.impact.hasOwnProperty("extreme256")&&(e.system.impact.extreme256&&(t["flags.hm-gold.range256-impact"]=e.system.impact.extreme256),t["system.impact.-=extreme256"]=null)),"armorgear"===e.type&&(e.system.protection.hasOwnProperty("squeeze")&&(e.system.protection.squeeze&&(t["flags.hm-gold.squeeze"]=e.system.protection.squeeze),t["system.protection.-=squeeze"]=null),e.system.protection.hasOwnProperty("tear")&&(e.system.protection.tear&&(t["flags.hm-gold.tear"]=e.system.protection.tear),t["system.protection.-=tear"]=null)),"armorlocation"===e.type&&(e.system.hasOwnProperty("squeeze")&&(e.system.squeeze&&(t["flags.hm-gold.squeeze"]=e.system.squeeze),t["system.-=squeeze"]=null),e.system.hasOwnProperty("tear")&&(e.system.tear&&(t["flags.hm-gold.tear"]=e.system.tear),t["system.-=tear"]=null),e.system.probWeight.hasOwnProperty("arms")&&(e.system.probWeight.arms&&(t["flags.hm-gold.probweight-arms"]=e.system.probWeight.arms),t["system.probWeight.-=arms"]=null)),Pa(e,t),t}async function Ha(e){const t=await Promise.all(e.tokens.map(async e=>{const t=e.toJSON();if(!t.actorId||t.actorLink)t.actorData={};else if(game.actors.has(t.actorId)){if(!t.actorLink){const a=foundry.utils.duplicate(t.delta);a.type=e.actor?.type;const i=await xa(a);["items","effects"].forEach(e=>{if(!i[e]?.length)return;const a=new Map(i[e].map(e=>[e._id,e]));t.delta[e].forEach(e=>{const t=a.get(e._id);t&&foundry.utils.mergeObject(e,t)}),delete i[e]}),foundry.utils.mergeObject(t.delta,i)}}else t.actorId=null,t.actorData={};return t}));return t.length?{tokens:t}:{}}function Pa(e,t){const a=foundry.utils.flattenObject(e.system),i=(Object.entries(t).filter(e=>e[0]),Object.entries(a).filter(e=>e[0].endsWith("_deprecated")&&!0===e[1]).map(e=>{let t=e[0].split(".");return t.pop(),t.join(".")}));for(let e of i){let a=e.split(".");a[a.length-1]="-="+a[a.length-1],t[`data.${a.join(".")}`]=null}}class $a extends(function(e){return class extends e{static _stylesheets=new WeakMap;static CSS="";adoptedCallback(){this._getStyleSheet()&&this._adoptStyleSheet(this._getStyleSheet())}_getStyleSheet(){let e=this.constructor._stylesheets.get(this.ownerDocument);return!e&&this.ownerDocument.defaultView&&(e=new this.ownerDocument.defaultView.CSSStyleSheet,e.replaceSync(this.constructor.CSS),this.constructor._stylesheets.set(this.ownerDocument,e)),e}_adoptStyleSheet(e){}}}(foundry.applications.elements.AbstractFormInputElement)){constructor(...e){super(...e),this._internals.role="checkbox",this._value=this.getAttribute("value"),this.#e=this._value,this.constructor.useShadowRoot&&(this.#t=this.attachShadow({mode:"closed"}))}static tagName="dnd5e-checkbox";static useShadowRoot=!0;static CSS="\n    :host {\n      cursor: pointer;\n      display: inline-block;\n      width: var(--checkbox-size, 18px);\n      height: var(--checkbox-size, 18px);\n      aspect-ratio: 1;\n    }\n\n    :host(:disabled) { cursor: default; }\n\n    :host > div {\n      width: 100%;\n      height: 100%;\n      border-radius: var(--checkbox-border-radius, 3px);\n      border: var(--checkbox-border-width, 2px) solid var(--checkbox-border-color, var(--dnd5e-color-gold));\n      background: var(--checkbox-empty-color, transparent);\n      box-sizing: border-box;\n      position: relative;\n    }\n\n    :host :is(.checked, .disabled, .indeterminate) {\n      display: none;\n      height: 100%;\n      width: 100%;\n      align-items: center;\n      justify-content: center;\n      position: absolute;\n      inset: 0;\n    }\n\n    :host([checked]) :is(.checked, .disabled, .indeterminate) {\n      background: var(--checkbox-fill-color, var(--dnd5e-color-gold));\n    }\n\n    :host([checked]) .checked { display: flex; }\n    :host([indeterminate]) .indeterminate { display: flex; }\n    :host([indeterminate]) .checked { display: none; }\n    :host(:disabled) .disabled { display: flex; }\n    :host(:disabled) .checked { display: none; }\n    :host(:disabled) .indeterminate { display: none; }\n  ";_controller;#t;get defaultValue(){return this.#e}#e;get indeterminate(){return this.hasAttribute("indeterminate")}set indeterminate(e){this.toggleAttribute("indeterminate",e)}get checked(){return this.hasAttribute("checked")}set checked(e){this.toggleAttribute("checked",e),this._refresh()}get value(){return super.value}set value(e){this._setValue(e)}_getValue(){return"string"==typeof this._value?this._value:this.checked}connectedCallback(){this._adoptStyleSheet(this._getStyleSheet());const e=this._buildElements();this.#t.replaceChildren(...e),this._refresh(),this._activateListeners(),this.hasAttribute("tabindex")||(this.tabIndex=0)}disconnectedCallback(){this._controller.abort()}_adoptStyleSheet(e){this.#t.adoptedStyleSheets=[e]}_buildElements(){const e=document.createElement("div");return e.innerHTML='\n      <div class="checked">\n        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"\n             style="fill: var(--checkbox-icon-color, #000); width: var(--checkbox-icon-size, 68%);">\n          \x3c!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--\x3e\n          <path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/>\n        </svg>\n      </div>\n      <div class="disabled">\n        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"\n             style="fill: var(--checkbox-icon-color, #000); width: var(--checkbox-icon-size, 68%);">\n          \x3c!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--\x3e\n          <path d="M144 144v48H304V144c0-44.2-35.8-80-80-80s-80 35.8-80 80zM80 192V144C80 64.5 144.5 0 224 0s144 64.5 144 144v48h16c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V256c0-35.3 28.7-64 64-64H80z"/>\n        </svg>\n      </div>\n      <div class="indeterminate">\n        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"\n             style="fill: var(--checkbox-icon-color, #000); width: var(--checkbox-icon-size, 68%);">\n          \x3c!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--\x3e\n          <path d="M432 256c0 17.7-14.3 32-32 32L48 288c-17.7 0-32-14.3-32-32s14.3-32 32-32l352 0c17.7 0 32 14.3 32 32z"/>\n        </svg>\n      </div>\n    ',[e]}_activateListeners(){const{signal:e}=this._controller=new AbortController;this.addEventListener("click",this._onClick.bind(this),{signal:e}),this.addEventListener("keydown",e=>" "===e.key?this._onClick(e):null,{signal:e})}_refresh(){super._refresh(),this._internals.ariaChecked=`${this.hasAttribute("checked")}`}_onClick(e){e.preventDefault(),this.checked=!this.checked,this.dispatchEvent(new Event("input",{bubbles:!0,cancelable:!0})),this.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!0}))}}class Ga extends $a{constructor(){super(),this._internals.role="switch"}static tagName="slide-toggle";static useShadowRoot=!1;connectedCallback(){this.replaceChildren(...this._buildElements()),this._refresh(),this._activateListeners()}_buildElements(){const e=document.createElement("div");e.classList.add("slide-toggle-track");const t=document.createElement("div");return t.classList.add("slide-toggle-thumb"),e.append(t),[e]}}class ja{static climate="cooltemperate";static dateTimeApi;static season="Spring";static start=0;static lastWatch=0;static weather=[];static async Render(){if(!game.settings.get("hm3","showWeather"))return;if(!game.user.isGM)return;if(!this.dateTimeApi)return;if(this.lastWatch===this.Watch())return;this.season=this.dateTimeApi.getCurrentSeason().name,this.lastWatch=this.Watch(),await this.InitializeNextMonth();const e=game.settings.get("hm3","weather"),t=e.weather[this.lastWatch].force,a=this.Data(e.weather[this.lastWatch].idx),i=e.weather[this.lastWatch].precipitation||a.precipitation,s=this.dateTimeApi.currentDateTimeDisplay(),n=s.date+s.yearPostfix+" "+s.time.substring(0,s.time.length-3),o={climate:"Climate: Cool Temperate",cover:qa(a.cover),coverIcon:Ja[a.cover],datetime:n,dir:a.dir,force:Ka(t),hasPrecipitation:i.length>0,precipitation:(l=i,0===l.length?"":1===l.length?Va[l[0]]:2===l.length?Va[l[0]]+" & "+Va[l[1]]:void 0),precipitationIcon:Ya(i),season:this.season,temp:this.Temp(a),title:"Current Weather",watch:this.lastWatch%6+1},r={content:(await renderTemplate("systems/hm3/templates/chat/weather-card.hbs",o)).trim(),user:game.user.id};var l;return ChatMessage.create(r,{})}static async Initialize(){if(this.dateTimeApi=SimpleCalendar?.api,!game.settings.get("hm3","showWeather"))return!1;if(!this.dateTimeApi)return!1;const e=game.settings.get("hm3","weather");if(1===e.weather.length){this.start=this.dateTimeApi.dateToTimestamp({year:720,month:0,day:0,hour:0,minute:0,seconds:0});let e=0;const t=[];for(let a=0;a<180;a++){const a=Wa()-1+this.Data(e).force,i=this.Data(e).precipitation;za(i,a)?t.push({idx:e,force:a,precipitation:i}):t.push({idx:e,force:a}),e=Ba(e)}await game.settings.set("hm3","weather",{start:this.start,weather:t})}else this.start=e.start,this.weather=e.weather,await this.InitializeNextMonth();return!0}static async InitializeNextMonth(){let e=game.settings.get("hm3","weather").weather;for(;e.length-this.Watch()<=180;){let t=e[e.length-1].idx;const a=[];for(let e=0;e<180;e++){t=Ba(t);const e=Wa()-1+this.Data(t).force,i=this.Data(t).precipitation;za(i,e)?a.push({idx:t,force:e,precipitation:i}):a.push({idx:t,force:e})}e=[...e,...a],await game.settings.set("hm3","weather",{start:this.start,weather:e})}}static Data(e){return Za[this.climate][this.season][e]}static Watch(){const e=this.dateTimeApi.dateToTimestamp({});return Math.floor((e-this.start)/game.hm3.CONST.TIME.WATCH)}static Temp(e){const t=this.Watch()%6+1,a="Winter"===this.dateTimeApi.getCurrentSeason().name;return t<=2||t>=6||a&&5===t?e.night:e.temp}}function Ba(e){const t=Ua();let a=0;return 1===t?a=-1:8===t||9===t?a=1:10===t&&(a=2),(e+20+a)%20}function Wa(){return Math.floor(3*foundry.dice.MersenneTwister.random())+1}function Ua(){return Math.floor(10*foundry.dice.MersenneTwister.random())+1}function Ka(e){return Qa[e]}function qa(e){return Xa[e]}function za(e,t){let a=!1;if(t>0){const t=e.indexOf("Fog");-1!==t&&(e.splice(t,1),a=!0)}const i=e.indexOf("Thunder"),s=e.indexOf("Hail");return-1!==i&&-1!==s&&1===Ua()&&(e.push("Hail"),a=!0),a}function Ya(e){return 0===e.length?"":1===e.length?Ja[e[0]]:2===e.length?Ja[e[0]]+" "+Ja[e[1]]:void 0}const Va={Fog:"Fog or Mist",Hail:"Hail",Rain:"Rain Showers or Light Rain",Snow:"Snow/Sleet Flurries",SteadyRain:"Steady or Heavy Rain",SteadySnow:"Steady Snow/Sleet",Thunder:"Thunderstorms"},Ja={Fog:"#10860;",Full:"#9679;",Half:"#9680;",No:"#9675;",Rain:"",Snow:"#8258;",SteadyRain:"",SteadySnow:"#10033;",Thunder:"#9928;"},Qa=["Calm","Breeze","Windy","Gale","Storm"],Xa={No:"Clear",Half:"Cloudy",Full:"Overcast"},Za={cooltemperate:{Spring:[{idx:1,temp:"Cold",night:"Cold",force:1,dir:"N",cover:"Full",precipitation:["Snow"]},{idx:2,temp:"Cool",night:"Cool",force:1,dir:"NE",cover:"Half",precipitation:[]},{idx:3,temp:"Warm",night:"Cool",force:0,dir:"SE",cover:"No",precipitation:["Fog"]},{idx:4,temp:"Warm",night:"Warm",force:1,dir:"SW",cover:"Half",precipitation:["Rain"]},{idx:5,temp:"Cool",night:"Cool",force:2,dir:"NW",cover:"Full",precipitation:["Rain"]},{idx:6,temp:"Cold",night:"Cold",force:2,dir:"NW",cover:"Full",precipitation:[]},{idx:7,temp:"Cold",night:"Frzg",force:1,dir:"SW",cover:"Half",precipitation:[]},{idx:8,temp:"Cool",night:"Cool",force:1,dir:"SW",cover:"Half",precipitation:[]},{idx:9,temp:"Cold",night:"Cold",force:1,dir:"NW",cover:"Half",precipitation:[]},{idx:10,temp:"Frzg",night:"Frzg",force:0,dir:"N",cover:"Half",precipitation:["Fog"]},{idx:11,temp:"Cold",night:"Frzg",force:1,dir:"N",cover:"No",precipitation:[]},{idx:12,temp:"Cool",night:"Frzg",force:1,dir:"NE",cover:"Half",precipitation:[]},{idx:13,temp:"Warm",night:"Cool",force:0,dir:"SE",cover:"No",precipitation:["Fog"]},{idx:14,temp:"Hot",night:"Warm",force:0,dir:"S",cover:"No",precipitation:["Fog"]},{idx:15,temp:"Warm",night:"Warm",force:0,dir:"SW",cover:"Half",precipitation:["Thunder"]},{idx:16,temp:"Cool",night:"Cold",force:1,dir:"NW",cover:"No",precipitation:[]},{idx:17,temp:"Cool",night:"Cool",force:2,dir:"SW",cover:"Half",precipitation:["Rain"]},{idx:18,temp:"Cool",night:"Cool",force:2,dir:"SW",cover:"Full",precipitation:["SteadyRain"]},{idx:19,temp:"Cold",night:"Cold",force:2,dir:"NW",cover:"Half",precipitation:["Snow"]},{idx:20,temp:"Cold",night:"Cold",force:1,dir:"NW",cover:"Full",precipitation:[]}],Summer:[{idx:1,temp:"Cool",night:"Cool",force:0,dir:"N",cover:"Half",precipitation:[]},{idx:2,temp:"Warm",night:"Warm",force:0,dir:"NE",cover:"Half",precipitation:["Rain"]},{idx:3,temp:"Hot",night:"Cool",force:0,dir:"SE",cover:"No",precipitation:[]},{idx:4,temp:"Hot",night:"Warm",force:0,dir:"S",cover:"No",precipitation:[]},{idx:5,temp:"Warm",night:"Warm",force:0,dir:"SW",cover:"Half",precipitation:["Thunder"]},{idx:6,temp:"Warm",night:"Cool",force:0,dir:"S",cover:"Half",precipitation:[]},{idx:7,temp:"Cool",night:"Cool",force:1,dir:"SW",cover:"Full",precipitation:["SteadyRain"]},{idx:8,temp:"Cool",night:"Cool",force:2,dir:"NW",cover:"Full",precipitation:["Rain"]},{idx:9,temp:"Warm",night:"Cool",force:1,dir:"SW",cover:"Half",precipitation:[]},{idx:10,temp:"Warm",night:"Cool",force:1,dir:"NW",cover:"No",precipitation:[]},{idx:11,temp:"Warm",night:"Cool",force:1,dir:"N",cover:"No",precipitation:[]},{idx:12,temp:"Hot",night:"Cool",force:0,dir:"NE",cover:"No",precipitation:["Fog"]},{idx:13,temp:"Hot",night:"Warm",force:0,dir:"SE",cover:"Half",precipitation:["Thunder"]},{idx:14,temp:"Warm",night:"Cool",force:0,dir:"S",cover:"Half",precipitation:[]},{idx:15,temp:"Warm",night:"Warm",force:0,dir:"SW",cover:"Half",precipitation:[]},{idx:16,temp:"Warm",night:"Cool",force:1,dir:"SW",cover:"Half",precipitation:[]},{idx:17,temp:"Cool",night:"Cool",force:2,dir:"SW",cover:"Full",precipitation:[]},{idx:18,temp:"Cool",night:"Cool",force:1,dir:"SW",cover:"Full",precipitation:["Rain"]},{idx:19,temp:"Cool",night:"Cool",force:1,dir:"SW",cover:"Full",precipitation:["SteadyRain"]},{idx:20,temp:"Cold",night:"Cold",force:0,dir:"NW",cover:"Full",precipitation:["SteadyRain"]}],Autumn:[{idx:1,temp:"Cool",night:"Cold",force:0,dir:"N",cover:"No",precipitation:["Fog"]},{idx:2,temp:"Warm",night:"Cool",force:0,dir:"N",cover:"Half",precipitation:[]},{idx:3,temp:"Warm",night:"Cool",force:0,dir:"NE",cover:"No",precipitation:["Fog"]},{idx:4,temp:"Hot",night:"Warm",force:0,dir:"SE",cover:"No",precipitation:["Fog"]},{idx:5,temp:"Hot",night:"Warm",force:0,dir:"S",cover:"Half",precipitation:["Thunder"]},{idx:6,temp:"Warm",night:"Warm",force:0,dir:"SW",cover:"Full",precipitation:["Rain"]},{idx:7,temp:"Cool",night:"Cool",force:1,dir:"NW",cover:"Full",precipitation:["SteadyRain"]},{idx:8,temp:"Cold",night:"Cold",force:1,dir:"SW",cover:"Full",precipitation:["SteadyRain"]},{idx:9,temp:"Cold",night:"Cold",force:2,dir:"NW",cover:"Full",precipitation:["SteadyRain"]},{idx:10,temp:"Cold",night:"Cold",force:1,dir:"N",cover:"Full",precipitation:[]},{idx:11,temp:"Cold",night:"Cold",force:2,dir:"N",cover:"Full",precipitation:[]},{idx:12,temp:"Cool",night:"Cool",force:1,dir:"NE",cover:"Full",precipitation:["Rain"]},{idx:13,temp:"Warm",night:"Cool",force:0,dir:"SE",cover:"Half",precipitation:["Fog"]},{idx:14,temp:"Cool",night:"Cool",force:1,dir:"S",cover:"Full",precipitation:["SteadyRain"]},{idx:15,temp:"Cool",night:"Cool",force:2,dir:"SW",cover:"Full",precipitation:[]},{idx:16,temp:"Warm",night:"Cool",force:1,dir:"S",cover:"Half",precipitation:["Rain"]},{idx:17,temp:"Warm",night:"Cool",force:1,dir:"SW",cover:"No",precipitation:[]},{idx:18,temp:"Cool",night:"Cold",force:2,dir:"NW",cover:"Half",precipitation:[]},{idx:19,temp:"Cold",night:"Frzg",force:2,dir:"SW",cover:"Full",precipitation:["Snow"]},{idx:20,temp:"Frzg",night:"Frzg",force:1,dir:"NW",cover:"Half",precipitation:[]}],Winter:[{idx:1,temp:"Cold",night:"Frzg",force:0,dir:"N",cover:"Full",precipitation:["SteadySnow"]},{idx:2,temp:"Frzg",night:"Frzg",force:1,dir:"NW",cover:"Full",precipitation:["Snow"]},{idx:3,temp:"Cold",night:"Cold",force:2,dir:"N",cover:"Full",precipitation:[]},{idx:4,temp:"Cool",night:"Cold",force:1,dir:"NE",cover:"Half",precipitation:[]},{idx:5,temp:"Warm",night:"Cold",force:0,dir:"SE",cover:"No",precipitation:["Fog"]},{idx:6,temp:"Cool",night:"Frzg",force:0,dir:"S",cover:"Half",precipitation:["Rain"]},{idx:7,temp:"Cold",night:"Cold",force:1,dir:"SW",cover:"Full",precipitation:["SteadyRain"]},{idx:8,temp:"Cold",night:"Cold",force:0,dir:"NW",cover:"Full",precipitation:["Snow"]},{idx:9,temp:"Cool",night:"Cool",force:1,dir:"SW",cover:"Full",precipitation:["Rain"]},{idx:10,temp:"Cold",night:"Cold",force:1,dir:"NW",cover:"Full",precipitation:["Snow"]},{idx:11,temp:"Cold",night:"Cold",force:2,dir:"N",cover:"Full",precipitation:["SteadySnow"]},{idx:12,temp:"Frzg",night:"Frzg",force:1,dir:"N",cover:"Full",precipitation:[]},{idx:13,temp:"Cool",night:"Frzg",force:2,dir:"NE",cover:"No",precipitation:[]},{idx:14,temp:"Cool",night:"Cold",force:1,dir:"SE",cover:"Half",precipitation:[]},{idx:15,temp:"Cool",night:"Frzg",force:1,dir:"S",cover:"No",precipitation:[]},{idx:16,temp:"Cool",night:"Cold",force:2,dir:"SW",cover:"Half",precipitation:["Rain"]},{idx:17,temp:"Cold",night:"Frzg",force:1,dir:"NW",cover:"Full",precipitation:["SteadySnow"]},{idx:18,temp:"Cold",night:"Cold",force:2,dir:"SW",cover:"Full",precipitation:["Snow"]},{idx:19,temp:"Cold",night:"Cold",force:1,dir:"SW",cover:"Half",precipitation:[]},{idx:20,temp:"Cold",night:"Cold",force:1,dir:"NW",cover:"Full",precipitation:[]}]},subartic:{spring:[],summer:[],autumn:[],winter:[]}};class ei{NORTH={dx:0,dy:-1};NORTH_EAST={dx:1,dy:-1};NORTH_WEST={dx:-1,dy:-1};SOUTH={dx:0,dy:1};SOUTH_EAST={dx:1,dy:1};SOUTH_WEST={dx:-1,dy:1};GM_USER_ID="uWIcxMD0zdnOha1B";ALICE_USER_ID="tzYR3eEvJND21kVc";INEN_USER_ID="ok0UravePcb5JK70";actors=new Map;tokens=new Map;async _prerequisites(){return!0}async _preSetup(){}async _postSetup(){}async _preTest(){}async _test(){}async _postTest(){}async _preTeardown(){}async _postTeardown(){}async#a(){try{await this._preSetup()}catch(e){return console.error("Error in pre-setup:",e),!1}try{console.log=()=>{},console.debug=()=>{},console.trace=()=>{},await ChatMessage.deleteDocuments(game.messages.contents.map(e=>e.id)),await(game.combat?.delete()),game.togglePause(!1,!0),this.actors.set("Alice",await this._createActor("Actor.JTK0gIOv6PfxeE1P","Alice")),this.actors.set("Bob",await this._createActor("Actor.6WYZs3HBnOOg3YXQ","Bob")),this.actors.set("Inen",await this._createActor("Actor.xbdJx9yLoAAC6xUb","Inen"))}catch(e){return console.error("Error during setup:",e),!1}try{await this._postSetup()}catch(e){return console.error("Error in post-setup:",e),!1}return!0}async start(){const e=await this._prerequisites();if(!0!==e)return ui.notifications.error("Prerequisites not met, skipping test: "+e),!1;let t=await this.#a();if(t){try{await this._preTest()}catch(e){t=!1,console.error("Error in pre-test:",e)}try{await this._wait(),t&&await this._test(),await this._wait()}catch(e){t=!1,console.error("Error during test execution:",e)}try{t&&await this._postTest()}catch(e){console.error("Error in post-test:",e)}}return await this._wait(),t=await this.#i()&&t,t}async#i(){let e=!0;try{await this._preTeardown()}catch(t){e=!1,console.error("Error in pre-teardown:",t)}try{await(game.combat?.delete());for(const e of this.tokens.values())await e.delete();for(const e of this.actors.values())await e.delete();this.actors.clear(),this.tokens.clear(),game.togglePause(!0,!0)}catch(t){e=!1,console.error("Error during teardown:",t)}try{await this._postTeardown()}catch(t){e=!1,console.error("Error in post-teardown:",t)}return e}static DefButtonsFromChatMsgProxy(e){const t=document.createElement("div");t.innerHTML=game.messages.contents[e].content;const a=t.getElementsByClassName("card-buttons")[0].firstElementChild;return Array.from(a.children).filter(e=>{const t=e.dataset.visibleActorId?game.actors.get(e.dataset.visibleActorId):null;return!(!t||!t.isOwner)}).map(t=>[t.innerHTML,{action:t.dataset.action,aim:t.dataset.aim,aspect:t.dataset.aspect,atkTokenId:t.dataset.atkTokenId,button:t,defTokenId:t.dataset.defTokenId,effAml:t.dataset.effAml,grappleAtk:t.dataset.grappleAtk,impactMod:t.dataset.impactMod,messageNr:e,visibleActorId:t.dataset.visibleActorId,weapon:t.dataset.weapon,weaponType:t.dataset.weaponType}])}async _defButtonsFromChatMsg(e=game.user.id,t=game.messages.contents.length-1){return game.hm3.socket.executeAsUser("defButtonsFromChatMsg",e,t)}static async DefActionProxy(e,{messageNr:t,roll:a}){if(!["Block","Counterstrike","Dodge","Ignore"].includes(e))return null;const i=ei.DefButtonsFromChatMsgProxy(t),s=new Map(i).get(e)?.button;return s?(game.hm3.Roll.D100_RESULTS.push(...a),s.onclick=async e=>CONFIG.Actor.documentClass._onChatCardAction({altKey:!0,currentTarget:s,preventDefault:()=>e.preventDefault()}),Promise.all([new Promise(t=>{Hooks.once(`hm3.on${e}Resume`,e=>{t(e)})}),s.click()])):null}async _defAction(e,{messageNr:t=game.messages.contents.length-1,unsetTAFlag:a=!1,userId:i=game.user.id,roll:s=[]}={}){return a&&await game.hm3.socket.executeAsGM("unsetTAFlag"),game.hm3.socket.executeAsUser("defAction",i,e,{messageNr:t,roll:s})}async _createActor(e,t,a={}){const i=fromUuidSync(e).toObject();return i.name=t,i.prototypeToken.name=t,i.folder=null,delete i.flags["scene-packer"],this.actors.set(t,await Actor.create(i)),this.actors.get(t)}async _dropActor(e,t,a={dx:0,dy:0}){t.uuid=e.uuid,t.type="Actor";const i=await canvas.tokens._onDropActorData({altKey:!1,shiftKey:!1},t);return this.tokens.set(i.name,i),await this._move(i.object,a),i.object}async _move(e,t={dx:0,dy:0}){e.control({releaseOthers:!0}),await Promise.allSettled([game.canvas.activeLayer.moveMany(t),this._wait(Math.max(50,300)/1)])}async _resetAllConditions(e){await Promise.all(Object.values(game.hm3.Condition).map(async t=>{await e.deleteCondition(t)})),await(e.combatant?.update({defeated:!1}))}async _startCombat(){await TokenDocument.createCombatants(this.tokens.values()),await game.combat.startCombat()}async _wait(e=50){return new Promise((t,a)=>{setTimeout(()=>{t()},1*e)})}}const ti=new Map([["(i02) - morale",new class extends ei{async _test(){const e=game.hm3.Condition,t=await this._dropActor(this.actors.get("Alice"),{x:7870,y:14258}),a=await t.addCondition(e.BERSERK);console.info("Adding condition: %s to token: %s",e.BERSERK,t.name),console.assert(a&&a instanceof ActiveEffect,"Condition is NOT an ActiveEffect: %O",a);const i=await t.addCondition(e.BROKEN);console.info("Adding condition: %s to token: %s",e.BROKEN,t.name),console.assert(i&&i instanceof ActiveEffect,"Condition is NOT an ActiveEffect: %O",i),console.assert(!t.hasCondition(e.BERSERK),"Token DOES have condition: %s",e.BERSERK);const s=await t.addCondition(e.CAUTIOUS);console.info("Adding condition: %s to token: %s",e.CAUTIOUS,t.name),console.assert(s&&s instanceof ActiveEffect,"Condition is NOT an ActiveEffect: %O",s),console.assert(!t.hasCondition(e.BROKEN),"Token DOES have condition: %s",e.BROKEN);const n=await t.addCondition(e.DESPERATE);console.info("Adding condition: %s to token: %s",e.DESPERATE,t.name),console.assert(n&&n instanceof ActiveEffect,"Condition is NOT an ActiveEffect: %O",n),console.assert(!t.hasCondition(e.CAUTIOUS),"Token DOES have condition: %s",e.CAUTIOUS);const o=await t.addCondition(e.EMPOWERED);console.info("Adding condition: %s to token: %s",e.EMPOWERED,t.name),console.assert(o&&o instanceof ActiveEffect,"Condition is NOT an ActiveEffect: %O",o),console.assert(!t.hasCondition(e.DESPERATE),"Token DOES have condition: %s",e.DESPERATE);const r=await t.addCondition(e.WEAKENED);console.info("Adding condition: %s to token: %s",e.WEAKENED,t.name),console.assert(r&&r instanceof ActiveEffect,"Condition is NOT an ActiveEffect: %O",r),console.assert(!t.hasCondition(e.EMPOWERED),"Token DOES have condition: %s",e.EMPOWERED)}}]]);let ai=!1;async function ii(){if(ai)ui.notifications.warn("Test runner is already running. Please wait for it to finish.");else{ai=!0,console.clear(),console.info("%cRunning tests...","color: #b6b4a5");for(const t of ti.keys()){console.info("%c\n----------------------------------------","color: #b6b4a5"),console.info(`%cRunning test: ${t}`,"color: #b6b4a5");var e=ti.get(t);await e.start()?console.info(`%cTest "${t}" completed successfully.`,"color: #00990d"):console.error(`%cTest "${t}" failed.`,"color: #b30000")}ai=!1}}function si(){return!game.combats?.active?.getFlag("hm3","TA")}async function ni(){return game.combats?.active?.setFlag("hm3","TA",!0)}async function oi(){return game.combats?.active?.unsetFlag("hm3","TA")}async function ri(e,t){const a=fromUuidSync(e);a&&(await a.update({"system.isEquipped":!1,"system.notes":("Weapon is damaged! "+a.system.notes).trim(),"system.wqModifier":(a.system.wqModifier||0)-t}),console.info(`HM3 | Weapon '${a.name}' from actor '${a.actor.name}' broke by -${t}.`))}async function li(e,t){const a=fromUuidSync(e);if(a){const e=a.system.improveFlag;await a.update({"system.improveFlag":a.system.improveFlag+(t?1:2)}),console.info(`HM3 | Skill '${a.name}' from actor '${a.actor.name}' improvement flag increased by ${t?1:2} from ${e} to ${a.system.improveFlag}.`)}}async function ci(e,t){const a=fromUuidSync(e);a&&(await a.update({"system.fatigue":(a.system.fatigue||0)+t}),console.info(`HM3 | Actor '${a.name}' received ${t} Fatigue Level(s).`))}async function mi({gmonly:e,sendingUserId:t,source:a,text:i,tokenId:s}){return game.hm3.GmSays({gmonly:e,sendingUser:game.users.get(t),source:a,text:i,token:canvas.tokens.get(s)})}function di(e,t,a,i){const s=`\n\nUSER ERROR\nMsg....: ${a}\nUser...: ${e}\nError..: ${i.message}\n\n%O`;switch(t){case"trace":game.settings.get("hm3","debugMode")&&console.trace(s,i);break;case"debug":game.settings.get("hm3","debugMode")&&console.debug(s,i);break;case"info":case"log":console.info(s,i),ui.notifications.info(`${e} logged a GM message: ${a}`,{permanent:!0});break;case"warn":console.warn(s,i),ui.notifications.warn(`${e} logged a GM message: ${a}`,{permanent:!0});break;case"error":console.error(s,i),ui.notifications.error(`${e} logged a GM message: ${a}`,{permanent:!0});break;default:console.warn(`Unknown log level: ${t}.`,i)}}function hi(e,...t){Hooks.callAll(e,...t)}async function gi(e,t,a,i,s,n,o){let r={check:e,name:t,type:a,formula:i,minimum:s,maximum:n,target:o};const l=await renderTemplate("systems/hm3/templates/dialog/cheat-dialog.hbs",r);return new Promise("roll"!==e?t=>new Dialog({content:l.trim(),title:`${e} Cheat Roll`,buttons:"d100"===e?{cs:{label:"CS",callback:async e=>{t({targetSuccess:!0,targetCritical:!0})}},ss:{label:"SS",callback:async e=>{t({targetSuccess:!0,targetCritical:!1,targetSubstantial:!0})}},ms:{label:"MS",callback:async e=>{t({targetSuccess:!0,targetCritical:!1,targetSubstantial:!1})}},mf:{label:"MF",callback:async e=>{t({targetSuccess:!1,targetCritical:!1,targetSubstantial:!1})}},sf:{label:"SF",callback:async e=>{t({targetSuccess:!1,targetCritical:!1,targetSubstantial:!0})}},cf:{label:"CF",callback:async e=>{t({targetSuccess:!1,targetCritical:!0})}},success:{label:"Success",callback:async e=>{t({targetSuccess:!0})}},failure:{label:"Failure",callback:async e=>{t({targetSuccess:!1})}}}:{success:{label:"Success",callback:async e=>{t({targetSuccess:!0})}},failure:{label:"Failure",callback:async e=>{t({targetSuccess:!1})}}}}).render(!0):t=>new Dialog({content:l.trim(),title:`${e} Cheat Roll`,buttons:{minimum:{label:`Minimum (${s})`,callback:async e=>{t({targetValue:s})}},average:{label:`Average (${Math.round((s+n)/2)})`,callback:async e=>{t({targetValue:Math.round((s+n)/2)})}},maximum:{label:`Maximum (${n})`,callback:async e=>{t({targetValue:n})}},random:{label:"Random",callback:async e=>{t({targetValue:null})}}}},{width:500}).render(!0))}Hooks.once("init",async function(){console.info(`HM3 | Initializing the HM3 Game System\n${i.ASCII}`),CONFIG.ActiveEffect.legacyTransferral=!1,window.customElements.define("slide-toggle",Ga),game.hm3={config:i,macros:t,migrations:a,ActorHM3:Ht,ActorType:s,ArcanePower:n,Aspect:o,Condition:l,Hook:c,InjuryType:m,ItemType:d,Location:u,MiscItemType:h,Range:g,SkillType:p,CONST:{COMBAT:{SHOCK_INDEX_THRESHOLD:20},TIME:{SECOND:1,MINUTE:60,HOUR:3600,WATCH:14400,DAY:86400,TENDAY:864e3,MONTH:2592e3,YEAR:31104e3,PERMANENT:Number.MAX_SAFE_INTEGER-1,INDEFINITE:Number.MAX_SAFE_INTEGER}},gmconsole:async(e,t,a)=>game.hm3.socket.executeAsGM("gmConsole",game.user.name,e,t,a),Gm2GmSays:async(e,t,a=null)=>game.hm3.socket.executeAsGM("GmSays",{gmonly:!0,sendingUserId:game.user.id,source:t,text:e,tokenId:a?a.id:null}),GmSays:async({gmonly:e=!1,sendingUser:t=null,source:a=null,text:i=null,token:s=null})=>{if(console.assert(i,"Parameter text not set"),console.assert(!!game.user.isGM||s,"Parameter token not set"),!i)return;const n=game.users.filter(e=>e.isGM).map(e=>e.id),o={content:a?`<div class="chat-card gmsays"><blockquote lang="en"><p>${i}</p><cite>&ndash; ${a}</cite></blockquote></div>`:`<div class="chat-card gmsays"><blockquote lang="en"><p>${i}</p></blockquote></div>`,speaker:game.user.isGM?ta.getSpeaker({alias:"Simon says...",user:game.user}):ta.getSpeaker({token:s}),type:CONST.CHAT_MESSAGE_STYLES.OTHER};return e&&game.user.isGM?(o.whisper=n,console.info(`HM3 [GmSays] | GM only: ${i.replaceAll("<b>","").replaceAll("</b>","").replaceAll("<h4>","").replaceAll("</h4>","").replaceAll("<p>","").replaceAll("</p>","")}`),await ChatMessage.create(o)):e?void 0:(console.info(`HM3 [GmSays] | ${i.replaceAll("<b>","").replaceAll("</b>","").replaceAll("<h4>","").replaceAll("</h4>","").replaceAll("<p>","").replaceAll("</p>","")}`),await ChatMessage.create(o))}},CONFIG.Combat.initiative={formula:"@initiative",decimals:1},CONFIG.time.roundTime=10,CONFIG.time.turnTime=0,CONFIG.HM3=i,CONFIG.canvasTextStyle=new PIXI.TextStyle({fontFamily:"Amasis MT Medium",fontSize:36,fill:"#FFFFFF",stroke:"#111111",strokeThickness:1,dropShadow:!0,dropShadowColor:"#000000",dropShadowBlur:2,dropShadowAngle:0,dropShadowDistance:0,align:"center",wordWrap:!1,padding:1}),game.settings.register("hm3","systemMigrationVersion",{name:"System Migration Version",scope:"world",config:!1,type:String,default:0}),game.settings.register("hm3","actorMacrosFolderId",{name:"ID of Actor Folder",scope:"world",config:!1,type:String,default:null}),game.settings.register("hm3","weather",{name:"Current Weather",scope:"world",config:!1,type:Object,default:{start:0,weather:[{idx:void 0,force:void 0,precipitation:void 0}]}}),game.settings.register("hm3","showWelcomeDialog",{name:"Show Welcome Dialog On Start",hint:"Display the welcome dialog box when the user logs in.",scope:"client",config:!0,type:Boolean,default:!0}),game.settings.register("hm3","customSunSign",{name:"Custom SunSigns",hint:"Enable custom SunSigns (no dropdown)",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("hm3","weaponDamage",{name:"Weapon Damage",hint:"Enable optional combat rule that allows weapons to be damaged or destroyed on successful block (Combat 12)",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("hm3","bloodloss",{name:"Bloodloss",hint:"Enable optional combat rule that tracks bloodloss as an injury (Combat 14) (partially implemented)",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("hm3","amputation",{name:"Amputation",hint:"Enable optional combat rule that supports limb amputations (Combat 14)",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("hm3","limbInjuries",{name:"Limb Injuries",hint:"Enable optional combat rule to handle stumble/fumble on limb injury (Combat 14)",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("hm3","addInjuryToActorSheet",{name:"Add Injuries",hint:"Automatically add injuries to actor sheet",scope:"world",config:!0,default:"enable",type:String,choices:{enable:"Add Injuries Automatically",disable:"Don't Add Injuries Automatically",ask:"Prompt User On Each Injury"}}),game.settings.register("hm3","missileTracking",{name:"Track Missile Quantity",hint:"Enable tracking of missile quantity, reduce missile quantity by 1 when used, and disallow missile attack when quantity is zero.",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("hm3","combatAudio",{name:"Combat Sounds",hint:"Enable combat flavor sounds",scope:"world",config:!0,default:!0,type:Boolean}),game.settings.register("hm3","distanceUnits",{name:"Distance Units",hint:"What units should be used for a missile weapon's short/medium/long/extreme range attributes?",scope:"client",config:!0,default:"scene",type:String,choices:{scene:"Scene Units (e.g. feet)",grid:"Grid Units (e.g. hexes or squares)"}}),game.settings.register("hm3","dormantPsionicTalents",{name:"NEW Dormant Psionic Talents",hint:"Activate to make dormant psionic talents (ML20 or less) invisible to the players. GM still sees the dormant talents. (Psionics 3)",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("hm3","strictGmMode",{name:"NEW Strict GM Mode",hint:"If selected, players will no longer be able to change various data, such as weight, value and other aspects of the gear items. The GM can still change everything. In addition, the GM can hide the value of individual items from the players.",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("hm3","blindGmMode",{name:"NEW Blind GM Mode",hint:"If selected, some skill rolls (such as Awareness, Hearing, Weatherlore, etc. (in cases where success or failure may not be obvious)) are handled as Blind GM Roll regardless of the Roll Mode setting. (Skills 5)",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("hm3","activeEffectPermissions",{name:"NEW Active Effect Permissions",hint:"If selected, the active effect permissions are taken into account for the visibility of the effects for the players.",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("hm3","showWeather",{name:"NEW Weather",hint:"If selected, weather is randomly generated according to HM rules for each watch.",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("hm3","autoMarkUsedSkills",{name:"NEW Auto Mark Used Skills",hint:"If selected, the skills used are automatically marked for an SDR.",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("hm3","truncateHighValueSkills",{name:"NEW Truncate High Value Skills",hint:"If selected, the skills are truncated according to HMA_Rulebook_v1.4.pdf.",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("hm3","debugMode",{name:"NEW Debug Mode",hint:"If selected, Debug Mode is active.",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("hm3","cheatMode",{name:"NEW Cheat Mode",hint:"If selected, Cheat Mode is active.",scope:"world",config:!0,default:!1,type:Boolean}),CONFIG.Actor.documentClass=Ht,CONFIG.Actor.typeLabels={base:"Base",character:"Character",creature:"Creature",container:"Container"},CONFIG.Item.documentClass=Ra,CONFIG.Item.typeLabels={base:"Base",armorgear:"Armor",armorlocation:"Armor Location",companion:"Companion",containergear:"Container",effectgear:"Effect",injury:"Injury",invocation:"Invocation",miscgear:"Misc. Gear",missilegear:"Missile Weapon",psionic:"Psionic",skill:"Skill",spell:"Spell",trait:"Trait",weapongear:"Melee Weapon"},CONFIG.Combat.documentClass=aa,CONFIG.TinyMCE.style_formats[0].items.push({title:"Highlight",block:"section",classes:"highlight",wrapper:!0}),CONFIG.ActiveEffect.documentClass=ea,CONFIG.AmbientLight.objectClass=oa,CONFIG.AmbientSound.objectClass=ra,CONFIG.ChatMessage.documentClass=ta,CONFIG.Combatant.documentClass=ia,CONFIG.Dice.rolls[0]=ye,CONFIG.Drawing.objectClass=la,CONFIG.Macro.documentClass=sa,CONFIG.Note.objectClass=ma,CONFIG.Region.objectClass=da,CONFIG.Tile.objectClass=ua,CONFIG.Token.documentClass=P,CONFIG.Token.objectClass=H,CONFIG.Wall.objectClass=ha,Actors.unregisterSheet("core",ActorSheet),Actors.registerSheet("hm3",Vt,{types:["character"],label:"HM3 Character Sheet"}),Actors.registerSheet("hm3",zt,{types:["character"],makeDefault:!0,label:"HM3 Character Sheet v2"}),Actors.registerSheet("hm3",Zt,{types:["creature"],label:"HM3 Creature Sheet"}),Actors.registerSheet("hm3",Xt,{types:["creature"],makeDefault:!0,label:"HM3 Creature Sheet v2"}),Actors.registerSheet("hm3",Qt,{types:["container"],label:"HM3 Container Sheet"}),Actors.registerSheet("hm3",Jt,{types:["container"],makeDefault:!0,label:"HM3 Container Sheet v2"}),DocumentSheetConfig.unregisterSheet(ActiveEffect,"core",ActiveEffectConfig),DocumentSheetConfig.registerSheet(ActiveEffect,"hm3",na,{makeDefault:!0,label:"Default HarnMaster Active Effect Sheet"}),DocumentSheetConfig.unregisterSheet(Macro,"core",MacroConfig),DocumentSheetConfig.registerSheet(Macro,"hm3",ca,{makeDefault:!0,label:"Default HarnMaster Macro Sheet"}),Items.unregisterSheet("core",ItemSheet),Items.registerSheet("hm3",pa,{label:"HM3 Item Sheet"}),Items.registerSheet("hm3",ga,{label:"HM3 Item Sheet v2",makeDefault:!0}),Handlebars.registerHelper("concat",function(){var e="";for(var t in arguments)"object"!=typeof arguments[t]&&(e+=arguments[t]);return e}),Handlebars.registerHelper("toLowerCase",function(e){return e.toLowerCase()}),Handlebars.registerHelper("capitalizeFirstLetter",function(e){return e.charAt(0).toUpperCase()+e.slice(1)}),Handlebars.registerHelper("not",function(e){return!e}),Handlebars.registerHelper("getLabel",function(e,t){return e.find(e=>e.key===t).label});const e="systems/hm3/templates/",r=`${e}item-v2/partials/`,f=`${e}actor-v2/partials/`;Handlebars.registerPartial({char_esoteric_list_partial:await(await fetch(`${e}actor/partials/esoteric_list_partial.hbs`)).text(),char_fff_list_partial:await(await fetch(`${e}actor/partials/fff_list_partial.hbs`)).text(),char_layout_partial:await(await fetch(`${e}actor/partials/structure_partial.hbs`)).text(),char_skill_list_partial:await(await fetch(`${e}actor/partials/skill_list_partial.hbs`)).text(),char_v2_ability_partial:await(await fetch(`${f}ability_partial.hbs`)).text(),char_v2_esoteric_list_partial:await(await fetch(`${f}esoteric_list_partial.hbs`)).text(),char_v2_fff_list_partial:await(await fetch(`${f}fff_list_partial.hbs`)).text(),char_v2_img_partial:await(await fetch(`${f}img_partial.hbs`)).text(),char_v2_layout_partial:await(await fetch(`${f}structure_partial.hbs`)).text(),char_v2_skill_list_partial:await(await fetch(`${f}skill_list_partial.hbs`)).text(),item_artifact_partial:await(await fetch(`${e}item/partials/artifact_partial.hbs`)).text(),item_artifact_power_partial:await(await fetch(`${e}item/partials/artifact_power_partial.hbs`)).text(),item_esoteric_combat_partial:await(await fetch(`${e}item/partials/esoteric_combat_partial.hbs`)).text(),item_layout_partial:await(await fetch(`${e}item/partials/structure_partial.hbs`)).text(),item_standard_partial:await(await fetch(`${e}item/partials/standard_partial.hbs`)).text(),item_unknown_value_partial:await(await fetch(`${e}item/partials/unknown_value_partial.hbs`)).text(),item_v2_artifact_partial:await(await fetch(`${r}artifact_partial.hbs`)).text(),item_v2_artifact_power_partial:await(await fetch(`${r}artifact_power_partial.hbs`)).text(),item_v2_esoteric_combat_partial:await(await fetch(`${r}esoteric_combat_partial.hbs`)).text(),item_v2_layout_partial:await(await fetch(`${r}structure_partial.hbs`)).text(),item_v2_quantity_partial:await(await fetch(`${r}quantity_partial.hbs`)).text(),item_v2_sb_partial:await(await fetch(`${r}sb_partial.hbs`)).text(),item_v2_standard_partial:await(await fetch(`${r}standard_partial.hbs`)).text(),item_v2_unknown_value_partial:await(await fetch(`${r}unknown_value_partial.hbs`)).text(),item_v2_value_partial:await(await fetch(`${r}value_partial.hbs`)).text(),item_v2_weight_partial:await(await fetch(`${r}weight_partial.hbs`)).text(),effects_partial:await(await fetch(`${e}partials/effects_partial.hbs`)).text(),legacy_macro_partial:await(await fetch(`${e}partials/legacy_macro_partial.hbs`)).text(),macros_partial:await(await fetch(`${e}partials/macros_partial.hbs`)).text()}),CONFIG.TinyMCE.font_formats=(CONFIG.TinyMCE.font_formats?CONFIG.TinyMCE.font_formats:"Andale Mono=andale mono,times; Arial=arial,helvetica,sans-serif; Arial Black=arial black,avant garde; Book Antiqua=book antiqua,palatino; Comic Sans MS=comic sans ms,sans-serif; Courier New=courier new,courier; Georgia=georgia,palatino; Helvetica=helvetica; Impact=impact,chicago; Signika=Signika,sans-serif;Symbol=symbol; Tahoma=tahoma,arial,helvetica,sans-serif; Terminal=terminal,monaco; Times New Roman=times new roman,times; Trebuchet MS=trebuchet ms,geneva; Verdana=verdana,geneva; Webdings=webdings; Wingdings=wingdings,zapf dingbats")+";Martel=Martel;Roboto=Roboto;Lakise=Lakise;Runic=Runic;Lankorian Blackhand=Lankorian Blackhand;Amasis MT Medium=Amasis MT Medium",Object.assign(CONFIG.fontDefinitions,{Lakise:{editor:!0,fonts:[{urls:["./systems/hm3/fonts/Harn-Lakise-Normal.otf"]}]},Runic:{editor:!0,fonts:[{urls:["./systems/hm3/fonts/Harn-Runic-Normal.otf"]}]},"Lankorian Blackhand":{editor:!0,fonts:[{urls:["./systems/hm3/fonts/Lankorian-Blackhand.otf"]}]},"Amasis MT Medium":{editor:!0,fonts:[{urls:["./systems/hm3/fonts/amasis-mt-medium.ttf","./systems/hm3/fonts/amasis-mt-medium-italic.ttf"]}]}}),Hooks.on("getActorDirectoryEntryContext",(e,t)=>{t.unshift({name:"View Bio Artwork",icon:'<i class="fas fa-image"></i>',callback:async e=>{const t=game.actors.get(e.data("documentId"));new ImagePopout(t.system.bioImage,{title:t.name,uuid:t.uuid}).render(!0)},condition:e=>{const t=game.actors.get(e.data("documentId"));return game.user.isGM&&t?.system?.bioImage}})})}),Hooks.on("renderChatMessage",(e,t,a)=>{!function(e,t){const a=t.find(".hm3.chat-card");if(a.length>0){if(game.user.isGM)return;a.find("button[data-action]").each((e,t)=>{const a=t.dataset.visibleActorId?game.actors.get(t.dataset.visibleActorId):null;a&&a.isOwner||(t.style.display="none")})}}(0,t)}),Hooks.on("renderChatLog",(e,t,a)=>Ht.chatListeners(t)),Hooks.on("renderChatPopout",(e,t,a)=>Ht.chatListeners(t)),Hooks.on("updateWorldTime",async(e,t)=>{await $t(),await jt()}),Hooks.on("updateCombat",async(e,t)=>{await $t(),await jt()}),Hooks.on("hm3.onShockIndexReduced",async(e,t,a)=>{game.combat?.started&&e.parent instanceof P&&!e.parent.player&&e.parent.hasCondition(game.hm3.Condition.UNCONSCIOUS)&&e.testUserPermission(game.user,"OWNER")&&(await e.parent.deleteCondition(game.hm3.Condition.UNCONSCIOUS),await e.parent.addCondition(game.hm3.Condition.UNCONSCIOUS),Hooks.call("hm3.onShockIndexReduced2",e,t,a))}),Hooks.on("hm3.onTotalInjuryLevelsChanged",async(e,t,a)=>{const i=e.hasCondition(l.INANIMATE);i&&(e.system.injuryLevels.max=e.system.endurance),e.system.injuryLevels.value=a,e.testUserPermission(game.user,"OWNER")&&(await e.update({"system.injuryLevels":e.system.injuryLevels}),i&&a>=e.system.injuryLevels.max&&await e.token.addCondition(l.DYING))}),Hooks.on("updateCombat",async(e,t)=>fi({hook:"updateCombat"})),Hooks.on("updateCombatant",async(e,t,a,i)=>fi({hook:"updateCombatant"})),Hooks.on("createActiveEffect",async(e,t,a)=>fi({aeName:e.name,hook:"createActiveEffect"})),Hooks.on("deleteActiveEffect",async(e,t,a)=>fi({aeName:e.name,hook:"deleteActiveEffect"})),Hooks.on("createItem",async(e,t,a)=>{e.type===d.EFFECT&&e.system.selfDestroy&&e.parent instanceof Actor&&e.effects.forEach(t=>{t.getFlag("effectmacro","onDisable.script")||t.setFlag("effectmacro","onDisable.script",N(`\n                  const item = fromUuidSync('${e.uuid}');\n                  if (item) {\n                    if (item.effects.contents.filter((e)=>e.disabled).length === item.effects.size) {\n                      item.delete();\n                    }\n                  }`))})}),Hooks.on("preUpdateMacro",async(e,t,a,i)=>{t.command&&(t.command=N(t.command))}),Hooks.on("hm3.onMount",async(e,t)=>{if(!e.testUserPermission(game.user,"OWNER")||!t.testUserPermission(game.user,"OWNER"))return;await e.update({"system.mounted":!0}),e.prepareData(),e.items.find(e=>e.type===d.SKILL&&e.name.includes("Riding")).sheet.render();const a=t.items.find(e=>e.type===d.MISCGEAR&&e.name.includes("Rider"));await(a?.delete()),await Item.create({img:e.img,name:"Rider/"+e.name,system:{actorUuid:e.uuid,type:"Rider",weight:e.system.weight+e.system.totalWeight},type:d.MISCGEAR},{parent:t})}),Hooks.on("hm3.onUnmount",async(e,t)=>{if(!e.testUserPermission(game.user,"OWNER")||!t.testUserPermission(game.user,"OWNER"))return;await e.update({"system.mounted":!1}),e.prepareData(),e.items.find(e=>e.type===d.SKILL&&e.name.includes("Riding")).sheet.render();const a=t.items.find(e=>e.type===d.MISCGEAR&&e.name.includes("Rider"));await(a?.delete())}),Hooks.on("dropCanvasData",async(e,t)=>{if("Item"===t.type){const a=e.tokens.placeables.find(e=>e.bounds.contains(t.x,t.y));if(!a)return;const i=a.actor;if(!i)return;const s=await Item.fromDropData(t);if(!s)return;await i.createEmbeddedDocuments("Item",[s.toObject()]),ui.notifications.info(`"${s.name}" was added to ${a.name}.`)}}),Hooks.once("ready",async function(){game.hm3.socket=socketlib.registerSystem("hm3"),game.settings.get("hm3","debugMode")?(CONFIG.debug.hm3=!0,game.hm3.runner=ii,game.hm3.socket.register("defButtonsFromChatMsg",game.hm3.BaseTest.DefButtonsFromChatMsgProxy),game.hm3.socket.register("defAction",game.hm3.BaseTest.DefActionProxy),console.clear()):(CONFIG.debug.hm3=!1,CONFIG.debug.hooks=!1,console.log=()=>{},console.debug=()=>{},console.trace=()=>{},game.hm3.runner=()=>ui.notifications.info("Please turn on Debug Mode."),console.clear());const e=game.settings.get("hm3","systemMigrationVersion");if(e?foundry.utils.isNewerVersion("12.0.99",e)&&game.user.isGM&&await Oa():game.settings.set("hm3","systemMigrationVersion",game.system.version),Hooks.on("hotbarDrop",(e,t,a)=>ke(t,a)),!game.settings.get("hm3","actorMacrosFolderId")||game.actors.contents.length>0&&!game.actors.contents[0].macrofolder){const e=await Folder.create({name:"Actor Macros (DO NOT DELETE)",type:"Macro",color:10066329});await game.settings.set("hm3","actorMacrosFolderId",e.id)}var t,a,s;await async function(){[...Ut,...Wt].forEach(e=>{Hooks.on(e,async(...t)=>await async function(...e){const t=e.pop();await Promise.all(game.macros.contents.map(async a=>{if(a.getFlag("hm3","trigger")===t&&a.canExecute){const i=a.getFlag("hm3","ownerId")||null;try{await a.execute({macroActor:game.actors.get(i)||null,macroTokens:i?canvas.scene.tokens.contents.filter(e=>e.actor.id===i):null,allOtherTokens:i?canvas.scene.tokens.contents.filter(e=>e.actor.id!==i):null,triggerArgs:e,macros:game.hm3.macros})}catch(e){game.user.isGM&&ui.notifications.error(`Error executing macro ${a.name} (${a.id}) for hook ${t}:`)}}}))}(...t,e))})}(),await ja.Initialize()&&(ja.Render(),Hooks.on("updateWorldTime",()=>{ja.Render()})),a="keypress",s=function(e){if("Enter"===(e=e||window.event).key&&!e.shiftKey){var t=document.createEvent("MouseEvents");t.initEvent("dblclick",!0,!0),e.currentTarget.dispatchEvent(t)}},(t=document).addEventListener?t.addEventListener(a,s,!1):t.attachEvent?t.attachEvent("on"+a,s):t["on"+a]=s,i.ready=!0,game.settings.get("hm3","showWelcomeDialog")&&async function(){const e=await renderTemplate("systems/hm3/templates/dialog/welcome.html",{});return Dialog.prompt({title:"Welcome!",content:e,label:"OK",callback:e=>{const t=e.querySelector("#welcome");return new FormDataExtended(t).object.showOnStartup},options:{jQuery:!1}})}().then(e=>{game.settings.set("hm3","showWelcomeDialog",e)}),game.user.can("MACRO_SCRIPT")||ui.notifications.warn("You do not have permission to run JavaScript macros, so all skill and esoterics macros have been disabled.")}),Hooks.on("renderPause",(e,t)=>t.find("img").attr("src","systems/hm3/images/png/HMLogo.png")),Hooks.on("preCreateCombatant",(e,t,a,i)=>{if(!t.initiative){let e=canvas.tokens.get(t.tokenId);t.initiative=e.actor.system.initiative}}),Hooks.on("createCombatant",(e,t,a)=>{e.testUserPermission(game.user,"OWNER")&&e.rollInitiative()}),Hooks.once("dragRuler.ready",e=>{dragRuler.registerSystem("hm3",class extends e{get colors(){return[{id:"creep",default:152,name:"hm3.speed-provider.creep"},{id:"walk",default:2001125,name:"hm3.speed-provider.walk"},{id:"jog",default:6989903,name:"hm3.speed-provider.jog"},{id:"run",default:16761095,name:"hm3.speed-provider.run"},{id:"sprint",default:15879441,name:"hm3.speed-provider.sprint"}]}get defaultUnreachableColor(){return 0}getRanges(e){const t=Math.max(e.actor.system.move.effective,1),a={range:5*Math.max(Math.round(t/3+Number.EPSILON),1),color:"creep"},i={range:5*Math.max(Math.round(t/2+Number.EPSILON),2),color:"walk"},s={range:5*Math.max(Math.round(t+Number.EPSILON),4),color:"jog"},n={range:5*Math.max(Math.round(2*t+Number.EPSILON),8),color:"run"},o={range:5*Math.max(Math.round(3*t+Number.EPSILON),12),color:"sprint"},r=e.hasCondition(game.hm3.Condition.GRAPPLED),l=e.hasCondition(game.hm3.Condition.INANIMATE),c=e.hasCondition(game.hm3.Condition.PRONE),m=e.hasCondition(game.hm3.Condition.SHOCKED),d=e.hasCondition(game.hm3.Condition.STUNNED),u=e.hasCondition(game.hm3.Condition.UNCONSCIOUS);return l?[a,i,s,n,o]:r||d||u?[{range:-1,color:"creep"}]:c||m||e.actor.system.shockIndex.value<20?[a,i]:e.hasGreviousLegInjuries()?[a,i,s,n]:[a,i,s,n,o]}})}),Handlebars.registerHelper("multiply",function(e,t){return e*t}),Handlebars.registerHelper("endswith",function(e,t){return e.endsWith(t)}),Hooks.once("ready",()=>{Hooks.callAllUsers=(e,...t)=>{game.hm3.socket.executeForEveryone("callAllUsers",e,...t)};const e=game.hm3.socket;e.register("isFirstTA",si),e.register("setTAFlag",ni),e.register("unsetTAFlag",oi),e.register("weaponBroke",ri),e.register("improveFlag",li),e.register("fatigueReceived",ci),e.register("GmSays",mi),e.register("gmConsole",di),e.register("callAllUsers",hi),e.register("cheating",gi)});let pi=new x;async function fi({aeName:e="true",hook:t="nohook"}={}){if(game.combat?.started&&game.user.isGM){if("true"===e||[game.hm3.Condition.CAUTIOUS,game.hm3.Condition.DISTRACTED,game.hm3.Condition.DYING,game.hm3.Condition.GRAPPLED,game.hm3.Condition.INCAPACITATED,game.hm3.Condition.PRONE,game.hm3.Condition.SHOCKED,game.hm3.Condition.UNCONSCIOUS].includes(e))return pi.runExclusive(async()=>{console.info(`HM3 | Run updateOutnumbered (aeName = ${e}, hook = ${t})`);const{changed:a,tokens:i}=await async function(){const e=canvas.scene.tokens.contents,t=e.filter(e=>e.disposition===CONST.TOKEN_DISPOSITIONS.FRIENDLY),a=e.filter(e=>e.disposition===CONST.TOKEN_DISPOSITIONS.HOSTILE),i=new Map;t.forEach(e=>{const t=[...a.filter(t=>J(e.object,t.object)<5.1&&t.object.hasEngagementZone()).map(e=>e.object)];i.set(e.object.id,t)}),a.forEach(e=>{const a=[...t.filter(t=>J(t.object,e.object)<5.1&&t.object.hasEngagementZone()).map(e=>e.object)];i.set(e.object.id,a)});const s=[];for(let t=0;t<e.length;t++){const a=e[t];if(a.hasCondition(l.NO_OUTNUMBERED))continue;const n=i.get(a.id);if(n&&n.length>1){const e=[...n.filter(e=>1===i.get(e.id).length)];if(e.length>=2){const t=`${l.OUTNUMBERED} ${e.length}:1`;a.hasCondition(t)||(await a.deleteCondition(l.OUTNUMBERED),await a.addCondition(l.OUTNUMBERED,{outnumbered:e.length}),s.push(a))}else a.hasCondition(l.OUTNUMBERED)&&(await a.deleteCondition(l.OUTNUMBERED),s.push(a))}else a.hasCondition(l.OUTNUMBERED)&&(await a.deleteCondition(l.OUTNUMBERED),s.push(a))}return console.info("HM3 | Outnumbered updated: ",s.length>0,s),{changed:s.length>0,tokens:s}}();return a&&Hooks.call("hm3.onOutnumberedChanged",i,e,t),Hooks.call("hm3.onOutnumbered",e,t),!0});Hooks.call("hm3.onOutnumbered",e,t)}return!0}HM={}.default}();
//# sourceMappingURL=hm3.js.map